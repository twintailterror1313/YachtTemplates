[
  {
    "type": 1,
    "title": "cadvisor",
    "description": "cAdvisor (Container Advisor) provides container users an understanding of the resource usage and performance characteristics of their running containers. It is a running daemon that collects, aggregates, processes, and exports information about running containers. Specifically, for each container it keeps resource isolation parameters, historical resource usage, and histograms of complete historical resource usage. This data is exported by container and machine-wide.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "cAdvisor (Container Advisor) provides container users an understanding of the resource usage and performance characteristics of their running containers. It is a running daemon that collects, aggregates, processes, and exports information about running containers. Specifically, for each container it keeps resource isolation parameters, historical resource usage, and histograms of complete historical resource usage. This data is exported by container and machine-wide.",
    "logo": "https://i.imgur.com/stlnoKR.png",
    "name": "cadvisor",
    "image": "google/cadvisor:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8081:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/rootfs",
        "bind": "/"
      },
      {
        "container": "/var/run",
        "bind": "/var/run"
      },
      {
        "container": "/sys",
        "bind": "/sys"
      },
      {
        "container": "/var/lib/docker/",
        "bind": "/var/lib/docker/"
      }
    ],
    "env": [
      {
        "name": "detach",
        "label": "detach",
        "default": "true"
      }
    ]
  },
  {
    "type": 1,
    "title": "H5AI",
    "description": "H5AI is a modern web server index. This docker image makes it trivially easy to spin up a webserver and start sharing your files through the web.",
    "categories": [
      "Cloud:",
      "Network:Web"
    ],
    "platform": "linux",
    "note": "H5AI is a modern web server index. This docker image makes it trivially easy to spin up a webserver and start sharing your files through the web.",
    "logo": "https://i.imgur.com/SxqiOrd.png",
    "name": "H5AI",
    "image": "smdion/docker-h5ai",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "8888:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/var/www",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "upstatsboard",
    "description": "UpsBoard allows you to monitor your Usenet services: SABnzbd, Sick Beard, CouchPotato, Plex, and your system: CPU Usage, Memory Usage, Bandwidth Usage, and Disk Space Usage",
    "categories": [
      "Network:Management",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "UpsBoard allows you to monitor your Usenet services: SABnzbd, Sick Beard, CouchPotato, Plex, and your system: CPU Usage, Memory Usage, Bandwidth Usage, and Disk Space Usage",
    "logo": "https://i.imgur.com/SYSG8tJ.png",
    "name": "upstatsboard",
    "image": "smdion/docker-upstatsboard",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8024": "8024:8024/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/opt/UpsBoard-0.2.1/logs",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "FlexGet",
    "description": "FlexGet is a multipurpose automation tool for content like torrents, nzbs, podcasts, comics, series, movies, etc. It can use different kinds of sources like RSS-feeds, html pages, csv files, search engines and there are even plugins for sites that do not provide any kind of useful feeds.(http://flexget.com/)",
    "categories": [
      "Downloaders:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "FlexGet is a multipurpose automation tool for content like torrents, nzbs, podcasts, comics, series, movies, etc. It can use different kinds of sources like RSS-feeds, html pages, csv files, search engines and there are even plugins for sites that do not provide any kind of useful feeds.(http://flexget.com/)",
    "logo": "https://i.imgur.com/KXTg4bO.jpg",
    "name": "FlexGet",
    "image": "smdion/docker-flexget",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/etc/localtime",
        "bind": "/etc/localtime"
      }
    ]
  },
  {
    "type": 1,
    "title": "Keybox",
    "description": "This is a Dockerfile for \"Keybox\" - (http://sshkeybox.com/)",
    "categories": [
      "Network:Other",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "This is a Dockerfile for \"Keybox\" - (http://sshkeybox.com/)",
    "name": "Keybox",
    "image": "smdion/docker-keybox",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8443": "8443:8443/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/localtime",
        "bind": "/etc/localtime"
      }
    ]
  },
  {
    "type": 1,
    "title": "PlexConnect",
    "description": "This is a Dockerfile setup for PlexConnect - https://github.com/iBaa/PlexConnect.This is a fork from needo PlexConnect docker.\n  This run the latest PlexConnect from master branch and add support for PIL background by installing Python-imaging.",
    "categories": [
      "Network:Web",
      "Network:DNS",
      "MediaServer:Video"
    ],
    "platform": "linux",
    "note": "This is a Dockerfile setup for PlexConnect - https://github.com/iBaa/PlexConnect.This is a fork from needo PlexConnect docker.\n  This run the latest PlexConnect from master branch and add support for PIL background by installing Python-imaging.",
    "logo": "https://i.imgur.com/klXXMjw.png",
    "name": "PlexConnect",
    "image": "pducharme/plexconnect",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "443": "443:443/tcp",
        "53": "53:53/tcp",
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/opt/plexconnect/assets/certificates",
        "bind": "/mnt/cache/appdata/plexconnect/"
      },
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/plexconnect/"
      }
    ]
  },
  {
    "type": 1,
    "title": "UniFi",
    "description": "UniFi Controller software - Dockerize version of the popular UniFi Controller to control Wi-Fi Access Point from the company Ubiquiti Networks.",
    "categories": [
      "HomeAutomation:",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "UniFi Controller software - Dockerize version of the popular UniFi Controller to control Wi-Fi Access Point from the company Ubiquiti Networks.",
    "logo": "https://i.imgur.com/dD9ub3n.png",
    "name": "UniFi",
    "image": "pducharme/unifi",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "8080": "8080:8080/tcp",
        "8081": "8081:8081/tcp",
        "8443": "8443:8443/tcp",
        "8843": "8843:8843/tcp",
        "8880": "8880:8880/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/lib/unifi",
        "bind": "/mnt/cache/appdata/unifi/"
      }
    ]
  },
  {
    "type": 1,
    "title": "UniFi-Video",
    "description": "Unifi Video Controller (NVR) is a NVR software from the company Ubiquiti Networks to use with their UniFi Video IP Cameras.  To use the latest BETA version, add a :beta in the Repository field in Advanced view.",
    "categories": [
      "HomeAutomation:",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "Unifi Video Controller (NVR) is a NVR software from the company Ubiquiti Networks to use with their UniFi Video IP Cameras.  To use the latest BETA version, add a :beta in the Repository field in Advanced view.",
    "logo": "https://i.imgur.com/dD9ub3n.png",
    "name": "UniFi-Video",
    "image": "pducharme/unifi-video-controller",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "1935": "1935:1935/tcp",
        "6666": "6666:6666/tcp",
        "7004": "7004:7004/udp",
        "7080": "7080:7080/tcp",
        "7442": "7442:7442/tcp",
        "7443": "7443:7443/tcp",
        "7444": "7444:7444/tcp",
        "7445": "7445:7445/tcp",
        "7446": "7446:7446/tcp",
        "7447": "7447:7447/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/lib/unifi-video",
        "bind": "/mnt/cache/appdata/unifi-video/"
      },
      {
        "container": "/var/lib/unifi-video/videos",
        "bind": "/mnt/user/UnfiVideoShareForStorage"
      }
    ]
  },
  {
    "type": 1,
    "title": "DDClient",
    "description": "DDclient is a Perl client used to update dynamic DNS entries for accounts on Dynamic DNS Network Service Provider.\n  It has the capability to update more than just dyndns and it can fetch your WAN-ipaddress in a few different ways.",
    "categories": [
      "Network:DNS"
    ],
    "platform": "linux",
    "note": "DDclient is a Perl client used to update dynamic DNS entries for accounts on Dynamic DNS Network Service Provider.\n  It has the capability to update more than just dyndns and it can fetch your WAN-ipaddress in a few different ways.",
    "logo": "https://i.imgur.com/nD6BNRG.png",
    "name": "DDClient",
    "image": "captinsano/ddclient",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/ddclient"
      }
    ]
  },
  {
    "type": 1,
    "title": "Deluge",
    "description": "Deluge is a full-featured ​BitTorrent client for Linux, OS X, Unix and Windows. It uses ​libtorrent in its backend and features multiple user-interfaces including: GTK+, web and console. It has been designed using the client server model with a daemon process that handles all the bittorrent activity. The Deluge daemon is able to run on headless machines with the user-interfaces being able to connect remotely from any platform.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "Deluge is a full-featured ​BitTorrent client for Linux, OS X, Unix and Windows. It uses ​libtorrent in its backend and features multiple user-interfaces including: GTK+, web and console. It has been designed using the client server model with a daemon process that handles all the bittorrent activity. The Deluge daemon is able to run on headless machines with the user-interfaces being able to connect remotely from any platform.",
    "logo": "https://i.imgur.com/i3otz2K.png",
    "name": "Deluge",
    "image": "captinsano/deluge",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/deluge"
      },
      {
        "container": "/downloads",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "FoldingAtHome",
    "description": "FoldingAtHome is a project ran by Stanford University to network thousands of computers together, using them to work out the folding of proteins to aid in the research of Alzheimer's, Huntington's, Parkinson's, and many cancers.",
    "categories": [
      "Other:"
    ],
    "platform": "linux",
    "note": "FoldingAtHome is a project ran by Stanford University to network thousands of computers together, using them to work out the folding of proteins to aid in the research of Alzheimer's, Huntington's, Parkinson's, and many cancers.",
    "logo": "https://i.imgur.com/AKptFCw.png",
    "name": "FoldingAtHome",
    "image": "captinsano/foldingathome",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "36330": "36330:36330/tcp",
        "7396": "7396:7396/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Koel",
    "description": "Koel is a simple web-based personal audio streaming service written in Vue on the client side and Laravel on the server side. Targeting web developers, Koel embraces some of the more modern web technologies – flexbox, audio, and drag-and-drop API to name a few – to do its job.",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "Koel is a simple web-based personal audio streaming service written in Vue on the client side and Laravel on the server side. Targeting web developers, Koel embraces some of the more modern web technologies – flexbox, audio, and drag-and-drop API to name a few – to do its job.",
    "name": "Koel",
    "image": "captinsano/koel",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "9876:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/music",
        "bind": "/mnt/user/Music"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "DB_HOST",
        "label": "DB_HOST",
        "default": ""
      },
      {
        "name": "DB_DATABASE",
        "label": "DB_DATABASE",
        "default": "koel"
      },
      {
        "name": "DB_PASSWORD",
        "label": "DB_PASSWORD",
        "default": ""
      },
      {
        "name": "ADMIN_PASSWORD",
        "label": "ADMIN_PASSWORD",
        "default": ""
      },
      {
        "name": "AP_ENV",
        "label": "AP_ENV",
        "default": "production"
      },
      {
        "name": "DB_USERNAME",
        "label": "DB_USERNAME",
        "default": "root"
      },
      {
        "name": "ADMIN_EMAIL",
        "label": "ADMIN_EMAIL",
        "default": ""
      },
      {
        "name": "ADMIN_NAME",
        "label": "ADMIN_NAME",
        "default": ""
      },
      {
        "name": "APP_DEBUG",
        "label": "APP_DEBUG",
        "default": "False"
      }
    ]
  },
  {
    "type": 1,
    "title": "LegacyruTorrent",
    "description": "ruTorrent Container is a powerful and flexible torrent solution(including RSS support) based on older rTorrent v0.9.2",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "ruTorrent Container is a powerful and flexible torrent solution(including RSS support) based on older rTorrent v0.9.2",
    "logo": "https://i.imgur.com/LWfuAG2.png",
    "name": "LegacyruTorrent",
    "image": "captinsano/legacyrutorrent",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "8099:443/tcp",
        "45566": "45566:45566/tcp",
        "80": "8089:80/tcp",
        "9527": "9527:9527/udp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/download",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "ruTorrent",
    "description": "ruTorrent Container is a powerful and flexible torrent solution(including RSS support)",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "ruTorrent Container is a powerful and flexible torrent solution(including RSS support)",
    "logo": "https://i.imgur.com/LWfuAG2.png",
    "name": "ruTorrent",
    "image": "captinsano/rutorrent",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "8099:443/tcp",
        "45566": "45566:45566/tcp",
        "80": "8089:80/tcp",
        "9527": "9527:9527/udp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/download",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "EDGE",
        "label": "EDGE",
        "default": "0"
      }
    ]
  },
  {
    "type": 1,
    "title": "Tonido",
    "description": "Tonido Server allows you to access all your files on your computer from a web browser, smartphone, tablet or even DLNA enabled devices. No setup necessary.",
    "categories": [
      "Cloud:"
    ],
    "platform": "linux",
    "note": "Tonido Server allows you to access all your files on your computer from a web browser, smartphone, tablet or even DLNA enabled devices. No setup necessary.",
    "logo": "https://i.imgur.com/i2obdi6.png",
    "name": "Tonido",
    "image": "captinsano/tonido",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "10001": "10001:10001/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/unRAID",
        "bind": "/mnt/user"
      }
    ]
  },
  {
    "type": 1,
    "title": "Home-Assistant-Core",
    "description": "Home Assistant Core is the core of the Home Assistant home automation platform. It focuses on local control and privacy. Track and control all devices at home and automate control.",
    "categories": [
      "HomeAutomation:"
    ],
    "platform": "linux",
    "note": "Home Assistant Core is the core of the Home Assistant home automation platform. It focuses on local control and privacy. Track and control all devices at home and automate control.",
    "logo": "https://raw.githubusercontent.com/balloob/unraid-docker-templates/master/balloob/home-assistant-icon.png",
    "name": "Home-Assistant-Core",
    "image": "homeassistant/home-assistant",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/app_config/home-assistant"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-airsonic",
    "description": "Airsonic is a free, web-based media streamer, providing ubiquitious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.\n    Airsonic is designed to handle very large music collections (hundreds of gigabytes). Although optimized for MP3 streaming, it works for any audio or video format that can stream over HTTP, for instance AAC and OGG. By using transcoder plug-ins, Airsonic supports on-the-fly conversion and streaming of virtually any audio format, including WMA, FLAC, APE, Musepack, WavPck and Shorten.\n    If you have constrained bandwidth, you may set an upper limit for the bitrate of the music streams. Airsonic will then automatically resample the music to a suitable bitrate.\n    In addition to being a streaming media server, Airsonic works very well as a local jukebox. The intuitive web interface, as well as search and index facilities, are optimized for efficient browsing through large media libraries. Airsonic also comes with an integrated Podcast receiver, with many of the same features as you find in iTunes.\n    Based on Java technology, Airsonic runs on most platforms, including Windows, Mac, Linux and Unix variants.",
    "categories": [
      "MediaServer:Music"
    ],
    "platform": "linux",
    "note": "Airsonic is a free, web-based media streamer, providing ubiquitious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.\n    Airsonic is designed to handle very large music collections (hundreds of gigabytes). Although optimized for MP3 streaming, it works for any audio or video format that can stream over HTTP, for instance AAC and OGG. By using transcoder plug-ins, Airsonic supports on-the-fly conversion and streaming of virtually any audio format, including WMA, FLAC, APE, Musepack, WavPck and Shorten.\n    If you have constrained bandwidth, you may set an upper limit for the bitrate of the music streams. Airsonic will then automatically resample the music to a suitable bitrate.\n    In addition to being a streaming media server, Airsonic works very well as a local jukebox. The intuitive web interface, as well as search and index facilities, are optimized for efficient browsing through large media libraries. Airsonic also comes with an integrated Podcast receiver, with many of the same features as you find in iTunes.\n    Based on Java technology, Airsonic runs on most platforms, including Windows, Mac, Linux and Unix variants.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/airsonic-icon.png",
    "name": "binhex-airsonic",
    "image": "binhex/arch-airsonic",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "4040": "4040:4040/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/media",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "CONTEXT_PATH",
        "label": "CONTEXT_PATH",
        "default": "/"
      },
      {
        "name": "MAX_MEMORY",
        "label": "MAX_MEMORY",
        "default": "2046"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-couchpotato-git",
    "description": "CouchPotato (CP) is an automatic NZB and torrent downloader. You can keep a \"movies I want\"-list and it will search for NZBs/torrents of these movies every X hours. Once a movie is found, it will send it to SABnzbd or download the torrent to a specified directory.",
    "categories": [
      "Downloaders:",
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "CouchPotato (CP) is an automatic NZB and torrent downloader. You can keep a \"movies I want\"-list and it will search for NZBs/torrents of these movies every X hours. Once a movie is found, it will send it to SABnzbd or download the torrent to a specified directory.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/couchpotato-icon.png",
    "name": "binhex-couchpotato-git",
    "image": "binhex/arch-couchpotato-git",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5050": "5050:5050/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/media",
        "bind": "/mnt/user"
      },
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/data"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-deluge",
    "description": "Deluge is a full-featured ​BitTorrent client for Linux, OS X, Unix and Windows. It uses ​libtorrent in its backend and features multiple user-interfaces including: GTK+, web and console. It has been designed using the client server model with a daemon process that handles all the bittorrent activity. The Deluge daemon is able to run on headless machines with the user-interfaces being able to connect remotely from any platform.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "Deluge is a full-featured ​BitTorrent client for Linux, OS X, Unix and Windows. It uses ​libtorrent in its backend and features multiple user-interfaces including: GTK+, web and console. It has been designed using the client server model with a daemon process that handles all the bittorrent activity. The Deluge daemon is able to run on headless machines with the user-interfaces being able to connect remotely from any platform.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/deluge-icon.png",
    "name": "binhex-deluge",
    "image": "binhex/arch-deluge",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "58846": "58846:58846/tcp",
        "58946": "58946:58946/tcp",
        "8112": "8112:8112/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/data"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "DELUGE_DAEMON_LOG_LEVEL",
        "label": "DELUGE_DAEMON_LOG_LEVEL",
        "default": "info"
      },
      {
        "name": "DELUGE_WEB_LOG_LEVEL",
        "label": "DELUGE_WEB_LOG_LEVEL",
        "default": "info"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-delugevpn",
    "description": "Deluge is a full-featured ​BitTorrent client for Linux, OS X, Unix and Windows. It uses ​libtorrent in its backend and features multiple user-interfaces including: GTK+, web and console. It has been designed using the client server model with a daemon process that handles all the bittorrent activity. The Deluge daemon is able to run on headless machines with the user-interfaces being able to connect remotely from any platform.\n    This Docker includes OpenVPN and WireGuard to ensure a secure and private connection to the Internet, including use of iptables to prevent IP leakage when the tunnel is down. It also includes Privoxy to allow unfiltered access to index sites, to use Privoxy please point your application at \"http://host ip:8118\".",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "Deluge is a full-featured ​BitTorrent client for Linux, OS X, Unix and Windows. It uses ​libtorrent in its backend and features multiple user-interfaces including: GTK+, web and console. It has been designed using the client server model with a daemon process that handles all the bittorrent activity. The Deluge daemon is able to run on headless machines with the user-interfaces being able to connect remotely from any platform.\n    This Docker includes OpenVPN and WireGuard to ensure a secure and private connection to the Internet, including use of iptables to prevent IP leakage when the tunnel is down. It also includes Privoxy to allow unfiltered access to index sites, to use Privoxy please point your application at \"http://host ip:8118\".",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/deluge-icon.png",
    "name": "binhex-delugevpn",
    "image": "binhex/arch-delugevpn",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "58846": "58846:58846/tcp",
        "58946": "58946:58946/tcp",
        "8112": "8112:8112/tcp",
        "8118": "8118:8118/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/data"
      }
    ],
    "env": [
      {
        "name": "VPN_USER",
        "label": "VPN_USER",
        "default": "vpn username"
      },
      {
        "name": "ADDITIONAL_PORTS",
        "label": "ADDITIONAL_PORTS",
        "default": ""
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "false|true"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "DELUGE_WEB_LOG_LEVEL",
        "label": "DELUGE_WEB_LOG_LEVEL",
        "default": "info"
      },
      {
        "name": "VPN_ENABLED",
        "label": "VPN_ENABLED",
        "default": "yes|no"
      },
      {
        "name": "VPN_CLIENT",
        "label": "VPN_CLIENT",
        "default": "openvpn|wireguard"
      },
      {
        "name": "NAME_SERVERS",
        "label": "NAME_SERVERS",
        "default": "209.222.18.222,84.200.69.80,37.235.1.174,1.1.1.1,209.222.18.218,37.235.1.177,84.200.70.40,1.0.0.1"
      },
      {
        "name": "DELUGE_DAEMON_LOG_LEVEL",
        "label": "DELUGE_DAEMON_LOG_LEVEL",
        "default": "info"
      },
      {
        "name": "VPN_PROV",
        "label": "VPN_PROV",
        "default": "pia|airvpn|custom"
      },
      {
        "name": "STRICT_PORT_FORWARD",
        "label": "STRICT_PORT_FORWARD",
        "default": "yes"
      },
      {
        "name": "LAN_NETWORK",
        "label": "LAN_NETWORK",
        "default": "192.168.1.0/24"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "VPN_PASS",
        "label": "VPN_PASS",
        "default": "vpn password"
      },
      {
        "name": "VPN_OPTIONS",
        "label": "VPN_OPTIONS",
        "default": ""
      },
      {
        "name": "ENABLE_PRIVOXY",
        "label": "ENABLE_PRIVOXY",
        "default": "no|yes"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-emby",
    "description": "Emby Server is a home media server built on top of other popular open source technologies such as Service Stack, jQuery, jQuery mobile, and Mono.",
    "categories": [
      "MediaApp:Video",
      "MediaApp:Music",
      "MediaApp:Photos",
      "MediaServer:Video",
      "MediaServer:Music",
      "MediaServer:Photos"
    ],
    "platform": "linux",
    "note": "Emby Server is a home media server built on top of other popular open source technologies such as Service Stack, jQuery, jQuery mobile, and Mono.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/emby-icon.png",
    "name": "binhex-emby",
    "image": "binhex/arch-emby",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8096": "8096:8096/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/media",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-get-iplayer",
    "description": "get_iplayer has PVR-like capabilities (like Sky+ / TiVo / Series-Link); You can save lists of programme searches which are automatically recorded when they become available so that you can watch them when you choose and on devices that cannot run Adobe Flash Player – even if you don’t have adequate broadband speeds or if your broadband streams too slowly at peak hours when you want to watch a programme.",
    "categories": [
      "MediaApp:Video",
      "MediaServer:Video"
    ],
    "platform": "linux",
    "note": "get_iplayer has PVR-like capabilities (like Sky+ / TiVo / Series-Link); You can save lists of programme searches which are automatically recorded when they become available so that you can watch them when you choose and on devices that cannot run Adobe Flash Player – even if you don’t have adequate broadband speeds or if your broadband streams too slowly at peak hours when you want to watch a programme.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/get-iplayer-icon.png",
    "name": "binhex-get-iplayer",
    "image": "binhex/arch-get-iplayer",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/data"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "SHOWS",
        "label": "SHOWS",
        "default": ""
      },
      {
        "name": "SCHEDULE",
        "label": "SCHEDULE",
        "default": "12h"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-hexchat",
    "description": "HexChat is an IRC client based on XChat, but unlike XChat it’s completely free for both Windows and Unix-like systems. Since XChat is open source, it’s perfectly legal. For more info. HexChat was originally called XChat-WDK which in turn was a successor of freakschat.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "HexChat is an IRC client based on XChat, but unlike XChat it’s completely free for both Windows and Unix-like systems. Since XChat is open source, it’s perfectly legal. For more info. HexChat was originally called XChat-WDK which in turn was a successor of freakschat.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/hexchat-icon.png",
    "name": "binhex-hexchat",
    "image": "binhex/arch-hexchat",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6080": "6080:6080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      }
    ],
    "env": [
      {
        "name": "WEBPAGE_TITLE",
        "label": "WEBPAGE_TITLE",
        "default": "Tower"
      },
      {
        "name": "VNC_PASSWORD",
        "label": "VNC_PASSWORD",
        "default": ""
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-intellij",
    "description": "IntelliJ IDEA is a special programming environment or integrated development environment (IDE) largely meant for Java. This environment is used especially for the development of programs. It is developed by a company called JetBrains, which was formally called IntelliJ. It is available in two editions: the Community Edition which is licensed by Apache 2.0, and a commercial edition known as the Ultimate Edition. Both of them can be used for creating software which can be sold. What makes IntelliJ IDEA so different from its counterparts is its ease of use, flexibility and its solid design. This Docker Image includes Git for SCM and Scala, Kotlin and Groovy programming languages.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "IntelliJ IDEA is a special programming environment or integrated development environment (IDE) largely meant for Java. This environment is used especially for the development of programs. It is developed by a company called JetBrains, which was formally called IntelliJ. It is available in two editions: the Community Edition which is licensed by Apache 2.0, and a commercial edition known as the Ultimate Edition. Both of them can be used for creating software which can be sold. What makes IntelliJ IDEA so different from its counterparts is its ease of use, flexibility and its solid design. This Docker Image includes Git for SCM and Scala, Kotlin and Groovy programming languages.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/intellij-icon.png",
    "name": "binhex-intellij",
    "image": "binhex/arch-intellij",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6080": "6080:6080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/data"
      }
    ],
    "env": [
      {
        "name": "WEBPAGE_TITLE",
        "label": "WEBPAGE_TITLE",
        "default": "Tower"
      },
      {
        "name": "VNC_PASSWORD",
        "label": "VNC_PASSWORD",
        "default": ""
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-jackett",
    "description": "Jackett works as a proxy server - it translates queries from apps (Sonarr, Radarr, SickRage, CouchPotato, Mylar, DuckieTV, etc) into tracker-site-specific http queries, parses the html response, then sends results back to the requesting software. This allows for getting recent uploads (like RSS) and performing searches. Jackett is a single repository of maintained indexer scraping and translation logic - removing the burden from other apps.",
    "categories": [
      "Downloaders:",
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "Jackett works as a proxy server - it translates queries from apps (Sonarr, Radarr, SickRage, CouchPotato, Mylar, DuckieTV, etc) into tracker-site-specific http queries, parses the html response, then sends results back to the requesting software. This allows for getting recent uploads (like RSS) and performing searches. Jackett is a single repository of maintained indexer scraping and translation logic - removing the burden from other apps.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/jackett-icon.png",
    "name": "binhex-jackett",
    "image": "binhex/arch-jackett",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "9117": "9117:9117/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/data"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-jellyfin",
    "description": "Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps. Jellyfin is descended from Emby's 3.5.2 release and ported to the .NET Core framework to enable full cross-platform support. There are no strings attached, no premium licenses or features, and no hidden agendas: just a team who want to build something better and work together to achieve it.",
    "categories": [
      "MediaApp:Video",
      "MediaApp:Music",
      "MediaApp:Photos",
      "MediaServer:Video",
      "MediaServer:Music",
      "MediaServer:Photos"
    ],
    "platform": "linux",
    "note": "Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps. Jellyfin is descended from Emby's 3.5.2 release and ported to the .NET Core framework to enable full cross-platform support. There are no strings attached, no premium licenses or features, and no hidden agendas: just a team who want to build something better and work together to achieve it.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/jellyfin-icon.png",
    "name": "binhex-jellyfin",
    "image": "binhex/arch-jellyfin",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8096": "8096:8096/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/media",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-jenkins",
    "description": "Jenkins is an open source continuous integration tool written in Java. The project was forked from Hudson after a dispute with Oracle. Jenkins provides continuous integration services for software development. It is a server-based system running in a servlet container such as Apache Tomcat.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Jenkins is an open source continuous integration tool written in Java. The project was forked from Hudson after a dispute with Oracle. Jenkins provides continuous integration services for software development. It is a server-based system running in a servlet container such as Apache Tomcat.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/jenkins-icon.png",
    "name": "binhex-jenkins",
    "image": "binhex/arch-jenkins",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "4243": "4243:4243/tcp",
        "8090": "8090:8090/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "JAVA_ARGS",
        "label": "JAVA_ARGS",
        "default": "-Xmx512m"
      },
      {
        "name": "JAVA_OPTS",
        "label": "JAVA_OPTS",
        "default": "-Dhudson.footerURL=http://mycompany.com"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-krusader",
    "description": "Krusader is an advanced orthodox file manager for KDE and other desktops in the Unix world. It is similar to the console-based GNU Midnight Commander, GNOME Commander for the GNOME desktop environment, or Total Commander for Windows, all of which can trace their paradigmatic features to the original Norton Commander for DOS. It supports extensive archive handling, mounted filesystem support, FTP, advanced search, viewer/editor, directory synchronisation, file content comparisons, batch renaming, etc.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Krusader is an advanced orthodox file manager for KDE and other desktops in the Unix world. It is similar to the console-based GNU Midnight Commander, GNOME Commander for the GNOME desktop environment, or Total Commander for Windows, all of which can trace their paradigmatic features to the original Norton Commander for DOS. It supports extensive archive handling, mounted filesystem support, FTP, advanced search, viewer/editor, directory synchronisation, file content comparisons, batch renaming, etc.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/krusader-icon.png",
    "name": "binhex-krusader",
    "image": "binhex/arch-krusader",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6080": "6080:6080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/media",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "TEMP_FOLDER",
        "label": "TEMP_FOLDER",
        "default": "/config/home/.config/krusader/tmp"
      },
      {
        "name": "WEBPAGE_TITLE",
        "label": "WEBPAGE_TITLE",
        "default": "Tower"
      },
      {
        "name": "VNC_PASSWORD",
        "label": "VNC_PASSWORD",
        "default": ""
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-libreoffice",
    "description": "LibreOffice is a free and open source office suite, a project of The Document Foundation. It was forked from OpenOffice.org in 2010, which was an open-sourced version of the earlier StarOffice. The LibreOffice suite comprises programs for word processing, the creation and editing of spreadsheets, slideshows, diagrams and drawings, working with databases, and composing mathematical formulae. It is available in 110 languages.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "LibreOffice is a free and open source office suite, a project of The Document Foundation. It was forked from OpenOffice.org in 2010, which was an open-sourced version of the earlier StarOffice. The LibreOffice suite comprises programs for word processing, the creation and editing of spreadsheets, slideshows, diagrams and drawings, working with databases, and composing mathematical formulae. It is available in 110 languages.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/libreoffice-icon.png",
    "name": "binhex-libreoffice",
    "image": "binhex/arch-libreoffice",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6080": "6080:6080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/data"
      }
    ],
    "env": [
      {
        "name": "WEBPAGE_TITLE",
        "label": "WEBPAGE_TITLE",
        "default": "Tower"
      },
      {
        "name": "VNC_PASSWORD",
        "label": "VNC_PASSWORD",
        "default": ""
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-lidarr",
    "description": "Lidarr is a music collection manager for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new tracks from your favorite artists and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
    "categories": [
      "Downloaders:",
      "MediaApp:Music",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Lidarr is a music collection manager for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new tracks from your favorite artists and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/lidarr-icon.png",
    "name": "binhex-lidarr",
    "image": "binhex/arch-lidarr",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8686": "8686:8686/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/data"
      },
      {
        "container": "/media",
        "bind": "/mnt/user"
      },
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-makemkv",
    "description": "MakeMKV is your one-click solution to convert video that you own into free and patents-unencumbered format that can be played everywhere. MakeMKV is a format converter, otherwise called \"transcoder\". It converts the video clips from proprietary (and usually encrypted) disc into a set of MKV files, preserving most information but not changing it in any way. The MKV format can store multiple video/audio tracks with all meta-information and preserve chapters. There are many players that can play MKV files nearly on all platforms, and there are tools to convert MKV files to many formats, including DVD and Blu-ray discs.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "MakeMKV is your one-click solution to convert video that you own into free and patents-unencumbered format that can be played everywhere. MakeMKV is a format converter, otherwise called \"transcoder\". It converts the video clips from proprietary (and usually encrypted) disc into a set of MKV files, preserving most information but not changing it in any way. The MKV format can store multiple video/audio tracks with all meta-information and preserve chapters. There are many players that can play MKV files nearly on all platforms, and there are tools to convert MKV files to many formats, including DVD and Blu-ray discs.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/makemkv-icon.png",
    "name": "binhex-makemkv",
    "image": "binhex/arch-makemkv",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6080": "6080:6080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/media",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "WEBPAGE_TITLE",
        "label": "WEBPAGE_TITLE",
        "default": "Tower"
      },
      {
        "name": "VNC_PASSWORD",
        "label": "VNC_PASSWORD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-medusa",
    "description": "Medusa is a Video File Manager for TV Shows, It watches for new episodes of your favorite shows and when they are posted it does its magic. Medusa is currently in beta release stage. There may be severe bugs in it and at any given time it may not work at all.",
    "categories": [
      "Downloaders:",
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "Medusa is a Video File Manager for TV Shows, It watches for new episodes of your favorite shows and when they are posted it does its magic. Medusa is currently in beta release stage. There may be severe bugs in it and at any given time it may not work at all.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/medusa-icon.png",
    "name": "binhex-medusa",
    "image": "binhex/arch-medusa",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8081": "8081:8081/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/data"
      },
      {
        "container": "/media",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-minecraftbedrockserver",
    "description": "Minecraft is a sandbox video game created by Swedish game developer Markus Persson and released by Mojang in 2011. The game allows players to build with a variety of different blocks in a 3D procedurally generated world, requiring creativity from players. Other activities in the game include exploration, resource gathering, crafting, and combat. Multiple game modes that change gameplay are available, including—but not limited to—a survival mode, in which players must acquire resources to build the world and maintain health, and a creative mode, where players have unlimited resources to build with.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "Minecraft is a sandbox video game created by Swedish game developer Markus Persson and released by Mojang in 2011. The game allows players to build with a variety of different blocks in a 3D procedurally generated world, requiring creativity from players. Other activities in the game include exploration, resource gathering, crafting, and combat. Multiple game modes that change gameplay are available, including—but not limited to—a survival mode, in which players must acquire resources to build the world and maintain health, and a creative mode, where players have unlimited resources to build with.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/minecraftbedrockserver-icon.png",
    "name": "binhex-minecraftbedrockserver",
    "image": "binhex/arch-minecraftbedrockserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "19132": "19132:19132/tcp",
        "19133": "19133:19133/tcp",
        "8222": "8222:8222/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      }
    ],
    "env": [
      {
        "name": "ENABLE_WEBUI_CONSOLE",
        "label": "ENABLE_WEBUI_CONSOLE",
        "default": "yes"
      },
      {
        "name": "WEBUI_PASS",
        "label": "WEBUI_PASS",
        "default": ""
      },
      {
        "name": "WEBUI_USER",
        "label": "WEBUI_USER",
        "default": "admin"
      },
      {
        "name": "WEBUI_CONSOLE_TITLE",
        "label": "WEBUI_CONSOLE_TITLE",
        "default": "Minecraft Bedrock"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "CREATE_BACKUP_HOURS",
        "label": "CREATE_BACKUP_HOURS",
        "default": "12"
      },
      {
        "name": "PURGE_BACKUP_DAYS",
        "label": "PURGE_BACKUP_DAYS",
        "default": "14"
      },
      {
        "name": "ENABLE_WEBUI_AUTH",
        "label": "ENABLE_WEBUI_AUTH",
        "default": "yes"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-minecraftserver",
    "description": "Minecraft is a sandbox video game created by Swedish game developer Markus Persson and released by Mojang in 2011. The game allows players to build with a variety of different blocks in a 3D procedurally generated world, requiring creativity from players. Other activities in the game include exploration, resource gathering, crafting, and combat. Multiple game modes that change gameplay are available, including—but not limited to—a survival mode, in which players must acquire resources to build the world and maintain health, and a creative mode, where players have unlimited resources to build with.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "Minecraft is a sandbox video game created by Swedish game developer Markus Persson and released by Mojang in 2011. The game allows players to build with a variety of different blocks in a 3D procedurally generated world, requiring creativity from players. Other activities in the game include exploration, resource gathering, crafting, and combat. Multiple game modes that change gameplay are available, including—but not limited to—a survival mode, in which players must acquire resources to build the world and maintain health, and a creative mode, where players have unlimited resources to build with.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/minecraftserver-icon.png",
    "name": "binhex-minecraftserver",
    "image": "binhex/arch-minecraftserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "25565": "25565:25565/tcp",
        "8222": "8222:8222/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      }
    ],
    "env": [
      {
        "name": "WEBUI_CONSOLE_TITLE",
        "label": "WEBUI_CONSOLE_TITLE",
        "default": "Minecraft Java"
      },
      {
        "name": "JAVA_MAX_HEAP_SIZE",
        "label": "JAVA_MAX_HEAP_SIZE",
        "default": "1024M"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "CREATE_BACKUP_HOURS",
        "label": "CREATE_BACKUP_HOURS",
        "default": "12"
      },
      {
        "name": "WEBUI_PASS",
        "label": "WEBUI_PASS",
        "default": ""
      },
      {
        "name": "ENABLE_WEBUI_AUTH",
        "label": "ENABLE_WEBUI_AUTH",
        "default": "yes"
      },
      {
        "name": "WEBUI_USER",
        "label": "WEBUI_USER",
        "default": "admin"
      },
      {
        "name": "JAVA_INITIAL_HEAP_SIZE",
        "label": "JAVA_INITIAL_HEAP_SIZE",
        "default": "512M"
      },
      {
        "name": "JAVA_MAX_THREADS",
        "label": "JAVA_MAX_THREADS",
        "default": "1"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PURGE_BACKUP_DAYS",
        "label": "PURGE_BACKUP_DAYS",
        "default": "14"
      },
      {
        "name": "ENABLE_WEBUI_CONSOLE",
        "label": "ENABLE_WEBUI_CONSOLE",
        "default": "yes"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-mineos-node",
    "description": "MineOS is a server front-end to ease managing Minecraft administrative tasks. This iteration using Node.js aims to enhance previous MineOS scripts (Python-based), by leveraging the event-triggering, asyncronous model of Node.JS and websockets.\n\n    This allows the front-end to provide system health, disk and memory usage, and logging in real-time.\n\n    The front-end also allows you to create and manage a multitude of Java based servers, including Mojang Java, Spigot, Nukkit, Forge and many other popular Minecraft server types. You can create archives and restore points of your world's straight from the web ui, meaning loss of important game data is minimised.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "MineOS is a server front-end to ease managing Minecraft administrative tasks. This iteration using Node.js aims to enhance previous MineOS scripts (Python-based), by leveraging the event-triggering, asyncronous model of Node.JS and websockets.\n\n    This allows the front-end to provide system health, disk and memory usage, and logging in real-time.\n\n    The front-end also allows you to create and manage a multitude of Java based servers, including Mojang Java, Spigot, Nukkit, Forge and many other popular Minecraft server types. You can create archives and restore points of your world's straight from the web ui, meaning loss of important game data is minimised.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/mineos-node-icon.png",
    "name": "binhex-mineos-node",
    "image": "binhex/arch-mineos-node",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "0": "0:0/tcp",
        "8443": "8443:8443/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      }
    ],
    "env": [
      {
        "name": "WEBUI_PASSWORD",
        "label": "WEBUI_PASSWORD",
        "default": "mineos"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "0"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "0"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-minidlna",
    "description": "ReadyMedia (formerly known as MiniDLNA) is a simple media server software, with the aim of being fully compliant with DLNA/UPnP-AV clients. It is developed by a NETGEAR employee for the ReadyNAS product line.",
    "categories": [
      "MediaServer:Video"
    ],
    "platform": "linux",
    "note": "ReadyMedia (formerly known as MiniDLNA) is a simple media server software, with the aim of being fully compliant with DLNA/UPnP-AV clients. It is developed by a NETGEAR employee for the ReadyNAS product line.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/minidlna-icon.png",
    "name": "binhex-minidlna",
    "image": "binhex/arch-minidlna",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/media",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "SCAN_ON_BOOT",
        "label": "SCAN_ON_BOOT",
        "default": "no"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "SCHEDULE_SCAN_DAYS",
        "label": "SCHEDULE_SCAN_DAYS",
        "default": "06"
      },
      {
        "name": "SCHEDULE_SCAN_HOURS",
        "label": "SCHEDULE_SCAN_HOURS",
        "default": "02"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-moviegrabber",
    "description": "MovieGrabber is a fully automated way of downloading movie from usenet, it supports any nzb client that has a \"watched\" or \"monitor\" folder facility such as Sabnzbd+, Grabit and Newsbin. MovieGrabber works by checking imdb for matching criteria and if a match is found the nzb will be downloaded and stored in either a specified queued folder for user review or sent to the watched folder for processing and automatic downloading via your usenet binary client.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "MovieGrabber is a fully automated way of downloading movie from usenet, it supports any nzb client that has a \"watched\" or \"monitor\" folder facility such as Sabnzbd+, Grabit and Newsbin. MovieGrabber works by checking imdb for matching criteria and if a match is found the nzb will be downloaded and stored in either a specified queued folder for user review or sent to the watched folder for processing and automatic downloading via your usenet binary client.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/moviegrabber-icon.png",
    "name": "binhex-moviegrabber",
    "image": "binhex/arch-moviegrabber",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "9191": "9191:9191/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/media",
        "bind": "/mnt/user"
      },
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/data"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-nginx",
    "description": "NGINX is open source software for web serving, reverse proxying, caching, load balancing, media streaming, and more. It started out as a web server designed for maximum performance and stability. In addition to its HTTP server capabilities, NGINX can also function as a proxy server for email (IMAP, POP3, and SMTP) and a reverse proxy and load balancer for HTTP, TCP, and UDP servers.",
    "categories": [
      "Network:Web",
      "Network:Proxy"
    ],
    "platform": "linux",
    "note": "NGINX is open source software for web serving, reverse proxying, caching, load balancing, media streaming, and more. It started out as a web server designed for maximum performance and stability. In addition to its HTTP server capabilities, NGINX can also function as a proxy server for email (IMAP, POP3, and SMTP) and a reverse proxy and load balancer for HTTP, TCP, and UDP servers.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/nginx-icon.png",
    "name": "binhex-nginx",
    "image": "binhex/arch-nginx",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp",
        "8443": "8443:8443/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-nzbget",
    "description": "NZBGet is a cross-platform binary newsgrabber for nzb files, written in C++. It supports client/server mode, automatic par-check/-repair, web-interface, command-line interface, etc. NZBGet requires low system resources and runs great on routers, NAS-devices and media players.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "NZBGet is a cross-platform binary newsgrabber for nzb files, written in C++. It supports client/server mode, automatic par-check/-repair, web-interface, command-line interface, etc. NZBGet requires low system resources and runs great on routers, NAS-devices and media players.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/nzbget-icon.png",
    "name": "binhex-nzbget",
    "image": "binhex/arch-nzbget",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6789": "6789:6789/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/data"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-nzbhydra",
    "description": "NZBHydra is a meta search for NZB indexers. It provides easy access to a number of raw and newznab based indexers. You can search all your indexers from one place and use it as indexer source for tools like Sonarr or CouchPotato.",
    "categories": [
      "Downloaders:",
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "NZBHydra is a meta search for NZB indexers. It provides easy access to a number of raw and newznab based indexers. You can search all your indexers from one place and use it as indexer source for tools like Sonarr or CouchPotato.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/nzbhydra-icon.png",
    "name": "binhex-nzbhydra",
    "image": "binhex/arch-nzbhydra",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5075": "5075:5075/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/data"
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-nzbhydra2",
    "description": "NZBHydra2 is a meta search for NZB indexers. It provides easy access to a number of raw and newznab based indexers. You can search all your indexers from one place and use it as indexer source for tools like Sonarr or CouchPotato.",
    "categories": [
      "Downloaders:",
      "MediaApp:Video",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "NZBHydra2 is a meta search for NZB indexers. It provides easy access to a number of raw and newznab based indexers. You can search all your indexers from one place and use it as indexer source for tools like Sonarr or CouchPotato.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/nzbhydra2-icon.png",
    "name": "binhex-nzbhydra2",
    "image": "binhex/arch-nzbhydra2",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5076": "5076:5076/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/data"
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-phantom",
    "description": "Makes hosted Bedrock/MCPE servers show up as LAN servers, specifically for consoles. You can now play on remote servers (not Realms!) on your Xbox and PS4 with friends. It's like having a LAN server that's not actually there, spooky.",
    "categories": [
      "GameServers:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Makes hosted Bedrock/MCPE servers show up as LAN servers, specifically for consoles. You can now play on remote servers (not Realms!) on your Xbox and PS4 with friends. It's like having a LAN server that's not actually there, spooky.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/phantom-icon.png",
    "name": "binhex-phantom",
    "image": "binhex/arch-phantom",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "19132": "19132:19132/tcp",
        "19133": "19133:19133/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "REMOTE_MINECRAFT_IP",
        "label": "REMOTE_MINECRAFT_IP",
        "default": ""
      },
      {
        "name": "REMOTE_MINECRAFT_PORT",
        "label": "REMOTE_MINECRAFT_PORT",
        "default": "19132"
      },
      {
        "name": "CLEANUP_TIMEOUT",
        "label": "CLEANUP_TIMEOUT",
        "default": "60"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-plex",
    "description": "The Plex Media Server enriches your life by organizing all your personal media, presenting it beautifully and streaming it to all of your devices. It's easy to use, it's awesome, and it's free!",
    "categories": [
      "MediaApp:Video",
      "MediaApp:Music",
      "MediaApp:Photos",
      "MediaServer:Video",
      "MediaServer:Music",
      "MediaServer:Photos"
    ],
    "platform": "linux",
    "note": "The Plex Media Server enriches your life by organizing all your personal media, presenting it beautifully and streaming it to all of your devices. It's easy to use, it's awesome, and it's free!",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/plex-icon.png",
    "name": "binhex-plex",
    "image": "binhex/arch-plex",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/media",
        "bind": "/mnt/user"
      },
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      }
    ],
    "env": [
      {
        "name": "TRANS_DIR",
        "label": "TRANS_DIR",
        "default": "/config/transcode"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-plexpass",
    "description": "The Plex Media Server enriches your life by organizing all your personal media, presenting it beautifully and streaming it to all of your devices. It's easy to use, it's awesome, and it's free!. Please note you WILL require an active Plex Pass account, if you don't have a Plex Pass account then please use the free version, binhex-plex.",
    "categories": [
      "MediaApp:Video",
      "MediaApp:Music",
      "MediaApp:Photos",
      "MediaServer:Video",
      "MediaServer:Music",
      "MediaServer:Photos"
    ],
    "platform": "linux",
    "note": "The Plex Media Server enriches your life by organizing all your personal media, presenting it beautifully and streaming it to all of your devices. It's easy to use, it's awesome, and it's free!. Please note you WILL require an active Plex Pass account, if you don't have a Plex Pass account then please use the free version, binhex-plex.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/plex-icon.png",
    "name": "binhex-plexpass",
    "image": "binhex/arch-plexpass",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/media",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "TRANS_DIR",
        "label": "TRANS_DIR",
        "default": "/config/transcode"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-preclear",
    "description": "A utility to \"burn-in\" a new disk, before adding it to your array has been requested several times.  Also requested is a process to \"pre-clear\" a hard disk before adding it to your array.  When a special \"signature\" is detected, the lengthy \"clearing\" step otherwise performed by unRAID is skipped.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "A utility to \"burn-in\" a new disk, before adding it to your array has been requested several times.  Also requested is a process to \"pre-clear\" a hard disk before adding it to your array.  When a special \"signature\" is detected, the lengthy \"clearing\" step otherwise performed by unRAID is skipped.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/preclear-icon.png",
    "name": "binhex-preclear",
    "image": "binhex/arch-preclear",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6080": "6080:6080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/unraid/ssmtp/ssmtp.conf",
        "bind": "/etc/ssmtp/ssmtp.conf"
      },
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/unraid/config/disk.cfg",
        "bind": "/boot/config/disk.cfg"
      },
      {
        "container": "/unraid/config/super.dat",
        "bind": "/boot/config/super.dat"
      },
      {
        "container": "/unraid/emhttp/disks.ini",
        "bind": "/var/local/emhttp/disks.ini"
      },
      {
        "container": "/unraid/mdcmd",
        "bind": "/usr/local/sbin/mdcmd"
      },
      {
        "container": "/unraid/disk/by-id",
        "bind": "/dev/disk/by-id"
      },
      {
        "container": "/unraid/config/plugins/dynamix",
        "bind": "/boot/config/plugins/dynamix"
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "0"
      },
      {
        "name": "WEBPAGE_TITLE",
        "label": "WEBPAGE_TITLE",
        "default": "Preclear"
      },
      {
        "name": "VNC_PASSWORD",
        "label": "VNC_PASSWORD",
        "default": ""
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "0"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-privoxyvpn",
    "description": "Privoxy is a free non-caching web proxy with filtering capabilities for enhancing privacy, manipulating cookies and modifying web page data and HTTP headers before the page is rendered by the browser. Privoxy is a \"privacy enhancing proxy\", filtering web pages and removing advertisements. Privoxy can be customized by users, for both stand-alone systems and multi-user networks. Privoxy can be chained to other proxies and is frequently used in combination with Squid and can be used to bypass Internet censorship.\n    microsocks is a SOCKS5 service that you can run on your remote boxes to tunnel connections through them, if for some reason SSH doesn't cut it for you. It's very lightweight, and very light on resources too: for every client, a thread with a stack size of 8KB is spawned. the main process basically doesn't consume any resources at all. The only limits are the amount of file descriptors and the RAM.\n    This Docker includes OpenVPN and WireGuard to ensure a secure and private connection to the Internet, including use of iptables to prevent IP leakage when the tunnel is down.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Privoxy is a free non-caching web proxy with filtering capabilities for enhancing privacy, manipulating cookies and modifying web page data and HTTP headers before the page is rendered by the browser. Privoxy is a \"privacy enhancing proxy\", filtering web pages and removing advertisements. Privoxy can be customized by users, for both stand-alone systems and multi-user networks. Privoxy can be chained to other proxies and is frequently used in combination with Squid and can be used to bypass Internet censorship.\n    microsocks is a SOCKS5 service that you can run on your remote boxes to tunnel connections through them, if for some reason SSH doesn't cut it for you. It's very lightweight, and very light on resources too: for every client, a thread with a stack size of 8KB is spawned. the main process basically doesn't consume any resources at all. The only limits are the amount of file descriptors and the RAM.\n    This Docker includes OpenVPN and WireGuard to ensure a secure and private connection to the Internet, including use of iptables to prevent IP leakage when the tunnel is down.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/privoxy-icon.png",
    "name": "binhex-privoxyvpn",
    "image": "binhex/arch-privoxyvpn",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8118": "8118:8118/tcp",
        "9118": "9118:9118/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      }
    ],
    "env": [
      {
        "name": "VPN_USER",
        "label": "VPN_USER",
        "default": "vpn username"
      },
      {
        "name": "NAME_SERVERS",
        "label": "NAME_SERVERS",
        "default": "209.222.18.222,84.200.69.80,37.235.1.174,1.1.1.1,209.222.18.218,37.235.1.177,84.200.70.40,1.0.0.1"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "VPN_PROV",
        "label": "VPN_PROV",
        "default": "pia|airvpn|custom"
      },
      {
        "name": "VPN_OPTIONS",
        "label": "VPN_OPTIONS",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "VPN_ENABLED",
        "label": "VPN_ENABLED",
        "default": "yes"
      },
      {
        "name": "VPN_CLIENT",
        "label": "VPN_CLIENT",
        "default": "openvpn|wireguard"
      },
      {
        "name": "SOCKS_PASS",
        "label": "SOCKS_PASS",
        "default": "socks"
      },
      {
        "name": "ENABLE_SOCKS",
        "label": "ENABLE_SOCKS",
        "default": "no"
      },
      {
        "name": "ADDITIONAL_PORTS",
        "label": "ADDITIONAL_PORTS",
        "default": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "VPN_PASS",
        "label": "VPN_PASS",
        "default": "vpn password"
      },
      {
        "name": "LAN_NETWORK",
        "label": "LAN_NETWORK",
        "default": "192.168.1.0/24"
      },
      {
        "name": "SOCKS_USER",
        "label": "SOCKS_USER",
        "default": "admin"
      },
      {
        "name": "ENABLE_PRIVOXY",
        "label": "ENABLE_PRIVOXY",
        "default": "yes"
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "false"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-pycharm",
    "description": "PyCharm is an Integrated Development Environment (IDE) used in computer programming, specifically for the Python language. It is developed by the Czech company JetBrains. It provides code analysis, a graphical debugger, an integrated unit tester, integration with version control systems (VCSes), and supports web development with Django.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "PyCharm is an Integrated Development Environment (IDE) used in computer programming, specifically for the Python language. It is developed by the Czech company JetBrains. It provides code analysis, a graphical debugger, an integrated unit tester, integration with version control systems (VCSes), and supports web development with Django.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/pycharm-icon.png",
    "name": "binhex-pycharm",
    "image": "binhex/arch-pycharm",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6080": "6080:6080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/data"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "WEBPAGE_TITLE",
        "label": "WEBPAGE_TITLE",
        "default": "Tower"
      },
      {
        "name": "VNC_PASSWORD",
        "label": "VNC_PASSWORD",
        "default": ""
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-qbittorrentvpn",
    "description": "qBittorrent is a bittorrent client programmed in C++ / Qt that uses libtorrent (sometimes called libtorrent-rasterbar) by Arvid Norberg. It aims to be a good alternative to all other bittorrent clients out there. qBittorrent is fast, stable and provides unicode support as well as many features.\n    This Docker includes OpenVPN and WireGuard to ensure a secure and private connection to the Internet, including use of iptables to prevent IP leakage when the tunnel is down. It also includes Privoxy to allow unfiltered access to index sites, to use Privoxy please point your application at \"http://host ip:8118\".",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "qBittorrent is a bittorrent client programmed in C++ / Qt that uses libtorrent (sometimes called libtorrent-rasterbar) by Arvid Norberg. It aims to be a good alternative to all other bittorrent clients out there. qBittorrent is fast, stable and provides unicode support as well as many features.\n    This Docker includes OpenVPN and WireGuard to ensure a secure and private connection to the Internet, including use of iptables to prevent IP leakage when the tunnel is down. It also includes Privoxy to allow unfiltered access to index sites, to use Privoxy please point your application at \"http://host ip:8118\".",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/qbittorrent-icon.png",
    "name": "binhex-qbittorrentvpn",
    "image": "binhex/arch-qbittorrentvpn",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6881": "6881:6881/tcp",
        "8080": "8080:8080/tcp",
        "8118": "8118:8118/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/data"
      }
    ],
    "env": [
      {
        "name": "VPN_USER",
        "label": "VPN_USER",
        "default": "vpn username"
      },
      {
        "name": "VPN_CLIENT",
        "label": "VPN_CLIENT",
        "default": "openvpn|wireguard"
      },
      {
        "name": "VPN_OPTIONS",
        "label": "VPN_OPTIONS",
        "default": ""
      },
      {
        "name": "WEBUI_PORT",
        "label": "WEBUI_PORT",
        "default": "8080"
      },
      {
        "name": "NAME_SERVERS",
        "label": "NAME_SERVERS",
        "default": "209.222.18.222,84.200.69.80,37.235.1.174,1.1.1.1,209.222.18.218,37.235.1.177,84.200.70.40,1.0.0.1"
      },
      {
        "name": "VPN_ENABLED",
        "label": "VPN_ENABLED",
        "default": "yes"
      },
      {
        "name": "VPN_PROV",
        "label": "VPN_PROV",
        "default": "pia|airvpn|custom"
      },
      {
        "name": "STRICT_PORT_FORWARD",
        "label": "STRICT_PORT_FORWARD",
        "default": "yes"
      },
      {
        "name": "LAN_NETWORK",
        "label": "LAN_NETWORK",
        "default": "192.168.1.0/24"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "VPN_PASS",
        "label": "VPN_PASS",
        "default": "vpn password"
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "false"
      },
      {
        "name": "ADDITIONAL_PORTS",
        "label": "ADDITIONAL_PORTS",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "ENABLE_PRIVOXY",
        "label": "ENABLE_PRIVOXY",
        "default": "no"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-radarr",
    "description": "This fork of Sonarr aims to turn it into something like Couchpotato. NOTE This application is under heavy development right now, it may not work correctly.",
    "categories": [
      "Downloaders:",
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "This fork of Sonarr aims to turn it into something like Couchpotato. NOTE This application is under heavy development right now, it may not work correctly.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/radarr-icon.png",
    "name": "binhex-radarr",
    "image": "binhex/arch-radarr",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "7878": "7878:7878/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/data"
      },
      {
        "container": "/media",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-rider",
    "description": "JetBrains Rider is a cross-platform .NET IDE based on the IntelliJ platform and ReSharper. Rider supports .NET Framework, the new cross-platform .NET Core, and Mono based projects. This lets you develop a wide range of applications including .NET desktop applications, services and libraries, Unity games, Xamarin apps, ASP.NET and ASP.NET Core web applications.\n    Note:- This application requires a license, otherwise it will run in Evaluation Mode for 30 days.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "JetBrains Rider is a cross-platform .NET IDE based on the IntelliJ platform and ReSharper. Rider supports .NET Framework, the new cross-platform .NET Core, and Mono based projects. This lets you develop a wide range of applications including .NET desktop applications, services and libraries, Unity games, Xamarin apps, ASP.NET and ASP.NET Core web applications.\n    Note:- This application requires a license, otherwise it will run in Evaluation Mode for 30 days.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/rider-icon.png",
    "name": "binhex-rider",
    "image": "binhex/arch-rider",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6080": "6080:6080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/data"
      }
    ],
    "env": [
      {
        "name": "VNC_PASSWORD",
        "label": "VNC_PASSWORD",
        "default": ""
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "WEBPAGE_TITLE",
        "label": "WEBPAGE_TITLE",
        "default": "Tower"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-rtorrentvpn",
    "description": "rTorrent is a quick and efficient BitTorrent client that uses, and is in development alongside, the libTorrent (not to be confused with libtorrent-rasterbar) library. It is written in C++ and uses the ncurses programming library, which means it uses a text user interface. When combined with a terminal multiplexer (e.g. GNU Screen or Tmux) and Secure Shell, it becomes a convenient remote BitTorrent client, this Docker image includes the popular ruTorrent web frontend to rTorrent for ease of use.\n    This Docker includes OpenVPN and WireGuard to ensure a secure and private connection to the Internet, including use of iptables to prevent IP leakage when the tunnel is down. It also includes Privoxy to allow unfiltered access to index sites, to use Privoxy please point your application at \"http://host ip:8118\".",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "rTorrent is a quick and efficient BitTorrent client that uses, and is in development alongside, the libTorrent (not to be confused with libtorrent-rasterbar) library. It is written in C++ and uses the ncurses programming library, which means it uses a text user interface. When combined with a terminal multiplexer (e.g. GNU Screen or Tmux) and Secure Shell, it becomes a convenient remote BitTorrent client, this Docker image includes the popular ruTorrent web frontend to rTorrent for ease of use.\n    This Docker includes OpenVPN and WireGuard to ensure a secure and private connection to the Internet, including use of iptables to prevent IP leakage when the tunnel is down. It also includes Privoxy to allow unfiltered access to index sites, to use Privoxy please point your application at \"http://host ip:8118\".",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/rtorrent-icon.png",
    "name": "binhex-rtorrentvpn",
    "image": "binhex/arch-rtorrentvpn",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5000": "5000:5000/tcp",
        "8118": "8118:8118/tcp",
        "9080": "9080:9080/tcp",
        "9443": "9443:9443/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/data"
      }
    ],
    "env": [
      {
        "name": "ENABLE_RPC2",
        "label": "ENABLE_RPC2",
        "default": "yes"
      },
      {
        "name": "ENABLE_WEBUI_AUTH",
        "label": "ENABLE_WEBUI_AUTH",
        "default": "yes"
      },
      {
        "name": "LAN_NETWORK",
        "label": "LAN_NETWORK",
        "default": "192.168.1.0/24"
      },
      {
        "name": "PHP_TZ",
        "label": "PHP_TZ",
        "default": "UTC"
      },
      {
        "name": "VPN_USER",
        "label": "VPN_USER",
        "default": "vpn username"
      },
      {
        "name": "VPN_PASS",
        "label": "VPN_PASS",
        "default": "vpn password"
      },
      {
        "name": "VPN_CLIENT",
        "label": "VPN_CLIENT",
        "default": "openvpn|wireguard"
      },
      {
        "name": "STRICT_PORT_FORWARD",
        "label": "STRICT_PORT_FORWARD",
        "default": "yes"
      },
      {
        "name": "NAME_SERVERS",
        "label": "NAME_SERVERS",
        "default": "209.222.18.222,84.200.69.80,37.235.1.174,1.1.1.1,209.222.18.218,37.235.1.177,84.200.70.40,1.0.0.1"
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "false"
      },
      {
        "name": "VPN_OPTIONS",
        "label": "VPN_OPTIONS",
        "default": ""
      },
      {
        "name": "ENABLE_PRIVOXY",
        "label": "ENABLE_PRIVOXY",
        "default": "no"
      },
      {
        "name": "ENABLE_AUTODL_IRSSI",
        "label": "ENABLE_AUTODL_IRSSI",
        "default": "no"
      },
      {
        "name": "RPC2_PASS",
        "label": "RPC2_PASS",
        "default": ""
      },
      {
        "name": "WEBUI_USER",
        "label": "WEBUI_USER",
        "default": "admin"
      },
      {
        "name": "WEBUI_PASS",
        "label": "WEBUI_PASS",
        "default": ""
      },
      {
        "name": "ADDITIONAL_PORTS",
        "label": "ADDITIONAL_PORTS",
        "default": ""
      },
      {
        "name": "VPN_ENABLED",
        "label": "VPN_ENABLED",
        "default": "yes"
      },
      {
        "name": "VPN_PROV",
        "label": "VPN_PROV",
        "default": "pia|airvpn|custom"
      },
      {
        "name": "ENABLE_RPC2_AUTH",
        "label": "ENABLE_RPC2_AUTH",
        "default": "yes"
      },
      {
        "name": "RPC2_USER",
        "label": "RPC2_USER",
        "default": "admin"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-sabnzbd",
    "description": "SABnzbd is an Open Source Binary Newsreader written in Python. SABnzbd makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "SABnzbd is an Open Source Binary Newsreader written in Python. SABnzbd makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/sabnzbd-icon.png",
    "name": "binhex-sabnzbd",
    "image": "binhex/arch-sabnzbd",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp",
        "8090": "8090:8090/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/data"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-sabnzbdvpn",
    "description": "SABnzbd is an Open Source Binary Newsreader written in Python. It's totally free, incredibly easy to use, and works practically everywhere. SABnzbd makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb.\n    This Docker includes OpenVPN and WireGuard to ensure a secure and private connection to the Internet, including use of iptables to prevent IP leakage when the tunnel is down. It also includes Privoxy to allow unfiltered access to index sites, to use Privoxy please point your application at \"http://host ip:8118\".",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "SABnzbd is an Open Source Binary Newsreader written in Python. It's totally free, incredibly easy to use, and works practically everywhere. SABnzbd makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb.\n    This Docker includes OpenVPN and WireGuard to ensure a secure and private connection to the Internet, including use of iptables to prevent IP leakage when the tunnel is down. It also includes Privoxy to allow unfiltered access to index sites, to use Privoxy please point your application at \"http://host ip:8118\".",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/sabnzbd-icon.png",
    "name": "binhex-sabnzbdvpn",
    "image": "binhex/arch-sabnzbdvpn",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp",
        "8090": "8090:8090/tcp",
        "8118": "8118:8118/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/data"
      }
    ],
    "env": [
      {
        "name": "VPN_ENABLED",
        "label": "VPN_ENABLED",
        "default": "yes"
      },
      {
        "name": "VPN_PROV",
        "label": "VPN_PROV",
        "default": "pia|airvpn|custom"
      },
      {
        "name": "VPN_CLIENT",
        "label": "VPN_CLIENT",
        "default": "openvpn|wireguard"
      },
      {
        "name": "VPN_OPTIONS",
        "label": "VPN_OPTIONS",
        "default": ""
      },
      {
        "name": "STRICT_PORT_FORWARD",
        "label": "STRICT_PORT_FORWARD",
        "default": "no"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "VPN_PASS",
        "label": "VPN_PASS",
        "default": "vpn password"
      },
      {
        "name": "ADDITIONAL_PORTS",
        "label": "ADDITIONAL_PORTS",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "VPN_USER",
        "label": "VPN_USER",
        "default": "vpn username"
      },
      {
        "name": "ENABLE_PRIVOXY",
        "label": "ENABLE_PRIVOXY",
        "default": "no"
      },
      {
        "name": "LAN_NETWORK",
        "label": "LAN_NETWORK",
        "default": "192.168.1.0/24"
      },
      {
        "name": "NAME_SERVERS",
        "label": "NAME_SERVERS",
        "default": "209.222.18.222,84.200.69.80,37.235.1.174,1.1.1.1,209.222.18.218,37.235.1.177,84.200.70.40,1.0.0.1"
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "false"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-sickchill",
    "description": "SickChill is a Video File Manager for TV Shows, It watches for new episodes of your favorite shows and when they are posted it does its magic. SickChill is currently in beta release stage. There may be severe bugs in it and at any given time it may not work at all.",
    "categories": [
      "Downloaders:",
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "SickChill is a Video File Manager for TV Shows, It watches for new episodes of your favorite shows and when they are posted it does its magic. SickChill is currently in beta release stage. There may be severe bugs in it and at any given time it may not work at all.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/sickchill-icon.png",
    "name": "binhex-sickchill",
    "image": "binhex/arch-sickchill",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8081": "8081:8081/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/data"
      },
      {
        "container": "/media",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-sonarr",
    "description": "Sonarr is a PVR for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
    "categories": [
      "Downloaders:",
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "Sonarr is a PVR for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/sonarr-icon.png",
    "name": "binhex-sonarr",
    "image": "binhex/arch-sonarr",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8989": "8989:8989/tcp",
        "9897": "9897:9897/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/data"
      },
      {
        "container": "/media",
        "bind": "/mnt/user"
      },
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-teamspeak",
    "description": "TeamSpeak is proprietary voice-over-Internet Protocol (VoIP) software that allows computer users to speak on a chat channel with fellow computer users, much like a telephone conference call. A TeamSpeak user will often wear a headset with an integrated microphone. Users use the TeamSpeak client software to connect to a TeamSpeak server of their choice, from there they can join chat channels and discuss things.",
    "categories": [
      "Network:Voip"
    ],
    "platform": "linux",
    "note": "TeamSpeak is proprietary voice-over-Internet Protocol (VoIP) software that allows computer users to speak on a chat channel with fellow computer users, much like a telephone conference call. A TeamSpeak user will often wear a headset with an integrated microphone. Users use the TeamSpeak client software to connect to a TeamSpeak server of their choice, from there they can join chat channels and discuss things.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/teamspeak-icon.png",
    "name": "binhex-teamspeak",
    "image": "binhex/arch-teamspeak",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-tvheadend",
    "description": "Tvheadend is a TV streaming server and recorder for Linux, FreeBSD and Android supporting DVB-S, DVB-S2, DVB-C, DVB-T, ATSC, ISDB-T, IPTV, SAT\u003eIP and HDHomeRun as input sources. Tvheadend offers the HTTP (VLC, MPlayer), HTSP (Kodi, Movian) and SAT\u003eIP streaming. Multiple EPG sources are supported (over-the-air DVB and ATSC including OpenTV DVB extensions, XMLTV, PyXML).",
    "categories": [
      "MediaApp:Video",
      "MediaApp:Music",
      "MediaApp:Photos",
      "MediaServer:Video",
      "MediaServer:Music",
      "MediaServer:Photos"
    ],
    "platform": "linux",
    "note": "Tvheadend is a TV streaming server and recorder for Linux, FreeBSD and Android supporting DVB-S, DVB-S2, DVB-C, DVB-T, ATSC, ISDB-T, IPTV, SAT\u003eIP and HDHomeRun as input sources. Tvheadend offers the HTTP (VLC, MPlayer), HTSP (Kodi, Movian) and SAT\u003eIP streaming. Multiple EPG sources are supported (over-the-air DVB and ATSC including OpenTV DVB extensions, XMLTV, PyXML).",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/tvheadend-icon.png",
    "name": "binhex-tvheadend",
    "image": "binhex/arch-tvheadend",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "9981": "9981:9981/tcp",
        "9982": "9982:9982/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/data"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-urbackup",
    "description": "UrBackup is an easy to setup Open Source client/server backup system, that through a combination of image and file backups accomplishes both data safety and a fast restoration time.\n    File and image backups are made while the system is running without interrupting current processes.\n    UrBackup also continuously watches folders you want backed up in order to quickly find differences to previous backups. Because of that, incremental file backups are really fast.\n    Your files can be restored through the web interface, via the client or the Windows Explorer while the backups of drive volumes can be restored with a bootable CD or USB-Stick (bare metal restore).\n    A web interface makes setting up your own backup server really easy.",
    "categories": [
      "Productivity:",
      "Tools:Utilities",
      "Backup:"
    ],
    "platform": "linux",
    "note": "UrBackup is an easy to setup Open Source client/server backup system, that through a combination of image and file backups accomplishes both data safety and a fast restoration time.\n    File and image backups are made while the system is running without interrupting current processes.\n    UrBackup also continuously watches folders you want backed up in order to quickly find differences to previous backups. Because of that, incremental file backups are really fast.\n    Your files can be restored through the web interface, via the client or the Windows Explorer while the backups of drive volumes can be restored with a bootable CD or USB-Stick (bare metal restore).\n    A web interface makes setting up your own backup server really easy.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/urbackup-icon.png",
    "name": "binhex-urbackup",
    "image": "binhex/arch-urbackup",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/media",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "CouchDB-Offical-Docker-v1.x",
    "description": "CouchDB offical docker image\n  Apache CouchDB has a document-oriented NoSQL database architecture and is Open Source.",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "CouchDB offical docker image\n  Apache CouchDB has a document-oriented NoSQL database architecture and is Open Source.",
    "logo": "https://couchdb.apache.org/image/couch@2x.png",
    "name": "CouchDB-Offical-Docker-v1.x",
    "image": "couchdb",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5984": "5984:5984/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/usr/local/var/lib/couchdb",
        "bind": "/mnt/user/appdata/couchdb"
      }
    ]
  },
  {
    "type": 1,
    "title": "CouchDB-v2.x",
    "description": "CouchDB docker image for v2.x\n  Apache CouchDB has a document-oriented NoSQL database architecture and is Open Source.",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "CouchDB docker image for v2.x\n  Apache CouchDB has a document-oriented NoSQL database architecture and is Open Source.",
    "logo": "https://couchdb.apache.org/image/couch@2x.png",
    "name": "CouchDB-v2.x",
    "image": "apache/couchdb",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5984": "5984:5984/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/opt/couchdb/data",
        "bind": "/mnt/user/appdata/couchdb/data"
      },
      {
        "container": "/usr/local/etc/couchdb",
        "bind": "/mnt/user/appdata/couchdb/config"
      }
    ]
  },
  {
    "type": 1,
    "title": "Dashing",
    "description": "The exceptionally handsome dashboard framework.\n    Dashing is a Sinatra based framework that lets you build beautiful dashboards.\n    Use premade widgets, or fully create your own with scss, html, and coffeescript.\n    Widgets harness the power of data bindings to keep things DRY and simple. Powered by batman.js.\n    Use the API to push data to your dashboards, or make use of a simple ruby DSL for fetching data.\n    Drag and Drop interface for re-arranging your widgets.",
    "categories": [
      "HomeAutomation:"
    ],
    "platform": "linux",
    "note": "The exceptionally handsome dashboard framework.\n    Dashing is a Sinatra based framework that lets you build beautiful dashboards.\n    Use premade widgets, or fully create your own with scss, html, and coffeescript.\n    Widgets harness the power of data bindings to keep things DRY and simple. Powered by batman.js.\n    Use the API to push data to your dashboards, or make use of a simple ruby DSL for fetching data.\n    Drag and Drop interface for re-arranging your widgets.",
    "logo": "https://i.imgur.com/qtYkC6Wl.png",
    "name": "Dashing",
    "image": "spants/dashing",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3030": "3030:3030/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/docker/appdata/dashing"
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "MQTT",
    "description": "MQTT for Unraid6 Docker Manager running on Port 1883 and 9883\n    MQTT is a machine-to-machine (M2M)/\"Internet of Things\" connectivity protocol. \n    It was designed as an extremely lightweight publish/subscribe messaging transport. \n    It is useful for connections with remote locations where a small code footprint is required \n    and/or network bandwidth is at a premium. For example, it has been used in sensors \n    communicating to a broker via satellite link, over occasional dial-up connections with \n    healthcare providers, and in a range of home automation and small device scenarios. \n    It is also ideal for mobile applications because of its small size, low power usage, \n    minimised data packets, and efficient distribution of information to one or many receivers\n    \n    This version supports passwords - see passwords.README in the /config directory.\n    Also supported are websockets and certificates.\n    \n    An example config file is stored in the data directory. If you have used an older Docker your config may need changing.\n    \n    Note that you may have to use NEWPERMS to edit the config files.\n    The permissions for unraid have been removed to allow this to be a multihost docker.\n    The docker is built on a Alpine Linux base.",
    "categories": [
      "HomeAutomation:"
    ],
    "platform": "linux",
    "note": "MQTT for Unraid6 Docker Manager running on Port 1883 and 9883\n    MQTT is a machine-to-machine (M2M)/\"Internet of Things\" connectivity protocol. \n    It was designed as an extremely lightweight publish/subscribe messaging transport. \n    It is useful for connections with remote locations where a small code footprint is required \n    and/or network bandwidth is at a premium. For example, it has been used in sensors \n    communicating to a broker via satellite link, over occasional dial-up connections with \n    healthcare providers, and in a range of home automation and small device scenarios. \n    It is also ideal for mobile applications because of its small size, low power usage, \n    minimised data packets, and efficient distribution of information to one or many receivers\n    \n    This version supports passwords - see passwords.README in the /config directory.\n    Also supported are websockets and certificates.\n    \n    An example config file is stored in the data directory. If you have used an older Docker your config may need changing.\n    \n    Note that you may have to use NEWPERMS to edit the config files.\n    The permissions for unraid have been removed to allow this to be a multihost docker.\n    The docker is built on a Alpine Linux base.",
    "logo": "https://i.imgur.com/Cc9Jkcr.png",
    "name": "MQTT",
    "image": "spants/mqtt",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "1883": "1883:1883/tcp",
        "9001": "9001:9001/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/MQTT"
      }
    ]
  },
  {
    "type": 1,
    "title": "octoprint",
    "description": "A docker template for Octoprint by Spants. \r\nThis is for the excellent Docker image by nunofgs. Please direct all non unRaid questions to https://github.com/nunofgs/docker-octoprint.\r\n\r\nThis template was constructed with knowledge from https://www.reddit.com/r/unRAID/comments/eq5u3r/running_octoprint_in_unraid/ - thanks to Jacob_xATLx and Tergi.\r\nPlease see Tergi's post on doing camera passthrough: https://forums.unraid.net/topic/91533-unraid-683-pass-usb-webcam-into-docker/",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "A docker template for Octoprint by Spants. \r\nThis is for the excellent Docker image by nunofgs. Please direct all non unRaid questions to https://github.com/nunofgs/docker-octoprint.\r\n\r\nThis template was constructed with knowledge from https://www.reddit.com/r/unRAID/comments/eq5u3r/running_octoprint_in_unraid/ - thanks to Jacob_xATLx and Tergi.\r\nPlease see Tergi's post on doing camera passthrough: https://forums.unraid.net/topic/91533-unraid-683-pass-usb-webcam-into-docker/",
    "logo": "https://octoprint.org/assets/img/logo.png",
    "name": "octoprint",
    "image": "nunofgs/octoprint",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5000": "5000:5000/tcp",
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/octoprint"
      }
    ],
    "env": [
      {
        "name": "CAMERA_DEV",
        "label": "CAMERA_DEV",
        "default": "/dev/video0"
      },
      {
        "name": "MJPEG_STREAMER_AUTOSTART",
        "label": "MJPEG_STREAMER_AUTOSTART",
        "default": "true"
      },
      {
        "name": "MJPEG_STREAMER_INPUT",
        "label": "MJPEG_STREAMER_INPUT",
        "default": "-y -n -r 640x480"
      }
    ]
  },
  {
    "type": 1,
    "title": "NodeRed",
    "description": "Node-RED is a visual tool for wiring the Internet of Things\r\nNode-RED is a tool for wiring together hardware devices, APIs and online services in new and interesting ways.\r\nSee NodeRed.org and flows.nodered.org for more info. \r\nNodeRed will run on port 1880.\r\nThis is the official Docker release from the NodeRed team - I just created the template.",
    "categories": [
      "HomeAutomation:"
    ],
    "platform": "linux",
    "note": "Node-RED is a visual tool for wiring the Internet of Things\r\nNode-RED is a tool for wiring together hardware devices, APIs and online services in new and interesting ways.\r\nSee NodeRed.org and flows.nodered.org for more info. \r\nNodeRed will run on port 1880.\r\nThis is the official Docker release from the NodeRed team - I just created the template.",
    "logo": "https://i.imgur.com/zXpacAF.png",
    "name": "NodeRed",
    "image": "nodered/node-red",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "1880": "1880:1880/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/nodered/"
      }
    ],
    "env": [
      {
        "name": "NODE_RED_ENABLE_SAFE_MODE",
        "label": "NODE_RED_ENABLE_SAFE_MODE",
        "default": "false"
      }
    ]
  },
  {
    "type": 1,
    "title": "Photostructure",
    "description": "Template by Spants.\r\nBeta access to PhotoStructure, your new home for all your photos and videos.",
    "categories": [
      "MediaApp:Photos",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Template by Spants.\r\nBeta access to PhotoStructure, your new home for all your photos and videos.",
    "logo": "https://i.imgur.com/SlHizQK.png",
    "name": "Photostructure",
    "image": "photostructure/server",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "1787": "1787:1787/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/ps/library",
        "bind": "/mnt/user/Photos/PS"
      },
      {
        "container": "/ps/tmp",
        "bind": "/mnt/cache/.tmp/photostructure"
      },
      {
        "container": "/ps/config",
        "bind": "/mnt/disks/appDisk/appdata/photostructure/config/"
      },
      {
        "container": "/ps/logs",
        "bind": "/mnt/disks/appDisk/appdata/photostructure/logs/"
      },
      {
        "container": "/photos-backup",
        "bind": "/mnt/user/Photos/Photosbackup"
      },
      {
        "container": "/pictures",
        "bind": "/mnt/user/Photos"
      }
    ],
    "env": [
      {
        "name": "TZ",
        "label": "TZ",
        "default": "Europe/London"
      }
    ]
  },
  {
    "type": 1,
    "title": "pihole-template",
    "description": "Pi-Hole - let's block those pesky ads!\n    This is a template for the official PiHole Docker\n    Make sure that you use bridge mode and give PiHole\n    it's own IP address.\n    Also, if you set you router to give out the PiHole address to clients,\n    make sure that you fixe the unRaid servers dns to point to a real DNS Server.",
    "categories": [
      "Network:Other",
      "Other:"
    ],
    "platform": "linux",
    "note": "Pi-Hole - let's block those pesky ads!\n    This is a template for the official PiHole Docker\n    Make sure that you use bridge mode and give PiHole\n    it's own IP address.\n    Also, if you set you router to give out the PiHole address to clients,\n    make sure that you fixe the unRaid servers dns to point to a real DNS Server.",
    "logo": "https://i.imgur.com/OWkNcEn.png",
    "name": "pihole-template",
    "image": "pihole/pihole:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "443:443/tcp",
        "53": "53:53/tcp",
        "67": "67:67/udp",
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/pihole/",
        "bind": "/mnt/cache/appdata/pihole/pihole/"
      },
      {
        "container": "/etc/dnsmasq.d/",
        "bind": "/mnt/cache/appdata/pihole/dnsmasq.d/"
      }
    ],
    "env": [
      {
        "name": "DNS1",
        "label": "DNS1",
        "default": "8.8.8.8"
      },
      {
        "name": "DNS2",
        "label": "DNS2",
        "default": "8.8.4.4"
      },
      {
        "name": "TZ",
        "label": "TZ",
        "default": "Europe/London"
      },
      {
        "name": "WEBPASSWORD",
        "label": "WEBPASSWORD",
        "default": "admin"
      },
      {
        "name": "INTERFACE",
        "label": "INTERFACE",
        "default": "br0"
      },
      {
        "name": "ServerIP",
        "label": "ServerIP",
        "default": "192.168.1.24"
      },
      {
        "name": "ServerIPv6",
        "label": "ServerIPv6",
        "default": ""
      },
      {
        "name": "IPv6",
        "label": "IPv6",
        "default": "False"
      },
      {
        "name": "DNSMASQ_LISTENING",
        "label": "DNSMASQ_LISTENING",
        "default": "all"
      }
    ]
  },
  {
    "type": 1,
    "title": "Air-Video-HD",
    "description": "Air Video HD is everything that was great about Air Video, re-thought and re-engineered to bring you the best and most reliable streaming video app for iOS devices.",
    "categories": [
      "MediaServer:Video"
    ],
    "platform": "linux",
    "note": "Air Video HD is everything that was great about Air Video, re-thought and re-engineered to bring you the best and most reliable streaming video app for iOS devices.",
    "logo": "https://i.imgur.com/0F69icm.png",
    "name": "Air-Video-HD",
    "image": "dmaxwell/airvideohd",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/airvideohd"
      },
      {
        "container": "/conversionPath",
        "bind": "/mnt/user/appdata/airvideohd/temp"
      },
      {
        "container": "/videos",
        "bind": "/mnt/user/Media"
      }
    ]
  },
  {
    "type": 1,
    "title": "splunk",
    "description": "Splunk is a remote syslog server that accepts any data feed.",
    "categories": [
      "Network:Management"
    ],
    "platform": "linux",
    "note": "Splunk is a remote syslog server that accepts any data feed.",
    "logo": "https://i.imgur.com/KKoQMo6.png",
    "name": "splunk",
    "image": "dmaxwell/splunk",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "514": "514:514/udp",
        "8000": "8000:8000/tcp",
        "8089": "8089:8089/tcp",
        "9997": "9997:9997/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/opt/splunk/var",
        "bind": "/mnt/user/appdata/splunk"
      }
    ]
  },
  {
    "type": 1,
    "title": "MakeMKV-RDP",
    "description": "MakeMKV is a tool for ripping Blu-ray and DVDs. This container is based on Hurricanes dockergui container with both rdp support and webgui.",
    "categories": [
      "MediaApp:Video",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "MakeMKV is a tool for ripping Blu-ray and DVDs. This container is based on Hurricanes dockergui container with both rdp support and webgui.",
    "logo": "https://i.imgur.com/l815H3m.png",
    "name": "MakeMKV-RDP",
    "image": "tobbenb/makemkv-rdp",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3389": "0:3389/tcp",
        "8080": "0:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/unRaid",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "WIDTH",
        "label": "WIDTH",
        "default": "1280"
      },
      {
        "name": "HEIGHT",
        "label": "HEIGHT",
        "default": "720"
      }
    ]
  },
  {
    "type": 1,
    "title": "MKVToolNix-gui",
    "description": "MKVToolNix is a set of tools to create, alter and inspect Matroska files under Linux, other Unices and Windows.",
    "categories": [
      "MediaApp:Video",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "MKVToolNix is a set of tools to create, alter and inspect Matroska files under Linux, other Unices and Windows.",
    "logo": "https://i.imgur.com/JNAwFKU.png",
    "name": "MKVToolNix-gui",
    "image": "tobbenb/mkvtoolnix-gui",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3389": "0:3389/tcp",
        "8080": "0:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/unRaid",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Oscam",
    "categories": [
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "Oscam is a card server and client for decoding DVB streams over DVB-S, DVB-C, DVB-T or IPTV using a subscription card.",
    "logo": "https://i.imgur.com/8LadrLg.png?1",
    "name": "Oscam",
    "image": "tobbenb/oscam",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "Tvheadend-Stable",
    "categories": [
      "MediaServer:Video"
    ],
    "platform": "linux",
    "note": "This is the stable branch of Tvheadend installed from the Tvheadend apt-repository. Version: 3.4.28~geb79aee\n  \tTvheadend is a TV streaming server for Linux supporting DVB-S, DVB-S2, DVB-C, DVB-T, ATSC, IPTV, SAT\u003eIP and HDHomeRun as input sources.\n\nThe Analog video (V4L) is supported directly up to version 3.4.\nIn recent version, the pipe:// source (in IPTV network) might be used to obtain the MPEG-TS stream generated by ffmpeg/libav from a V4L device.",
    "logo": "https://i.imgur.com/BOM9PHj.png",
    "name": "Tvheadend-Stable",
    "image": "tobbenb/tvheadend-stable",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "Tvheadend-Unstable",
    "categories": [
      "MediaServer:Video"
    ],
    "platform": "linux",
    "note": "This is the unstable branch of Tvheadend and is now at version 3.9.2345~gf5c8e4c.\n  \t\tTvheadend is a TV streaming server for Linux supporting DVB-S, DVB-S2, DVB-C, DVB-T, ATSC, IPTV, SAT\u003eIP and HDHomeRun as input sources.\n\t\tThe Analog video (V4L) is supported directly up to version 3.4.\n\t\tIn recent version, the pipe:// source (in IPTV network) might be used to obtain the MPEG-TS stream generated by ffmpeg/libav from a V4L device.",
    "logo": "https://i.imgur.com/zGSUAT4.png?1",
    "name": "Tvheadend-Unstable",
    "image": "tobbenb/tvheadend-unstable",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "Tvheadend-Unstable-DVB-Tuners",
    "categories": [
      "MediaServer:Video"
    ],
    "platform": "linux",
    "note": "This is a template with pass through of 1 DVB Tuner. This is the unstable branch of Tvheadend and is now at version 3.9.2345~gf5c8e4c.\n  \t\tTvheadend is a TV streaming server for Linux supporting DVB-S, DVB-S2, DVB-C, DVB-T, ATSC, IPTV, SAT\u003eIP and HDHomeRun as input sources.\n\t\tThe Analog video (V4L) is supported directly up to version 3.4.\n\t\tIn recent version, the pipe:// source (in IPTV network) might be used to obtain the MPEG-TS stream generated by ffmpeg/libav from a V4L device.",
    "logo": "https://i.imgur.com/zGSUAT4.png?1",
    "name": "Tvheadend-Unstable-DVB-Tuners",
    "image": "tobbenb/tvheadend-unstable",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "Tvheadend4-Stable",
    "categories": [
      "MediaServer:Video"
    ],
    "platform": "linux",
    "note": "This is the stable branch of Tvheadend installed from the Tvheadend apt-repository. Version: 4.0.5\n  \tTvheadend is a TV streaming server for Linux supporting DVB-S, DVB-S2, DVB-C, DVB-T, ATSC, IPTV, SAT\u003eIP and HDHomeRun as input sources.\nIn recent version, the pipe:// source (in IPTV network) might be used to obtain the MPEG-TS stream generated by ffmpeg/libav from a V4L device.",
    "logo": "https://i.imgur.com/zGSUAT4.png?1",
    "name": "Tvheadend4-Stable",
    "image": "tobbenb/tvheadend",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "Tvheadend4-Stable-DVB-Tuners",
    "categories": [
      "MediaServer:Video"
    ],
    "platform": "linux",
    "note": "This is the stable branch of Tvheadend installed from the Tvheadend apt-repository. Version: 4.0.5\n  \tTvheadend is a TV streaming server for Linux supporting DVB-S, DVB-S2, DVB-C, DVB-T, ATSC, IPTV, SAT\u003eIP and HDHomeRun as input sources.\nIn recent version, the pipe:// source (in IPTV network) might be used to obtain the MPEG-TS stream generated by ffmpeg/libav from a V4L device.",
    "logo": "https://i.imgur.com/zGSUAT4.png?1",
    "name": "Tvheadend4-Stable-DVB-Tuners",
    "image": "tobbenb/tvheadend",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "WebGrabPlusPlus",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "WebGrab+Plus is a multi-site incremental xmltv epg grabber. It collects tv-program guide data from selected tvguide sites for your favourite channels.\r\n\t\tOptional postprocessors to add IMDb data or to customize your xmltv listing.\r\n\t\thttp://www.webgrabplus.com/",
    "logo": "https://i.imgur.com/zrCJxzX.png",
    "name": "WebGrabPlusPlus",
    "image": "tobbenb/webgrabplusplus",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "CherryMusic",
    "description": "CherryMusic \n    A music streaming server written in python: Stream your own music collection to all your devices!",
    "categories": [
      "Cloud:",
      "MediaServer:Music"
    ],
    "platform": "linux",
    "note": "CherryMusic \n    A music streaming server written in python: Stream your own music collection to all your devices!",
    "logo": "https://raw.githubusercontent.com/noinip/cherrymusic-1/master/res/img/cherrymusic_logo_big.png",
    "name": "CherryMusic",
    "image": "pinion/cherrymusic",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8070": "8070:8070/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/root/.config/cherrymusic",
        "bind": "/mnt/cache/apps/appdata/cherrymusic"
      },
      {
        "container": "/music",
        "bind": "/mnt/user/Media/Music"
      }
    ]
  },
  {
    "type": 1,
    "title": "Mylar",
    "description": "MylarMylar is an automated Comic Book (cbr/cbz) downloader program heavily-based on the Headphones template and logic (which is also based on Sick-Beard).[",
    "categories": [
      "Downloaders:",
      "MediaApp:Books"
    ],
    "platform": "linux",
    "note": "MylarMylar is an automated Comic Book (cbr/cbz) downloader program heavily-based on the Headphones template and logic (which is also based on Sick-Beard).[",
    "logo": "https://i.imgur.com/F3mxSf5.png",
    "name": "Mylar",
    "image": "pinion/docker-mylar",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "8090": "8090:8090/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/apps/appdata/mylar"
      },
      {
        "container": "/downloads",
        "bind": "/mnt/user/Downloads/Comics"
      },
      {
        "container": "/comics",
        "bind": "/mnt/user/Media/Comics"
      }
    ]
  },
  {
    "type": 1,
    "title": "pyTivo",
    "description": "PyTivopyTivo is both an HMO and GoBack server. Similar to TiVo Desktop, pyTivo loads many standard video compression codecs and outputs mpeg2 (or in some cases, h.264) video to the TiVo. However, pyTivo is able to load many more file types than TiVo Desktop.",
    "categories": [
      "MediaServer:Video"
    ],
    "platform": "linux",
    "note": "PyTivopyTivo is both an HMO and GoBack server. Similar to TiVo Desktop, pyTivo loads many standard video compression codecs and outputs mpeg2 (or in some cases, h.264) video to the TiVo. However, pyTivo is able to load many more file types than TiVo Desktop.",
    "name": "pyTivo",
    "image": "pinion/docker-pytivo",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "2190": "2190:2190/udp",
        "9032": "9032:9032/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/media",
        "bind": "/mnt/user/Media"
      },
      {
        "container": "/config",
        "bind": "/mnt/cache/apps/appdata/pytivo"
      }
    ]
  },
  {
    "type": 1,
    "title": "gitlab",
    "description": "Gitlab is a git repository server that can be hosted on your own network so that you can maintain and keep your source code privately.\n    This docker has the ability to enable https, send emails using gmail, and perform nightly backups.",
    "categories": [
      "Cloud:",
      "Network:Web",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Gitlab is a git repository server that can be hosted on your own network so that you can maintain and keep your source code privately.\n    This docker has the ability to enable https, send emails using gmail, and perform nightly backups.",
    "name": "gitlab",
    "image": "sameersbn/gitlab",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "22": "10022:22/tcp",
        "443": "10443:443/tcp",
        "80": "10080:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/home/git/data",
        "bind": "/mnt/user/appdata/gitlab"
      }
    ],
    "env": [
      {
        "name": "SMTP_PASS",
        "label": "SMTP_PASS",
        "default": "gmailpassword"
      },
      {
        "name": "GITLAB_HOST",
        "label": "GITLAB_HOST",
        "default": "localhost"
      },
      {
        "name": "GITLAB_SSH_PORT",
        "label": "GITLAB_SSH_PORT",
        "default": "10020"
      },
      {
        "name": "GITLAB_PORT",
        "label": "GITLAB_PORT",
        "default": "10080"
      },
      {
        "name": "GITLAB_HTTPS",
        "label": "GITLAB_HTTPS",
        "default": "false"
      },
      {
        "name": "SSL_SELF_SIGNED",
        "label": "SSL_SELF_SIGNED",
        "default": "false"
      },
      {
        "name": "GITLAB_EMAIL",
        "label": "GITLAB_EMAIL",
        "default": "example@example.com"
      },
      {
        "name": "SMTP_USER",
        "label": "SMTP_USER",
        "default": "gitlabEmail@gmail.com"
      },
      {
        "name": "GITLAB_BACKUPS",
        "label": "GITLAB_BACKUPS",
        "default": "daily"
      },
      {
        "name": "GITLAB_BACKUP_EXPIRY",
        "label": "GITLAB_BACKUP_EXPIRY",
        "default": "2419200"
      }
    ]
  },
  {
    "type": 1,
    "title": "mochad",
    "description": "Mochad is a TCP gateway to access the CM15a and CM19 X-10 interfaces",
    "categories": [
      "HomeAutomation:",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "Mochad is a TCP gateway to access the CM15a and CM19 X-10 interfaces",
    "logo": "https://raw.githubusercontent.com/jshridha/templates/master/Bungy/Icons/x10_icon.jpg",
    "name": "mochad",
    "image": "jshridha/mochad",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "1099": "1099:1099/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/dev/bus/usb/004",
        "bind": "/dev/bus/usb/004"
      }
    ]
  },
  {
    "type": 1,
    "title": "motioneye",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "Motion security camera software with motioneye as the frontend UIjshridha/motioneye converted by Community Applications.",
    "logo": "https://raw.githubusercontent.com/ccrisan/motioneye/master/motioneye/static/img/motioneye-icon.svg",
    "name": "motioneye",
    "image": "jshridha/motioneye:latest",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "mysql",
    "description": "Official docker image for mysql database server.\n\tSet the database name, root password, mysql user name, and mysql user password.",
    "categories": [
      "Network:Management",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Official docker image for mysql database server.\n\tSet the database name, root password, mysql user name, and mysql user password.",
    "logo": "https://raw.githubusercontent.com/docker-library/docs/master/mysql/logo.png",
    "name": "mysql",
    "image": "mysql",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3306": "3306:3306/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/lib/mysql",
        "bind": "/mnt/user/appdata/mysql"
      }
    ],
    "env": [
      {
        "name": "MYSQL_ROOT_PASSWORD",
        "label": "MYSQL_ROOT_PASSWORD",
        "default": "root_password"
      },
      {
        "name": "MYSQL_DATABASE",
        "label": "MYSQL_DATABASE",
        "default": "owncloud"
      },
      {
        "name": "MYSQL_USER",
        "label": "MYSQL_USER",
        "default": "mysql_user"
      },
      {
        "name": "MYSQL_PASSWORD",
        "label": "MYSQL_PASSWORD",
        "default": "mysql_password"
      }
    ]
  },
  {
    "type": 1,
    "title": "nzbgetvpn",
    "description": "NZBGet is a cross-platform binary newsgrabber for nzb files, written in C++. It supports client/server mode, automatic par-check/-repair, web-interface, command-line interface, etc. NZBGet requires low system resources and runs great on routers, NAS-devices and media players.\n\tThis Docker includes OpenVPN to ensure a secure and private connection to the Internet",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "NZBGet is a cross-platform binary newsgrabber for nzb files, written in C++. It supports client/server mode, automatic par-check/-repair, web-interface, command-line interface, etc. NZBGet requires low system resources and runs great on routers, NAS-devices and media players.\n\tThis Docker includes OpenVPN to ensure a secure and private connection to the Internet",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/nzbget-icon.png",
    "name": "nzbgetvpn",
    "image": "jshridha/docker-nzbgetvpn",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6789": "6789:6789/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/nzbgetvpn/downloads"
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/nzbgetvpn/config"
      },
      {
        "container": "/etc/localtime",
        "bind": "/etc/localtime"
      }
    ],
    "env": [
      {
        "name": "VPN_PROV",
        "label": "VPN_PROV",
        "default": "pia"
      },
      {
        "name": "VPN_PROTOCOL",
        "label": "VPN_PROTOCOL",
        "default": "udp"
      },
      {
        "name": "STRONG_CERTS",
        "label": "STRONG_CERTS",
        "default": "no"
      },
      {
        "name": "VPN_PASS",
        "label": "VPN_PASS",
        "default": "password"
      },
      {
        "name": "VPN_REMOTE",
        "label": "VPN_REMOTE",
        "default": "nl.privateinternetaccess.com"
      },
      {
        "name": "LAN_NETWORK",
        "label": "LAN_NETWORK",
        "default": "192.168.1.0/24"
      },
      {
        "name": "VPN_ENABLED",
        "label": "VPN_ENABLED",
        "default": "yes"
      },
      {
        "name": "VPN_USER",
        "label": "VPN_USER",
        "default": "username"
      },
      {
        "name": "VPN_PORT",
        "label": "VPN_PORT",
        "default": "1198"
      }
    ]
  },
  {
    "type": 1,
    "title": "owncloud",
    "description": "ownCloud gives you universal access to your files through a web interface or WebDAV. It also provides a platform to easily view and sync your contacts, calendars and bookmarks across all your devices and enables basic editing right on the web.",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "ownCloud gives you universal access to your files through a web interface or WebDAV. It also provides a platform to easily view and sync your contacts, calendars and bookmarks across all your devices and enables basic editing right on the web.",
    "logo": "https://i.imgur.com/EX4qL2V.png",
    "name": "owncloud",
    "image": "owncloud",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "8000:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/www/html/apps",
        "bind": "/mnt/cache/appdata/owncloud/apps"
      },
      {
        "container": "/var/www/html/config",
        "bind": "/mnt/cache/appdata/owncloud/config"
      },
      {
        "container": "/var/www/html/data",
        "bind": "/mnt/cache/appdata/owncloud/data"
      }
    ]
  },
  {
    "type": 1,
    "title": "postgresql",
    "description": "Postgresql for use with gitlab.\n  Install this docker before installing the gitlab docker.",
    "categories": [
      "Network:Management",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Postgresql for use with gitlab.\n  Install this docker before installing the gitlab docker.",
    "logo": "https://www.iconattitude.com/icons/open_icon_library/apps/png/256/postgresql.png",
    "name": "postgresql",
    "image": "sameersbn/postgresql",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/var/lib/postgresql",
        "bind": "/mnt/cache/appdata/postgresql"
      }
    ],
    "env": [
      {
        "name": "DB_PASS",
        "label": "DB_PASS",
        "default": "password"
      },
      {
        "name": "DB_NAME",
        "label": "DB_NAME",
        "default": "gitlabhq_production"
      },
      {
        "name": "DB_USER",
        "label": "DB_USER",
        "default": "gitlab"
      }
    ]
  },
  {
    "type": 1,
    "title": "rdiffweb",
    "description": "Rdiffweb is used to browse and restore backups created by rdiff-backup.",
    "categories": [
      "Cloud:",
      "Network:Web",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Rdiffweb is used to browse and restore backups created by rdiff-backup.",
    "name": "rdiffweb",
    "image": "jshridha/rdiffweb",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8099:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/rdiffweb",
        "bind": "/mnt/cache/appdata/rdiffweb/config"
      },
      {
        "container": "/backups",
        "bind": "/mnt/disk2/rdiff-backup/"
      },
      {
        "container": "/restores",
        "bind": "/mnt/cache/appdata/rdiffweb/restores"
      }
    ]
  },
  {
    "type": 1,
    "title": "redis",
    "description": "Redis for use with gitlab.\n\tInstall this docker before installing the gitlab docker.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Redis for use with gitlab.\n\tInstall this docker before installing the gitlab docker.",
    "logo": "https://cdn4.iconfinder.com/data/icons/redis-2/1451/Untitled-2-128.png",
    "name": "redis",
    "image": "sameersbn/redis",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge"
  },
  {
    "type": 1,
    "title": "watchtower",
    "description": "Automatically update running Docker containers",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "Automatically update running Docker containers",
    "name": "watchtower",
    "image": "centurylink/watchtower",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/var/run/docker.sock",
        "bind": "/var/run/docker.sock"
      }
    ]
  },
  {
    "type": 1,
    "title": "glFTPd",
    "description": "glFTPd is a free FTP server for UNIX based systems. It is highly configurable and its possibilities are endless. One of the main differences between many other ftp servers and glFTPd is that it has its own user database which can be completely maintained online using ftp site commands.",
    "categories": [
      "Network:FTP"
    ],
    "platform": "linux",
    "note": "glFTPd is a free FTP server for UNIX based systems. It is highly configurable and its possibilities are endless. One of the main differences between many other ftp servers and glFTPd is that it has its own user database which can be completely maintained online using ftp site commands.",
    "name": "glFTPd",
    "image": "slrgde/glftpd",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/glftpd",
        "bind": "/mnt/user/appdata/glftpd"
      }
    ]
  },
  {
    "type": 1,
    "title": "AmazonEcho-HA-Bridge",
    "categories": [
      "HomeAutomation:"
    ],
    "platform": "linux",
    "logo": "https://www.cdrinfo.com/Images/Uploaded/Amazon_Echo_logo_120.jpg",
    "name": "AmazonEcho-HA-Bridge",
    "image": "aptalca/docker-amazon-echo-ha-bridge",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "Calibre-server",
    "description": "Calibre is an e-book management software. This docker app allows you to serve your e-books to remote clients through the web browser. Note: this is the server version, not the full GUI.",
    "categories": [
      "MediaServer:Books"
    ],
    "platform": "linux",
    "note": "Calibre is an e-book management software. This docker app allows you to serve your e-books to remote clients through the web browser. Note: this is the server version, not the full GUI.",
    "logo": "https://calibre-ebook.com/favicon.ico",
    "name": "Calibre-server",
    "image": "aptalca/docker-calibre",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "0:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "DigiKam",
    "description": "DigiKam is an advanced digital photo management application. The people who inspired digiKam's design are the photographers like you who want to view, manage, edit, enhance, organize, tag, and share photographs under Linux systems.",
    "categories": [
      "MediaApp:Photos",
      "MediaServer:Photos"
    ],
    "platform": "linux",
    "note": "DigiKam is an advanced digital photo management application. The people who inspired digiKam's design are the photographers like you who want to view, manage, edit, enhance, organize, tag, and share photographs under Linux systems.",
    "name": "DigiKam",
    "image": "aptalca/docker-digikam",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "0:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/pictures",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "WIDTH",
        "label": "WIDTH",
        "default": "1280"
      },
      {
        "name": "HEIGHT",
        "label": "HEIGHT",
        "default": "720"
      },
      {
        "name": "EDGE",
        "label": "EDGE",
        "default": "0"
      }
    ]
  },
  {
    "type": 1,
    "title": "Dockergui-dev",
    "description": "This docker opens a terminal window in the web browser. You can use it as a dev environment for docker web apps. The user is nobody and the password is PASSWD",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "This docker opens a terminal window in the web browser. You can use it as a dev environment for docker web apps. The user is nobody and the password is PASSWD",
    "logo": "https://upload.wikimedia.org/wikipedia/en/b/b0/Remote_desktop_connection_icon.PNG",
    "name": "Dockergui-dev",
    "image": "aptalca/docker-rdp-dev",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3389": "0:3389/tcp",
        "8080": "0:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/mnt",
        "bind": "/mnt/"
      }
    ]
  },
  {
    "type": 1,
    "title": "Dolphin",
    "description": "Dolphin is KDE's default file manager. With this docker, you can access the dolphin interface through a web browser.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Dolphin is KDE's default file manager. With this docker, you can access the dolphin interface through a web browser.",
    "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/Dolphin-icon.svg/500px-Dolphin-icon.svg.png",
    "name": "Dolphin",
    "image": "aptalca/docker-dolphin",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "0:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/mnt",
        "bind": "/mnt/"
      }
    ],
    "env": [
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      },
      {
        "name": "WIDTH",
        "label": "WIDTH",
        "default": "1280"
      },
      {
        "name": "HEIGHT",
        "label": "HEIGHT",
        "default": "720"
      },
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "Duckdns",
    "categories": [
      "Network:DNS"
    ],
    "platform": "linux",
    "note": "Duckdns is a free dynamic DNS service hosted on Amazon VPC. \n    Unlike most other free dynamic DNS providers, DuckDNS accounts do not require periodic user action to keep them alive. Visit www.duckdns.org to register your domain.",
    "logo": "https://www.duckdns.org/img/ducky_icon.png",
    "name": "Duckdns",
    "image": "aptalca/docker-duckdns",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "Home-Automation-Bridge",
    "description": "Bridge Amazon Echo with your home automation controller or Harmony Hub for voice control of connected devices (Vera and Harmony devices retrieved automatically)\n    This is a docker implementation of bwssystems' home automation bridge - https://github.com/bwssytems/ha-bridge",
    "categories": [
      "HomeAutomation:"
    ],
    "platform": "linux",
    "note": "Bridge Amazon Echo with your home automation controller or Harmony Hub for voice control of connected devices (Vera and Harmony devices retrieved automatically)\n    This is a docker implementation of bwssystems' home automation bridge - https://github.com/bwssytems/ha-bridge",
    "logo": "https://www.cdrinfo.com/Images/Uploaded/Amazon_Echo_logo_120.jpg",
    "name": "Home-Automation-Bridge",
    "image": "aptalca/home-automation-bridge",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "SERVERPORT",
        "label": "SERVERPORT",
        "default": "3080"
      },
      {
        "name": "SERVERIP",
        "label": "SERVERIP",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "JDownloader2",
    "description": "JDownloader is a free, open-source download management tool with a huge community of developers that makes downloading as easy and fast as it should be. Users can start, stop or pause downloads, set bandwith limitations, auto-extract archives and much more. It's an easy-to-extend framework that can save hours of your valuable time every day! \n    JDownloader 2 also has a webserver accessible through my.jdownloader.org",
    "categories": [
      "Cloud:",
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "JDownloader is a free, open-source download management tool with a huge community of developers that makes downloading as easy and fast as it should be. Users can start, stop or pause downloads, set bandwith limitations, auto-extract archives and much more. It's an easy-to-extend framework that can save hours of your valuable time every day! \n    JDownloader 2 also has a webserver accessible through my.jdownloader.org",
    "logo": "https://upload.wikimedia.org/wikipedia/commons/f/f7/Jdownloader.png",
    "name": "JDownloader2",
    "image": "aptalca/docker-jdownloader2",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "0:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "WIDTH",
        "label": "WIDTH",
        "default": "1280"
      },
      {
        "name": "HEIGHT",
        "label": "HEIGHT",
        "default": "720"
      }
    ]
  },
  {
    "type": 1,
    "title": "Nginx-letsencrypt",
    "categories": [
      "Network:Web",
      "Network:Proxy"
    ],
    "platform": "linux",
    "note": "Nginx based webserver with a built-in letsencrypt client that automates free SSL certificate generation and renewal processes. Also includes fail2ban for security.",
    "name": "Nginx-letsencrypt",
    "image": "aptalca/nginx-letsencrypt",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "OpenRemote-Controller",
    "description": "OpenRemote is software integration platform for residential and commercial building automation. OpenRemote allows you to create your own Android or iOS remote interfaces. \n    This docker app will host your custom remote interfaces. Please visit http://openremote.org/display/docs/Get+Started to get started and create your designer account.",
    "categories": [
      "HomeAutomation:"
    ],
    "platform": "linux",
    "note": "OpenRemote is software integration platform for residential and commercial building automation. OpenRemote allows you to create your own Android or iOS remote interfaces. \n    This docker app will host your custom remote interfaces. Please visit http://openremote.org/display/docs/Get+Started to get started and create your designer account.",
    "name": "OpenRemote-Controller",
    "image": "aptalca/docker-openremote",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "0:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "PlexRequests",
    "categories": [
      "Cloud:",
      "Downloaders:",
      "MediaServer:Video"
    ],
    "platform": "linux",
    "note": "Are people constantly asking you to add new content to your Plex Server? Frequent late night texts asking for a new release that's not out yet? Wouldn't it be easier to just send them to a website where they could submit their requests? Enter Plex Requests!",
    "logo": "https://i.imgur.com/4RhSj6J.png",
    "name": "PlexRequests",
    "image": "aptalca/docker-plexrequests",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "RDP-Boinc",
    "description": "BOINC lets you contribute computing power on your home PC to projects doing research in many scientific areas. You can contribute to a single project, or to any combination of them. RDP-Boinc is a docker for the BOINC manager and client that can be accessed through RDP.",
    "categories": [
      "Other:"
    ],
    "platform": "linux",
    "note": "BOINC lets you contribute computing power on your home PC to projects doing research in many scientific areas. You can contribute to a single project, or to any combination of them. RDP-Boinc is a docker for the BOINC manager and client that can be accessed through RDP.",
    "logo": "https://boinc.berkeley.edu/logo/boinc_logo_128_trans.png",
    "name": "RDP-Boinc",
    "image": "aptalca/docker-rdp-boinc",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "0:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "WIDTH",
        "label": "WIDTH",
        "default": "1280"
      },
      {
        "name": "HEIGHT",
        "label": "HEIGHT",
        "default": "720"
      }
    ]
  },
  {
    "type": 1,
    "title": "RDP-Calibre",
    "description": "Calibre is an e-book management software. RDP-Calibre is a combo docker for calibre web server and gui (through webRDP). With this docker, you get the best of both worlds, and they both use the same database.",
    "categories": [
      "MediaApp:Books",
      "MediaServer:Books"
    ],
    "platform": "linux",
    "note": "Calibre is an e-book management software. RDP-Calibre is a combo docker for calibre web server and gui (through webRDP). With this docker, you get the best of both worlds, and they both use the same database.",
    "logo": "https://calibre-ebook.com/favicon.ico",
    "name": "RDP-Calibre",
    "image": "aptalca/docker-rdp-calibre",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "0:8080/tcp",
        "8081": "0:8081/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "EDGE",
        "label": "EDGE",
        "default": "0"
      },
      {
        "name": "WIDTH",
        "label": "WIDTH",
        "default": "1280"
      },
      {
        "name": "HEIGHT",
        "label": "HEIGHT",
        "default": "720"
      }
    ]
  },
  {
    "type": 1,
    "title": "Zoneminder",
    "categories": [
      "HomeAutomation:",
      "MediaApp:Video",
      "MediaServer:Video",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "ZoneMinder is the top Linux video camera security and surveillance solution. This container installs the older version 1.28",
    "name": "Zoneminder",
    "image": "aptalca/docker-zoneminder",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "Zoneminder-1_29",
    "description": "Zoneminder is the top Linux video camera security and surveillance solution. ZoneMinder is intended for use in single or multi-camera video security applications, including commercial or home CCTV, theft prevention and child, family member or home monitoring and other domestic care scenarios such as nanny cam installations. It supports capture, analysis, recording, and monitoring of video data coming from one or more video or network cameras attached to a Linux system. ZoneMinder also support web and semi-automatic control of Pan/Tilt/Zoom cameras using a variety of protocols. It is suitable for use as a DIY home video security system and for commercial or professional video security and surveillance. It can also be integrated into a home automation system via X.10 or other protocols. If you're looking for a low cost CCTV system or a more flexible alternative to cheap DVR systems then why not give ZoneMinder a try?",
    "categories": [
      "HomeAutomation:",
      "MediaApp:Video",
      "MediaServer:Video",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Zoneminder is the top Linux video camera security and surveillance solution. ZoneMinder is intended for use in single or multi-camera video security applications, including commercial or home CCTV, theft prevention and child, family member or home monitoring and other domestic care scenarios such as nanny cam installations. It supports capture, analysis, recording, and monitoring of video data coming from one or more video or network cameras attached to a Linux system. ZoneMinder also support web and semi-automatic control of Pan/Tilt/Zoom cameras using a variety of protocols. It is suitable for use as a DIY home video security system and for commercial or professional video security and surveillance. It can also be integrated into a home automation system via X.10 or other protocols. If you're looking for a low cost CCTV system or a more flexible alternative to cheap DVR systems then why not give ZoneMinder a try?",
    "name": "Zoneminder-1_29",
    "image": "aptalca/zoneminder-1.29",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "0:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "HandBrake",
    "description": "HandBrake is a video encoder. Connect using an RDP client or web browser, or use the fully automated watch folder.",
    "categories": [
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "HandBrake is a video encoder. Connect using an RDP client or web browser, or use the fully automated watch folder.",
    "logo": "https://raw.githubusercontent.com/coppit/docker-handbrake/master/handbrake_logo.png",
    "name": "HandBrake",
    "image": "coppit/handbrake",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3389": "3389:3389/tcp",
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/media",
        "bind": ""
      },
      {
        "container": "/watch",
        "bind": ""
      },
      {
        "container": "/output",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "HEIGHT",
        "label": "HEIGHT",
        "default": "720"
      },
      {
        "name": "WIDTH",
        "label": "WIDTH",
        "default": "1280"
      }
    ]
  },
  {
    "type": 1,
    "title": "inotify-command",
    "description": "Run a command when a directory changes.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Run a command when a directory changes.",
    "logo": "https://raw.githubusercontent.com/coppit/docker-inotify-command/master/terminal-icon.png",
    "name": "inotify-command",
    "image": "coppit/inotify-command",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/dir1",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "UMAP",
        "label": "UMAP",
        "default": "nobody:99:100"
      },
      {
        "name": "GMAP",
        "label": "GMAP",
        "default": "users:100"
      }
    ]
  },
  {
    "type": 1,
    "title": "NoIp",
    "description": "No-Ip is a dynamic DNS service, with a free tier supporting up to three domain names. Unfortunately, those domain\n    names have to be renewed periodically. This container implements the new noip2 protocol, which uses a noip client\n    provided by no-ip.com.",
    "categories": [
      "Network:DNS"
    ],
    "platform": "linux",
    "note": "No-Ip is a dynamic DNS service, with a free tier supporting up to three domain names. Unfortunately, those domain\n    names have to be renewed periodically. This container implements the new noip2 protocol, which uses a noip client\n    provided by no-ip.com.",
    "logo": "https://raw.githubusercontent.com/coppit/docker-no-ip/master/no-ip-hernandito.png",
    "name": "NoIp",
    "image": "coppit/no-ip",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Xeoma",
    "description": "Xeoma is surveillance software. Connect your cameras and record any detected movement.",
    "categories": [
      "HomeAutomation:",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "Xeoma is surveillance software. Connect your cameras and record any detected movement.",
    "logo": "https://raw.githubusercontent.com/coppit/docker-xeoma/master/xeoma.png",
    "name": "Xeoma",
    "image": "coppit/xeoma",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "10090": "10090:10090/tcp",
        "8090": "8090:8090/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/archive",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Apache-PHP",
    "description": "Modification of CHMB and smbion by Hernando, which is a Apache based web server set up to act as a proxy with basic PHP web server capabilities, modifications are simply the addition of php5-gd, php5-sqlite, php5-intl, addition of a books volume to enable Calibre OPDS PHP Server support, which will allow you to access your Ebook library from Calibre over the web, and automatically email books to your Kindle.  http://blog.slucas.fr/en/oss/calibre-opds-php-server",
    "categories": [
      "Network:Web"
    ],
    "platform": "linux",
    "note": "Modification of CHMB and smbion by Hernando, which is a Apache based web server set up to act as a proxy with basic PHP web server capabilities, modifications are simply the addition of php5-gd, php5-sqlite, php5-intl, addition of a books volume to enable Calibre OPDS PHP Server support, which will allow you to access your Ebook library from Calibre over the web, and automatically email books to your Kindle.  http://blog.slucas.fr/en/oss/calibre-opds-php-server",
    "name": "Apache-PHP",
    "image": "hernandito/hernando-apachephp-docker",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "444:443/tcp",
        "80": "81:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/web",
        "bind": "/mnt/user/appdata/apache/www/"
      },
      {
        "container": "/logs",
        "bind": "/mnt/user/appdata/apache/logs/"
      },
      {
        "container": "/etc/localtime",
        "bind": "/etc/localtime"
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/apache/config/"
      }
    ]
  },
  {
    "type": 1,
    "title": "Apache-PHP-Adminer",
    "description": "Modification of CHMB and smbion by Hernando, which is a Apache based web server set up to act as a proxy with Adminer (PHPMyAdmin type databse manager) and with basic PHP web server capabilities, modifications are simply the addition of php5-gd, php5-sqlite, php5-intl, addition of a books volume to enable Calibre OPDS PHP Server support, which will allow you to access your Ebook library from Calibre over the web, and automatically email books to your Kindle.  http://blog.slucas.fr/en/oss/calibre-opds-php-server",
    "categories": [
      "Network:Web"
    ],
    "platform": "linux",
    "note": "Modification of CHMB and smbion by Hernando, which is a Apache based web server set up to act as a proxy with Adminer (PHPMyAdmin type databse manager) and with basic PHP web server capabilities, modifications are simply the addition of php5-gd, php5-sqlite, php5-intl, addition of a books volume to enable Calibre OPDS PHP Server support, which will allow you to access your Ebook library from Calibre over the web, and automatically email books to your Kindle.  http://blog.slucas.fr/en/oss/calibre-opds-php-server",
    "logo": "https://i.imgur.com/A1AQVll.png",
    "name": "Apache-PHP-Adminer",
    "image": "hernandito/docker-apache-php-adminer",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "444:443/tcp",
        "80": "81:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/apache/config/"
      },
      {
        "container": "/web",
        "bind": "/mnt/user/appdata/apache/www/"
      },
      {
        "container": "/web/adminer",
        "bind": "/mnt/user/appdata/apache/www/adminer/"
      },
      {
        "container": "/logs",
        "bind": "/mnt/user/appdata/apache/logs/"
      },
      {
        "container": "/etc/localtime",
        "bind": "/etc/localtime"
      }
    ]
  },
  {
    "type": 1,
    "title": "Calibre-Server2",
    "description": "Calibre is an e-book management software.",
    "categories": [
      "Network:Web",
      "MediaServer:Books"
    ],
    "platform": "linux",
    "note": "Calibre is an e-book management software.",
    "logo": "https://i.imgur.com/aHH93FG.png",
    "name": "Calibre-Server2",
    "image": "hernandito/calibreserver-docker",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/Dropbox/Calibre/"
      },
      {
        "container": "/opt/calibre",
        "bind": "/mnt/user/appdata/calibre/"
      },
      {
        "container": "/downloads",
        "bind": "/mnt/user/downloads/"
      }
    ],
    "env": [
      {
        "name": "CALUSER",
        "label": "CALUSER",
        "default": "hernando"
      },
      {
        "name": "CALPASSWORD",
        "label": "CALPASSWORD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "MineOS",
    "description": "MineOS is an easy to manage Minecraft Server. It has its on web interface to manage all aspects of the server.",
    "categories": [
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "MineOS is an easy to manage Minecraft Server. It has its on web interface to manage all aspects of the server.",
    "logo": "https://i.imgur.com/P6RRtHH.png",
    "name": "MineOS",
    "image": "yujiod/minecraft-mineos",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "25565": "25565:25565/tcp",
        "8443": "8443:8443/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/games/minecraft",
        "bind": "/mnt/appdata/minecraftos/"
      }
    ],
    "env": [
      {
        "name": "PASSWORD",
        "label": "PASSWORD",
        "default": "minecraft"
      }
    ]
  },
  {
    "type": 1,
    "title": "ResourceSpace",
    "description": "ResopurceSpace DAM server software. This is a modification of CHBMB and smdion by Hernando",
    "categories": [
      "Network:Web",
      "MediaServer:Photos"
    ],
    "platform": "linux",
    "note": "ResopurceSpace DAM server software. This is a modification of CHBMB and smdion by Hernando",
    "logo": "https://i.imgur.com/4o1lc5Q.png",
    "name": "ResourceSpace",
    "image": "hernandito/docker-resourcespace",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "444:443/tcp",
        "80": "8112:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/resourcespace/config/"
      },
      {
        "container": "/web",
        "bind": "/mnt/user/appdata/resourcespace/www/"
      },
      {
        "container": "/logs",
        "bind": "/mnt/user/appdata/resourcespace/logs/"
      },
      {
        "container": "/etc/localtime",
        "bind": "/etc/localtime"
      }
    ]
  },
  {
    "type": 1,
    "title": "TinyMM-CLI",
    "description": "Tiny Media Manager  CLI with Cron.",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "Tiny Media Manager  CLI with Cron.",
    "logo": "https://i.imgur.com/M5Io6sF.png",
    "name": "TinyMM-CLI",
    "image": "coolasice1999/tmm-cli-cronjob:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5800": "5800:5800/tcp",
        "5801": "5801:5801/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/media",
        "bind": "/mnt/user/Media/"
      },
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/tmm/config/"
      }
    ],
    "env": [
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "0"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "GUID",
        "label": "GUID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      }
    ]
  },
  {
    "type": 1,
    "title": "TinyMM",
    "description": "Tiny Media Manager.",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "Tiny Media Manager.",
    "logo": "https://i.imgur.com/CU1cNL6.png",
    "name": "TinyMM",
    "image": "coolasice1999/tmm:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5800": "5800:5800/tcp",
        "5900": "5900:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/media",
        "bind": "/mnt/user/Media/"
      },
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/tmm/config/"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "0"
      },
      {
        "name": "TZ",
        "label": "TZ",
        "default": "America/NewYork"
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "1380"
      },
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1200"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "GUID",
        "label": "GUID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Quassel-core",
    "description": "Quassel IRC is a modern, cross-platform, distributed IRC client based on the Qt4 framework.",
    "categories": [
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "Quassel IRC is a modern, cross-platform, distributed IRC client based on the Qt4 framework.",
    "logo": "https://i.imgur.com/UM4EqsF.png",
    "name": "Quassel-core",
    "image": "xamindar/quassel-core",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "4242": "4242:4242/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "SSL_NAME",
        "label": "SSL_NAME",
        "default": "Bob"
      },
      {
        "name": "SSL_EMAIL",
        "label": "SSL_EMAIL",
        "default": "unraid@unraid.org"
      },
      {
        "name": "SSL_COUNTRY",
        "label": "SSL_COUNTRY",
        "default": "WE"
      },
      {
        "name": "SSL_STATE",
        "label": "SSL_STATE",
        "default": "Kings Landing"
      },
      {
        "name": "SSL_LOCATION",
        "label": "SSL_LOCATION",
        "default": "Castle"
      },
      {
        "name": "SSL_ORG",
        "label": "SSL_ORG",
        "default": "Stark"
      },
      {
        "name": "SSL_GROUP",
        "label": "SSL_GROUP",
        "default": "Bannermen"
      }
    ]
  },
  {
    "type": 1,
    "title": "Syncthing",
    "description": "Syncthing replaces proprietary sync and cloud services with something open, trustworthy and decentralized. Your data is your data alone and you deserve to choose where it is stored, if it is shared with some third party and how it's transmitted over the Internet.",
    "categories": [
      "Backup:",
      "Cloud:",
      "Network:Other",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Syncthing replaces proprietary sync and cloud services with something open, trustworthy and decentralized. Your data is your data alone and you deserve to choose where it is stored, if it is shared with some third party and how it's transmitted over the Internet.",
    "logo": "https://i.imgur.com/xTw0Ci8.png",
    "name": "Syncthing",
    "image": "xamindar/syncthing",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "21027": "21027:21027/udp",
        "22000": "22000:22000/tcp",
        "8384": "8384:8384/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/syncfolders",
        "bind": "/mnt/user/syncthing"
      }
    ],
    "env": [
      {
        "name": "DISCOVERY_SVR_ENABLED",
        "label": "DISCOVERY_SVR_ENABLED",
        "default": "no"
      },
      {
        "name": "RELAY_GLOBAL_RATE",
        "label": "RELAY_GLOBAL_RATE",
        "default": "125000000"
      },
      {
        "name": "RELAY_SESSION_RATE",
        "label": "RELAY_SESSION_RATE",
        "default": "125000000"
      },
      {
        "name": "RELAY_NETWORK_TIMEOUT",
        "label": "RELAY_NETWORK_TIMEOUT",
        "default": "2m0s"
      },
      {
        "name": "RELAY_PING_INTERVAL",
        "label": "RELAY_PING_INTERVAL",
        "default": "1m0s"
      },
      {
        "name": "SYNCTHING_ENABLED",
        "label": "SYNCTHING_ENABLED",
        "default": "yes"
      },
      {
        "name": "RELAY_POOL",
        "label": "RELAY_POOL",
        "default": "https://relays.syncthing.net/endpoint"
      },
      {
        "name": "RELAY_MESSAGE_TIMEOUT",
        "label": "RELAY_MESSAGE_TIMEOUT",
        "default": "1m0s"
      },
      {
        "name": "RELAY_SVR_ENABLED",
        "label": "RELAY_SVR_ENABLED",
        "default": "no"
      }
    ]
  },
  {
    "type": 1,
    "title": "BackupSQL",
    "description": "Cron backup of MySQL database.\r\nPleasae specify:\r\nIP of the SQL server.\r\nCron parameters\r\nPushbullet token\r\nNumber of backup copies",
    "categories": [
      "Backup:"
    ],
    "platform": "linux",
    "note": "Cron backup of MySQL database.\r\nPleasae specify:\r\nIP of the SQL server.\r\nCron parameters\r\nPushbullet token\r\nNumber of backup copies",
    "logo": "https://raw.githubusercontent.com/soana/backupsql/master/BackupSQL-icon.png",
    "name": "BackupSQL",
    "image": "soana/backupsql",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/backup",
        "bind": "/mnt/user/appdata/MySQL/Backup/"
      }
    ],
    "env": [
      {
        "name": "TOKEN",
        "label": "TOKEN",
        "default": "xxxxxxxxxxxxxxxxx"
      },
      {
        "name": "MySQLIP",
        "label": "MySQLIP",
        "default": "192.168.99.99"
      },
      {
        "name": "SQL_userid",
        "label": "SQL_userid",
        "default": "xbmc"
      },
      {
        "name": "SQL_pwd",
        "label": "SQL_pwd",
        "default": "xbmc"
      },
      {
        "name": "bkpMinute",
        "label": "bkpMinute",
        "default": "0"
      },
      {
        "name": "bkpHour",
        "label": "bkpHour",
        "default": "3"
      },
      {
        "name": "bkpDayOfMonth",
        "label": "bkpDayOfMonth",
        "default": "*"
      },
      {
        "name": "bkpMonth",
        "label": "bkpMonth",
        "default": "*"
      },
      {
        "name": "bkpDayOfWeek",
        "label": "bkpDayOfWeek",
        "default": "*"
      },
      {
        "name": "BackupCopies",
        "label": "BackupCopies",
        "default": "7"
      }
    ]
  },
  {
    "type": 1,
    "title": "MythTVhb",
    "categories": [
      "Backup:"
    ],
    "platform": "linux",
    "note": "Adds Handbrake to Sparklyballs container",
    "logo": "https://i.imgur.com/8co6Sip.png",
    "name": "MythTVhb",
    "image": "soana/mythtvhb",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "CloudFlare",
    "description": "CloudFlare is a free DNS host that can act as a reverse proxy for websites. Its network protects, speeds up, and improves availability for a website or mobile application with a change in DNS.",
    "categories": [
      "Network:DNS"
    ],
    "platform": "linux",
    "note": "CloudFlare is a free DNS host that can act as a reverse proxy for websites. Its network protects, speeds up, and improves availability for a website or mobile application with a change in DNS.",
    "logo": "https://i.imgur.com/PKa3Sm2.png",
    "name": "CloudFlare",
    "image": "mace/cloudflare-ddns",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "env": [
      {
        "name": "CF_EMAIL",
        "label": "CF_EMAIL",
        "default": "your@cloudflare_email.com"
      },
      {
        "name": "CF_HOST",
        "label": "CF_HOST",
        "default": "sub.domain.com"
      },
      {
        "name": "CF_API",
        "label": "CF_API",
        "default": "a1b2c3d4e5"
      }
    ]
  },
  {
    "type": 1,
    "title": "DarkStat",
    "description": "Captures network traffic, calculates statistics about usage, and serves reports over HTTP.",
    "categories": [
      "Network:Management"
    ],
    "platform": "linux",
    "note": "Captures network traffic, calculates statistics about usage, and serves reports over HTTP.",
    "logo": "https://i.imgur.com/pa3eozo.png",
    "name": "DarkStat",
    "image": "mace/darkstat",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/config",
        "bind": "path to config"
      }
    ],
    "env": [
      {
        "name": "ETH",
        "label": "ETH",
        "default": "eth0"
      },
      {
        "name": "PORT",
        "label": "PORT",
        "default": "666"
      },
      {
        "name": "IP_HOST",
        "label": "IP_HOST",
        "default": "192.168.1.XXX"
      },
      {
        "name": "IP_RANGE",
        "label": "IP_RANGE",
        "default": "192.168.1.0/255.255.255.0"
      }
    ]
  },
  {
    "type": 1,
    "title": "DDclient",
    "description": "Ddclient is a Perl client used to update dynamic DNS entries for accounts on 'Dynamic DNS Network Services' free DNS service. It currently supports a lot of different routers and a few different services..\n    This version also had built in support for sending updates with a gmail account as relay.",
    "categories": [
      "Network:DNS"
    ],
    "platform": "linux",
    "note": "Ddclient is a Perl client used to update dynamic DNS entries for accounts on 'Dynamic DNS Network Services' free DNS service. It currently supports a lot of different routers and a few different services..\n    This version also had built in support for sending updates with a gmail account as relay.",
    "logo": "https://i.imgur.com/KQ9migV.png",
    "name": "DDclient",
    "image": "mace/ddclient",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "MAIL",
        "label": "MAIL",
        "default": "yes|no"
      }
    ]
  },
  {
    "type": 1,
    "title": "EAPcontroller",
    "description": "TP-LINK's free EAP Controller Software allows users to easily manage hundreds of TPLINK EAPs in multiple sites with the controller in a single location.",
    "categories": [
      "Network:Other"
    ],
    "platform": "linux",
    "note": "TP-LINK's free EAP Controller Software allows users to easily manage hundreds of TPLINK EAPs in multiple sites with the controller in a single location.",
    "logo": "https://raw.githubusercontent.com/macexx/docker-templates/master/images/tplink-icon.png",
    "name": "EAPcontroller",
    "image": "mace/eap-controller",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/EAPcontroller"
      }
    ]
  },
  {
    "type": 1,
    "title": "OpenVPN-AS",
    "description": "OpenVPN Access Server is a full featured secure network tunneling VPN software solution that integrates OpenVPN server capabilities, enterprise management capabilities, simplified OpenVPN Connect UI,\n        and OpenVPN Client software packages that accommodate Windows, MAC, Linux, Android, and iOS environments. OpenVPN Access Server supports a wide range of configurations,\n        including secure and granular remote access to internal network and/ or private cloud network resources and applications with fine-grained access control.\n        This version includes two free user licenses.",
    "categories": [
      "Network:Other"
    ],
    "platform": "linux",
    "note": "OpenVPN Access Server is a full featured secure network tunneling VPN software solution that integrates OpenVPN server capabilities, enterprise management capabilities, simplified OpenVPN Connect UI,\n        and OpenVPN Client software packages that accommodate Windows, MAC, Linux, Android, and iOS environments. OpenVPN Access Server supports a wide range of configurations,\n        including secure and granular remote access to internal network and/ or private cloud network resources and applications with fine-grained access control.\n        This version includes two free user licenses.",
    "logo": "https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/i/4e25af68-477c-491e-ba31-1495532a11e2/d5r1nls-8710d252-572f-4ae6-aa95-f722a8716555.png/v1/fill/w_256,h_256,q_75,strp/openvpn_icon_by_archeinre-d5r1nls.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwic3ViIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsImF1ZCI6WyJ1cm46c2VydmljZTppbWFnZS5vcGVyYXRpb25zIl0sIm9iaiI6W1t7InBhdGgiOiIvaS80ZTI1YWY2OC00NzdjLTQ5MWUtYmEzMS0xNDk1NTMyYTExZTIvZDVyMW5scy04NzEwZDI1Mi01NzJmLTRhZTYtYWE5NS1mNzIyYTg3MTY1NTUucG5nIiwid2lkdGgiOiI8PTI1NiIsImhlaWdodCI6Ijw9MjU2In1dXX0.lUmaMay9oRtXxhur8QBuy7PisgD8UVmNWRiKCugf2BE",
    "name": "OpenVPN-AS",
    "image": "mace/openvpn-as",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/config",
        "bind": "path to config"
      }
    ],
    "env": [
      {
        "name": "INTERFACE",
        "label": "INTERFACE",
        "default": "eth0"
      }
    ]
  },
  {
    "type": 1,
    "title": "qbittorrent",
    "description": "The qBittorrent project aims to provide a Free Software alternative to µTorrent. ,",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "The qBittorrent project aims to provide a Free Software alternative to µTorrent. ,",
    "logo": "https://raw.githubusercontent.com/macexx/docker-templates/master/images/qbittorrent_icon.png",
    "name": "qbittorrent",
    "image": "mace/qbittorrent",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6881": "6881:6881/tcp",
        "8082": "8082:8082/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "path to config"
      },
      {
        "container": "/downloads",
        "bind": "path for downloads"
      },
      {
        "container": "/watched",
        "bind": "path for watched"
      }
    ],
    "env": [
      {
        "name": "AUSER",
        "label": "AUSER",
        "default": "99"
      },
      {
        "name": "AGROUP",
        "label": "AGROUP",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "PlexMediaServer",
    "description": "The Plex Media Server enriches your life by organizing all your personal media, presenting it beautifully and streaming it to all of your devices. It's easy to use, it's awesome, and it's free!",
    "categories": [
      "MediaApp:Video",
      "MediaApp:Music",
      "MediaApp:Photos",
      "MediaServer:Video",
      "MediaServer:Music",
      "MediaServer:Photos"
    ],
    "platform": "linux",
    "note": "The Plex Media Server enriches your life by organizing all your personal media, presenting it beautifully and streaming it to all of your devices. It's easy to use, it's awesome, and it's free!",
    "logo": "https://d2631fvi2jdnb6.cloudfront.net/docker/limetech/plex.png",
    "name": "PlexMediaServer",
    "image": "limetech/plex",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/PlexMediaServer"
      }
    ]
  },
  {
    "type": 1,
    "title": "Sync",
    "description": "BitTorrent Sync, or simply - Sync - is an application for data synchronization. Its primary goal is to keep designated folder content same on 2 or more devices / computers. As soon as something changes on one computer, change (would it be changed content of a file, file renaming or deletion, etc.) should be propagated to all other computer(s) that want to keep the folder synchronized. Sync is available for a bunch of platforms, both desktop and mobile, which gives a good usage flexibility.",
    "categories": [
      "Cloud:"
    ],
    "platform": "linux",
    "note": "BitTorrent Sync, or simply - Sync - is an application for data synchronization. Its primary goal is to keep designated folder content same on 2 or more devices / computers. As soon as something changes on one computer, change (would it be changed content of a file, file renaming or deletion, etc.) should be propagated to all other computer(s) that want to keep the folder synchronized. Sync is available for a bunch of platforms, both desktop and mobile, which gives a good usage flexibility.",
    "logo": "https://d2631fvi2jdnb6.cloudfront.net/docker/limetech/sync.png",
    "name": "Sync",
    "image": "limetech/sync",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3838": "3838:3838/udp",
        "5555": "5555:5555/tcp",
        "8888": "8888:8888/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/Sync"
      }
    ]
  },
  {
    "type": 1,
    "title": "airsonic",
    "description": "Airsonic is a free, web-based media streamer, providing ubiqutious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.",
    "categories": [
      "MediaApp:Music",
      "MediaServer:Music"
    ],
    "platform": "linux",
    "note": "Airsonic is a free, web-based media streamer, providing ubiqutious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/airsonic-logo.png",
    "name": "airsonic",
    "image": "linuxserver/airsonic",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "4040": "4040:4040/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/music",
        "bind": ""
      },
      {
        "container": "/playlists",
        "bind": ""
      },
      {
        "container": "/podcasts",
        "bind": ""
      },
      {
        "container": "/media",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/airsonic"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "CONTEXT_PATH",
        "label": "CONTEXT_PATH",
        "default": "airsonic"
      },
      {
        "name": "JAVA_OPTS",
        "label": "JAVA_OPTS",
        "default": "-Xms256m -Xmx512m"
      }
    ]
  },
  {
    "type": 1,
    "title": "bazarr",
    "description": "Bazarr is a companion application to Sonarr and Radarr. It can manage and download subtitles based on your requirements. You define your preferences by TV show or movie and Bazarr takes care of everything for you.",
    "categories": [
      "Downloaders:",
      "Network:Other",
      "MediaApp:Video",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Bazarr is a companion application to Sonarr and Radarr. It can manage and download subtitles based on your requirements. You define your preferences by TV show or movie and Bazarr takes care of everything for you.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/bazarr.png",
    "name": "bazarr",
    "image": "linuxserver/bazarr",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6767": "6767:6767/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/movies",
        "bind": ""
      },
      {
        "container": "/tv",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "beets",
    "description": "The purpose of beets is to get your music collection right once and for all. It catalogs your collection, automatically improving its metadata as it goes using the MusicBrainz database. Then it provides a bouquet of tools for manipulating and accessing your music.",
    "categories": [
      "MediaApp:Music"
    ],
    "platform": "linux",
    "note": "The purpose of beets is to get your music collection right once and for all. It catalogs your collection, automatically improving its metadata as it goes using the MusicBrainz database. Then it provides a bouquet of tools for manipulating and accessing your music.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/beets-icon.png",
    "name": "beets",
    "image": "linuxserver/beets",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8337": "8337:8337/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/downloads",
        "bind": ""
      },
      {
        "container": "/music",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "boinc",
    "description": "\u003cspan style='color:#1fa67a; font-size:2rem;'\u003eHelp Fight COVID-19.\u0026nbsp;\u0026nbsp;\u003c/span\u003eBOINC is a platform for high-throughput computing on a large scale (thousands or millions of computers). It can be used for volunteer computing (using consumer devices) or grid computing (using organizational resources). It supports virtualized, parallel, and GPU-based applications.\r\n\r\nThis image includes both the boinc client and the manager; and does not require a separate manager instance.\r\n\r\nDefault username/password is abc/abc\r\n\r\nPlease see here for details on how to set your own password\r\nhttps://github.com/linuxserver/docker-boinc#application-setup",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "\u003cspan style='color:#1fa67a; font-size:2rem;'\u003eHelp Fight COVID-19.\u0026nbsp;\u0026nbsp;\u003c/span\u003eBOINC is a platform for high-throughput computing on a large scale (thousands or millions of computers). It can be used for volunteer computing (using consumer devices) or grid computing (using organizational resources). It supports virtualized, parallel, and GPU-based applications.\r\n\r\nThis image includes both the boinc client and the manager; and does not require a separate manager instance.\r\n\r\nDefault username/password is abc/abc\r\n\r\nPlease see here for details on how to set your own password\r\nhttps://github.com/linuxserver/docker-boinc#application-setup",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/boinc-icon.png",
    "name": "boinc",
    "image": "linuxserver/boinc",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "0:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "GUAC_USER",
        "label": "GUAC_USER",
        "default": ""
      },
      {
        "name": "GUAC_PASS",
        "label": "GUAC_PASS",
        "default": ""
      },
      {
        "name": "NVIDIA_VISIBLE_DEVICES",
        "label": "NVIDIA_VISIBLE_DEVICES",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "booksonic",
    "description": "Booksonic is a server and an app for streaming your audiobooks to any pc or android phone. Most of the functionality is also availiable on other platforms that have apps for subsonic",
    "categories": [
      "MediaApp:Books",
      "MediaApp:Other",
      "MediaServer:Books",
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "Booksonic is a server and an app for streaming your audiobooks to any pc or android phone. Most of the functionality is also availiable on other platforms that have apps for subsonic",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/booksonic.png",
    "name": "booksonic",
    "image": "linuxserver/booksonic",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "4040": "4040:4040/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/books",
        "bind": ""
      },
      {
        "container": "/podcast",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "CONTEXT_PATH",
        "label": "CONTEXT_PATH",
        "default": "booksonic"
      }
    ]
  },
  {
    "type": 1,
    "title": "booksonic-air",
    "description": "Booksonic-air is a platform for accessing the audibooks you own wherever you are. At the moment the platform consists of:\r\n\r\n Booksonic Air - A server for streaming your audiobooks, successor to the original Booksonic server, and based on Airsonic. \r\n\r\nBooksonic App - An DSub based Android app for connection to Booksonic-Air servers.",
    "categories": [
      "MediaApp:Books",
      "MediaApp:Other",
      "MediaServer:Books",
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "Booksonic-air is a platform for accessing the audibooks you own wherever you are. At the moment the platform consists of:\r\n\r\n Booksonic Air - A server for streaming your audiobooks, successor to the original Booksonic server, and based on Airsonic. \r\n\r\nBooksonic App - An DSub based Android app for connection to Booksonic-Air servers.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/booksonic-air.png",
    "name": "booksonic-air",
    "image": "linuxserver/booksonic-air",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "4040": "4040:4040/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/books",
        "bind": ""
      },
      {
        "container": "/podcast",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "CONTEXT_PATH",
        "label": "CONTEXT_PATH",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "bookstack",
    "description": "Bookstack is a free and open source Wiki designed for creating beautiful documentation. Feautring a simple, but powerful WYSIWYG editor it allows for teams to create detailed and useful documentation with ease.\r\nA database server is needed.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Bookstack is a free and open source Wiki designed for creating beautiful documentation. Feautring a simple, but powerful WYSIWYG editor it allows for teams to create detailed and useful documentation with ease.\r\nA database server is needed.",
    "logo": "https://camo.githubusercontent.com/bc396d418b9da24e78f541bf221d8cc64b47c033/68747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f6c696e75787365727665722d646f63732f696d616765732f626f6f6b737461636b2d6c6f676f353030783530302e706e67",
    "name": "bookstack",
    "image": "linuxserver/bookstack",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "0:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "DB_DATABASE",
        "label": "DB_DATABASE",
        "default": ""
      },
      {
        "name": "APP_URL",
        "label": "APP_URL",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "DB_HOST",
        "label": "DB_HOST",
        "default": ""
      },
      {
        "name": "DB_USER",
        "label": "DB_USER",
        "default": ""
      },
      {
        "name": "DB_PASS",
        "label": "DB_PASS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "calibre",
    "description": "Calibre is a powerful and easy to use e-book manager. Users say it’s outstanding and a must-have. It’ll allow you to do nearly everything and it takes things a step beyond normal e-book software. It’s also completely free and open source and great for both casual users and computer experts.\r\n\r\nDefault username/password is abc/abc\r\n\r\nPlease see here for details on how to set your own password\r\nhttps://github.com/linuxserver/docker-calibre#application-setup",
    "categories": [
      "Tools:Utilities",
      "MediaApp:Books",
      "MediaServer:Books"
    ],
    "platform": "linux",
    "note": "Calibre is a powerful and easy to use e-book manager. Users say it’s outstanding and a must-have. It’ll allow you to do nearly everything and it takes things a step beyond normal e-book software. It’s also completely free and open source and great for both casual users and computer experts.\r\n\r\nDefault username/password is abc/abc\r\n\r\nPlease see here for details on how to set your own password\r\nhttps://github.com/linuxserver/docker-calibre#application-setup",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/calibre-icon.png",
    "name": "calibre",
    "image": "linuxserver/calibre",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "0:8080/tcp",
        "8081": "0:8081/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/books",
        "bind": ""
      },
      {
        "container": "/import",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "GUAC_USER",
        "label": "GUAC_USER",
        "default": ""
      },
      {
        "name": "GUAC_PASS",
        "label": "GUAC_PASS",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "calibre-web",
    "description": "Calibre Web is a web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database.",
    "categories": [
      "Cloud:",
      "MediaApp:Books",
      "MediaServer:Books"
    ],
    "platform": "linux",
    "note": "Calibre Web is a web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/calibre-web-icon.png",
    "name": "calibre-web",
    "image": "linuxserver/calibre-web",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8083": "8083:8083/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/books",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": "/mnt/disks/virtualisation/appdata/calibre-web"
      }
    ],
    "env": [
      {
        "name": "DOCKER_MODS",
        "label": "DOCKER_MODS",
        "default": "linuxserver/calibre-web:calibre"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "cardigann",
    "description": "Cardigann, a server for adding extra indexers to Sonarr, SickRage and CouchPotato via Torznab and TorrentPotato proxies. Behind the scenes Cardigann logs in and runs searches and then transforms the results into a compatible format.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "Cardigann, a server for adding extra indexers to Sonarr, SickRage and CouchPotato via Torznab and TorrentPotato proxies. Behind the scenes Cardigann logs in and runs searches and then transforms the results into a compatible format.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/cardigann.png",
    "name": "cardigann",
    "image": "linuxserver/cardigann",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5060": "5060:5060/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "chevereto",
    "description": "Chevereto is an image hosting software that allows you to create a beautiful and full-featured image hosting website on your own server. \n    It's your hosting and your rules, so say goodbye to closures and restrictions.",
    "categories": [
      "MediaApp:Photos"
    ],
    "platform": "linux",
    "note": "Chevereto is an image hosting software that allows you to create a beautiful and full-featured image hosting website on your own server. \n    It's your hosting and your rules, so say goodbye to closures and restrictions.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/chevereto.png",
    "name": "chevereto",
    "image": "linuxserver/chevereto",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "443": "443:443/tcp",
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "clarkson",
    "description": "Clarkson is a web-based dashboard application that gives you a neat and clean interface for logging your fuel fill-ups for all of your vehicles. The application has full multi-user support, as well as multiple vehicles per user. Whenever you fill-up your car or motorcycle, keep the receipt and record the data in Clarkson.",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "Clarkson is a web-based dashboard application that gives you a neat and clean interface for logging your fuel fill-ups for all of your vehicles. The application has full multi-user support, as well as multiple vehicles per user. Whenever you fill-up your car or motorcycle, keep the receipt and record the data in Clarkson.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/clarkson-logo.png",
    "name": "clarkson",
    "image": "linuxserver/clarkson",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3000": "0:3000/tcp"
      }
    ],
    "env": [
      {
        "name": "MYSQL_HOST",
        "label": "MYSQL_HOST",
        "default": ""
      },
      {
        "name": "MYSQL_USERNAME",
        "label": "MYSQL_USERNAME",
        "default": ""
      },
      {
        "name": "MYSQL_PASSWORD",
        "label": "MYSQL_PASSWORD",
        "default": ""
      },
      {
        "name": "ENABLE_REGISTRATIONS",
        "label": "ENABLE_REGISTRATIONS",
        "default": "true"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "cloud9",
    "description": "Cloud9 is a complete web based IDE with terminal access. This container is for running their core SDK locally and developing plugins.Several branches are available with different development environments pre-installed.latest = Docker and Compose environment preinstalledgo = Basic GoLang environment preinstallednodejs = Current stable NodeJS/NPM environment preinstalledpython = Current python3 environment preinstalledruby = Current Ruby environment preinstalled",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Cloud9 is a complete web based IDE with terminal access. This container is for running their core SDK locally and developing plugins.Several branches are available with different development environments pre-installed.latest = Docker and Compose environment preinstalledgo = Basic GoLang environment preinstallednodejs = Current stable NodeJS/NPM environment preinstalledpython = Current python3 environment preinstalledruby = Current Ruby environment preinstalled",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/cloud9-logo.png",
    "name": "cloud9",
    "image": "linuxserver/cloud9",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8000": "0:8000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/run/docker.sock",
        "bind": "/var/run/docker.sock"
      },
      {
        "container": "/code",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "GITURL",
        "label": "GITURL",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "code-server",
    "description": "Code-server is VS Code running on a remote server, accessible through the browser.Code on your Chromebook, tablet, and laptop with a consistent dev environment.If you have a Windows or Mac workstation, more easily develop for Linux.Take advantage of large cloud servers to speed up tests, compilations, downloads, and more.Preserve battery life when you're on the go.All intensive computation runs on your server.You're no longer running excess instances of Chrome.Click here for first time set up details",
    "categories": [
      "Cloud:",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Code-server is VS Code running on a remote server, accessible through the browser.Code on your Chromebook, tablet, and laptop with a consistent dev environment.If you have a Windows or Mac workstation, more easily develop for Linux.Take advantage of large cloud servers to speed up tests, compilations, downloads, and more.Preserve battery life when you're on the go.All intensive computation runs on your server.You're no longer running excess instances of Chrome.Click here for first time set up details",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/code-server.png",
    "name": "code-server",
    "image": "linuxserver/code-server",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8443": "0:8443/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PASSWORD",
        "label": "PASSWORD",
        "default": ""
      },
      {
        "name": "SUDO_PASSWORD",
        "label": "SUDO_PASSWORD",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "codiad",
    "description": "Codiad is a web-based IDE framework with a small footprint and minimal requirements.",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "Codiad is a web-based IDE framework with a small footprint and minimal requirements.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/codiad-icon.png",
    "name": "codiad",
    "image": "linuxserver/codiad",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "8088:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "codimd",
    "description": "Codimd gives you access to all your files wherever you are.CodiMD is a real-time, multi-platform collaborative markdown note editor. This means that you can write notes with other people on your desktop, tablet or even on the phone. You can sign-in via multiple auth providers like Facebook, Twitter, GitHub and many more on the homepage.You can add extra environmental parameters for more granular control.  Read the docs here:.https://github.com/linuxserver/docker-codimd#parameters",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Codimd gives you access to all your files wherever you are.CodiMD is a real-time, multi-platform collaborative markdown note editor. This means that you can write notes with other people on your desktop, tablet or even on the phone. You can sign-in via multiple auth providers like Facebook, Twitter, GitHub and many more on the homepage.You can add extra environmental parameters for more granular control.  Read the docs here:.https://github.com/linuxserver/docker-codimd#parameters",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/codimd-icon.png",
    "name": "codimd",
    "image": "linuxserver/codimd",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3000": "3000:3000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "DB_PASS",
        "label": "DB_PASS",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "DB_HOST",
        "label": "DB_HOST",
        "default": "mariadb"
      },
      {
        "name": "DB_PORT",
        "label": "DB_PORT",
        "default": "3306"
      },
      {
        "name": "DB_NAME",
        "label": "DB_NAME",
        "default": ""
      },
      {
        "name": "DB_USER",
        "label": "DB_USER",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "cops",
    "description": "COPS links to your Calibre library database and allows downloading and emailing of books directly from a web browser and provides a OPDS feed to connect to your devices.",
    "categories": [
      "Cloud:",
      "MediaApp:Books",
      "MediaServer:Books"
    ],
    "platform": "linux",
    "note": "COPS links to your Calibre library database and allows downloading and emailing of books directly from a web browser and provides a OPDS feed to connect to your devices.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/cops-icon.png",
    "name": "cops",
    "image": "linuxserver/cops",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/books",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "couchpotato",
    "description": "CouchPotato (CP) is an automatic NZB and torrent downloader. You can keep a \"movies I want\"-list and it will search for NZBs/torrents of these movies every X hours. Once a movie is found, it will send it to SABnzbd or download the torrent to a specified directory.",
    "categories": [
      "Downloaders:",
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "CouchPotato (CP) is an automatic NZB and torrent downloader. You can keep a \"movies I want\"-list and it will search for NZBs/torrents of these movies every X hours. Once a movie is found, it will send it to SABnzbd or download the torrent to a specified directory.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/couchpotato-icon.png",
    "name": "couchpotato",
    "image": "linuxserver/couchpotato",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5050": "5050:5050/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/downloads",
        "bind": ""
      },
      {
        "container": "/movies",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "daapd",
    "description": "DAAP (iTunes) media server with support for AirPlay devices, Apple Remote (and compatibles), MPD and internet radio.",
    "categories": [
      "MediaApp:Music",
      "MediaServer:Music"
    ],
    "platform": "linux",
    "note": "DAAP (iTunes) media server with support for AirPlay devices, Apple Remote (and compatibles), MPD and internet radio.",
    "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/daapd-icon.png",
    "name": "daapd",
    "image": "linuxserver/daapd",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/music",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "davos",
    "description": "davos is an FTP automation tool that periodically scans given host locations for new files. It can be configured for various purposes, including listening for specific files to appear in the host location, ready for it to download and then move, if required. It also supports completion notifications as well as downstream API calls, to further the workflow.\r\n\r\n/config : AppData Location\r\n/download : File Download Location",
    "categories": [
      "Network:FTP",
      "Network:Other",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "davos is an FTP automation tool that periodically scans given host locations for new files. It can be configured for various purposes, including listening for specific files to appear in the host location, ready for it to download and then move, if required. It also supports completion notifications as well as downstream API calls, to further the workflow.\r\n\r\n/config : AppData Location\r\n/download : File Download Location",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/davos.png",
    "name": "davos",
    "image": "linuxserver/davos",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8091:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/davos/"
      },
      {
        "container": "/download",
        "bind": "/mnt/user/Downloads/"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "ddclient",
    "description": "Ddclient is a Perl client used to update dynamic DNS entries for accounts on Dynamic DNS Network Service Provider. It was originally written by Paul Burry and is now mostly by wimpunk. It has the capability to update more than just dyndns and it can fetch your WAN-ipaddress in a few different ways.",
    "categories": [
      "Network:DNS"
    ],
    "platform": "linux",
    "note": "Ddclient is a Perl client used to update dynamic DNS entries for accounts on Dynamic DNS Network Service Provider. It was originally written by Paul Burry and is now mostly by wimpunk. It has the capability to update more than just dyndns and it can fetch your WAN-ipaddress in a few different ways.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ddclient-logo.png",
    "name": "ddclient",
    "image": "linuxserver/ddclient",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "deluge",
    "description": "Deluge is a lightweight, Free Software, cross-platform BitTorrent client providing: Full Encryption, WebUI, Plugin System, Much more...",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "Deluge is a lightweight, Free Software, cross-platform BitTorrent client providing: Full Encryption, WebUI, Plugin System, Much more...",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/deluge-icon.png",
    "name": "deluge",
    "image": "linuxserver/deluge",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/downloads",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UMASK_SET",
        "label": "UMASK_SET",
        "default": "000"
      }
    ]
  },
  {
    "type": 1,
    "title": "digikam",
    "description": "digiKam: Professional Photo Management with the Power of Open SourceBy default the user/pass is abc/abc",
    "categories": [
      "MediaApp:Photos"
    ],
    "platform": "linux",
    "note": "digiKam: Professional Photo Management with the Power of Open SourceBy default the user/pass is abc/abc",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/digikam.png",
    "name": "digikam",
    "image": "linuxserver/digikam",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "3000": "3000:3000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "dillinger",
    "description": "Dillinger is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Dillinger is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/dillinger-icon.png",
    "name": "dillinger",
    "image": "linuxserver/dillinger",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "0:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "diskover",
    "description": "diskover is a file system crawler and disk space usage software that uses Elasticsearch to index and manage data across heterogeneous storage systems.\r\nElasticsearch is needed for this container. Use 5.6.x.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "diskover is a file system crawler and disk space usage software that uses Elasticsearch to index and manage data across heterogeneous storage systems.\r\nElasticsearch is needed for this container. Use 5.6.x.",
    "logo": "https://raw.githubusercontent.com/shirosaidev/diskover/master/docs/diskover.png",
    "name": "diskover",
    "image": "linuxserver/diskover",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "8080:80/tcp",
        "9181": "9181:9181/tcp",
        "9999": "9999:9999/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/data",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "USE_CRON",
        "label": "USE_CRON",
        "default": "true"
      },
      {
        "name": "REDIS_PORT",
        "label": "REDIS_PORT",
        "default": "6379"
      },
      {
        "name": "ES_HOST",
        "label": "ES_HOST",
        "default": ""
      },
      {
        "name": "WORKER_OPTS",
        "label": "WORKER_OPTS",
        "default": ""
      },
      {
        "name": "RUN_ON_START",
        "label": "RUN_ON_START",
        "default": "true"
      },
      {
        "name": "DISKOVER_OPTS",
        "label": "DISKOVER_OPTS",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "REDIS_HOST",
        "label": "REDIS_HOST",
        "default": ""
      },
      {
        "name": "ES_PORT",
        "label": "ES_PORT",
        "default": "9200"
      },
      {
        "name": "ES_USER",
        "label": "ES_USER",
        "default": ""
      },
      {
        "name": "ES_PASS",
        "label": "ES_PASS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "dokuwiki",
    "description": "Dokuwiki is a simple to use and highly versatile Open Source wiki software that doesn't require a database. It is loved by users for its clean and readable syntax. The ease of maintenance, backup and integration makes it an administrator's favorite. Built in access controls and authentication connectors make DokuWiki especially useful in the enterprise context and the large number of plugins contributed by its vibrant community allow for a broad range of use cases beyond a traditional wiki.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Dokuwiki is a simple to use and highly versatile Open Source wiki software that doesn't require a database. It is loved by users for its clean and readable syntax. The ease of maintenance, backup and integration makes it an administrator's favorite. Built in access controls and authentication connectors make DokuWiki especially useful in the enterprise context and the large number of plugins contributed by its vibrant community allow for a broad range of use cases beyond a traditional wiki.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/dokuwiki-icon.png",
    "name": "dokuwiki",
    "image": "linuxserver/dokuwiki",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "0:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "domoticz",
    "description": "Domoticz is a Home Automation System that lets you monitor and configure various devices like: Lights, Switches, various sensors/meters like Temperature, Rain, Wind, UV, Electra, Gas, Water and much more. Notifications/Alerts can be sent to any mobile device",
    "categories": [
      "HomeAutomation:",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "Domoticz is a Home Automation System that lets you monitor and configure various devices like: Lights, Switches, various sensors/meters like Temperature, Rain, Wind, UV, Electra, Gas, Water and much more. Notifications/Alerts can be sent to any mobile device",
    "logo": "https://raw.githubusercontent.com/domoticz/domoticz/master/www/images/logo.png",
    "name": "domoticz",
    "image": "linuxserver/domoticz",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "1443": "1443:1443/tcp",
        "6144": "6144:6144/tcp",
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "doublecommander",
    "description": "Double Commander is a free cross platform open source file manager with two panels side by side. It is inspired by Total Commander and features some new ideas.\n    By default the user/pass is abc/abc",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Double Commander is a free cross platform open source file manager with two panels side by side. It is inspired by Total Commander and features some new ideas.\n    By default the user/pass is abc/abc",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/doublecommander-icon.png",
    "name": "doublecommander",
    "image": "linuxserver/doublecommander",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "3000": "3000:3000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "duckdns",
    "description": "Duck DNS is a free service which will point a DNS (sub domains of duckdns.org) to an IP of your choice. The service is completely free, and doesn't require reactivation or forum posts to maintain its existence.\r\n\r\nFirst, go to duckdns site, register your subdomain and retrieve your token\r\nThen run the docker create command above with your subdomain(s) and token\r\nIt will update your IP with the DuckDNS service every 5 minutes",
    "categories": [
      "Network:DNS",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Duck DNS is a free service which will point a DNS (sub domains of duckdns.org) to an IP of your choice. The service is completely free, and doesn't require reactivation or forum posts to maintain its existence.\r\n\r\nFirst, go to duckdns site, register your subdomain and retrieve your token\r\nThen run the docker create command above with your subdomain(s) and token\r\nIt will update your IP with the DuckDNS service every 5 minutes",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/duckdns.png",
    "name": "duckdns",
    "image": "linuxserver/duckdns",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "env": [
      {
        "name": "SUBDOMAINS",
        "label": "SUBDOMAINS",
        "default": ""
      },
      {
        "name": "TOKEN",
        "label": "TOKEN",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "duplicati",
    "description": "Free backup software to store encrypted backups online, Duplicati works with standard protocols like FTP, SSH, WebDAV as well as popular services like Microsoft OneDrive, Amazon Cloud Drive and S3, Google Drive, box.com, Mega, hubiC and many others.",
    "categories": [
      "Backup:",
      "Cloud:",
      "Network:Other",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Free backup software to store encrypted backups online, Duplicati works with standard protocols like FTP, SSH, WebDAV as well as popular services like Microsoft OneDrive, Amazon Cloud Drive and S3, Google Drive, box.com, Mega, hubiC and many others.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/duplicati-icon.png",
    "name": "duplicati",
    "image": "linuxserver/duplicati",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8200": "8200:8200/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/tmp",
        "bind": ""
      },
      {
        "container": "/backups",
        "bind": ""
      },
      {
        "container": "/source",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "emby",
    "description": "Your Media, Your Way Emby brings together your personal videos, music, photos, and live television.",
    "categories": [
      "MediaServer:Video",
      "MediaServer:Music",
      "MediaServer:Photos"
    ],
    "platform": "linux",
    "note": "Your Media, Your Way Emby brings together your personal videos, music, photos, and live television.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/emby-logo.png",
    "name": "emby",
    "image": "linuxserver/emby",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "1900": "1900:1900/udp",
        "7359": "7359:7359/udp",
        "8096": "8096:8096/tcp",
        "8920": "8920:8920/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/movies",
        "bind": ""
      },
      {
        "container": "/tv",
        "bind": ""
      },
      {
        "container": "/music",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "NVIDIA_VISIBLE_DEVICES",
        "label": "NVIDIA_VISIBLE_DEVICES",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "embystat",
    "description": "Embystat is a personal web server that can calculate all kinds of statistics from your (local) Emby server. Just install this on your server and let him calculate all kinds of fun stuff.",
    "categories": [
      "MediaApp:Other",
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "Embystat is a personal web server that can calculate all kinds of statistics from your (local) Emby server. Just install this on your server and let him calculate all kinds of fun stuff.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/embystat-logo.png",
    "name": "embystat",
    "image": "linuxserver/embystat",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6555": "6555:6555/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "foldingathome",
    "description": "\u003cspan style='color:#1fa67a; font-size:2rem;'\u003eHelp Fight COVID-19.\u0026nbsp;\u0026nbsp;\u003c/span\u003eFolding@home is a distributed computing project for simulating protein dynamics, including the process of protein folding and the movements of proteins implicated in a variety of diseases. It brings together citizen scientists who volunteer to run simulations of protein dynamics on their personal computers. Insights from this data are helping scientists to better understand biology, and providing new opportunities for developing therapeutics.\r\n\r\nThe built-in webserver provides very basic control (ie. GPUs are only active when set to Medium or higher). For more fine grained control of individual devices, you can use the FAHControl app on a different device and connect remotely via port 36330 (no password).",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "\u003cspan style='color:#1fa67a; font-size:2rem;'\u003eHelp Fight COVID-19.\u0026nbsp;\u0026nbsp;\u003c/span\u003eFolding@home is a distributed computing project for simulating protein dynamics, including the process of protein folding and the movements of proteins implicated in a variety of diseases. It brings together citizen scientists who volunteer to run simulations of protein dynamics on their personal computers. Insights from this data are helping scientists to better understand biology, and providing new opportunities for developing therapeutics.\r\n\r\nThe built-in webserver provides very basic control (ie. GPUs are only active when set to Medium or higher). For more fine grained control of individual devices, you can use the FAHControl app on a different device and connect remotely via port 36330 (no password).",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/foldingathome-logo.png",
    "name": "foldingathome",
    "image": "linuxserver/foldingathome",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "36330": "36330:36330/tcp",
        "7396": "7396:7396/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "NVIDIA_VISIBLE_DEVICES",
        "label": "NVIDIA_VISIBLE_DEVICES",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "freshrss",
    "description": "A free, self-hostable rss aggregator…",
    "categories": [
      "Network:Other",
      "Other:"
    ],
    "platform": "linux",
    "note": "A free, self-hostable rss aggregator…",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/freshrss-icon.png",
    "name": "freshrss",
    "image": "linuxserver/freshrss",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "gazee",
    "description": "A WebApp Comic Reader for your favorite digital comics. Reach and read your comic library from any web connected device with a modern web browser",
    "categories": [
      "Network:Web",
      "MediaServer:Books",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "A WebApp Comic Reader for your favorite digital comics. Reach and read your comic library from any web connected device with a modern web browser",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/gazee-logo.png",
    "name": "gazee",
    "image": "linuxserver/gazee",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "4242": "0:4242/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/comics",
        "bind": ""
      },
      {
        "container": "/mylar",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "grocy",
    "description": "Grocy is an ERP system for your kitchen! Cut down on food waste, and manage your chores with this brilliant utility.\r\n\r\nKeep track of your purchaes, how much food you are wasting, what chores need doing and what batteries need charging with this proudly opensource tool\r\n\r\nUsername/Password = admin/admin",
    "categories": [
      "HomeAutomation:",
      "Productivity:",
      "MediaApp:Other"
    ],
    "platform": "linux",
    "note": "Grocy is an ERP system for your kitchen! Cut down on food waste, and manage your chores with this brilliant utility.\r\n\r\nKeep track of your purchaes, how much food you are wasting, what chores need doing and what batteries need charging with this proudly opensource tool\r\n\r\nUsername/Password = admin/admin",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/grocy-icon.png",
    "name": "grocy",
    "image": "linuxserver/grocy",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "9283:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/disks/virtualisation/appdata/grocy"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "guacd",
    "description": "Apache Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC, RDP, and SSH.\n    This container is only the backend server component needed to use the official or 3rd party HTML5 frontends.",
    "categories": [
      "Network:Other",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Apache Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC, RDP, and SSH.\n    This container is only the backend server component needed to use the official or 3rd party HTML5 frontends.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/guacd-icon.png",
    "name": "guacd",
    "image": "linuxserver/guacd",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "4822": "4822:4822/tcp"
      }
    ]
  },
  {
    "type": 1,
    "title": "habridge",
    "description": "Habridge emulates Philips Hue API to other home automation gateways such as an Amazon Echo/Dot Gen 1 (gen 2 has issues discovering ha-bridge) or other systems that support Philips Hue. The Bridge handles basic commands such as \"On\", \"Off\" and \"brightness\" commands of the hue protocol. This bridge can control most devices that have a distinct API.  In the cases of systems that require authorization and/or have APIs that cannot be handled in the current method, a module may need to be built. The Harmony Hub is such a module and so is the Nest module. The Bridge has helpers to build devices for the gateway for the Logitech Harmony Hub, Vera, Vera Lite or Vera Edge, Nest, Somfy Tahoma, Home Assistant, Domoticz, MQTT, HAL, Fibaro, HomeWizard, LIFX, OpenHAB, FHEM, Broadlink and the ability to proxy all of your real Hue bridges behind this bridge.",
    "categories": [
      "HomeAutomation:"
    ],
    "platform": "linux",
    "note": "Habridge emulates Philips Hue API to other home automation gateways such as an Amazon Echo/Dot Gen 1 (gen 2 has issues discovering ha-bridge) or other systems that support Philips Hue. The Bridge handles basic commands such as \"On\", \"Off\" and \"brightness\" commands of the hue protocol. This bridge can control most devices that have a distinct API.  In the cases of systems that require authorization and/or have APIs that cannot be handled in the current method, a module may need to be built. The Harmony Hub is such a module and so is the Nest module. The Bridge has helpers to build devices for the gateway for the Logitech Harmony Hub, Vera, Vera Lite or Vera Edge, Nest, Somfy Tahoma, Home Assistant, Domoticz, MQTT, HAL, Fibaro, HomeWizard, LIFX, OpenHAB, FHEM, Broadlink and the ability to proxy all of your real Hue bridges behind this bridge.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/habridge-icon.png",
    "name": "habridge",
    "image": "linuxserver/habridge",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "50000": "50000:50000/tcp",
        "8080": "0:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "SEC_KEY",
        "label": "SEC_KEY",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "headphones",
    "description": "Headphones is an automated music downloader for NZB and Torrent, written in Python. It supports SABnzbd, NZBget, Transmission, µTorrent and Blackhole.",
    "categories": [
      "MediaServer:Music"
    ],
    "platform": "linux",
    "note": "Headphones is an automated music downloader for NZB and Torrent, written in Python. It supports SABnzbd, NZBget, Transmission, µTorrent and Blackhole.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/headphones-icon.png",
    "name": "headphones",
    "image": "linuxserver/headphones",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8181": "8181:8181/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/downloads",
        "bind": ""
      },
      {
        "container": "/music",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "heimdall",
    "description": "Heimdall is a way to organise all those links to your most used web sites and web applications in a simple way.",
    "categories": [
      "Tools:Utilities",
      "Network:Web",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "Heimdall is a way to organise all those links to your most used web sites and web applications in a simple way.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/heimdall-icon.png",
    "name": "heimdall",
    "image": "linuxserver/heimdall",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "0:443/tcp",
        "80": "0:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/heimdall"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "htpcmanager",
    "description": "Htpcmanager, a front end for many htpc related applications. Hellowlol version.",
    "categories": [
      "MediaApp:Video",
      "MediaApp:Music",
      "MediaApp:Other"
    ],
    "platform": "linux",
    "note": "Htpcmanager, a front end for many htpc related applications. Hellowlol version.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/htpcmanager-icon.png",
    "name": "htpcmanager",
    "image": "linuxserver/htpcmanager",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8085": "8085:8085/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "hydra",
    "description": "NZBHydra is a meta search for NZB indexers and the \"spiritual successor\" to NZBmegasearcH. It provides easy access to a number of raw and newznab based indexers.",
    "categories": [
      "Downloaders:",
      "MediaApp:Other",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "NZBHydra is a meta search for NZB indexers and the \"spiritual successor\" to NZBmegasearcH. It provides easy access to a number of raw and newznab based indexers.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/hydra-icon.png",
    "name": "hydra",
    "image": "linuxserver/hydra",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5075": "5075:5075/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/downloads",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "hydra2",
    "description": "NZBHydra is a meta search for NZB indexers and the \"spiritual successor\" to NZBmegasearcH. It provides easy access to a number of raw and newznab based indexers.",
    "categories": [
      "Downloaders:",
      "MediaApp:Other",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "NZBHydra is a meta search for NZB indexers and the \"spiritual successor\" to NZBmegasearcH. It provides easy access to a number of raw and newznab based indexers.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/hydra-icon.png",
    "name": "hydra2",
    "image": "linuxserver/hydra2",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5076": "5076:5076/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/downloads",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "ipfs",
    "description": "A peer-to-peer hypermedia protocol designed to make the web faster, safer, and more open.",
    "categories": [
      "Network:Other",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "A peer-to-peer hypermedia protocol designed to make the web faster, safer, and more open.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ipfs-icon.png",
    "name": "ipfs",
    "image": "linuxserver/ipfs",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "4001": "4001:4001/tcp",
        "443": "443:443/tcp",
        "5001": "5001:5001/tcp",
        "80": "80:80/tcp",
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "jackett",
    "description": "Jackett works as a proxy server it translates queries from apps like Sonarr etc into tracker-site-specific http queries and parses the html response sending results back to the requesting software.[",
    "categories": [
      "Downloaders:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Jackett works as a proxy server it translates queries from apps like Sonarr etc into tracker-site-specific http queries and parses the html response sending results back to the requesting software.[",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/jacket-icon.png",
    "name": "jackett",
    "image": "linuxserver/jackett",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "9117": "9117:9117/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/downloads",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "jellyfin",
    "description": "Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps.",
    "categories": [
      "MediaServer:Video",
      "MediaServer:Music"
    ],
    "platform": "linux",
    "note": "Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/jellyfin-logo.png",
    "name": "jellyfin",
    "image": "linuxserver/jellyfin",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "1900": "1900:1900/udp",
        "8096": "8096:8096/tcp",
        "8920": "8920:8920/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/music",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/movies",
        "bind": ""
      },
      {
        "container": "/tv",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "NVIDIA_VISIBLE_DEVICES",
        "label": "NVIDIA_VISIBLE_DEVICES",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "kanzi",
    "description": "Kanzi, formerly titled Kodi-Alexa, this custom skill is the ultimate voice remote control for navigating Kodi. It can do anything you can think of (100+ intents). This container also contains lexigram-cli to setup Kanzi with an Amazon Developer Account and automatically deploy it to Amazon.",
    "categories": [
      "MediaApp:Video",
      "MediaApp:Other",
      "Network:Other",
      "HomeAutomation:"
    ],
    "platform": "linux",
    "note": "Kanzi, formerly titled Kodi-Alexa, this custom skill is the ultimate voice remote control for navigating Kodi. It can do anything you can think of (100+ intents). This container also contains lexigram-cli to setup Kanzi with an Amazon Developer Account and automatically deploy it to Amazon.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kanzi.png",
    "name": "kanzi",
    "image": "linuxserver/kanzi",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8000": "8000:8000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "INVOCATION_NAME",
        "label": "INVOCATION_NAME",
        "default": ""
      },
      {
        "name": "URL_ENDPOINT",
        "label": "URL_ENDPOINT",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "kodi-headless",
    "description": "Headless installation of Kodi™ (formerly known as XBMC™), to enable library updates.",
    "categories": [
      "MediaServer:Video"
    ],
    "platform": "linux",
    "note": "Headless installation of Kodi™ (formerly known as XBMC™), to enable library updates.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kodi-icon.png",
    "name": "kodi-headless",
    "image": "linuxserver/kodi-headless",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp",
        "9777": "9777:9777/udp"
      }
    ],
    "volumes": [
      {
        "container": "/config/.kodi",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "lazylibrarian",
    "description": "LazyLibrarian is a program to follow authors and grab metadata for all your digital reading needs.",
    "categories": [
      "MediaApp:Books"
    ],
    "platform": "linux",
    "note": "LazyLibrarian is a program to follow authors and grab metadata for all your digital reading needs.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lazylibrarian-icon.png",
    "name": "lazylibrarian",
    "image": "linuxserver/lazylibrarian",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5299": "5299:5299/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/downloads",
        "bind": ""
      },
      {
        "container": "/books",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "ldap-auth",
    "description": "LDAP-auth software is for authenticating users who request protected resources from servers proxied by nginx. It includes a daemon (ldap-auth) that communicates with an authentication server, and a webserver daemon that generates an authentication cookie based on the user’s credentials. The daemons are written in Python for use with a Lightweight Directory Access Protocol (LDAP) authentication server (OpenLDAP or Microsoft Windows Active Directory 2003 and 2012).",
    "categories": [
      "Tools:Utilities",
      "Network:Web",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "LDAP-auth software is for authenticating users who request protected resources from servers proxied by nginx. It includes a daemon (ldap-auth) that communicates with an authentication server, and a webserver daemon that generates an authentication cookie based on the user’s credentials. The daemons are written in Python for use with a Lightweight Directory Access Protocol (LDAP) authentication server (OpenLDAP or Microsoft Windows Active Directory 2003 and 2012).",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ldap-auth-logo.png",
    "name": "ldap-auth",
    "image": "linuxserver/ldap-auth",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8888": "8888:8888/tcp",
        "9000": "9000:9000/tcp"
      }
    ]
  },
  {
    "type": 1,
    "title": "letsencrypt",
    "description": "This container sets up an Nginx webserver and reverse proxy with php support and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. It also contains fail2ban for intrusion prevention.\r\n  \r\n  Before running this container, make sure that the url and subdomains are properly forwarded to this container's host.\r\n  \r\n  - Port 443 on the internet side of the router should be forwarded to this container's port 443.\r\n  - If you need a dynamic dns provider, you can use the free provider duckdns.org where the url will be yoursubdomain.duckdns.org and the subdomains    can be www,ftp,cloud\r\n  - The container detects changes to url and subdomains, revokes existing certs and generates new ones during start. \r\n  - It also detects changes to the DHLEVEL parameter and replaces the dhparams file.\r\n  \r\n  - If you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file docker exec -it letsencrypt htpasswd -c /config/nginx/.htpasswd",
    "categories": [
      "Tools:Utilities",
      "Network:Web"
    ],
    "platform": "linux",
    "note": "This container sets up an Nginx webserver and reverse proxy with php support and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. It also contains fail2ban for intrusion prevention.\r\n  \r\n  Before running this container, make sure that the url and subdomains are properly forwarded to this container's host.\r\n  \r\n  - Port 443 on the internet side of the router should be forwarded to this container's port 443.\r\n  - If you need a dynamic dns provider, you can use the free provider duckdns.org where the url will be yoursubdomain.duckdns.org and the subdomains    can be www,ftp,cloud\r\n  - The container detects changes to url and subdomains, revokes existing certs and generates new ones during start. \r\n  - It also detects changes to the DHLEVEL parameter and replaces the dhparams file.\r\n  \r\n  - If you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file docker exec -it letsencrypt htpasswd -c /config/nginx/.htpasswd",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/letsencrypt.png",
    "name": "letsencrypt",
    "image": "linuxserver/letsencrypt",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "0:443/tcp",
        "80": "0:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/letsencrypt"
      }
    ],
    "env": [
      {
        "name": "URL",
        "label": "URL",
        "default": ""
      },
      {
        "name": "ONLY_SUBDOMAINS",
        "label": "ONLY_SUBDOMAINS",
        "default": "false"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "VALIDATION",
        "label": "VALIDATION",
        "default": "http"
      },
      {
        "name": "DNSPLUGIN",
        "label": "DNSPLUGIN",
        "default": ""
      },
      {
        "name": "EMAIL",
        "label": "EMAIL",
        "default": ""
      },
      {
        "name": "SUBDOMAINS",
        "label": "SUBDOMAINS",
        "default": "www,"
      },
      {
        "name": "DHLEVEL",
        "label": "DHLEVEL",
        "default": "2048"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "libresonic",
    "description": "Libresonic is a free, web-based media streamer, providing ubiqutious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.\r\n\r\n/music - Location of music.\r\n/media - Location of other media.\r\n/podcasts - Location of podcasts.\r\n/playlists - Location for playlists storage.\r\nCONTEXT_PATH for setting url-base in reverse proxy setups - (optional)\r\n\r\nDefault user/pass is admin/admin",
    "categories": [
      "MediaApp:Music",
      "MediaServer:Music"
    ],
    "platform": "linux",
    "note": "Libresonic is a free, web-based media streamer, providing ubiqutious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.\r\n\r\n/music - Location of music.\r\n/media - Location of other media.\r\n/podcasts - Location of podcasts.\r\n/playlists - Location for playlists storage.\r\nCONTEXT_PATH for setting url-base in reverse proxy setups - (optional)\r\n\r\nDefault user/pass is admin/admin",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/libresonic.png",
    "name": "libresonic",
    "image": "linuxserver/libresonic",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "4040": "0:4040/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/podcasts",
        "bind": ""
      },
      {
        "container": "/media",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/music",
        "bind": ""
      },
      {
        "container": "/playlists",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "CONTEXT_PATH",
        "label": "CONTEXT_PATH",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "librespeed",
    "description": "Librespeed is a very lightweight Speedtest implemented in Javascript, using XMLHttpRequest and Web Workers. No Flash, No Java, No Websocket, No Bullshit.",
    "categories": [
      "Tools:Utilities",
      "Network:Web"
    ],
    "platform": "linux",
    "note": "Librespeed is a very lightweight Speedtest implemented in Javascript, using XMLHttpRequest and Web Workers. No Flash, No Java, No Websocket, No Bullshit.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/librespeed-icon.png",
    "name": "librespeed",
    "image": "linuxserver/librespeed",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "0:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PASSWORD",
        "label": "PASSWORD",
        "default": ""
      },
      {
        "name": "DB_TYPE",
        "label": "DB_TYPE",
        "default": "sqlite"
      },
      {
        "name": "DB_NAME",
        "label": "DB_NAME",
        "default": ""
      },
      {
        "name": "DB_HOSTNAME",
        "label": "DB_HOSTNAME",
        "default": ""
      },
      {
        "name": "DB_USERNAME",
        "label": "DB_USERNAME",
        "default": ""
      },
      {
        "name": "DB_PASSWORD",
        "label": "DB_PASSWORD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "lidarr",
    "description": "Lidarr is a music collection manager for Usenet and BitTorrent users.",
    "categories": [
      "Downloaders:",
      "MediaApp:Music",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Lidarr is a music collection manager for Usenet and BitTorrent users.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lidarr.png",
    "name": "lidarr",
    "image": "linuxserver/lidarr",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8686": "8686:8686/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/downloads",
        "bind": ""
      },
      {
        "container": "/music",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "limnoria",
    "description": "Limnoria A robust, full-featured, and user/programmer-friendly Python IRC bot, with many existing plugins. Successor of the well-known Supybot.\r\n    \r\n    If you do not have an existing config you will need to start the container and then run the following wizard command:\r\n    docker exec -it -w /config -u abc limnoria limnoria-wizard\r\n    \r\n    If you have an existing config, adjust the directory settings in your conf file as follows:\r\n    supybot.directories.backup: /config/backup\r\n    supybot.directories.conf: /config/conf\r\n    supybot.directories.data: /config/data\r\n    supybot.directories.data.tmp: /config/data/tmp\r\n    supybot.directories.data.web: /config/web\r\n    supybot.directories.log: /config/logs\r\n    supybot.directories.plugins: /config/plugins\r\n    \r\n    NOTE: These are not grouped together in the file. You will need to search your conf file for the variables.\r\n    Then start up the container and place your conf file and any of your existing directories in /config",
    "categories": [
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "Limnoria A robust, full-featured, and user/programmer-friendly Python IRC bot, with many existing plugins. Successor of the well-known Supybot.\r\n    \r\n    If you do not have an existing config you will need to start the container and then run the following wizard command:\r\n    docker exec -it -w /config -u abc limnoria limnoria-wizard\r\n    \r\n    If you have an existing config, adjust the directory settings in your conf file as follows:\r\n    supybot.directories.backup: /config/backup\r\n    supybot.directories.conf: /config/conf\r\n    supybot.directories.data: /config/data\r\n    supybot.directories.data.tmp: /config/data/tmp\r\n    supybot.directories.data.web: /config/web\r\n    supybot.directories.log: /config/logs\r\n    supybot.directories.plugins: /config/plugins\r\n    \r\n    NOTE: These are not grouped together in the file. You will need to search your conf file for the variables.\r\n    Then start up the container and place your conf file and any of your existing directories in /config",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/limnoria-icon.png",
    "name": "limnoria",
    "image": "linuxserver/limnoria",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "lychee",
    "description": "Lychee is a free photo-management tool, which runs on your server or web-space. Installing is a matter of seconds. Upload, manage and share photos like from a native application. Lychee comes with everything you need and all your photos are stored securely.",
    "categories": [
      "Cloud:",
      "Network:Web",
      "Network:Management",
      "MediaApp:Photos",
      "MediaServer:Photos"
    ],
    "platform": "linux",
    "note": "Lychee is a free photo-management tool, which runs on your server or web-space. Installing is a matter of seconds. Upload, manage and share photos like from a native application. Lychee comes with everything you need and all your photos are stored securely.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lychee-icon.png",
    "name": "lychee",
    "image": "linuxserver/lychee",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "0:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/pictures",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "DB_DATABASE",
        "label": "DB_DATABASE",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "DB_HOST",
        "label": "DB_HOST",
        "default": ""
      },
      {
        "name": "DB_USERNAME",
        "label": "DB_USERNAME",
        "default": ""
      },
      {
        "name": "DB_PASSWORD",
        "label": "DB_PASSWORD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "mariadb",
    "description": "An Enhanced drop in replacement for Mysql",
    "categories": [
      "Network:Other",
      "MediaApp:Other",
      "Other:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "An Enhanced drop in replacement for Mysql",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mariadb-icon.png",
    "name": "mariadb",
    "image": "linuxserver/mariadb",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3306": "3306:3306/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "MYSQL_ROOT_PASSWORD",
        "label": "MYSQL_ROOT_PASSWORD",
        "default": "0"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "mcmyadmin2",
    "description": "This is a mcmyadmin container. Default password for webinterface is \\\"password\\\"",
    "categories": [
      "Network:Other",
      "Other:"
    ],
    "platform": "linux",
    "note": "This is a mcmyadmin container. Default password for webinterface is \\\"password\\\"",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mcmyadmin-icon.png",
    "name": "mcmyadmin2",
    "image": "linuxserver/mcmyadmin2",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "25565": "25565:25565/tcp",
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/minecraft",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "medusa",
    "description": "Medusa, automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
    "categories": [
      "Downloaders:",
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "Medusa, automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/medusa-icon.png",
    "name": "medusa",
    "image": "linuxserver/medusa",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8081": "8081:8081/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/tv",
        "bind": ""
      },
      {
        "container": "/downloads",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "minetest",
    "description": "Server version of minetest, a free, open source alternative to minecraft.",
    "categories": [
      "Network:Other",
      "Other:",
      "GameServers:"
    ],
    "platform": "linux",
    "note": "Server version of minetest, a free, open source alternative to minecraft.",
    "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/minetest-icon.png",
    "name": "minetest",
    "image": "linuxserver/minetest:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "30000": "30000:30000/udp"
      }
    ],
    "volumes": [
      {
        "container": "/config/.minetest",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "CLI_ARGS",
        "label": "CLI_ARGS",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "minisatip",
    "description": "Minisatip is a multi-threaded satip server version 1.2 that runs under Linux and it was tested with DVB-S, DVB-S2, DVB-T, DVB-T2, DVB-C, DVB-C2, ATSC and ISDB-T cards.\n\n  The application is designed to stream the requested data to multiple clients (even with one dvb card) at the same time while opening different pids.",
    "categories": [
      "MediaServer:Video",
      "MediaServer:Other",
      "Other:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Minisatip is a multi-threaded satip server version 1.2 that runs under Linux and it was tested with DVB-S, DVB-S2, DVB-T, DVB-T2, DVB-C, DVB-C2, ATSC and ISDB-T cards.\n\n  The application is designed to stream the requested data to multiple clients (even with one dvb card) at the same time while opening different pids.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/minisatip-icon.png",
    "name": "minisatip",
    "image": "linuxserver/minisatip",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "1900": "1900:1900/udp",
        "554": "554:554/tcp",
        "8875": "8875:8875/tcp"
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "mstream",
    "description": "mStream is a personal music streaming server. You can use mStream to stream your music from your home computer to any device, anywhere.  There are apps available for both Android and iPhone.",
    "categories": [
      "MediaApp:Music",
      "MediaServer:Music"
    ],
    "platform": "linux",
    "note": "mStream is a personal music streaming server. You can use mStream to stream your music from your home computer to any device, anywhere.  There are apps available for both Android and iPhone.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mstream.png",
    "name": "mstream",
    "image": "linuxserver/mstream",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3000": "3000:3000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/music",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": "/mnt/disks/virtualisation/appdata/baseimage-alpine"
      }
    ],
    "env": [
      {
        "name": "USER",
        "label": "USER",
        "default": ""
      },
      {
        "name": "PASSWORD",
        "label": "PASSWORD",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "USE_JSON",
        "label": "USE_JSON",
        "default": "false"
      }
    ]
  },
  {
    "type": 1,
    "title": "musicbrainz",
    "description": "MusicBrainz is an open music encyclopedia that collects music metadata and makes it available to the public.",
    "categories": [
      "MediaApp:Music",
      "Other:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "MusicBrainz is an open music encyclopedia that collects music metadata and makes it available to the public.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/musicbrainz-icon.png",
    "name": "musicbrainz",
    "image": "linuxserver/musicbrainz",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5000": "5000:5000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/data",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "BRAINZCODE",
        "label": "BRAINZCODE",
        "default": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "muximux",
    "description": "A lightweight portal to view, manage your HTPC apps without having to run anything more than a PHP enabled webserver. With Muximux you don't need to keep multiple tabs open, or bookmark the URL to all of your apps.",
    "categories": [
      "Network:Web",
      "Network:Proxy",
      "Network:Other",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "A lightweight portal to view, manage your HTPC apps without having to run anything more than a PHP enabled webserver. With Muximux you don't need to keep multiple tabs open, or bookmark the URL to all of your apps.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/muximux-icon.png",
    "name": "muximux",
    "image": "linuxserver/muximux",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "mylar",
    "description": "An automated Comic Book downloader (cbr/cbz) for use with SABnzbd, NZBGet and torrents.",
    "categories": [
      "Downloaders:",
      "MediaApp:Books"
    ],
    "platform": "linux",
    "note": "An automated Comic Book downloader (cbr/cbz) for use with SABnzbd, NZBGet and torrents.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mylar-icon.png",
    "name": "mylar",
    "image": "linuxserver/mylar",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8090": "8090:8090/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/downloads",
        "bind": ""
      },
      {
        "container": "/comics",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "mysql-workbench",
    "description": "MySQL Workbench is a unified visual tool for database architects, developers, and DBAs. MySQL Workbench provides data modeling, SQL development, and comprehensive administration tools for server configuration, user administration, backup, and much more.\r\n    By default the user/pass is abc/abc, if you change your password or want to login manually to the GUI session for any reason use the following link:\r\n    \r\n    http://yourhost:3000/?login=true",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "MySQL Workbench is a unified visual tool for database architects, developers, and DBAs. MySQL Workbench provides data modeling, SQL development, and comprehensive administration tools for server configuration, user administration, backup, and much more.\r\n    By default the user/pass is abc/abc, if you change your password or want to login manually to the GUI session for any reason use the following link:\r\n    \r\n    http://yourhost:3000/?login=true",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mysql-workbench-icon.png",
    "name": "mysql-workbench",
    "image": "linuxserver/mysql-workbench",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "3000": "3000:3000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "netbootxyz",
    "description": "Netbootxyz is a way to PXE boot various operating system installers or utilities from one place within the BIOS without the need of having to go retrieve the media to run the tool. iPXE is used to provide a user friendly menu from within the BIOS that lets you easily choose the operating system you want along with any specific types of versions or bootable flags.",
    "categories": [
      "Productivity:",
      "Tools:Utilities",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "Netbootxyz is a way to PXE boot various operating system installers or utilities from one place within the BIOS without the need of having to go retrieve the media to run the tool. iPXE is used to provide a user friendly menu from within the BIOS that lets you easily choose the operating system you want along with any specific types of versions or bootable flags.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/netbootxyz.png",
    "name": "netbootxyz",
    "image": "linuxserver/netbootxyz",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3000": "3000:3000/tcp",
        "69": "69:69/udp",
        "80": "8080:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/assets",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "MENU_VERSION",
        "label": "MENU_VERSION",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "netbox",
    "description": "Netbox is an IP address management (IPAM) and data center infrastructure management (DCIM) tool. \n  Initially conceived by the network engineering team at DigitalOcean, NetBox was developed specifically to address the needs of network and infrastructure engineers. \n  It is intended to function as a domain-specific source of truth for network operations.",
    "categories": [
      "Network:Management"
    ],
    "platform": "linux",
    "note": "Netbox is an IP address management (IPAM) and data center infrastructure management (DCIM) tool. \n  Initially conceived by the network engineering team at DigitalOcean, NetBox was developed specifically to address the needs of network and infrastructure engineers. \n  It is intended to function as a domain-specific source of truth for network operations.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/netbox-icon.png",
    "name": "netbox",
    "image": "linuxserver/netbox",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8000": "8000:8000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "REDIS_PASSWORD",
        "label": "REDIS_PASSWORD",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "SUPERUSER_PASSWORD",
        "label": "SUPERUSER_PASSWORD",
        "default": ""
      },
      {
        "name": "DB_USER",
        "label": "DB_USER",
        "default": ""
      },
      {
        "name": "DB_PASSWORD",
        "label": "DB_PASSWORD",
        "default": ""
      },
      {
        "name": "DB_HOST",
        "label": "DB_HOST",
        "default": ""
      },
      {
        "name": "DB_PORT",
        "label": "DB_PORT",
        "default": ""
      },
      {
        "name": "SUPERUSER_EMAIL",
        "label": "SUPERUSER_EMAIL",
        "default": ""
      },
      {
        "name": "ALLOWED_HOST",
        "label": "ALLOWED_HOST",
        "default": ""
      },
      {
        "name": "DB_NAME",
        "label": "DB_NAME",
        "default": ""
      },
      {
        "name": "REDIS_HOST",
        "label": "REDIS_HOST",
        "default": ""
      },
      {
        "name": "REDIS_PORT",
        "label": "REDIS_PORT",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "nextcloud",
    "description": "Nextcloud is an open source, self-hosted file sync and communication app platform. Access and sync your files, contacts, calendars and communicate and collaborate across your devices. You decide what happens with your data, where it is and who can access it!",
    "categories": [
      "Cloud:",
      "Productivity:",
      "Tools:Utilities",
      "MediaServer:Other",
      "Network:Web"
    ],
    "platform": "linux",
    "note": "Nextcloud is an open source, self-hosted file sync and communication app platform. Access and sync your files, contacts, calendars and communicate and collaborate across your devices. You decide what happens with your data, where it is and who can access it!",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nextcloud-icon.png",
    "name": "nextcloud",
    "image": "linuxserver/nextcloud",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "443:443/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/data",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "nginx",
    "description": "Nginx is a web server with a strong focus on high concurrency, performance and low memory usage. It can also act as a reverse proxy server for HTTP, HTTPS, SMTP, POP3, and IMAP protocols, as well as a load balancer and an HTTP cache.",
    "categories": [
      "Network:Web",
      "Network:Proxy"
    ],
    "platform": "linux",
    "note": "Nginx is a web server with a strong focus on high concurrency, performance and low memory usage. It can also act as a reverse proxy server for HTTP, HTTPS, SMTP, POP3, and IMAP protocols, as well as a load balancer and an HTTP cache.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nginx-icon.png",
    "name": "nginx",
    "image": "linuxserver/nginx",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "443:443/tcp",
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "ngircd",
    "description": "It is easy to configure, can cope with dynamic IP addresses, and supports IPv6, SSL-protected connections as well as PAM for authentication. \r\n    It is written from scratch and not based on the original IRCd.\r\n    To setup ngircd you will need to edit /config/ngircd.conf which is created the first time the container is run, edit the file and restart the container to implement any config changes.\r\n    \r\n    For information see the ngircd site https://github.com/ngircd/ngircd/blob/master/doc/sample-ngircd.conf.tmpl.",
    "categories": [
      "Productivity:",
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "It is easy to configure, can cope with dynamic IP addresses, and supports IPv6, SSL-protected connections as well as PAM for authentication. \r\n    It is written from scratch and not based on the original IRCd.\r\n    To setup ngircd you will need to edit /config/ngircd.conf which is created the first time the container is run, edit the file and restart the container to implement any config changes.\r\n    \r\n    For information see the ngircd site https://github.com/ngircd/ngircd/blob/master/doc/sample-ngircd.conf.tmpl.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ngircd-icon.png",
    "name": "ngircd",
    "image": "linuxserver/ngircd",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "6667": "6667:6667/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "nntp2nntp",
    "description": "nntp2nntp proxy allow you to use your NNTP Account from multiple systems, each with own user name and password. It fully supports SSL and you can also limit the access to proxy with SSL certificates. nntp2nntp proxy is very simple and pretty fast.",
    "categories": [
      "Downloaders:",
      "Network:Proxy"
    ],
    "platform": "linux",
    "note": "nntp2nntp proxy allow you to use your NNTP Account from multiple systems, each with own user name and password. It fully supports SSL and you can also limit the access to proxy with SSL certificates. nntp2nntp proxy is very simple and pretty fast.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nntp2nntp.png",
    "name": "nntp2nntp",
    "image": "linuxserver/nntp2nntp",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "1563": "1563:1563/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "nzbget",
    "description": "NZBGet is a usenet downloader, written in C++ and designed with performance in mind to achieve maximum download speed by using very little system resources. It supports all platforms including Windows, Mac, Linux and works on all devices including PC, NAS, WLAN routers and media players",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "NZBGet is a usenet downloader, written in C++ and designed with performance in mind to achieve maximum download speed by using very little system resources. It supports all platforms including Windows, Mac, Linux and works on all devices including PC, NAS, WLAN routers and media players",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nzbget-icon.png",
    "name": "nzbget",
    "image": "linuxserver/nzbget",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6789": "6789:6789/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/downloads",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "nzbhydra2",
    "description": "NZBHydra is a meta search for NZB indexers and the \"spiritual successor\" to NZBmegasearcH. It provides easy access to a number of raw and newznab based indexers.",
    "categories": [
      "Downloaders:",
      "MediaApp:Other",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "NZBHydra is a meta search for NZB indexers and the \"spiritual successor\" to NZBmegasearcH. It provides easy access to a number of raw and newznab based indexers.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/hydra-icon.png",
    "name": "nzbhydra2",
    "image": "linuxserver/nzbhydra2",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5076": "5076:5076/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/downloads",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "ombi",
    "description": "Ombi allows you to host your own Plex Request and user management system.",
    "categories": [
      "Downloaders:",
      "Network:Other",
      "MediaApp:Video",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Ombi allows you to host your own Plex Request and user management system.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ombi.png",
    "name": "ombi",
    "image": "linuxserver/ombi",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3579": "3579:3579/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "openssh-server",
    "description": "Openssh-server is a sandboxed environment that allows ssh access without giving keys to the entire server. \n  Giving ssh access via private key often means giving full access to the server. \n  This container creates a limited and sandboxed environment that others can ssh into. \n  The users only have access to the folders mapped and the processes running inside this container.\n  Application setup: see https://github.com/linuxserver/docker-openssh-server#application-setup",
    "categories": [
      "Network:Management"
    ],
    "platform": "linux",
    "note": "Openssh-server is a sandboxed environment that allows ssh access without giving keys to the entire server. \n  Giving ssh access via private key often means giving full access to the server. \n  This container creates a limited and sandboxed environment that others can ssh into. \n  The users only have access to the folders mapped and the processes running inside this container.\n  Application setup: see https://github.com/linuxserver/docker-openssh-server#application-setup",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/openssh-server-icon.png",
    "name": "openssh-server",
    "image": "linuxserver/openssh-server",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "2222": "2222:2222/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "USER_NAME",
        "label": "USER_NAME",
        "default": ""
      },
      {
        "name": "SUDO_ACCESS",
        "label": "SUDO_ACCESS",
        "default": "false"
      },
      {
        "name": "USER_PASSWORD_FILE",
        "label": "USER_PASSWORD_FILE",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PUBLIC_KEY",
        "label": "PUBLIC_KEY",
        "default": ""
      },
      {
        "name": "PUBLIC_KEY_FILE",
        "label": "PUBLIC_KEY_FILE",
        "default": ""
      },
      {
        "name": "PASSWORD_ACCESS",
        "label": "PASSWORD_ACCESS",
        "default": "false"
      },
      {
        "name": "USER_PASSWORD",
        "label": "USER_PASSWORD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "openvpn-as",
    "description": "OpenVPN Access Server is a full featured secure network tunneling VPN software solution that integrates OpenVPN server capabilities, enterprise management capabilities, simplified OpenVPN Connect UI, and OpenVPN Client software packages that accommodate Windows, MAC, Linux, Android, and iOS environments.",
    "categories": [
      "Network:VPN"
    ],
    "platform": "linux",
    "note": "OpenVPN Access Server is a full featured secure network tunneling VPN software solution that integrates OpenVPN server capabilities, enterprise management capabilities, simplified OpenVPN Connect UI, and OpenVPN Client software packages that accommodate Windows, MAC, Linux, Android, and iOS environments.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/openvpn-as-icon.png",
    "name": "openvpn-as",
    "image": "linuxserver/openvpn-as",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "1194": "1194:1194/udp",
        "943": "943:943/tcp",
        "9443": "9443:9443/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "organizr",
    "description": "HTPC/Homelab Services Organizer - Written in PHP",
    "categories": [
      "Tools:Utilities",
      "Network:Web",
      "Network:Proxy",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "HTPC/Homelab Services Organizer - Written in PHP",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/organizr-icon.png",
    "name": "organizr",
    "image": "linuxserver/organizr",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "0:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "oscam",
    "description": "OScam is a softcam, software to be used to decrypt digital television channels on a settopbox (receiver), as an alternative for a conditional access module\n  (CAM). OScam is, compared with other softcams (CCcam, mgcamd, etc.), open source. Hence, the name Open Source Conditional Access Module (OScam). OScam is based on the\n  not so well known softcam MpCS. The main features of OSCam are next to its softcam capabilities, that it is able to function as a cardserver.",
    "categories": [
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "OScam is a softcam, software to be used to decrypt digital television channels on a settopbox (receiver), as an alternative for a conditional access module\n  (CAM). OScam is, compared with other softcams (CCcam, mgcamd, etc.), open source. Hence, the name Open Source Conditional Access Module (OScam). OScam is based on the\n  not so well known softcam MpCS. The main features of OSCam are next to its softcam capabilities, that it is able to function as a cardserver.",
    "logo": "https://i.imgur.com/8LadrLg.png",
    "name": "oscam",
    "image": "linuxserver/oscam",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "10000": "10000:10000/tcp",
        "8888": "8888:8888/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "papermerge",
    "description": "Papermerge is an open source document management system (DMS) primarily designed for archiving and retrieving your digital documents. \n    Instead of having piles of paper documents all over your desk, office or drawers - you can quickly scan them and configure your scanner to directly upload to Papermerge DMS.\n    \n    Default login is admin:admin via the webui, accessible at http://SERVERIP:PORT More info at https://www.papermerge.com/.",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "Papermerge is an open source document management system (DMS) primarily designed for archiving and retrieving your digital documents. \n    Instead of having piles of paper documents all over your desk, office or drawers - you can quickly scan them and configure your scanner to directly upload to Papermerge DMS.\n    \n    Default login is admin:admin via the webui, accessible at http://SERVERIP:PORT More info at https://www.papermerge.com/.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/papermerge-icon.png",
    "name": "papermerge",
    "image": "linuxserver/papermerge",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8000": "8000:8000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "photoshow",
    "description": "A simple, easy way to turn a photo album into a webgallery",
    "categories": [
      "MediaServer:Photos"
    ],
    "platform": "linux",
    "note": "A simple, easy way to turn a photo album into a webgallery",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/photoshow-icon.png",
    "name": "photoshow",
    "image": "linuxserver/photoshow",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/Pictures",
        "bind": ""
      },
      {
        "container": "/Thumbs",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "piwigo",
    "description": "Piwigo is photo gallery software for the web, built by an active community of users and developers.",
    "categories": [
      "MediaServer:Photos"
    ],
    "platform": "linux",
    "note": "Piwigo is photo gallery software for the web, built by an active community of users and developers.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/piwigo-icon.png",
    "name": "piwigo",
    "image": "linuxserver/piwigo",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "plex",
    "description": "Plex organizes video, music and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices.",
    "categories": [
      "MediaServer:Video",
      "MediaServer:Music",
      "MediaServer:Photos"
    ],
    "platform": "linux",
    "note": "Plex organizes video, music and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/plex-icon.png",
    "name": "plex",
    "image": "linuxserver/plex",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "1900": "1900:1900/udp",
        "3005": "3005:3005/tcp",
        "32400": "32400:32400/tcp",
        "32410": "32410:32410/udp",
        "32412": "32412:32412/udp",
        "32413": "32413:32413/udp",
        "32414": "32414:32414/udp",
        "32469": "32469:32469/tcp",
        "8324": "8324:8324/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/movies",
        "bind": ""
      },
      {
        "container": "/tv",
        "bind": ""
      },
      {
        "container": "/music",
        "bind": ""
      },
      {
        "container": "/transcode",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "NVIDIA_VISIBLE_DEVICES",
        "label": "NVIDIA_VISIBLE_DEVICES",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "VERSION",
        "label": "VERSION",
        "default": "docker"
      }
    ]
  },
  {
    "type": 1,
    "title": "projectsend",
    "description": "ProjectSend is a self-hosted application that lets you upload files and assign them to specific clients that you create yourself! Secure, private and easy. No more depending on external services or e-mail to send those files!",
    "categories": [
      "Cloud:",
      "Productivity:",
      "Tools:Utilities",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "ProjectSend is a self-hosted application that lets you upload files and assign them to specific clients that you create yourself! Secure, private and easy. No more depending on external services or e-mail to send those files!",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/projectsend-logo.png",
    "name": "projectsend",
    "image": "linuxserver/projectsend",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "0:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "pwndrop",
    "description": "Pwndrop is a self-deployable file hosting service for sending out red teaming payloads or securely sharing your private files over HTTP and WebDAV.",
    "categories": [
      "Cloud:",
      "Network:Other",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Pwndrop is a self-deployable file hosting service for sending out red teaming payloads or securely sharing your private files over HTTP and WebDAV.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pwndrop-logo.png",
    "name": "pwndrop",
    "image": "linuxserver/pwndrop",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "SECRET_PATH",
        "label": "SECRET_PATH",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "pydio",
    "description": "Pydio (formerly AjaXplorer) is a mature open source software solution for file sharing and synchronization. With intuitive user interfaces (web / mobile / desktop), Pydio provides enterprise-grade features to gain back control and privacy of your data: user directory connectors, legacy filesystems drivers, comprehensive admin interface, and much more.",
    "categories": [
      "Cloud:",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "Pydio (formerly AjaXplorer) is a mature open source software solution for file sharing and synchronization. With intuitive user interfaces (web / mobile / desktop), Pydio provides enterprise-grade features to gain back control and privacy of your data: user directory connectors, legacy filesystems drivers, comprehensive admin interface, and much more.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pydio-icon.png",
    "name": "pydio",
    "image": "linuxserver/pydio",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "443:443/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/data",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "pydio-cells",
    "description": "Pydio-cells is the nextgen file sharing platform for organizations. It is a full rewrite of the Pydio project using\n    the Go language following a micro-service architecture.",
    "categories": [
      "Cloud:",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "Pydio-cells is the nextgen file sharing platform for organizations. It is a full rewrite of the Pydio project using\n    the Go language following a micro-service architecture.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pydio-cells-icon.png",
    "name": "pydio-cells",
    "image": "linuxserver/pydio-cells",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "33060": "33060:33060/tcp",
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "SERVER_IP",
        "label": "SERVER_IP",
        "default": ""
      },
      {
        "name": "EXTERNALURL",
        "label": "EXTERNALURL",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "pyload",
    "description": "Pyload is a Free and Open Source download manager written in Python and designed to be extremely lightweight, easily extensible and fully manageable via web.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "Pyload is a Free and Open Source download manager written in Python and designed to be extremely lightweight, easily extensible and fully manageable via web.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pyload-icon.png",
    "name": "pyload",
    "image": "linuxserver/pyload",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8000": "0:8000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/downloads",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "pylon",
    "description": "Pylon is a web based integrated development environment built with Node.js as a backend and with a supercharged JavaScript/HTML5 frontend, licensed under GPL version 3. This project originates from Cloud9 v2 project.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Pylon is a web based integrated development environment built with Node.js as a backend and with a supercharged JavaScript/HTML5 frontend, licensed under GPL version 3. This project originates from Cloud9 v2 project.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/cloud9-logo.png",
    "name": "pylon",
    "image": "linuxserver/pylon:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3131": "3131:3131/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/code",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "GITURL",
        "label": "GITURL",
        "default": ""
      },
      {
        "name": "PYUSER",
        "label": "PYUSER",
        "default": ""
      },
      {
        "name": "PYPASS",
        "label": "PYPASS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "qbittorrent",
    "description": "The qBittorrent project aims to provide an open-source software alternative to µTorrent. qBittorrent is based on the Qt toolkit and libtorrent-rasterbar library.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "The qBittorrent project aims to provide an open-source software alternative to µTorrent. qBittorrent is based on the Qt toolkit and libtorrent-rasterbar library.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/qbittorrent-icon.png",
    "name": "qbittorrent",
    "image": "linuxserver/qbittorrent",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6881": "6881:6881/tcp",
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/downloads",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "quassel-core",
    "description": "Quassel IRC is a modern, cross-platform, distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core -- much like the popular combination of screen and a text-based IRC client such as WeeChat, but graphical. Blowfish support and optional web-ui included.",
    "categories": [
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "Quassel IRC is a modern, cross-platform, distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core -- much like the popular combination of screen and a text-based IRC client such as WeeChat, but graphical. Blowfish support and optional web-ui included.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/quassel-core-icon.png",
    "name": "quassel-core",
    "image": "linuxserver/quassel-core",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "4242": "4242:4242/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "quassel-web",
    "description": "A web client for Quassel (requires the quassel-core container as a backend)If the QUASSEL_CORE variable is not set then the container will default to an advanced setting and you must edit /config/settings-user.js directly.  This allows access to all the configuration settings possible and is for advanced users.",
    "categories": [
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "A web client for Quassel (requires the quassel-core container as a backend)If the QUASSEL_CORE variable is not set then the container will default to an advanced setting and you must edit /config/settings-user.js directly.  This allows access to all the configuration settings possible and is for advanced users.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/quassel-web-icon.png",
    "name": "quassel-web",
    "image": "linuxserver/quassel-web",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "64080": "64080:64080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "QUASSEL_CORE",
        "label": "QUASSEL_CORE",
        "default": ""
      },
      {
        "name": "QUASSEL_PORT",
        "label": "QUASSEL_PORT",
        "default": "4242"
      },
      {
        "name": "URL_BASE",
        "label": "URL_BASE",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "radarr",
    "description": "Radarr - A fork of Sonarr to work with movies à la Couchpotato.",
    "categories": [
      "Downloaders:",
      "MediaApp:Video",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Radarr - A fork of Sonarr to work with movies à la Couchpotato.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/radarr.png",
    "name": "radarr",
    "image": "linuxserver/radarr",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "7878": "7878:7878/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/movies",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/downloads",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "raneto",
    "description": "Markdown powered Knowledgebase for Nodejs\r\n\r\nRaneto is an open source Knowledgebase platform that uses static Markdown files to power your Knowledgebase.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Markdown powered Knowledgebase for Nodejs\r\n\r\nRaneto is an open source Knowledgebase platform that uses static Markdown files to power your Knowledgebase.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/raneto.png",
    "name": "raneto",
    "image": "linuxserver/raneto",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3000": "0:3000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "remmina",
    "description": "Remmina is a remote desktop client written in GTK, aiming to be useful for system administrators and travellers,\n    who need to work with lots of remote computers in front of either large or tiny screens. Remmina supports multiple network protocols,\n    in an integrated and consistent user interface. Currently RDP, VNC, SPICE, NX, XDMCP, SSH and EXEC are supported.",
    "categories": [
      "Network:Other",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Remmina is a remote desktop client written in GTK, aiming to be useful for system administrators and travellers,\n    who need to work with lots of remote computers in front of either large or tiny screens. Remmina supports multiple network protocols,\n    in an integrated and consistent user interface. Currently RDP, VNC, SPICE, NX, XDMCP, SSH and EXEC are supported.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/remmina-icon.png",
    "name": "remmina",
    "image": "linuxserver/remmina",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "3000": "3000:3000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "resilio-sync",
    "description": "Resilio Sync (formerly BitTorrent Sync) uses the BitTorrent protocol to sync files and folders between all of your devices. There are both free and paid versions, this container supports both.",
    "categories": [
      "Backup:",
      "Cloud:",
      "Network:Other",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Resilio Sync (formerly BitTorrent Sync) uses the BitTorrent protocol to sync files and folders between all of your devices. There are both free and paid versions, this container supports both.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/resilio.png",
    "name": "resilio-sync",
    "image": "linuxserver/resilio-sync",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "55555": "55555:55555/tcp",
        "8888": "8888:8888/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/sync",
        "bind": ""
      },
      {
        "container": "/downloads",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "rsnapshot",
    "description": "Rsnapshot is a filesystem snapshot utility based on rsync. rsnapshot makes it easy to make periodic snapshots of local machines,\n    and remote machines over ssh. The code makes extensive use of hard links whenever possible, to greatly reduce the disk space required.\"",
    "categories": [
      "Backup:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Rsnapshot is a filesystem snapshot utility based on rsync. rsnapshot makes it easy to make periodic snapshots of local machines,\n    and remote machines over ssh. The code makes extensive use of hard links whenever possible, to greatly reduce the disk space required.\"",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/rsnapshot-icon.png",
    "name": "rsnapshot",
    "image": "linuxserver/rsnapshot",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/.snapshots",
        "bind": ""
      },
      {
        "container": "/data",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "rutorrent",
    "description": "Popular torrent client with a webui for ease of use.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "Popular torrent client with a webui for ease of use.",
    "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/rutorrent-icon.png",
    "name": "rutorrent",
    "image": "linuxserver/rutorrent",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "51413": "51413:51413/tcp",
        "6881": "6881:6881/udp",
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/downloads",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "sabnzbd",
    "description": "SABnzbd makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "SABnzbd makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sabnzbd-icon.png",
    "name": "sabnzbd",
    "image": "linuxserver/sabnzbd",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp",
        "9090": "9090:9090/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/downloads",
        "bind": ""
      },
      {
        "container": "/incomplete-downloads",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "scrutiny",
    "description": "Scrutiny WebUI for smartd S.M.A.R.T monitoring. Scrutiny is a Hard Drive Health Dashboard \u0026 Monitoring solution,\n    merging manufacturer provided S.M.A.R.T metrics with real-world failure rates from Backblaze.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Scrutiny WebUI for smartd S.M.A.R.T monitoring. Scrutiny is a Hard Drive Health Dashboard \u0026 Monitoring solution,\n    merging manufacturer provided S.M.A.R.T metrics with real-world failure rates from Backblaze.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/scrutiny-icon.png",
    "name": "scrutiny",
    "image": "linuxserver/scrutiny",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/run/udev",
        "bind": "/run/udev"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "SCRUTINY_API_ENDPOINT",
        "label": "SCRUTINY_API_ENDPOINT",
        "default": "http://localhost:8080"
      },
      {
        "name": "SCRUTINY_WEB",
        "label": "SCRUTINY_WEB",
        "default": "true"
      },
      {
        "name": "SCRUTINY_COLLECTOR",
        "label": "SCRUTINY_COLLECTOR",
        "default": "true"
      }
    ]
  },
  {
    "type": 1,
    "title": "sickchill",
    "description": "Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
    "categories": [
      "Downloaders:",
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sickchill-icon.png",
    "name": "sickchill",
    "image": "linuxserver/sickchill",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8081": "8081:8081/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/downloads",
        "bind": ""
      },
      {
        "container": "/tv",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": "/mnt/disks/virtualisation/appdata/sickrage"
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "sickgear",
    "description": "SickGear provides management of TV shows and/or Anime, it detects new episodes, links downloader apps, and more..",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "SickGear provides management of TV shows and/or Anime, it detects new episodes, links downloader apps, and more..",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sickgear-logo.png",
    "name": "sickgear",
    "image": "linuxserver/sickgear",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8081": "8081:8081/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/downloads",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/tv",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "sickrage",
    "description": "Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
    "categories": [
      "Downloaders:",
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sickrage-icon.png",
    "name": "sickrage",
    "image": "linuxserver/sickrage",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8081": "8081:8081/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/downloads",
        "bind": ""
      },
      {
        "container": "/tv",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "smokeping",
    "description": "Smokeping keeps track of your network latency.",
    "categories": [
      "Network:Management"
    ],
    "platform": "linux",
    "note": "Smokeping keeps track of your network latency.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/smokeping-icon.png",
    "name": "smokeping",
    "image": "linuxserver/smokeping",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "0:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/data",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "snapdrop",
    "description": "A local file sharing in your browser. Inspired by Apple's Airdrop.",
    "categories": [
      "Network:Other",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "A local file sharing in your browser. Inspired by Apple's Airdrop.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/snapdrop-icon.png",
    "name": "snapdrop",
    "image": "linuxserver/snapdrop",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "443": "443:443/tcp",
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "snipe-it",
    "description": "Snipe-it makes asset management easy. It was built by people solving real-world IT and asset management problems, and a solid UX has always been a top priority. Straightforward design and bulk actions mean getting things done faster.",
    "categories": [
      "Productivity:",
      "Tools:Utilities",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "Snipe-it makes asset management easy. It was built by people solving real-world IT and asset management problems, and a solid UX has always been a top priority. Straightforward design and bulk actions mean getting things done faster.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/snipe-it-icon.png",
    "name": "snipe-it",
    "image": "linuxserver/snipe-it",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "8000:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "MYSQL_PASSWORD",
        "label": "MYSQL_PASSWORD",
        "default": ""
      },
      {
        "name": "APP_URL",
        "label": "APP_URL",
        "default": ""
      },
      {
        "name": "MAIL_PORT_587_TCP_PORT",
        "label": "MAIL_PORT_587_TCP_PORT",
        "default": ""
      },
      {
        "name": "APP_DEBUG",
        "label": "APP_DEBUG",
        "default": ""
      },
      {
        "name": "MYSQL_PORT_3306_TCP_ADDR",
        "label": "MYSQL_PORT_3306_TCP_ADDR",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "MAIL_ENV_USERNAME",
        "label": "MAIL_ENV_USERNAME",
        "default": ""
      },
      {
        "name": "MAIL_ENV_PASSWORD",
        "label": "MAIL_ENV_PASSWORD",
        "default": ""
      },
      {
        "name": "APP_LOCALE",
        "label": "APP_LOCALE",
        "default": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "MYSQL_PORT_3306_TCP_PORT",
        "label": "MYSQL_PORT_3306_TCP_PORT",
        "default": "3306"
      },
      {
        "name": "MYSQL_DATABASE",
        "label": "MYSQL_DATABASE",
        "default": "snipe-it"
      },
      {
        "name": "MYSQL_USER",
        "label": "MYSQL_USER",
        "default": "snipe-it"
      },
      {
        "name": "MAIL_PORT_587_TCP_ADDR",
        "label": "MAIL_PORT_587_TCP_ADDR",
        "default": ""
      },
      {
        "name": "MAIL_ENV_FROM_ADDR",
        "label": "MAIL_ENV_FROM_ADDR",
        "default": ""
      },
      {
        "name": "MAIL_ENV_FROM_NAME",
        "label": "MAIL_ENV_FROM_NAME",
        "default": ""
      },
      {
        "name": "MAIL_ENV_ENCRYPTION",
        "label": "MAIL_ENV_ENCRYPTION",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "sonarr",
    "description": "Sonarr (formerly NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
    "categories": [
      "Downloaders:",
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "Sonarr (formerly NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sonarr-icon.png",
    "name": "sonarr",
    "image": "linuxserver/sonarr",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8989": "8989:8989/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/dev/rtc",
        "bind": "/dev/rtc"
      },
      {
        "container": "/tv",
        "bind": ""
      },
      {
        "container": "/downloads",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "sqlitebrowser",
    "description": "DB Browser for SQLite is a high quality, visual, open source tool to create, design, and edit database files compatible with SQLite.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "DB Browser for SQLite is a high quality, visual, open source tool to create, design, and edit database files compatible with SQLite.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sqlitebrowser-icon.png",
    "name": "sqlitebrowser",
    "image": "linuxserver/sqlitebrowser",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "3000": "3000:3000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "swag",
    "description": "SWAG - Secure Web Application Gateway is a rebirth of our letsencrypt docker image, a full fledged web server and reverse proxy that includes Nginx, Php7, Certbot (Let's Encrypt client) and Fail2ban.\r\n  \r\n  Before running this container, make sure that the url and subdomains are properly forwarded to this container's host.\r\n  \r\n  - Port 443 on the internet side of the router should be forwarded to this container's port 443.\r\n  - If you need a dynamic dns provider, you can use the free provider duckdns.org where the url will be yoursubdomain.duckdns.org and the subdomains can be \"www,ftp,cloud,\" or \"wildcard\" if using duckdns validation\r\n  - The container detects changes to url and subdomains, revokes existing certs and generates new ones during start. \r\n  \r\n  - If you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file docker exec -it swag htpasswd -c /config/nginx/.htpasswd",
    "categories": [
      "Tools:Utilities",
      "Network:Web"
    ],
    "platform": "linux",
    "note": "SWAG - Secure Web Application Gateway is a rebirth of our letsencrypt docker image, a full fledged web server and reverse proxy that includes Nginx, Php7, Certbot (Let's Encrypt client) and Fail2ban.\r\n  \r\n  Before running this container, make sure that the url and subdomains are properly forwarded to this container's host.\r\n  \r\n  - Port 443 on the internet side of the router should be forwarded to this container's port 443.\r\n  - If you need a dynamic dns provider, you can use the free provider duckdns.org where the url will be yoursubdomain.duckdns.org and the subdomains can be \"www,ftp,cloud,\" or \"wildcard\" if using duckdns validation\r\n  - The container detects changes to url and subdomains, revokes existing certs and generates new ones during start. \r\n  \r\n  - If you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file docker exec -it swag htpasswd -c /config/nginx/.htpasswd",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver-ls-logo.png",
    "name": "swag",
    "image": "linuxserver/swag",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "443:443/tcp",
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "EMAIL",
        "label": "EMAIL",
        "default": ""
      },
      {
        "name": "URL",
        "label": "URL",
        "default": ""
      },
      {
        "name": "SUBDOMAINS",
        "label": "SUBDOMAINS",
        "default": ""
      },
      {
        "name": "ONLY_SUBDOMAINS",
        "label": "ONLY_SUBDOMAINS",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "VALIDATION",
        "label": "VALIDATION",
        "default": ""
      },
      {
        "name": "STAGING",
        "label": "STAGING",
        "default": ""
      },
      {
        "name": "DUCKDNSTOKEN",
        "label": "DUCKDNSTOKEN",
        "default": ""
      },
      {
        "name": "PROPAGATION",
        "label": "PROPAGATION",
        "default": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "DNSPLUGIN",
        "label": "DNSPLUGIN",
        "default": ""
      },
      {
        "name": "EXTRA_DOMAINS",
        "label": "EXTRA_DOMAINS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "synclounge",
    "description": "Synclounge is a third party tool that allows you to watch Plex in sync with your friends/family, wherever you are.",
    "categories": [
      "MediaApp:Video",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Synclounge is a third party tool that allows you to watch Plex in sync with your friends/family, wherever you are.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/synclounge-icon.png",
    "name": "synclounge",
    "image": "linuxserver/synclounge",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8088": "8088:8088/tcp",
        "8089": "8089:8089/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "EXTERNAL_URL",
        "label": "EXTERNAL_URL",
        "default": ""
      },
      {
        "name": "EXTERNAL_SERVER_PORT",
        "label": "EXTERNAL_SERVER_PORT",
        "default": ""
      },
      {
        "name": "AUTH_LIST",
        "label": "AUTH_LIST",
        "default": ""
      },
      {
        "name": "AUTOJOIN_ENABLED",
        "label": "AUTOJOIN_ENABLED",
        "default": ""
      },
      {
        "name": "AUTOJOIN_ROOM",
        "label": "AUTOJOIN_ROOM",
        "default": ""
      },
      {
        "name": "AUTOJOIN_PASSWORD",
        "label": "AUTOJOIN_PASSWORD",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "syncthing",
    "description": "Syncthing replaces proprietary sync and cloud services with something open, trustworthy and decentralized. Your data is your data alone and you deserve to choose where it is stored, if it is shared with some third party and how it's transmitted over the Internet.",
    "categories": [
      "Backup:",
      "Cloud:",
      "Network:Other",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Syncthing replaces proprietary sync and cloud services with something open, trustworthy and decentralized. Your data is your data alone and you deserve to choose where it is stored, if it is shared with some third party and how it's transmitted over the Internet.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/syncthing-icon.png",
    "name": "syncthing",
    "image": "linuxserver/syncthing",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "21027": "21027:21027/udp",
        "22000": "22000:22000/tcp",
        "8384": "8384:8384/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/sync",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "taisun",
    "description": "Taisun is an application for a Docker enabled device with an emphasis on providing a web based interface for managing a single server.\r\n\r\nWith Taisun you can manage your server all from the convience of your web browser. With built in web based Linux desktops combined with our management application, your browser is your portal to accelerating server management and application development.",
    "categories": [
      "Productivity:",
      "Tools:Utilities",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "Taisun is an application for a Docker enabled device with an emphasis on providing a web based interface for managing a single server.\r\n\r\nWith Taisun you can manage your server all from the convience of your web browser. With built in web based Linux desktops combined with our management application, your browser is your portal to accelerating server management and application development.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/taisun-logo.png",
    "name": "taisun",
    "image": "linuxserver/taisun",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3000": "3000:3000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/run/docker.sock",
        "bind": "/var/run/docker.sock"
      }
    ]
  },
  {
    "type": 1,
    "title": "tautulli",
    "description": "Tautulli is a 3rd party application that you can run along side your Plex Media Server to monitor activity and track various statistics. Most importantly, these statistics include what has been watched, who watched it, when and where they watched it, and how it was watched. All statistics are presented in a nice and clean interface with many tables and graphs, which makes it easy to brag about your server to everyone else.",
    "categories": [
      "MediaServer:Other",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Tautulli is a 3rd party application that you can run along side your Plex Media Server to monitor activity and track various statistics. Most importantly, these statistics include what has been watched, who watched it, when and where they watched it, and how it was watched. All statistics are presented in a nice and clean interface with many tables and graphs, which makes it easy to brag about your server to everyone else.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/tautulli-icon.png",
    "name": "tautulli",
    "image": "linuxserver/tautulli",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8181": "8181:8181/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/logs",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "thelounge",
    "description": "A self-hosted web IRC client",
    "categories": [
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "A self-hosted web IRC client",
    "logo": "https://raw.githubusercontent.com/linuxserver/community-templates/master/lsiocommunity/img/shout-icon.png",
    "name": "thelounge",
    "image": "linuxserver/thelounge",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "9000": "9000:9000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "transmission",
    "description": "Transmission is designed for easy, powerful use. Transmission has the features you want from a BitTorrent client: encryption, a web interface, peer exchange, magnet links, DHT, µTP, UPnP and NAT-PMP port forwarding, webseed support, watch directories, tracker editing, global and per-torrent speed limits, and more.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "Transmission is designed for easy, powerful use. Transmission has the features you want from a BitTorrent client: encryption, a web interface, peer exchange, magnet links, DHT, µTP, UPnP and NAT-PMP port forwarding, webseed support, watch directories, tracker editing, global and per-torrent speed limits, and more.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/transmission-icon.png",
    "name": "transmission",
    "image": "linuxserver/transmission",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "51413": "51413:51413/tcp",
        "9091": "9091:9091/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/downloads",
        "bind": ""
      },
      {
        "container": "/watch",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "tt-rss",
    "categories": [
      "Network:Other"
    ],
    "platform": "linux",
    "note": "Tiny Tiny RSS is an open source web-based news feed (RSS/Atom) reader and aggregator, designed to allow you to read news from any location, while feeling as close to a real desktop application as possible.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/tt-rss-icon.png",
    "name": "tt-rss",
    "image": "linuxserver/tt-rss",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "tvheadend",
    "description": "Tvheadend is a TV streaming server and recorder for Linux, FreeBSD and Android supporting DVB-S, DVB-S2, DVB-C, DVB-T, ATSC, ISDB-T, IPTV, SAT\u003eIP and HDHomeRun as input sources.\r\nTvheadend offers the HTTP (VLC, MPlayer), HTSP (Kodi, Movian) and SAT\u003eIP streaming.\r\nMultiple EPG sources are supported (over-the-air DVB and ATSC including OpenTV DVB extensions, XMLTV, PyXML).",
    "categories": [
      "MediaServer:Video",
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "Tvheadend is a TV streaming server and recorder for Linux, FreeBSD and Android supporting DVB-S, DVB-S2, DVB-C, DVB-T, ATSC, ISDB-T, IPTV, SAT\u003eIP and HDHomeRun as input sources.\r\nTvheadend offers the HTTP (VLC, MPlayer), HTSP (Kodi, Movian) and SAT\u003eIP streaming.\r\nMultiple EPG sources are supported (over-the-air DVB and ATSC including OpenTV DVB extensions, XMLTV, PyXML).",
    "logo": "https://i.imgur.com/zGSUAT4.png",
    "name": "tvheadend",
    "image": "linuxserver/tvheadend",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "9981": "9981:9981/tcp",
        "9982": "9982:9982/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/recordings",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "ubooquity",
    "description": "Ubooquity is a free, lightweight and easy-to-use home server for your comics and ebooks. Use it to access your files from anywhere, with a tablet, an e-reader, a phone or a computer.",
    "categories": [
      "Cloud:",
      "MediaApp:Books",
      "MediaServer:Books"
    ],
    "platform": "linux",
    "note": "Ubooquity is a free, lightweight and easy-to-use home server for your comics and ebooks. Use it to access your files from anywhere, with a tablet, an e-reader, a phone or a computer.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ubooquity-icon.png",
    "name": "ubooquity",
    "image": "linuxserver/ubooquity",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "2202": "2202:2202/tcp",
        "2203": "2203:2203/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/books",
        "bind": ""
      },
      {
        "container": "/comics",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "MAXMEM",
        "label": "MAXMEM",
        "default": "512"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "unifi",
    "description": "The UniFi® Controller software is a powerful, enterprise wireless software engine ideal for high-density client deployments requiring low latency and high uptime performance.",
    "categories": [
      "Network:Management",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "The UniFi® Controller software is a powerful, enterprise wireless software engine ideal for high-density client deployments requiring low latency and high uptime performance.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/unifi-icon.png",
    "name": "unifi",
    "image": "linuxserver/unifi",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "10001": "10001:10001/udp",
        "3478": "3478:3478/udp",
        "8080": "8080:8080/tcp",
        "8081": "8081:8081/tcp",
        "8443": "8443:8443/tcp",
        "8843": "8843:8843/tcp",
        "8880": "8880:8880/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "unifi-controller",
    "description": "The UniFi® Controller software is a powerful, enterprise wireless software engine ideal for high-density client deployments requiring low latency and high uptime performance.",
    "categories": [
      "Tools:Utilities",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "The UniFi® Controller software is a powerful, enterprise wireless software engine ideal for high-density client deployments requiring low latency and high uptime performance.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/unifi-controller-icon.png",
    "name": "unifi-controller",
    "image": "linuxserver/unifi-controller",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "10001": "10001:10001/udp",
        "3478": "3478:3478/udp",
        "8080": "8080:8080/tcp",
        "8443": "8443:8443/tcp",
        "8843": "8843:8843/tcp",
        "8880": "8880:8880/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "webgrabplus",
    "description": "WebGrab+Plus is a multi-site incremental xmltv epg grabber. It collects tv-program guide data from selected tvguide sites for your favourite channels.\r\n\t\tOptional postprocessors to add IMDb data or to customize your xmltv listing.\r\n\t\thttp://www.webgrabplus.com/",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "WebGrab+Plus is a multi-site incremental xmltv epg grabber. It collects tv-program guide data from selected tvguide sites for your favourite channels.\r\n\t\tOptional postprocessors to add IMDb data or to customize your xmltv listing.\r\n\t\thttp://www.webgrabplus.com/",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/webgrabplus.png",
    "name": "webgrabplus",
    "image": "linuxserver/webgrabplus",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/data",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "wikijs",
    "description": "A modern, lightweight and powerful wiki app built on NodeJS, Git and Markdown",
    "categories": [
      "Cloud:",
      "Productivity:"
    ],
    "platform": "linux",
    "note": "A modern, lightweight and powerful wiki app built on NodeJS, Git and Markdown",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/wikijs-logo.png",
    "name": "wikijs",
    "image": "linuxserver/wikijs",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3000": "3000:3000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/data",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "wireshark",
    "description": "Wireshark is the world’s foremost and widely-used network protocol analyzer. It lets you see what’s happening on your network at a microscopic\n    level and is the de facto (and often de jure) standard across many commercial and non-profit enterprises, government agencies, and educational institutions.\n    Wireshark development thrives thanks to the volunteer contributions of networking experts around the globe and is the continuation of a project started by\n    Gerald Combs in 1998.",
    "categories": [
      "Network:Other",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Wireshark is the world’s foremost and widely-used network protocol analyzer. It lets you see what’s happening on your network at a microscopic\n    level and is the de facto (and often de jure) standard across many commercial and non-profit enterprises, government agencies, and educational institutions.\n    Wireshark development thrives thanks to the volunteer contributions of networking experts around the globe and is the continuation of a project started by\n    Gerald Combs in 1998.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/wireshark-icon.png",
    "name": "wireshark",
    "image": "linuxserver/wireshark",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "znc",
    "description": "ZNC is an IRC network bouncer or BNC. It can detach the client from the actual IRC server, and also from selected channels. Multiple clients from different locations can connect to a single ZNC account simultaneously and therefore appear under the same nickname on IRC.",
    "categories": [
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "ZNC is an IRC network bouncer or BNC. It can detach the client from the actual IRC server, and also from selected channels. Multiple clients from different locations can connect to a single ZNC account simultaneously and therefore appear under the same nickname on IRC.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/znc-icon.png",
    "name": "znc",
    "image": "linuxserver/znc",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6501": "6501:6501/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/znc"
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "Domoticz",
    "description": "An Home automation Server",
    "categories": [
      "HomeAutomation:"
    ],
    "platform": "linux",
    "note": "An Home automation Server",
    "logo": "https://raw.githubusercontent.com/sdesbure/docker-containers/master/images/domoticz-icon.png",
    "name": "Domoticz",
    "image": "sdesbure/domoticz",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "path to config and logs"
      }
    ]
  },
  {
    "type": 1,
    "title": "Jackett",
    "description": "Use just about any tracker with Sonarr",
    "categories": [
      "Downloaders:",
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "Use just about any tracker with Sonarr",
    "logo": "https://raw.githubusercontent.com/sdesbure/docker-containers/master/images/jackett-icon.png",
    "name": "Jackett",
    "image": "sdesbure/arch-jackett",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "9117": "9117:9117/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/usr/share/Jackett/.config/Jackett/",
        "bind": "path to config"
      },
      {
        "container": "/config",
        "bind": "path to supervisor log"
      }
    ]
  },
  {
    "type": 1,
    "title": "Netatmo-Librato",
    "description": "pushes value from your netatmo thermostat and weather station to librato cloud metrics](https://www.librato.com/",
    "categories": [
      "HomeAutomation:",
      "Backup:",
      "Cloud:"
    ],
    "platform": "linux",
    "note": "pushes value from your netatmo thermostat and weather station to librato cloud metrics](https://www.librato.com/",
    "logo": "https://raw.githubusercontent.com/sdesbure/docker-containers/master/images/netatmo_librato_logo.png",
    "name": "Netatmo-Librato",
    "image": "sdesbure/alpine-netatmo-librato",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/config",
        "bind": "path to config"
      }
    ]
  },
  {
    "type": 1,
    "title": "Domoticz",
    "categories": [
      "Downloaders:",
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "Transform t411 in torznab compatible feeder for sonarr",
    "logo": "https://raw.githubusercontent.com/sdesbure/docker-containers/master/images/t411-torznab-icon.png",
    "name": "Domoticz",
    "image": "sdesbure/T411Torznab",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "S3Backup",
    "description": "A simple way to backup important files to Amazon S3 and Glacier.",
    "categories": [
      "Backup:",
      "Cloud:"
    ],
    "platform": "linux",
    "note": "A simple way to backup important files to Amazon S3 and Glacier.",
    "logo": "https://i.imgur.com/NqyrUIy.png",
    "name": "S3Backup",
    "image": "joch/s3backup",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "env": [
      {
        "name": "ACCESS_KEY",
        "label": "ACCESS_KEY",
        "default": "Your AWS Access key"
      },
      {
        "name": "SECRET_KEY",
        "label": "SECRET_KEY",
        "default": "Your AWS Access secret"
      },
      {
        "name": "S3PATH",
        "label": "S3PATH",
        "default": "s3://mybucket/"
      },
      {
        "name": "S3CMDPARAMS",
        "label": "S3CMDPARAMS",
        "default": ""
      },
      {
        "name": "CRON_SCHEDULE",
        "label": "CRON_SCHEDULE",
        "default": "0 * * * *"
      }
    ]
  },
  {
    "type": 1,
    "title": "Emoncms",
    "description": "Energy monitor",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "Energy monitor",
    "logo": "https://emoncms.org/Modules/site/emoncms_front.png",
    "name": "Emoncms",
    "image": "snoopy86/emoncms-docker",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "1883": "1883:1883/tcp",
        "80": "8998:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/opt/emoncms/phpfina/",
        "bind": "/mnt/user/appdata/emoncms/phpfina"
      },
      {
        "container": "/var/opt/emoncms/phptimeseries/",
        "bind": "/mnt/user/appdata/emoncms/phptimeseries/phpfina"
      }
    ],
    "env": [
      {
        "name": "MYSQL_PORT",
        "label": "MYSQL_PORT",
        "default": "3306"
      },
      {
        "name": "MYSQL_PASSWORD",
        "label": "MYSQL_PASSWORD",
        "default": ""
      },
      {
        "name": "MYSQL_DATABASE",
        "label": "MYSQL_DATABASE",
        "default": "emoncms"
      },
      {
        "name": "MQTT_PASSWORD",
        "label": "MQTT_PASSWORD",
        "default": "mqtt"
      },
      {
        "name": "PHPFINA_DIR",
        "label": "PHPFINA_DIR",
        "default": "/var/opt/emoncms/phpfina/"
      },
      {
        "name": "MYSQL_HOST",
        "label": "MYSQL_HOST",
        "default": ""
      },
      {
        "name": "REDIS_PORT",
        "label": "REDIS_PORT",
        "default": "6379"
      },
      {
        "name": "MQTT_ENABLED",
        "label": "MQTT_ENABLED",
        "default": "false"
      },
      {
        "name": "MQTT_BASETOPIC",
        "label": "MQTT_BASETOPIC",
        "default": "emon"
      },
      {
        "name": "MQTT_USER",
        "label": "MQTT_USER",
        "default": "mqtt"
      },
      {
        "name": "MYSQL_RANDOM_ROOT_PASSWORD",
        "label": "MYSQL_RANDOM_ROOT_PASSWORD",
        "default": "yes"
      },
      {
        "name": "REDIS_ENABLED",
        "label": "REDIS_ENABLED",
        "default": "false"
      },
      {
        "name": "REDIS_HOST",
        "label": "REDIS_HOST",
        "default": "127.0.0.1"
      },
      {
        "name": "MQTT_HOST",
        "label": "MQTT_HOST",
        "default": "127.0.0.1"
      },
      {
        "name": "MYSQL_USER",
        "label": "MYSQL_USER",
        "default": "emoncms"
      },
      {
        "name": "REDIS_PREFIX",
        "label": "REDIS_PREFIX",
        "default": "'emoncms'"
      },
      {
        "name": "PHPTIMESERIES_DIR",
        "label": "PHPTIMESERIES_DIR",
        "default": "/var/opt/emoncms/phptimeseries/"
      }
    ]
  },
  {
    "type": 1,
    "title": "FFmpeg-mkvdts2ac3",
    "description": "A Docker container designed to watch a directory and encode media files.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "A Docker container designed to watch a directory and encode media files.",
    "logo": "https://ih1.redbubble.net/image.998316046.6121/pp,840x830-pad,1000x1000,f8f8f8.jpg",
    "name": "FFmpeg-mkvdts2ac3",
    "image": "snoopy86/ffmpeg",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/copy",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/ffmpeg"
      },
      {
        "container": "/watch",
        "bind": ""
      },
      {
        "container": "/output",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "script",
        "label": "script",
        "default": "encode.sh"
      },
      {
        "name": "parameters",
        "label": "parameters",
        "default": "-map 0;-vcodec copy;-scodec copy;-acodec ac3;-b:a 640k"
      },
      {
        "name": "output_format",
        "label": "output_format",
        "default": "mkv"
      },
      {
        "name": "mkvdts2ac3_params",
        "label": "mkvdts2ac3_params",
        "default": "--compress none;-d;-n;-w /output;--new"
      }
    ]
  },
  {
    "type": 1,
    "title": "Flickr-uploader",
    "description": "Upload pictures to flicker",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "Upload pictures to flicker",
    "logo": "https://raw.githubusercontent.com/snoopy86/docker-repo/master/snoopy/flickr-logo-png-8766.png",
    "name": "Flickr-uploader",
    "image": "snoopy86/flickr-uploader",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/pictures",
        "bind": ""
      },
      {
        "container": "/folders2flickr",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PYTHONUNBUFFERED",
        "label": "PYTHONUNBUFFERED",
        "default": "0"
      }
    ]
  },
  {
    "type": 1,
    "title": "LogitechMediaServer-8.0",
    "description": "Logitech Media Server (formerly SlimServer, SqueezeCenter and Squeezebox Server) is a streaming audio server supported by Logitech (formerly Slim Devices), developed in particular to support their Squeezebox range of digital audio receivers.",
    "categories": [
      "MediaServer:Music"
    ],
    "platform": "linux",
    "note": "Logitech Media Server (formerly SlimServer, SqueezeCenter and Squeezebox Server) is a streaming audio server supported by Logitech (formerly Slim Devices), developed in particular to support their Squeezebox range of digital audio receivers.",
    "logo": "https://i.imgur.com/PoUuA3k.png",
    "name": "LogitechMediaServer-8.0",
    "image": "snoopy86/logitechmediaserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3483": "3483:3483/tcp",
        "5353": "5353:5353/udp",
        "9000": "9000:9000/tcp",
        "9090": "9090:9090/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/LogitechMediaServer"
      },
      {
        "container": "/music",
        "bind": ""
      },
      {
        "container": "/var/run/dbus",
        "bind": "/var/run/dbus"
      }
    ]
  },
  {
    "type": 1,
    "title": "Ubuntu-xrdp",
    "description": "LXDE desktop ubuntu (use remote desktop client to connect)",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "LXDE desktop ubuntu (use remote desktop client to connect)",
    "logo": "https://findicons.com/files/icons/1008/quiet/256/ubuntu.png",
    "name": "Ubuntu-xrdp",
    "image": "snoopy86/desktop-dockers",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3389": "3389:3389/tcp",
        "5900": "5900:5900/tcp",
        "6080": "6080:6080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/home/ubuntu/unraid",
        "bind": ""
      },
      {
        "container": "/home/ubuntu/.config",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "openhab-offline",
    "categories": [
      "HomeAutomation:"
    ],
    "platform": "linux",
    "note": "openHAB - a vendor and technology agnostic open source automation software for your home.",
    "logo": "https://raw.githubusercontent.com/tinglis1/docker-containers/master/openhab/openhab-logo-square.png",
    "name": "openhab-offline",
    "image": "openhab/openhab:amd64-offline",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "openhab-online",
    "categories": [
      "HomeAutomation:"
    ],
    "platform": "linux",
    "note": "openHAB - a vendor and technology agnostic open source automation software for your home.",
    "logo": "https://raw.githubusercontent.com/tinglis1/docker-containers/master/openhab/openhab-logo-square.png",
    "name": "openhab-online",
    "image": "openhab/openhab:amd64-online",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "pipework:1.1.3",
    "description": "This is the version 1.1.3 of the pipework docker container, the latest container maybe broken so this might work better. Pipework allows you to have a static or dynamic ip for a docker container. This is the unraid implementation of the dreamcat4 pipework docker container",
    "categories": [
      "Network:Other",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "This is the version 1.1.3 of the pipework docker container, the latest container maybe broken so this might work better. Pipework allows you to have a static or dynamic ip for a docker container. This is the unraid implementation of the dreamcat4 pipework docker container",
    "logo": "https://raw.githubusercontent.com/tinglis1/docker-containers/master/pipework/pipework-icon.png",
    "name": "pipework:1.1.3",
    "image": "dreamcat4/pipework:1.1.3",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/docker.sock",
        "bind": "/var/run/docker.sock"
      }
    ]
  },
  {
    "type": 1,
    "title": "pipework-1.1.5",
    "description": "This is for unRAID 6.0 and 6.1. Pipework allows you to have a static or dynamic ip for a docker container. This is the unraid implementation of the dreamcat4 pipework docker container",
    "categories": [
      "Network:Other"
    ],
    "platform": "linux",
    "note": "This is for unRAID 6.0 and 6.1. Pipework allows you to have a static or dynamic ip for a docker container. This is the unraid implementation of the dreamcat4 pipework docker container",
    "logo": "https://raw.githubusercontent.com/tinglis1/docker-containers/master/pipework/pipework-icon.png",
    "name": "pipework-1.1.5",
    "image": "dreamcat4/pipework:1.1.5",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/docker.sock",
        "bind": "/var/run/docker.sock"
      }
    ]
  },
  {
    "type": 1,
    "title": "pipework-1.1.6",
    "description": "For unRAID 6.2.\r\nPipework allows you to have a dedicated IP for a docker container.\r\nThis is the unraid implementation of the dreamcat4 pipework docker container",
    "categories": [
      "Other:",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "For unRAID 6.2.\r\nPipework allows you to have a dedicated IP for a docker container.\r\nThis is the unraid implementation of the dreamcat4 pipework docker container",
    "logo": "https://raw.githubusercontent.com/tinglis1/docker-containers/master/pipework/pipework-icon.png",
    "name": "pipework-1.1.6",
    "image": "dreamcat4/pipework",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/docker.sock",
        "bind": "/var/run/docker.sock"
      }
    ],
    "env": [
      {
        "name": "run_mode",
        "label": "run_mode",
        "default": "batch,daemon"
      },
      {
        "name": "host_routes",
        "label": "host_routes",
        "default": "true"
      },
      {
        "name": "DOCKER_API_VERSION",
        "label": "DOCKER_API_VERSION",
        "default": "1.22"
      }
    ]
  },
  {
    "type": 1,
    "title": "Google-MusicManager",
    "description": "Upload your personal music collection to Google Play Music",
    "categories": [
      "Backup:",
      "Cloud:",
      "MediaApp:Music",
      "MediaServer:Music"
    ],
    "platform": "linux",
    "note": "Upload your personal music collection to Google Play Music",
    "logo": "https://i.imgur.com/E9wSQ9N.png",
    "name": "Google-MusicManager",
    "image": "ruippeixotog/google-musicmanager:dev",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5900": "0:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/music",
        "bind": ""
      },
      {
        "container": "/appdata",
        "bind": "/mnt/cache/appdata/google-musicmanager"
      }
    ],
    "env": [
      {
        "name": "BRANCH",
        "label": "BRANCH",
        "default": "dev"
      }
    ]
  },
  {
    "type": 1,
    "title": "EmbyServer",
    "description": "Emby Server is a home media server built on top of other popular open source technologies such as Service Stack, jQuery, jQuery mobile, and Mono. Bringing together movies, music, television and more in one dazzling interface.",
    "categories": [
      "MediaServer:Video",
      "MediaServer:Music",
      "MediaServer:Photos"
    ],
    "platform": "linux",
    "note": "Emby Server is a home media server built on top of other popular open source technologies such as Service Stack, jQuery, jQuery mobile, and Mono. Bringing together movies, music, television and more in one dazzling interface.",
    "logo": "https://raw.githubusercontent.com/MediaBrowser/Emby.Resources/master/images/Logos/logoicon.png",
    "name": "EmbyServer",
    "image": "emby/embyserver:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "8096": "8096:8096/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/mnt",
        "bind": "/mnt"
      },
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/emby/"
      }
    ],
    "env": [
      {
        "name": "UID",
        "label": "UID",
        "default": "2"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "2"
      },
      {
        "name": "GIDLIST",
        "label": "GIDLIST",
        "default": "2"
      }
    ]
  },
  {
    "type": 1,
    "title": "EmbyServerBeta",
    "description": "Emby Server is a home media server built on top of other popular open source technologies such as Service Stack, jQuery, jQuery mobile, and Mono. Bringing together movies, music, television and more in one dazzling interface.",
    "categories": [
      "MediaServer:Video",
      "MediaServer:Music",
      "MediaServer:Photos",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Emby Server is a home media server built on top of other popular open source technologies such as Service Stack, jQuery, jQuery mobile, and Mono. Bringing together movies, music, television and more in one dazzling interface.",
    "logo": "https://raw.githubusercontent.com/MediaBrowser/Emby.Resources/master/images/Logos/logoicon.png",
    "name": "EmbyServerBeta",
    "image": "emby/embyserver:beta",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "8096": "8096:8096/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/emby/"
      },
      {
        "container": "/mnt",
        "bind": "/mnt"
      }
    ],
    "env": [
      {
        "name": "UID",
        "label": "UID",
        "default": "2"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "2"
      },
      {
        "name": "GIDLIST",
        "label": "GIDLIST",
        "default": "2"
      }
    ]
  },
  {
    "type": 1,
    "title": "brewpi-wifi",
    "description": "BrewPi is an open source temprature controller availible at http://www.brewpi.com/",
    "categories": [
      "Other:"
    ],
    "platform": "linux",
    "note": "BrewPi is an open source temprature controller availible at http://www.brewpi.com/",
    "logo": "https://raw.githubusercontent.com/quimnut/unraid-docker-templates/master/quimnut/brewpi-wifi.png",
    "name": "brewpi-wifi",
    "image": "quimnut/brewpi-wifi",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "8068:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/home/brewpi/data",
        "bind": "path to python data"
      },
      {
        "container": "/var/www/data",
        "bind": "path to web data"
      }
    ],
    "env": [
      {
        "name": "AVR",
        "label": "AVR",
        "default": "192.168.1.1:23"
      }
    ]
  },
  {
    "type": 1,
    "title": "cloud9ide",
    "description": "Cloud9 is a web IDE from https://c9.io/",
    "categories": [
      "Cloud:",
      "Productivity:",
      "Tools:Utilities",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Cloud9 is a web IDE from https://c9.io/",
    "logo": "https://raw.githubusercontent.com/quimnut/unraid-docker-templates/master/quimnut/c9icon.png",
    "name": "cloud9ide",
    "image": "quimnut/cloud9ide",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8064:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/workspace",
        "bind": "path to your cloud9 workspace"
      }
    ],
    "env": [
      {
        "name": "C9USER",
        "label": "C9USER",
        "default": "cloud9"
      },
      {
        "name": "C9PASS",
        "label": "C9PASS",
        "default": "cloud9"
      }
    ]
  },
  {
    "type": 1,
    "title": "gogs",
    "description": "gogs https://gogs.io/ is a painless self-hosted Git service",
    "categories": [
      "Cloud:",
      "Productivity:",
      "Tools:Utilities",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "gogs https://gogs.io/ is a painless self-hosted Git service",
    "logo": "https://raw.githubusercontent.com/quimnut/unraid-docker-templates/master/quimnut/gogs.png",
    "name": "gogs",
    "image": "gogs/gogs",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "22": "8922:22/tcp",
        "3000": "8930:3000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "path to gogs data"
      }
    ],
    "env": [
      {
        "name": "RUN_CROND",
        "label": "RUN_CROND",
        "default": "true"
      }
    ]
  },
  {
    "type": 1,
    "title": "BarracudaDrive",
    "description": "BarracudaDrive transforms your computer (or device) into a powerful and secure online storage system, letting you access and share files from any connected computer or device in the world.",
    "categories": [
      "Network:Web"
    ],
    "platform": "linux",
    "note": "BarracudaDrive transforms your computer (or device) into a powerful and secure online storage system, letting you access and share files from any connected computer or device in the world.",
    "logo": "https://i.imgur.com/xqhiQe8.png",
    "name": "BarracudaDrive",
    "image": "johnodon/barracudadrive",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/home/nobody",
        "bind": "/mnt/cache/appdata/BarracudaDrive"
      }
    ]
  },
  {
    "type": 1,
    "title": "Gourmet",
    "description": "Gourmet Recipe Manager is a recipe-organizer available for Windows, Linux, and other Unix systems (including Mac OS X, i.e. via the Fink or MacPorts package managers) that allows you to collect, search, organize, and browse your recipes.",
    "categories": [
      "Tools:"
    ],
    "platform": "linux",
    "note": "Gourmet Recipe Manager is a recipe-organizer available for Windows, Linux, and other Unix systems (including Mac OS X, i.e. via the Fink or MacPorts package managers) that allows you to collect, search, organize, and browse your recipes.",
    "logo": "https://i.imgur.com/n7LhKas.png",
    "name": "Gourmet",
    "image": "johnodon/gourmet",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3389": "3389:3389/tcp",
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/Gourmet"
      }
    ]
  },
  {
    "type": 1,
    "title": "Inkscape",
    "description": "Inkscape is professional quality vector graphics software which runs on Windows, Mac OS X and GNU/Linux.",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "Inkscape is professional quality vector graphics software which runs on Windows, Mac OS X and GNU/Linux.",
    "logo": "https://i.imgur.com/MAE6xCp.png",
    "name": "Inkscape",
    "image": "johnodon/inkscape",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3389": "3389:3389/tcp",
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/nobody/.config/inkscape/",
        "bind": "/mnt/cache/appdata/Inkscape"
      }
    ]
  },
  {
    "type": 1,
    "title": "Scribus",
    "description": "Welcome to Scribus, a page layout program for Linux, FreeBSD, PC-BSD, NetBSD, OpenBSD, Solaris, OpenIndiana, Debian GNU/Hurd, Mac OS X, OS/2 Warp 4, eComStation, Haiku and Windows.",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "Welcome to Scribus, a page layout program for Linux, FreeBSD, PC-BSD, NetBSD, OpenBSD, Solaris, OpenIndiana, Debian GNU/Hurd, Mac OS X, OS/2 Warp 4, eComStation, Haiku and Windows.",
    "logo": "https://i.imgur.com/2g3v7pf.png",
    "name": "Scribus",
    "image": "johnodon/scribus",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3389": "3389:3389/tcp",
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/nobody/.scribus",
        "bind": "/mnt/cache/appdata/Scribus"
      }
    ]
  },
  {
    "type": 1,
    "title": "zap2xml",
    "categories": [
      "Downloaders:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "zap2xml is a small and fast command line script that connects to a Zap2it or TVGuide account, downloads the tv listings data, and converts it to XMLTV or XTVD formatted .xml.",
    "logo": "https://i.imgur.com/J9X7aQ1.png",
    "name": "zap2xml",
    "image": "johnodon/zap2xml",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "zap2xml-2lineups",
    "categories": [
      "Downloaders:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "zap2xml is a small and fast command line script that connects to a Zap2it or TVGuide account, downloads the tv listings data, and converts it to XMLTV or XTVD formatted .xml.",
    "logo": "https://i.imgur.com/J9X7aQ1.png",
    "name": "zap2xml-2lineups",
    "image": "johnodon/zap2xml-2lineups",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "Dropbox",
    "description": "What is Dropbox?\r\n\"One place for all your stuff, wherever you are.\"\r\n\r\nDropbox is a home for all your photos, docs, videos, and files. Anything you add to Dropbox will automatically show up on all your computers, phones and even the Dropbox website... so you can access your stuff from anywhere.\r\n\r\nDropbox also makes it super easy to share with others, whether you're a student or professional, parent or grandparent. Even if you accidentally spill a latte on your laptop, have no fear! Relax knowing that your stuff is safe in Dropbox and will never be lost.\r\n\r\nContainer Mountpoints:\r\n* /dropbox : Dropbox home folder. The dropbox app needs to be able to change the folders out to upgrade itself.\r\n* /dropbox/Dropbox : Dropbox user files. This is your sync'd data folder. It can be share or just a plain folder under appdata. Do not use a cache + array folder as the Mover will break your files\r\n\r\nNetwork Ports:\r\n* 17500 : Dropbox LAN sync\r\n* 17500/udp : Dropbox LAN sync\r\n\r\nEnvironment Variables:\r\n* DROPBOX_USER: Dropbox user (default: nobody)\r\n* DROPBOX_USERID: Dropbox user id (default: 99)\r\n* DROPBOX_GROUP: Dropbox user group (default: users)\r\n* DROPBOX_GROUPID: Dropbox user group id (default: 100)",
    "categories": [
      "Cloud:"
    ],
    "platform": "linux",
    "note": "What is Dropbox?\r\n\"One place for all your stuff, wherever you are.\"\r\n\r\nDropbox is a home for all your photos, docs, videos, and files. Anything you add to Dropbox will automatically show up on all your computers, phones and even the Dropbox website... so you can access your stuff from anywhere.\r\n\r\nDropbox also makes it super easy to share with others, whether you're a student or professional, parent or grandparent. Even if you accidentally spill a latte on your laptop, have no fear! Relax knowing that your stuff is safe in Dropbox and will never be lost.\r\n\r\nContainer Mountpoints:\r\n* /dropbox : Dropbox home folder. The dropbox app needs to be able to change the folders out to upgrade itself.\r\n* /dropbox/Dropbox : Dropbox user files. This is your sync'd data folder. It can be share or just a plain folder under appdata. Do not use a cache + array folder as the Mover will break your files\r\n\r\nNetwork Ports:\r\n* 17500 : Dropbox LAN sync\r\n* 17500/udp : Dropbox LAN sync\r\n\r\nEnvironment Variables:\r\n* DROPBOX_USER: Dropbox user (default: nobody)\r\n* DROPBOX_USERID: Dropbox user id (default: 99)\r\n* DROPBOX_GROUP: Dropbox user group (default: users)\r\n* DROPBOX_GROUPID: Dropbox user group id (default: 100)",
    "logo": "https://cf.dropboxstatic.com/static/images/icons/blue_dropbox_glyph-vflJ8-C5d.png",
    "name": "Dropbox",
    "image": "roninkenji/dropbox-docker",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "17500": "17500:17500/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/dropbox",
        "bind": "/mnt/user/appdata/dropbox"
      },
      {
        "container": "/dropbox/Dropbox",
        "bind": "/mnt/cache/Dropbox"
      },
      {
        "container": "/etc/localtime",
        "bind": "/etc/localtime"
      }
    ],
    "env": [
      {
        "name": "DROPBOX_USER",
        "label": "DROPBOX_USER",
        "default": "nobody"
      },
      {
        "name": "DROPBOX_USERID",
        "label": "DROPBOX_USERID",
        "default": "99"
      },
      {
        "name": "DROPBOX_GROUP",
        "label": "DROPBOX_GROUP",
        "default": "users"
      },
      {
        "name": "DROPBOX_GROUPID",
        "label": "DROPBOX_GROUPID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "PS3netsrv-Alpine",
    "categories": [
      "Network:Other",
      "MediaApp:Other",
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "PS3netsrv allows you to play your backups through the network from your unRAID server.",
    "logo": "https://raw.githubusercontent.com/dexn/docker-templates/master/dexn/images/ps3netsrvicon.png",
    "name": "PS3netsrv-Alpine",
    "image": "mccloud/ps3netsrv:alpine",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "PS3netsrv-Debian",
    "categories": [
      "Network:Other",
      "MediaApp:Other",
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "PS3netsrv allows you to play your backups through the network from your unRAID server.",
    "logo": "https://raw.githubusercontent.com/dexn/docker-templates/master/dexn/images/ps3netsrvicon.png",
    "name": "PS3netsrv-Debian",
    "image": "mccloud/ps3netsrv:debian",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "PS3netsrv-Phusion",
    "categories": [
      "Network:Other",
      "MediaApp:Other",
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "PS3netsrv allows you to play your backups through the network from your unRAID server.",
    "logo": "https://raw.githubusercontent.com/dexn/docker-templates/master/dexn/images/ps3netsrvicon.png",
    "name": "PS3netsrv-Phusion",
    "image": "mccloud/ps3netsrv:phusion",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "PS3netsrv-Ubuntu",
    "categories": [
      "Network:Other",
      "MediaApp:Other",
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "PS3netsrv allows you to play your backups through the network from your unRAID server.",
    "logo": "https://raw.githubusercontent.com/dexn/docker-templates/master/dexn/images/ps3netsrvicon.png",
    "name": "PS3netsrv-Ubuntu",
    "image": "mccloud/ps3netsrv:ubuntu",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "Booksonic",
    "categories": [
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "Booksonic is a server and an app for streaming your audiobooks to any pc or android phone. Most of the functionality is also availiable on other platforms that have apps for subsonic.",
    "logo": "https://booksonic.org/assets/img/booksonic.png",
    "name": "Booksonic",
    "image": "ironicbadger/booksonic",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "MagRack",
    "description": "MagRack is a lightweight java based application to make reading PDF files (magazines) more convienent.  This application does not download magazines.  It is expected the user aleady has automation setup for magazine downloading.",
    "categories": [
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "MagRack is a lightweight java based application to make reading PDF files (magazines) more convienent.  This application does not download magazines.  It is expected the user aleady has automation setup for magazine downloading.",
    "logo": "https://raw.githubusercontent.com/magmpzero/docker-templates/master/icon.png",
    "name": "MagRack",
    "image": "magmpzero/magrack",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "4567": "4567:4567/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/mags",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "BRANCH",
        "label": "BRANCH",
        "default": "master"
      }
    ]
  },
  {
    "type": 1,
    "title": "DemonSaw-Client",
    "description": "Docker container to run a DemonSaw Client with web RDP access.",
    "categories": [
      "Other:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Docker container to run a DemonSaw Client with web RDP access.",
    "logo": "https://raw.githubusercontent.com/miketweaver/demonsaw-client/master/Demonsaw-Logo-with-text.png",
    "name": "DemonSaw-Client",
    "image": "bashninja/demonsaw-client",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/nobody/share",
        "bind": ""
      },
      {
        "container": "/nobody/downloads",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Pritunl",
    "description": "Run a Pritunl VPN Server",
    "categories": [
      "Network:Other",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Run a Pritunl VPN Server",
    "logo": "https://raw.githubusercontent.com/bashNinja-dockers/docker-pritunl/0cf3b425/logo.png",
    "name": "Pritunl",
    "image": "bashninja/docker-pritunl",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "1194": "1194:1194/tcp",
        "443": "9700:443/tcp",
        "80": "9699:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/pritunl"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "PS3NetSrv",
    "description": "PS3netsrv is a program that allows Multiman or Webman to play game backups that are stored on your unRAID server.",
    "categories": [
      "Network:Other",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "PS3netsrv is a program that allows Multiman or Webman to play game backups that are stored on your unRAID server.",
    "logo": "https://raw.githubusercontent.com/miketweaver/docker-templates/master/bashninja/ps3netsrvicon.png",
    "name": "PS3NetSrv",
    "image": "shawly/ps3netsrv",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "38008": "38008:38008/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/games",
        "bind": "/mnt/user/"
      }
    ],
    "env": [
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Starbound-GOG-Server",
    "description": "Docker container to run a GOG Starbound Server.",
    "categories": [
      "Other:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Docker container to run a GOG Starbound Server.",
    "logo": "https://raw.githubusercontent.com/miketweaver/docker-starbound-server/master/starbound.png",
    "name": "Starbound-GOG-Server",
    "image": "bashninja/docker-gog-starbound-server",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "21025": "21025:21025/tcp",
        "21026": "21026:21026/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/starbound",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "DashBtn",
    "description": "Amazon Dash Button Interceptor",
    "categories": [
      "HomeAutomation:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Amazon Dash Button Interceptor",
    "logo": "https://raw.githubusercontent.com/ninthwalker/docker-templates/master/Ninthwalker/images/dashbtn.png",
    "name": "DashBtn",
    "image": "ninthwalker/dashbtn",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/DashBtn"
      }
    ]
  },
  {
    "type": 1,
    "title": "nowshowing",
    "description": "Please use the new NowShowing v2 app (also found here in Community Apps).\n   This version is no longer being updated or supported. Thanks!",
    "categories": [
      "MediaApp:Video",
      "MediaServer:Video"
    ],
    "platform": "linux",
    "note": "Please use the new NowShowing v2 app (also found here in Community Apps).\n   This version is no longer being updated or supported. Thanks!",
    "logo": "https://raw.githubusercontent.com/ninthwalker/NowShowing/master/images/nowshowing-icon.png",
    "name": "nowshowing",
    "image": "ninthwalker/nowshowing",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6878": "6878:6878/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/cache/appdata/NowShowing"
      }
    ],
    "env": [
      {
        "name": "PLEX_USERNAME",
        "label": "PLEX_USERNAME",
        "default": ""
      },
      {
        "name": "PLEX_PASSWORD",
        "label": "PLEX_PASSWORD",
        "default": ""
      },
      {
        "name": "SMTP_PORT",
        "label": "SMTP_PORT",
        "default": ""
      },
      {
        "name": "EMAIL_USERNAME",
        "label": "EMAIL_USERNAME",
        "default": ""
      },
      {
        "name": "EMAIL_PASSWORD",
        "label": "EMAIL_PASSWORD",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PLEX_SERVER_IP",
        "label": "PLEX_SERVER_IP",
        "default": ""
      },
      {
        "name": "PLEX_TOKEN",
        "label": "PLEX_TOKEN",
        "default": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "SMTP_SERVER",
        "label": "SMTP_SERVER",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "NowShowing-v2",
    "description": "Sends an email and creates a website of recently added media to your Plex Server.\n    Access the admin web interface by going to http://ip:port/admin.\n    To enable fail2ban, please add \"--cap-add=NET_ADMIN\" to the Docker settings 'Extra Parameters:' field.\n    This field can be shown by enabling Advanced View by clicking the 'basic' toggle switch in unRAID.",
    "categories": [
      "MediaApp:Video",
      "MediaServer:Video"
    ],
    "platform": "linux",
    "note": "Sends an email and creates a website of recently added media to your Plex Server.\n    Access the admin web interface by going to http://ip:port/admin.\n    To enable fail2ban, please add \"--cap-add=NET_ADMIN\" to the Docker settings 'Extra Parameters:' field.\n    This field can be shown by enabling Advanced View by clicking the 'basic' toggle switch in unRAID.",
    "logo": "https://raw.githubusercontent.com/ninthwalker/NowShowing/master/images/nowshowing-icon.png",
    "name": "NowShowing-v2",
    "image": "ninthwalker/nowshowing:v2",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6878": "6878:6878/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/cache/appdata/NowShowing"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "plexReport",
    "description": "plexReport generates an email to send to your users with all the latest Plex content",
    "categories": [
      "MediaApp:Video",
      "MediaServer:Video"
    ],
    "platform": "linux",
    "note": "plexReport generates an email to send to your users with all the latest Plex content",
    "logo": "https://raw.githubusercontent.com/ninthwalker/docker-templates/master/brentsflix/images/plexreportlogo.png",
    "name": "plexReport",
    "image": "ninthwalker/plexreport",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/plexreport/"
      }
    ]
  },
  {
    "type": 1,
    "title": "slack-invite",
    "description": "Creates a simple webpage for Slack invite signups",
    "categories": [
      "Network:Messenger",
      "Productivity:"
    ],
    "platform": "linux",
    "note": "Creates a simple webpage for Slack invite signups",
    "logo": "https://raw.githubusercontent.com/ninthwalker/docker-templates/master/brentsflix/images/slack-square.png",
    "name": "slack-invite",
    "image": "ninthwalker/slack-invite",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "7879": "7879:7879/tcp"
      }
    ],
    "env": [
      {
        "name": "COMMUNITY_NAME",
        "label": "COMMUNITY_NAME",
        "default": "myslackteam"
      },
      {
        "name": "SLACK_URL",
        "label": "SLACK_URL",
        "default": "myslackteam.slack.com"
      },
      {
        "name": "SLACK_TOKEN",
        "label": "SLACK_TOKEN",
        "default": "Enter YOur slack token here"
      }
    ]
  },
  {
    "type": 1,
    "title": "delugevpn-flexget",
    "description": "Deluge is a full-featured ​BitTorrent client for Linux, OS X, Unix and Windows. It uses ​libtorrent in its backend and features multiple user-interfaces including: GTK+, web and console. It has been designed using the client server model with a daemon process that handles all the bittorrent activity. The Deluge daemon is able to run on headless machines with the user-interfaces being able to connect remotely from any platform.\n    This Docker includes Flexget \u0026 OpenVPN to ensure a secure and private connection to the Internet, including use of iptables to prevent IP leakage when the tunnel is down. It also includes Privoxy to allow unfiltered access to index sites, to use Privoxy please point your application at \"host ip:8118\"",
    "categories": [
      "Downloaders:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Deluge is a full-featured ​BitTorrent client for Linux, OS X, Unix and Windows. It uses ​libtorrent in its backend and features multiple user-interfaces including: GTK+, web and console. It has been designed using the client server model with a daemon process that handles all the bittorrent activity. The Deluge daemon is able to run on headless machines with the user-interfaces being able to connect remotely from any platform.\n    This Docker includes Flexget \u0026 OpenVPN to ensure a secure and private connection to the Internet, including use of iptables to prevent IP leakage when the tunnel is down. It also includes Privoxy to allow unfiltered access to index sites, to use Privoxy please point your application at \"host ip:8118\"",
    "logo": "https://raw.githubusercontent.com/paulpoco/docker-templates/master/paulpoco/images/Deluge-Flexget-icon.png",
    "name": "delugevpn-flexget",
    "image": "paulpoco/arch-delugevpn",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3539": "3539:3539/tcp",
        "58846": "58846:58846/tcp",
        "58946": "58946:58946/tcp",
        "8112": "8112:8112/tcp",
        "8118": "8118:8118/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/delugevpn-flexget"
      },
      {
        "container": "/Media",
        "bind": "/mnt/user/Media"
      },
      {
        "container": "/home/nobody/.flexget",
        "bind": "/mnt/cache/appdata/flexget"
      }
    ],
    "env": [
      {
        "name": "VPN_PASS",
        "label": "VPN_PASS",
        "default": "vpn password"
      },
      {
        "name": "STRICT_PORT_FORWARD",
        "label": "STRICT_PORT_FORWARD",
        "default": "yes"
      },
      {
        "name": "NAME_SERVERS",
        "label": "NAME_SERVERS",
        "default": "209.222.18.222,84.200.69.80,37.235.1.174,1.1.1.1,209.222.18.218,37.235.1.177,84.200.70.40,1.0.0.1"
      },
      {
        "name": "FLEXGET_WEBUI_PASSWORD",
        "label": "FLEXGET_WEBUI_PASSWORD",
        "default": "password_you_want_to_set"
      },
      {
        "name": "VPN_PROV",
        "label": "VPN_PROV",
        "default": "pia|airvpn|custom"
      },
      {
        "name": "VPN_DEVICE_TYPE",
        "label": "VPN_DEVICE_TYPE",
        "default": "tun|tap"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "VPN_USER",
        "label": "VPN_USER",
        "default": "vpn username"
      },
      {
        "name": "ENABLE_PRIVOXY",
        "label": "ENABLE_PRIVOXY",
        "default": "yes|no"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "VPN_ENABLED",
        "label": "VPN_ENABLED",
        "default": "yes|no"
      },
      {
        "name": "VPN_PROTOCOL",
        "label": "VPN_PROTOCOL",
        "default": "udp|tcp"
      },
      {
        "name": "VPN_OPTIONS",
        "label": "VPN_OPTIONS",
        "default": ""
      },
      {
        "name": "LAN_NETWORK",
        "label": "LAN_NETWORK",
        "default": "192.168.1.0/24"
      },
      {
        "name": "DELUGE_DAEMON_LOG_LEVEL",
        "label": "DELUGE_DAEMON_LOG_LEVEL",
        "default": "info"
      },
      {
        "name": "DELUGE_WEB_LOG_LEVEL",
        "label": "DELUGE_WEB_LOG_LEVEL",
        "default": "info"
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "false|true"
      }
    ]
  },
  {
    "type": 1,
    "title": "delugevpn-flexget-dev",
    "description": "Deluge is a full-featured ​BitTorrent client for Linux, OS X, Unix and Windows. It uses ​libtorrent in its backend and features multiple user-interfaces including: GTK+, web and console. It has been designed using the client server model with a daemon process that handles all the bittorrent activity. The Deluge daemon is able to run on headless machines with the user-interfaces being able to connect remotely from any platform.\n    This Docker includes Flexget \u0026 OpenVPN to ensure a secure and private connection to the Internet, including use of iptables to prevent IP leakage when the tunnel is down. It also includes Privoxy to allow unfiltered access to index sites, to use Privoxy please point your application at \"host ip:8118\"",
    "categories": [
      "Downloaders:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Deluge is a full-featured ​BitTorrent client for Linux, OS X, Unix and Windows. It uses ​libtorrent in its backend and features multiple user-interfaces including: GTK+, web and console. It has been designed using the client server model with a daemon process that handles all the bittorrent activity. The Deluge daemon is able to run on headless machines with the user-interfaces being able to connect remotely from any platform.\n    This Docker includes Flexget \u0026 OpenVPN to ensure a secure and private connection to the Internet, including use of iptables to prevent IP leakage when the tunnel is down. It also includes Privoxy to allow unfiltered access to index sites, to use Privoxy please point your application at \"host ip:8118\"",
    "logo": "https://raw.githubusercontent.com/paulpoco/docker-templates/master/paulpoco/images/Deluge-Flexget-icon.png",
    "name": "delugevpn-flexget-dev",
    "image": "paulpoco/arch-delugevpn-dev:Dev",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3539": "3539:3539/tcp",
        "58846": "58846:58846/tcp",
        "58946": "58946:58946/tcp",
        "8112": "8112:8112/tcp",
        "8118": "8118:8118/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/delugevpn-flexget-dev"
      },
      {
        "container": "/Media",
        "bind": "/mnt/user/Media"
      },
      {
        "container": "/home/nobody/.flexget",
        "bind": "/mnt/cache/appdata/flexgetdev"
      }
    ],
    "env": [
      {
        "name": "FLEXGET_WEBUI_PASSWORD",
        "label": "FLEXGET_WEBUI_PASSWORD",
        "default": "password_you_want_to_set"
      },
      {
        "name": "VPN_DEVICE_TYPE",
        "label": "VPN_DEVICE_TYPE",
        "default": "tun|tap"
      },
      {
        "name": "LAN_NETWORK",
        "label": "LAN_NETWORK",
        "default": "192.168.1.0/24"
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "false|true"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "ENABLE_PRIVOXY",
        "label": "ENABLE_PRIVOXY",
        "default": "yes|no"
      },
      {
        "name": "DELUGE_DAEMON_LOG_LEVEL",
        "label": "DELUGE_DAEMON_LOG_LEVEL",
        "default": "info"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "DELUGE_WEB_LOG_LEVEL",
        "label": "DELUGE_WEB_LOG_LEVEL",
        "default": "info"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "VPN_ENABLED",
        "label": "VPN_ENABLED",
        "default": "yes|no"
      },
      {
        "name": "VPN_USER",
        "label": "VPN_USER",
        "default": "vpn username"
      },
      {
        "name": "VPN_PASS",
        "label": "VPN_PASS",
        "default": "vpn password"
      },
      {
        "name": "VPN_PROTOCOL",
        "label": "VPN_PROTOCOL",
        "default": "udp|tcp"
      },
      {
        "name": "VPN_PROV",
        "label": "VPN_PROV",
        "default": "pia|airvpn|custom"
      },
      {
        "name": "VPN_OPTIONS",
        "label": "VPN_OPTIONS",
        "default": ""
      },
      {
        "name": "STRICT_PORT_FORWARD",
        "label": "STRICT_PORT_FORWARD",
        "default": "yes"
      },
      {
        "name": "NAME_SERVERS",
        "label": "NAME_SERVERS",
        "default": "209.222.18.222,84.200.69.80,37.235.1.174,1.1.1.1,209.222.18.218,37.235.1.177,84.200.70.40,1.0.0.1"
      }
    ]
  },
  {
    "type": 1,
    "title": "crushftp",
    "description": "CrushFTP is an extremely powerful, easy to use FTP solution.",
    "categories": [
      "Network:FTP",
      "Network:Other",
      "Network:Web"
    ],
    "platform": "linux",
    "note": "CrushFTP is an extremely powerful, easy to use FTP solution.",
    "name": "crushftp",
    "image": "stuckless/crushftp",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "9021": "9021:9021/tcp",
        "9090": "9090:9090/tcp",
        "9443": "9443:9443/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/opt/CrushFTP8_PC",
        "bind": "/mnt/user/appdata/crushftp/"
      },
      {
        "container": "/files",
        "bind": "/mnt/user/ftpfiles/"
      },
      {
        "container": "/unraid",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "CRUSHPASSWORD",
        "label": "CRUSHPASSWORD",
        "default": "crush8password$"
      }
    ]
  },
  {
    "type": 1,
    "title": "crazifuzzy-opendct",
    "description": "An open source digital cable tuner network encoder for SageTV.",
    "categories": [
      "MediaServer:Video"
    ],
    "platform": "linux",
    "note": "An open source digital cable tuner network encoder for SageTV.",
    "logo": "https://raw.githubusercontent.com/OpenSageTV/sagetv-miniclient/master/playstore/ic_launcher-web.png",
    "name": "crazifuzzy-opendct",
    "image": "crazifuzzy/opendct",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/var/log/opendct",
        "bind": "/mnt/user/appdata/opendct/log"
      },
      {
        "container": "/opt/opendct",
        "bind": "/mnt/user/appdata/opendct/opt"
      },
      {
        "container": "/etc/opendct",
        "bind": "/mnt/user/appdata/opendct/etc"
      }
    ],
    "env": [
      {
        "name": "VERSION",
        "label": "VERSION",
        "default": "latest"
      }
    ]
  },
  {
    "type": 1,
    "title": "stuckless-sagetv-server-java7",
    "description": "SageTV is an Open Source PVR and Media Player",
    "categories": [
      "MediaApp:Video",
      "MediaApp:Music",
      "MediaApp:Photos",
      "MediaServer:Video",
      "MediaServer:Music",
      "MediaServer:Photos"
    ],
    "platform": "linux",
    "note": "SageTV is an Open Source PVR and Media Player",
    "logo": "https://raw.githubusercontent.com/OpenSageTV/sagetv-miniclient/master/playstore/ic_launcher-web.png",
    "name": "stuckless-sagetv-server-java7",
    "image": "stuckless/sagetv-server-java7",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "16867": "16867:16867/udp",
        "16869": "16869:16869/udp",
        "16881": "16881:16881/tcp",
        "31099": "31099:31099/tcp",
        "31100": "31100:31100/udp",
        "42024": "42024:42024/tcp",
        "7818": "7818:7818/tcp",
        "8080": "8080:8080/tcp",
        "8270": "8270:8270/udp"
      }
    ],
    "volumes": [
      {
        "container": "/opt/sagetv",
        "bind": "/mnt/user/appdata/sagetv/"
      },
      {
        "container": "/var/media",
        "bind": "/mnt/user/sagemedia/"
      },
      {
        "container": "/var/mediaext",
        "bind": "/mnt/user/media/videos/"
      },
      {
        "container": "/unraid",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "OPT_GENTUNER",
        "label": "OPT_GENTUNER",
        "default": "Y"
      },
      {
        "name": "OPT_COMMANDIR",
        "label": "OPT_COMMANDIR",
        "default": "N"
      },
      {
        "name": "OPT_COMSKIP",
        "label": "OPT_COMSKIP",
        "default": "Y"
      },
      {
        "name": "OPT_SETPERMS",
        "label": "OPT_SETPERMS",
        "default": "Y"
      },
      {
        "name": "OPT_LIRC",
        "label": "OPT_LIRC",
        "default": "N"
      },
      {
        "name": "VERSION",
        "label": "VERSION",
        "default": "latest"
      },
      {
        "name": "JAVA_MEM_MB",
        "label": "JAVA_MEM_MB",
        "default": "768"
      },
      {
        "name": "LICENCE_DATA",
        "label": "LICENCE_DATA",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "stuckless-sagetv-server-java8",
    "description": "SageTV is an Open Source PVR and Media Player",
    "categories": [
      "MediaApp:Video",
      "MediaApp:Music",
      "MediaApp:Photos",
      "MediaServer:Video",
      "MediaServer:Music",
      "MediaServer:Photos"
    ],
    "platform": "linux",
    "note": "SageTV is an Open Source PVR and Media Player",
    "logo": "https://raw.githubusercontent.com/OpenSageTV/sagetv-miniclient/master/playstore/ic_launcher-web.png",
    "name": "stuckless-sagetv-server-java8",
    "image": "stuckless/sagetv-server-java8",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "16867": "16867:16867/udp",
        "16869": "16869:16869/udp",
        "16881": "16881:16881/tcp",
        "31099": "31099:31099/tcp",
        "31100": "31100:31100/udp",
        "42024": "42024:42024/tcp",
        "7818": "7818:7818/tcp",
        "8080": "8080:8080/tcp",
        "8270": "8270:8270/udp"
      }
    ],
    "volumes": [
      {
        "container": "/var/media",
        "bind": "/mnt/user/sagemedia/"
      },
      {
        "container": "/var/mediaext",
        "bind": "/mnt/user/media/videos/"
      },
      {
        "container": "/unraid",
        "bind": "/mnt/user"
      },
      {
        "container": "/opt/sagetv",
        "bind": "/mnt/user/appdata/sagetv/"
      }
    ],
    "env": [
      {
        "name": "OPT_COMSKIP",
        "label": "OPT_COMSKIP",
        "default": "Y"
      },
      {
        "name": "OPT_SETPERMS",
        "label": "OPT_SETPERMS",
        "default": "Y"
      },
      {
        "name": "OPT_LIRC",
        "label": "OPT_LIRC",
        "default": "N"
      },
      {
        "name": "VERSION",
        "label": "VERSION",
        "default": "latest"
      },
      {
        "name": "JAVA_MEM_MB",
        "label": "JAVA_MEM_MB",
        "default": "768"
      },
      {
        "name": "LICENCE_DATA",
        "label": "LICENCE_DATA",
        "default": ""
      },
      {
        "name": "OPT_GENTUNER",
        "label": "OPT_GENTUNER",
        "default": "Y"
      },
      {
        "name": "OPT_COMMANDIR",
        "label": "OPT_COMMANDIR",
        "default": "N"
      }
    ]
  },
  {
    "type": 1,
    "title": "stuckless-sagetv-server-java9",
    "description": "SageTV is an Open Source PVR and Media Player",
    "categories": [
      "MediaApp:Video",
      "MediaApp:Music",
      "MediaApp:Photos",
      "MediaServer:Video",
      "MediaServer:Music",
      "MediaServer:Photos"
    ],
    "platform": "linux",
    "note": "SageTV is an Open Source PVR and Media Player",
    "logo": "https://raw.githubusercontent.com/OpenSageTV/sagetv-miniclient/master/playstore/ic_launcher-web.png",
    "name": "stuckless-sagetv-server-java9",
    "image": "stuckless/sagetv-server-java9",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "16867": "16867:16867/udp",
        "16869": "16869:16869/udp",
        "16881": "16881:16881/tcp",
        "31099": "31099:31099/tcp",
        "31100": "31100:31100/udp",
        "42024": "42024:42024/tcp",
        "7818": "7818:7818/tcp",
        "8080": "8080:8080/tcp",
        "8270": "8270:8270/udp"
      }
    ],
    "volumes": [
      {
        "container": "/unraid",
        "bind": "/mnt/user"
      },
      {
        "container": "/opt/sagetv",
        "bind": "/mnt/user/appdata/sagetv/"
      },
      {
        "container": "/var/media",
        "bind": "/mnt/user/sagemedia/"
      },
      {
        "container": "/var/mediaext",
        "bind": "/mnt/user/media/videos/"
      }
    ],
    "env": [
      {
        "name": "OPT_SETPERMS",
        "label": "OPT_SETPERMS",
        "default": "Y"
      },
      {
        "name": "OPT_LIRC",
        "label": "OPT_LIRC",
        "default": "N"
      },
      {
        "name": "VERSION",
        "label": "VERSION",
        "default": "latest"
      },
      {
        "name": "JAVA_MEM_MB",
        "label": "JAVA_MEM_MB",
        "default": "768"
      },
      {
        "name": "LICENCE_DATA",
        "label": "LICENCE_DATA",
        "default": ""
      },
      {
        "name": "OPT_GENTUNER",
        "label": "OPT_GENTUNER",
        "default": "Y"
      },
      {
        "name": "OPT_COMMANDIR",
        "label": "OPT_COMMANDIR",
        "default": "N"
      },
      {
        "name": "OPT_COMSKIP",
        "label": "OPT_COMSKIP",
        "default": "Y"
      }
    ]
  },
  {
    "type": 1,
    "title": "stuckless-sagetv-server-java10",
    "description": "SageTV is an Open Source PVR and Media Player",
    "categories": [
      "MediaApp:Video",
      "MediaApp:Music",
      "MediaApp:Photos",
      "MediaServer:Video",
      "MediaServer:Music",
      "MediaServer:Photos"
    ],
    "platform": "linux",
    "note": "SageTV is an Open Source PVR and Media Player",
    "logo": "https://raw.githubusercontent.com/OpenSageTV/sagetv-miniclient/master/playstore/ic_launcher-web.png",
    "name": "stuckless-sagetv-server-java10",
    "image": "stuckless/sagetv-server-java10",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "16867": "16867:16867/udp",
        "16869": "16869:16869/udp",
        "16881": "16881:16881/tcp",
        "31099": "31099:31099/tcp",
        "31100": "31100:31100/udp",
        "42024": "42024:42024/tcp",
        "7818": "7818:7818/tcp",
        "8080": "8080:8080/tcp",
        "8270": "8270:8270/udp"
      }
    ],
    "volumes": [
      {
        "container": "/var/mediaext",
        "bind": "/mnt/user/media/videos/"
      },
      {
        "container": "/unraid",
        "bind": "/mnt/user"
      },
      {
        "container": "/opt/sagetv",
        "bind": "/mnt/user/appdata/sagetv/"
      },
      {
        "container": "/var/media",
        "bind": "/mnt/user/sagemedia/"
      }
    ],
    "env": [
      {
        "name": "OPT_GENTUNER",
        "label": "OPT_GENTUNER",
        "default": "Y"
      },
      {
        "name": "OPT_COMMANDIR",
        "label": "OPT_COMMANDIR",
        "default": "N"
      },
      {
        "name": "OPT_COMSKIP",
        "label": "OPT_COMSKIP",
        "default": "Y"
      },
      {
        "name": "OPT_SETPERMS",
        "label": "OPT_SETPERMS",
        "default": "Y"
      },
      {
        "name": "OPT_LIRC",
        "label": "OPT_LIRC",
        "default": "N"
      },
      {
        "name": "VERSION",
        "label": "VERSION",
        "default": "latest"
      },
      {
        "name": "JAVA_MEM_MB",
        "label": "JAVA_MEM_MB",
        "default": "768"
      },
      {
        "name": "LICENCE_DATA",
        "label": "LICENCE_DATA",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "GitLab-CE",
    "description": "GitLab Community Edition docker image based on the Omnibus package.",
    "categories": [
      "Backup:",
      "Cloud:",
      "Network:Web",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "GitLab Community Edition docker image based on the Omnibus package.",
    "logo": "https://raw.githubusercontent.com/tynor88/docker-templates/master/images/gitlab_small.png",
    "name": "GitLab-CE",
    "image": "gitlab/gitlab-ce",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "22": "9022:22/tcp",
        "9080": "9080:9080/tcp",
        "9443": "9443:9443/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/gitlab",
        "bind": "/mnt/cache/appdata/gitlab-ce/config"
      },
      {
        "container": "/var/opt/gitlab",
        "bind": "/mnt/cache/appdata/gitlab-ce/data"
      },
      {
        "container": "/var/log/gitlab",
        "bind": "/mnt/cache/appdata/gitlab-ce/log"
      }
    ]
  },
  {
    "type": 1,
    "title": "gitlab-runner",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "GitLab CI Multi Runner used to fetch and run pipeline jobs with GitLab CI   Converted By Community Applications   Always verify this template (and values) against the dockerhub support page for the container",
    "logo": "https://raw.githubusercontent.com/smccloud/docker-templates/master/images/gitlab_small.png",
    "name": "gitlab-runner",
    "image": "gitlab/gitlab-runner",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "Rclone",
    "description": "Docker for Rclone - a command line program to sync files and directories to and from various cloud services.",
    "categories": [
      "Backup:",
      "Cloud:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Docker for Rclone - a command line program to sync files and directories to and from various cloud services.",
    "logo": "https://raw.githubusercontent.com/tynor88/docker-templates/master/images/rclone_small.png",
    "name": "Rclone",
    "image": "tynor88/rclone:dev",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/rclone/config/"
      },
      {
        "container": "/data",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "SYNC_DESTINATION",
        "label": "SYNC_DESTINATION",
        "default": ""
      },
      {
        "name": "SYNC_DESTINATION_SUBPATH",
        "label": "SYNC_DESTINATION_SUBPATH",
        "default": ""
      },
      {
        "name": "CRON_SCHEDULE",
        "label": "CRON_SCHEDULE",
        "default": ""
      },
      {
        "name": "SYNC_COMMAND",
        "label": "SYNC_COMMAND",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Rclone-mount",
    "description": "Docker for Rclone FUSE mount feature (exposable to host and other docker containers, e.g. Plex, Nextcloud, glFTPd)",
    "categories": [
      "Backup:",
      "Cloud:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Docker for Rclone FUSE mount feature (exposable to host and other docker containers, e.g. Plex, Nextcloud, glFTPd)",
    "logo": "https://raw.githubusercontent.com/tynor88/docker-templates/master/images/rclone_small.png",
    "name": "Rclone-mount",
    "image": "tynor88/rclone-mount:dev",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/rclone/config/"
      }
    ],
    "env": [
      {
        "name": "RCLONE_REMOTE_MOUNT",
        "label": "RCLONE_REMOTE_MOUNT",
        "default": ""
      },
      {
        "name": "RCLONE_MOUNT_OPTIONS",
        "label": "RCLONE_MOUNT_OPTIONS",
        "default": ""
      },
      {
        "name": "RCLONE_CONFIG_PASS",
        "label": "RCLONE_CONFIG_PASS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "socat",
    "description": "Socat is a command line based utility that establishes two bidirectional byte streams and transfers data between them.",
    "categories": [
      "Network:Proxy",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "Socat is a command line based utility that establishes two bidirectional byte streams and transfers data between them.",
    "logo": "https://raw.githubusercontent.com/tynor88/docker-templates/master/images/socat_small.png",
    "name": "socat",
    "image": "tynor88/socat",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "0": "100:0/tcp",
        "443": "443:443/tcp"
      }
    ],
    "env": [
      {
        "name": "FORWARD_PORT",
        "label": "FORWARD_PORT",
        "default": "943"
      },
      {
        "name": "LISTEN_PORT",
        "label": "LISTEN_PORT",
        "default": "443"
      }
    ]
  },
  {
    "type": 1,
    "title": "UnoEuroDNS",
    "description": "Keep your DNS records for your own domains updated with this UnoEuro DDNS script.",
    "categories": [
      "Network:DNS"
    ],
    "platform": "linux",
    "note": "Keep your DNS records for your own domains updated with this UnoEuro DDNS script.",
    "logo": "https://raw.githubusercontent.com/tynor88/docker-templates/master/images/unoeuro_small.png",
    "name": "UnoEuroDNS",
    "image": "tynor88/unoeuro-dns",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "HOSTNAME",
        "label": "HOSTNAME",
        "default": ""
      },
      {
        "name": "APIKEY",
        "label": "APIKEY",
        "default": ""
      },
      {
        "name": "PUSHBULLET_ACCESS_TOKEN",
        "label": "PUSHBULLET_ACCESS_TOKEN",
        "default": ""
      },
      {
        "name": "DOMAIN",
        "label": "DOMAIN",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Bjonness406-convert2mkv",
    "description": "A docker to convert your videos to mkv or mp4 \r\n\r\nWhen you start the container, it will start the script, and stop when the script is finished. \r\nSo you will need to restart the container when you add a file you want to convert\r\nYou will need to place the videos you want to convert, in the appdata folder (/config).\r\n\r\nThanks to @ntrevena (at plex forum) for the script!",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "A docker to convert your videos to mkv or mp4 \r\n\r\nWhen you start the container, it will start the script, and stop when the script is finished. \r\nSo you will need to restart the container when you add a file you want to convert\r\nYou will need to place the videos you want to convert, in the appdata folder (/config).\r\n\r\nThanks to @ntrevena (at plex forum) for the script!",
    "logo": "https://raw.githubusercontent.com/bjonness406/Docker-templates/master/Icon/avi-to-mkv.jpg",
    "name": "Bjonness406-convert2mkv",
    "image": "bjonness406/convert2mkv",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/convert2mkv"
      }
    ]
  },
  {
    "type": 1,
    "title": "Bjonness406-Ombi",
    "description": "Ombi is a simple automated way for users to request new content on for example Plex.\r\n    /config is where the Ombi configuration and library files are stored. \r\n    Thanks to rogueosb for creating the docker!",
    "categories": [
      "HomeAutomation:",
      "Network:Web",
      "MediaApp:Other"
    ],
    "platform": "linux",
    "note": "Ombi is a simple automated way for users to request new content on for example Plex.\r\n    /config is where the Ombi configuration and library files are stored. \r\n    Thanks to rogueosb for creating the docker!",
    "logo": "https://raw.githubusercontent.com/bjonness406/Docker-templates/master/Icon/Ombi_new.png",
    "name": "Bjonness406-Ombi",
    "image": "rogueosb/ombi",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3579": "3579:3579/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "path to config"
      }
    ],
    "env": [
      {
        "name": "DEV",
        "label": "DEV",
        "default": "0"
      }
    ]
  },
  {
    "type": 1,
    "title": "activ-flexget",
    "description": "FlexGet is a multipurpose automation tool for content like torrents, nzbs, podcasts, comics, series, movies, etc. It can use different kinds of sources like RSS-feeds, html pages, csv files, search engines and there are even plugins for sites that do not provide any kind of useful feeds. \n \tThe default port used is 3539 for the web interface.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "FlexGet is a multipurpose automation tool for content like torrents, nzbs, podcasts, comics, series, movies, etc. It can use different kinds of sources like RSS-feeds, html pages, csv files, search engines and there are even plugins for sites that do not provide any kind of useful feeds. \n \tThe default port used is 3539 for the web interface.",
    "logo": "https://raw.githubusercontent.com/activ/docker-templates/master/activ/images/flexget-icon.png",
    "name": "activ-flexget",
    "image": "activ/arch-flexget",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3539": "3539:3539/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "path to config"
      },
      {
        "container": "/mnt",
        "bind": "path to data"
      }
    ],
    "env": [
      {
        "name": "WEB_PASSWD",
        "label": "WEB_PASSWD",
        "default": "fl3xg3t!"
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "false"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "activ-lazylibrarian",
    "description": "This project isn't finished yet. Goal is to create a SickBeard, CouchPotato, Headphones-like application for ebooks. Headphones is used as a base, so there are still a lot of references to it. \n \tThe default port used is 5299 for the web interface.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "This project isn't finished yet. Goal is to create a SickBeard, CouchPotato, Headphones-like application for ebooks. Headphones is used as a base, so there are still a lot of references to it. \n \tThe default port used is 5299 for the web interface.",
    "logo": "https://raw.githubusercontent.com/activ/docker-templates/master/activ/images/lazylibrarian-icon.ico",
    "name": "activ-lazylibrarian",
    "image": "activ/arch-lazylibrarian",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5299": "5299:5299/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "path to config"
      },
      {
        "container": "/downloads",
        "bind": "path to downloads"
      },
      {
        "container": "/books",
        "bind": "path for books"
      }
    ],
    "env": [
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "false"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "activ-transmissionvpn",
    "description": "Transmission is a full-featured ​BitTorrent client for Linux, OS X, Unix and Windows. \n    This Docker includes OpenVPN to ensure a secure and private connection to the Internet, including use of iptables to prevent IP leakage when the tunnel is down. It also includes Privoxy to allow unfiltered access to index sites, to use Privoxy please point your application at \"host ip:8118\"",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "Transmission is a full-featured ​BitTorrent client for Linux, OS X, Unix and Windows. \n    This Docker includes OpenVPN to ensure a secure and private connection to the Internet, including use of iptables to prevent IP leakage when the tunnel is down. It also includes Privoxy to allow unfiltered access to index sites, to use Privoxy please point your application at \"host ip:8118\"",
    "logo": "https://raw.githubusercontent.com/activ/docker-templates/master/activ/images/transmission-icon.png",
    "name": "activ-transmissionvpn",
    "image": "activ/arch-transmissionvpn",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8118": "8118:8118/tcp",
        "9091": "9091:9091/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "path to config"
      },
      {
        "container": "/data",
        "bind": "path for downloads"
      }
    ],
    "env": [
      {
        "name": "VPN_USER",
        "label": "VPN_USER",
        "default": "vpn username"
      },
      {
        "name": "VPN_PASS",
        "label": "VPN_PASS",
        "default": "vpn password"
      },
      {
        "name": "VPN_REMOTE",
        "label": "VPN_REMOTE",
        "default": "nl.privateinternetaccess.com"
      },
      {
        "name": "VPN_PORT",
        "label": "VPN_PORT",
        "default": "1194"
      },
      {
        "name": "VPN_PROV",
        "label": "VPN_PROV",
        "default": "pia|airvpn|custom"
      },
      {
        "name": "ENABLE_PRIVOXY",
        "label": "ENABLE_PRIVOXY",
        "default": "no"
      },
      {
        "name": "LAN_NETWORK",
        "label": "LAN_NETWORK",
        "default": "192.168.1.0/24"
      },
      {
        "name": "VPN_ENABLED",
        "label": "VPN_ENABLED",
        "default": "yes"
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "false"
      },
      {
        "name": "WHITELIST",
        "label": "WHITELIST",
        "default": "192.168.*.*"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "VPN_PROTOCOL",
        "label": "VPN_PROTOCOL",
        "default": "udp"
      }
    ]
  },
  {
    "type": 1,
    "title": "XMLTV-Schedules-Direct",
    "description": "An XMLTV installation based on Debian (including cron) with a JSON added grabber for Schedules Direct. This allows use of Schedules Direct for all supported countries.\n    For those not in the know; XMLTV is a set of programs to process TV (tvguide) listings and manage your TV viewing, storing listings in an XML format.\n    The JSON grabber currently provided with this docker is tv_grab_sd_json. Recently, it has been officially accepted into the XMLTV project.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "An XMLTV installation based on Debian (including cron) with a JSON added grabber for Schedules Direct. This allows use of Schedules Direct for all supported countries.\n    For those not in the know; XMLTV is a set of programs to process TV (tvguide) listings and manage your TV viewing, storing listings in an XML format.\n    The JSON grabber currently provided with this docker is tv_grab_sd_json. Recently, it has been officially accepted into the XMLTV project.",
    "logo": "https://raw.githubusercontent.com/HuxyUK/docker-containers/master/xmltv-sd-json/xmltv-sd-json-icon.png",
    "name": "XMLTV-Schedules-Direct",
    "image": "huxy/xmltv-sd-json",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/XMLTVSchedulesDirect"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/TVGuideXML"
      },
      {
        "container": "/unraid",
        "bind": "/unraid"
      }
    ],
    "env": [
      {
        "name": "STARTUPDAYS",
        "label": "STARTUPDAYS",
        "default": "2"
      },
      {
        "name": "FILENAME",
        "label": "FILENAME",
        "default": "guide.xml"
      },
      {
        "name": "GRABBER",
        "label": "GRABBER",
        "default": "tv_grab_sd_json"
      },
      {
        "name": "DAYS",
        "label": "DAYS",
        "default": "1"
      },
      {
        "name": "OFFSET",
        "label": "OFFSET",
        "default": "0"
      }
    ]
  },
  {
    "type": 1,
    "title": "Chronograf",
    "description": "Chronograf is InfluxData’s open source web application. Use Chronograf with the other components of the TICK stack to visualize your monitoring data and easily create alerting and automation rules.",
    "categories": [
      "Tools:System"
    ],
    "platform": "linux",
    "note": "Chronograf is InfluxData’s open source web application. Use Chronograf with the other components of the TICK stack to visualize your monitoring data and easily create alerting and automation rules.",
    "logo": "https://raw.githubusercontent.com/Data-Monkey/docker-templates/master/Data-Monkey/img/chronograf.png",
    "name": "Chronograf",
    "image": "chronograf",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8888": "8888:8888/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/lib/chronograf",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "neo4j",
    "description": "Neo4j is a highly scalable, robust native graph database.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Neo4j is a highly scalable, robust native graph database.",
    "logo": "https://raw.githubusercontent.com/Data-Monkey/docker-templates/master/Data-Monkey/img/neo4j.png",
    "name": "neo4j",
    "image": "neo4j",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "7474": "7474:7474/tcp",
        "7687": "7687:7687/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/neo4j/data/"
      }
    ],
    "env": [
      {
        "name": "NEO4J_AUTH",
        "label": "NEO4J_AUTH",
        "default": "none"
      }
    ]
  },
  {
    "type": 1,
    "title": "netdata",
    "description": "Real-time performance monitoring, done right! \u0026amp;#xD;\r\n- real-time, per second updates, snappy refreshes!\u0026amp;#xD;\r\n- 300+ charts out of the box, 2000+ metrics monitored!\u0026amp;#xD;\r\n- zero configuration, zero maintenance, zero dependencies!\u0026amp;#xD;\r\nLive demo: http://netdata.firehol.org",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Real-time performance monitoring, done right! \u0026amp;#xD;\r\n- real-time, per second updates, snappy refreshes!\u0026amp;#xD;\r\n- 300+ charts out of the box, 2000+ metrics monitored!\u0026amp;#xD;\r\n- zero configuration, zero maintenance, zero dependencies!\u0026amp;#xD;\r\nLive demo: http://netdata.firehol.org",
    "logo": "https://raw.githubusercontent.com/Data-Monkey/docker-templates/master/Data-Monkey/img/netdata.png",
    "name": "netdata",
    "image": "netdata/netdata",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/host/proc",
        "bind": "/proc"
      },
      {
        "container": "/host/sys",
        "bind": "/sys"
      },
      {
        "container": "/var/run/docker.sock",
        "bind": "/var/run/docker.sock"
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "281"
      },
      {
        "name": "DO_NOT_TRACK",
        "label": "DO_NOT_TRACK",
        "default": "0"
      }
    ]
  },
  {
    "type": 1,
    "title": "Apache-PHP",
    "description": "Apache based web server with basic PHP web server capabilities with the addition of php5-gd, php5-sqlite, php5-intl",
    "categories": [
      "Network:Web"
    ],
    "platform": "linux",
    "note": "Apache based web server with basic PHP web server capabilities with the addition of php5-gd, php5-sqlite, php5-intl",
    "logo": "https://raw.githubusercontent.com/chvb/docker-templates/master/chvb/img/apache-php.png",
    "name": "Apache-PHP",
    "image": "chvb/docker-apache-php",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "8443:443/tcp",
        "80": "8005:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/localtime",
        "bind": "/etc/localtime"
      },
      {
        "container": "/config",
        "bind": "/mnt/disks/SSD/appdata/apache-php/"
      },
      {
        "container": "/web",
        "bind": "/mnt/disks/SSD/www/"
      },
      {
        "container": "/logs",
        "bind": "/mnt/disks/SSD/appdata/apache-php/logs/"
      }
    ]
  },
  {
    "type": 1,
    "title": "Collabora",
    "description": "Collabora/Code Online Development Edition - an awesome, Online Office suite image suitable for home use. You can use Collabora/Code for your Nextcloud an edit your Office Documents Online!",
    "categories": [
      "Cloud:"
    ],
    "platform": "linux",
    "note": "Collabora/Code Online Development Edition - an awesome, Online Office suite image suitable for home use. You can use Collabora/Code for your Nextcloud an edit your Office Documents Online!",
    "logo": "https://raw.githubusercontent.com/chvb/docker-templates/master/chvb/img/collabora.png",
    "name": "Collabora",
    "image": "collabora/code",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "9980": "9980:9980/tcp"
      }
    ],
    "env": [
      {
        "name": "domain",
        "label": "domain",
        "default": "cloud\\\\.yourdomain\\\\.com"
      },
      {
        "name": "username",
        "label": "username",
        "default": "admin"
      },
      {
        "name": "password",
        "label": "password",
        "default": "yourpassword"
      }
    ]
  },
  {
    "type": 1,
    "title": "DVBLink",
    "description": "DVBLink need to enjoy your favorite channels and recordings within your home network and on the go!",
    "categories": [
      "MediaServer:Video"
    ],
    "platform": "linux",
    "note": "DVBLink need to enjoy your favorite channels and recordings within your home network and on the go!",
    "logo": "https://raw.githubusercontent.com/chvb/docker-templates/master/chvb/img/dvblink.jpg",
    "name": "DVBLink",
    "image": "chvb/docker-dvblink",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "22": "2222:22/tcp",
        "39876": "39876:39876/tcp",
        "8100": "8100:8100/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/recordings",
        "bind": "/mnt/user/Recordings"
      },
      {
        "container": "/usr/local/bin/dvblink",
        "bind": "/mnt/user/appdata/DVBLink/config"
      },
      {
        "container": "/opt/DVBLink",
        "bind": "/mnt/user/appdata/DVBLink/data"
      }
    ]
  },
  {
    "type": 1,
    "title": "Kerio-Connect",
    "description": "Kerio Connect is Mail/Groupware like Microsoft Exchange, but running on Linux. More Informations under www.kerio.com/connect",
    "categories": [
      "Network:Web"
    ],
    "platform": "linux",
    "note": "Kerio Connect is Mail/Groupware like Microsoft Exchange, but running on Linux. More Informations under www.kerio.com/connect",
    "logo": "https://raw.githubusercontent.com/chvb/docker-templates/master/chvb/img/kerioconnect.png",
    "name": "Kerio-Connect",
    "image": "chvb/docker-kerio-connect",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "110": "110:110/tcp",
        "119": "119:119/tcp",
        "143": "143:143/tcp",
        "22": "222:22/tcp",
        "25": "25:25/tcp",
        "389": "389:389/tcp",
        "4040": "4040:4040/tcp",
        "443": "4443:443/tcp",
        "465": "465:465/tcp",
        "5222": "5222:5222/tcp",
        "5223": "5223:5223/tcp",
        "563": "563:563/tcp",
        "587": "587:587/tcp",
        "636": "636:636/tcp",
        "80": "8001:80/tcp",
        "993": "993:993/tcp",
        "995": "995:995/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/opt/kerio",
        "bind": "/mnt/user/appdata/KerioConnect"
      },
      {
        "container": "/kerio_store",
        "bind": "/mnt/user/KerioConnect/mailstore"
      },
      {
        "container": "/backup",
        "bind": "/mnt/user/Backup/KerioConnect"
      }
    ]
  },
  {
    "type": 1,
    "title": "OnlyOfficeDocumentServer",
    "description": "This Version is without the connection Limit of 20 Users and supports the mobile editing.\n    ONLYOFFICE Document Server is an online office suite comprising viewers and editors for texts, spreadsheets and presentations, fully compatible with Office Open XML formats: .docx, .xlsx, .pptx and enabling collaborative editing in real time.\n\tHTTPS Support can be enable creating a \"certs\" folder in the data directory and placing onlyoffice.crt and onlyoffice.key in it. Add fonts by placing .ttf in the font folder and force updating the container.",
    "categories": [
      "Productivity:",
      "Tools:"
    ],
    "platform": "linux",
    "note": "This Version is without the connection Limit of 20 Users and supports the mobile editing.\n    ONLYOFFICE Document Server is an online office suite comprising viewers and editors for texts, spreadsheets and presentations, fully compatible with Office Open XML formats: .docx, .xlsx, .pptx and enabling collaborative editing in real time.\n\tHTTPS Support can be enable creating a \"certs\" folder in the data directory and placing onlyoffice.crt and onlyoffice.key in it. Add fonts by placing .ttf in the font folder and force updating the container.",
    "logo": "https://raw.githubusercontent.com/chvb/docker-templates/master/chvb/img/OnlyOfficeDocumentServer.jpg",
    "name": "OnlyOfficeDocumentServer",
    "image": "chvb/onlyofficedocumentserver:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "4430:443/tcp",
        "80": "8080:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/log/onlyoffice",
        "bind": "/mnt/user/appdata/onlyofficeds/logs"
      },
      {
        "container": "/var/www/onlyoffice/Data",
        "bind": "/mnt/user/appdata/onlyofficeds/Data"
      },
      {
        "container": "/var/lib/onlyoffice",
        "bind": "/mnt/user/appdata/onlyofficeds/lib"
      },
      {
        "container": "/var/lib/postgresql",
        "bind": "/mnt/user/appdata/onlyofficeds/database"
      },
      {
        "container": "/usr/share/fonts/",
        "bind": "/mnt/user/appdata/onlyofficeds/fonts"
      }
    ]
  },
  {
    "type": 1,
    "title": "TvhProxy",
    "description": "TvhProxy is a small flask app to proxy requests between Plex Media Server and Tvheadend.You have to run this Docker Container as a seperate IP Address. This Function is supportet with UNRAID 6.4",
    "categories": [
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "TvhProxy is a small flask app to proxy requests between Plex Media Server and Tvheadend.You have to run this Docker Container as a seperate IP Address. This Function is supportet with UNRAID 6.4",
    "logo": "https://raw.githubusercontent.com/chvb/docker-templates/master/chvb/img/tvhproxy.png",
    "name": "TvhProxy",
    "image": "chvb/docker-tvhproxy",
    "restart_policy": "unless-stopped",
    "env": [
      {
        "name": "TVH_URL",
        "label": "TVH_URL",
        "default": "http://username:password@tvheadendip:9981"
      },
      {
        "name": "TVH_TUNER_COUNT",
        "label": "TVH_TUNER_COUNT",
        "default": "4"
      }
    ]
  },
  {
    "type": 1,
    "title": "Webgrabplus",
    "description": "WebGrab+Plus is a XML EPG Grabber that can be used together with Tvheadend.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "WebGrab+Plus is a XML EPG Grabber that can be used together with Tvheadend.",
    "logo": "https://raw.githubusercontent.com/chvb/docker-templates/master/chvb/img/webgrabplusplus.png",
    "name": "Webgrabplus",
    "image": "chvb/docker-webgrabplus",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/WebGrabPlus/"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/tvheadend/data/"
      }
    ]
  },
  {
    "type": 1,
    "title": "FlexTV",
    "description": "A super-sexy voice interface for the Plex HTPC.",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "A super-sexy voice interface for the Plex HTPC.",
    "logo": "https://raw.githubusercontent.com/d8ahazard/Phlex/master/img/android-icon-144x144.png",
    "name": "FlexTV",
    "image": "jcreynolds/flextv",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "5667:443/tcp",
        "80": "5666:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "path to config"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      }
    ]
  },
  {
    "type": 1,
    "title": "NodeLink",
    "description": "NodeLink is a Node Server which creates nodes (virtual devices) within the ISY.",
    "categories": [
      "HomeAutomation:"
    ],
    "platform": "linux",
    "note": "NodeLink is a Node Server which creates nodes (virtual devices) within the ISY.",
    "logo": "https://raw.githubusercontent.com/jcreynolds/docker-templates/master/Icons/NodeLink.png",
    "name": "NodeLink",
    "image": "jcreynolds/nodelink",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/config",
        "bind": "path to config"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "munin-server",
    "description": "Primarily provides server stats for your unRAID instance in addition to monitoring other servers",
    "categories": [
      "Network:Management",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Primarily provides server stats for your unRAID instance in addition to monitoring other servers",
    "logo": "https://raw.githubusercontent.com/shaf/unraid-docker-templates/master/shaf/images/munin-icon.png",
    "name": "munin-server",
    "image": "shaf/munin-server",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "4949": "4949:4949/tcp",
        "80": "8888:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/cache/munin/www",
        "bind": "/mnt/user/appdata/munin-server/www"
      },
      {
        "container": "/var/lib/munin",
        "bind": "/mnt/user/appdata/munin-server/rrd"
      },
      {
        "container": "/rootfs",
        "bind": "/"
      },
      {
        "container": "/sys",
        "bind": "/sys"
      },
      {
        "container": "/etc/munin/munin-conf.d",
        "bind": "/mnt/user/appdata/munin-server/conf"
      }
    ],
    "env": [
      {
        "name": "ALLOWED_HOSTS",
        "label": "ALLOWED_HOSTS",
        "default": "127.0.0.1/32"
      },
      {
        "name": "HOSTNAME",
        "label": "HOSTNAME",
        "default": "unRAID"
      }
    ]
  },
  {
    "type": 1,
    "title": "apcupsd-influxdb-exporter",
    "description": "Docker wrapper for a python script to query apcupsd via a python version of apcaccess, it then sends the data to influxdb.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Docker wrapper for a python script to query apcupsd via a python version of apcaccess, it then sends the data to influxdb.",
    "name": "apcupsd-influxdb-exporter",
    "image": "atribe/apcupsd-influxdb-exporter",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "env": [
      {
        "name": "INFLUXDB_PORT",
        "label": "INFLUXDB_PORT",
        "default": "8086"
      },
      {
        "name": "INFLUXDB_USER",
        "label": "INFLUXDB_USER",
        "default": ""
      },
      {
        "name": "INFLUXDB_PASSWORD",
        "label": "INFLUXDB_PASSWORD",
        "default": ""
      },
      {
        "name": "WATTS",
        "label": "WATTS",
        "default": "1500"
      },
      {
        "name": "APCUPSD_HOST",
        "label": "APCUPSD_HOST",
        "default": "10.13.13.15"
      },
      {
        "name": "INFLUXDB_DATABASE",
        "label": "INFLUXDB_DATABASE",
        "default": "apcupsd"
      },
      {
        "name": "VERBOSE",
        "label": "VERBOSE",
        "default": "false"
      },
      {
        "name": "HOSTNAME",
        "label": "HOSTNAME",
        "default": "panthro"
      },
      {
        "name": "INFLUXDB_HOST",
        "label": "INFLUXDB_HOST",
        "default": "10.13.13.15"
      }
    ]
  },
  {
    "type": 1,
    "title": "apt-cacher-ng",
    "description": "Apt-Cacher NG is a caching proxy, specialized for package files from Linux distributors, primarily for Debian (and Debian based) distributions but not limited to those.",
    "categories": [
      "Network:Proxy",
      "Network:Other",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Apt-Cacher NG is a caching proxy, specialized for package files from Linux distributors, primarily for Debian (and Debian based) distributions but not limited to those.",
    "logo": "https://raw.githubusercontent.com/atribe/unRAID-docker/master/icons/apt-cacher.png",
    "name": "apt-cacher-ng",
    "image": "sameersbn/apt-cacher-ng",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3142": "3142:3142/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/cache/apt-cacher-ng",
        "bind": "/mnt/user/appdata/apt-cacher-ng"
      }
    ]
  },
  {
    "type": 1,
    "title": "glances",
    "description": "Glances is a cross-platform curses-based system monitoring tool written in Python.",
    "categories": [
      "Network:Management",
      "Network:Other",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Glances is a cross-platform curses-based system monitoring tool written in Python.",
    "logo": "https://raw.githubusercontent.com/nicolargo/glances/master/glances/outputs/static/images/glances.png",
    "name": "glances",
    "image": "nicolargo/glances",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/var/run/docker.sock",
        "bind": "/var/run/docker.sock"
      },
      {
        "container": "/mnt",
        "bind": "/mnt"
      }
    ],
    "env": [
      {
        "name": "GLANCES_OPT",
        "label": "GLANCES_OPT",
        "default": "-w"
      }
    ]
  },
  {
    "type": 1,
    "title": "Grafana",
    "description": "Grafana is an open source, feature rich metrics dashboard and graph editor for Graphite, Elasticsearch, OpenTSDB, Prometheus and InfluxDB.",
    "categories": [
      "Network:Management",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Grafana is an open source, feature rich metrics dashboard and graph editor for Graphite, Elasticsearch, OpenTSDB, Prometheus and InfluxDB.",
    "logo": "https://raw.githubusercontent.com/atribe/unRAID-docker/master/icons/grafana.png",
    "name": "Grafana",
    "image": "grafana/grafana",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3000": "3000:3000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/lib/grafana",
        "bind": "/mnt/user/appdata/grafana"
      }
    ],
    "env": [
      {
        "name": "GF_SECURITY_ADMIN_PASSWORD",
        "label": "GF_SECURITY_ADMIN_PASSWORD",
        "default": "admin"
      },
      {
        "name": "GF_SERVER_ROOT_URL",
        "label": "GF_SERVER_ROOT_URL",
        "default": "http://your.server.ip.or.hostname"
      }
    ]
  },
  {
    "type": 1,
    "title": "HDDTemp",
    "description": "Ubuntu based image with hddtemp installed and configured to be accessible by other docker containers. In this case it is perfect for use with Telegraf and it's hdd temp plugin.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Ubuntu based image with hddtemp installed and configured to be accessible by other docker containers. In this case it is perfect for use with Telegraf and it's hdd temp plugin.",
    "logo": "https://raw.githubusercontent.com/atribe/unRAID-docker/master/icons/hddtemp.png",
    "name": "HDDTemp",
    "image": "drewster727/hddtemp-docker",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/var/run/docker.sock",
        "bind": "/var/run/docker.sock"
      },
      {
        "container": "/dev",
        "bind": "/dev"
      }
    ],
    "env": [
      {
        "name": "TZ",
        "label": "TZ",
        "default": "America/Denver"
      },
      {
        "name": "HDDTEMP_ARGS",
        "label": "HDDTEMP_ARGS",
        "default": "-q -d -F /dev/sd*"
      }
    ]
  },
  {
    "type": 1,
    "title": "Influxdb",
    "description": "InfluxDB is an open source time series database with no external dependencies. It's useful for recording metrics, events, and performing analytics.",
    "categories": [
      "Network:Management",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "InfluxDB is an open source time series database with no external dependencies. It's useful for recording metrics, events, and performing analytics.",
    "logo": "https://raw.githubusercontent.com/pootzko/InfluxData.Net/master/nuget-icon.png",
    "name": "Influxdb",
    "image": "influxdb:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8083": "8083:8083/tcp",
        "8086": "8086:8086/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/lib/influxdb",
        "bind": "/mnt/user/appdata/influxdb"
      }
    ]
  },
  {
    "type": 1,
    "title": "mineos-node",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "MineOS is a server front-end to ease managing Minecraft administrative tasks. This iteration using Node.js aims to enhance previous MineOS scripts (Python-based), by leveraging the event-triggering, asyncronous model of Node.JS and websockets.\r\n\r\nThis allows the front-end to provide system health, disk and memory usage, and logging in real-time.\r\n\r\n\r\nDEFAULT USER: mc\r\nDEFAULT PASSWORD: mypass",
    "logo": "https://i.imgur.com/P6RRtHH.png",
    "name": "mineos-node",
    "image": "hexparrot/mineos:latest",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "Plex-Data-Collector-for-InfluxDB",
    "description": "A speedtest docker container that forwards the data to influxDB. Download the config.ini file from https://github.com/unriad-stuff/Plex-Data-Collector-For-InfluxDB/blob/master/config.ini before you start the container.",
    "categories": [
      "Cloud:",
      "Network:Web"
    ],
    "platform": "linux",
    "note": "A speedtest docker container that forwards the data to influxDB. Download the config.ini file from https://github.com/unriad-stuff/Plex-Data-Collector-For-InfluxDB/blob/master/config.ini before you start the container.",
    "name": "Plex-Data-Collector-for-InfluxDB",
    "image": "achumchal/plex_data_collector_for_influxdb",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/src/config.ini",
        "bind": " mnt/user/appdata/plex-collector-influxdb/config.ini"
      }
    ]
  },
  {
    "type": 1,
    "title": "SpeedtestforInfluxDB",
    "description": "A speedtest docker container that forwards the data to influxDB. Download the config.ini file from https://github.com/barrycarey/Speedtest-for-InfluxDB-and-Grafana/blob/master/config.ini before you start the container.",
    "categories": [
      "Cloud:",
      "Network:Web"
    ],
    "platform": "linux",
    "note": "A speedtest docker container that forwards the data to influxDB. Download the config.ini file from https://github.com/barrycarey/Speedtest-for-InfluxDB-and-Grafana/blob/master/config.ini before you start the container.",
    "name": "SpeedtestforInfluxDB",
    "image": "barrycarey/speedtest-for-influxdb-and-grafana",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/src/config.ini",
        "bind": "/mnt/user/appdata/speedtest-influxdb/config.ini"
      }
    ]
  },
  {
    "type": 1,
    "title": "telegraf",
    "description": "Telegraf gathers metrics from your system and sends them to an InfluxDB server for storage. From InfluxDB you would typically use something like Grafana to plot the data.\r\n    Both Grafana and Influxdb are available through Community Apps",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Telegraf gathers metrics from your system and sends them to an InfluxDB server for storage. From InfluxDB you would typically use something like Grafana to plot the data.\r\n    Both Grafana and Influxdb are available through Community Apps",
    "logo": "https://raw.githubusercontent.com/atribe/unRAID-docker/master/icons/telegraf.png",
    "name": "telegraf",
    "image": "telegraf:alpine",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/rootfs/etc",
        "bind": "/etc"
      },
      {
        "container": "/rootfs/proc",
        "bind": "/proc"
      },
      {
        "container": "/etc/telegraf/telegraf.conf",
        "bind": "/mnt/user/appdata/telegraf/telegraf.conf"
      },
      {
        "container": "/run/udev",
        "bind": "/run/udev"
      },
      {
        "container": "/var/run/utmp",
        "bind": "/var/run/utmp"
      },
      {
        "container": "/var/run/docker.sock",
        "bind": "/var/run/docker.sock"
      },
      {
        "container": "/rootfs",
        "bind": "/"
      },
      {
        "container": "/rootfs/sys",
        "bind": "/sys"
      }
    ],
    "env": [
      {
        "name": "HOST_PROC",
        "label": "HOST_PROC",
        "default": "/rootfs/proc"
      },
      {
        "name": "HOST_SYS",
        "label": "HOST_SYS",
        "default": "/rootfs/sys"
      },
      {
        "name": "HOST_ETC",
        "label": "HOST_ETC",
        "default": "/rootfs/etc"
      },
      {
        "name": "HOST_MOUNT_PREFIX",
        "label": "HOST_MOUNT_PREFIX",
        "default": "/rootfs"
      }
    ]
  },
  {
    "type": 1,
    "title": "untelegraf",
    "description": "Telegraf gathers metrics from your system and sends them to an InfluxDB server for storage. From InfluxDB you would typically use something like Grafana to plot the data.\r\n    Both Grafana and Influxdb are available through Community Apps",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Telegraf gathers metrics from your system and sends them to an InfluxDB server for storage. From InfluxDB you would typically use something like Grafana to plot the data.\r\n    Both Grafana and Influxdb are available through Community Apps",
    "logo": "https://raw.githubusercontent.com/atribe/unRAID-docker/master/icons/telegraf.png",
    "name": "untelegraf",
    "image": "appcelerator/telegraf:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/var/run/docker.sock",
        "bind": "/var/run/docker.sock"
      },
      {
        "container": "/rootfs/proc",
        "bind": "/proc"
      },
      {
        "container": "/rootfs/etc",
        "bind": "/etc"
      },
      {
        "container": "/rootfs/sys",
        "bind": "/sys"
      },
      {
        "container": "/rootfs",
        "bind": "/"
      },
      {
        "container": "/var/run/utmp",
        "bind": "/var/run/utmp"
      }
    ],
    "env": [
      {
        "name": "INFLUXDB_RETENTION_POLICY",
        "label": "INFLUXDB_RETENTION_POLICY",
        "default": ""
      },
      {
        "name": "HOST_MOUNT_PREFIX",
        "label": "HOST_MOUNT_PREFIX",
        "default": "/rootfs"
      },
      {
        "name": "HOST_ETC",
        "label": "HOST_ETC",
        "default": "/rootfs/etc"
      },
      {
        "name": "HOST_PROC",
        "label": "HOST_PROC",
        "default": "/rootfs/proc"
      },
      {
        "name": "HOST_SYS",
        "label": "HOST_SYS",
        "default": "/rootfs/sys"
      },
      {
        "name": "INFLUXDB_URL",
        "label": "INFLUXDB_URL",
        "default": "http://10.13.14.200:8086"
      }
    ]
  },
  {
    "type": 1,
    "title": "Godaddy-ddns",
    "description": "Docker image to provide a DDNS service for godaddy domains. Uses the GoDaddy REST API to update the given domain's DNS IP address to the public IP address of the host it is executing on. Performs a check every 10 minutes, but you can alter this if you like by modifying /etc/cron.d/godaddy-ddns inside the container.",
    "categories": [
      "Network:Web"
    ],
    "platform": "linux",
    "note": "Docker image to provide a DDNS service for godaddy domains. Uses the GoDaddy REST API to update the given domain's DNS IP address to the public IP address of the host it is executing on. Performs a check every 10 minutes, but you can alter this if you like by modifying /etc/cron.d/godaddy-ddns inside the container.",
    "logo": "https://raw.githubusercontent.com/Kru-x/unraid-docker-templates/master/Kru-x/img/GoDaddy.png",
    "name": "Godaddy-ddns",
    "image": "jwater7/godaddy-publicip-updater",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "env": [
      {
        "name": "GODADDY_API_KEY",
        "label": "GODADDY_API_KEY",
        "default": ""
      },
      {
        "name": "GODADDY_API_SECRET",
        "label": "GODADDY_API_SECRET",
        "default": ""
      },
      {
        "name": "GODADDY_DOMAINS",
        "label": "GODADDY_DOMAINS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Wekan",
    "description": "Wekan is an open-source and collaborative kanban board application https://wekan.io/ . This template has to be used with a MongoDB container one is in Taddeusz' Repository and can be found in Community Applications, if renaming the database change the --link \"MongoDB:db\" in Extra Parameters in Advanced View",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "Wekan is an open-source and collaborative kanban board application https://wekan.io/ . This template has to be used with a MongoDB container one is in Taddeusz' Repository and can be found in Community Applications, if renaming the database change the --link \"MongoDB:db\" in Extra Parameters in Advanced View",
    "logo": "https://raw.githubusercontent.com/Kru-x/unraid-docker-templates/master/Kru-x/img/wekan.png",
    "name": "Wekan",
    "image": "wekanteam/wekan",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "5555:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/unraid",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "MAIL_FROM",
        "label": "MAIL_FROM",
        "default": ""
      },
      {
        "name": "MONGO_URL",
        "label": "MONGO_URL",
        "default": "mongodb://db"
      },
      {
        "name": "ROOT_URL",
        "label": "ROOT_URL",
        "default": ""
      },
      {
        "name": "MAIL_URL",
        "label": "MAIL_URL",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "WordPress",
    "description": "WordPress is a free and open source blogging tool and a content management system (CMS) based on PHP and MySQL, which runs on a web hosting service.\r\nUse MariaDB (recommended) or Mysql as the external database.",
    "categories": [
      "Other:",
      "Network:Web"
    ],
    "platform": "linux",
    "note": "WordPress is a free and open source blogging tool and a content management system (CMS) based on PHP and MySQL, which runs on a web hosting service.\r\nUse MariaDB (recommended) or Mysql as the external database.",
    "logo": "https://s.w.org/style/images/about/WordPress-logotype-wmark.png",
    "name": "WordPress",
    "image": "wordpress",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "8080:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/www/html",
        "bind": "/mnt/user/appdata/wordpress"
      }
    ],
    "env": [
      {
        "name": "WORDPRESS_DB_HOST",
        "label": "WORDPRESS_DB_HOST",
        "default": ""
      },
      {
        "name": "WORDPRESS_DB_USER",
        "label": "WORDPRESS_DB_USER",
        "default": ""
      },
      {
        "name": "WORDPRESS_DB_PASSWORD",
        "label": "WORDPRESS_DB_PASSWORD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "CaddyV2",
    "description": "Caddy 2 is a powerful, enterprise-ready, open source web server with automatic HTTPS written in Go.",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "Caddy 2 is a powerful, enterprise-ready, open source web server with automatic HTTPS written in Go.",
    "logo": "https://d1q6f0aelx0por.cloudfront.net/product-logos/library-caddy-logo.png",
    "name": "CaddyV2",
    "image": "caddy:alpine",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "2443:443/tcp",
        "80": "2080:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/Docker/conf/caddyv2/data"
      },
      {
        "container": "/config",
        "bind": "/mnt/user/Docker/conf/caddyv2/config"
      },
      {
        "container": "/etc/caddy/Caddyfile",
        "bind": "/mnt/user/Docker/conf/caddyv2/Caddyfile"
      }
    ]
  },
  {
    "type": 1,
    "title": "get-iplayer",
    "description": "get_iplayer has PVR-like capabilities; You can save lists of programme searches which are automatically recorded when they become available so that you can watch them when you choose and on devices that cannot run Adobe Flash Player – even if you don’t have adequate broadband speeds or if your broadband streams too slowly at peak hours when you want to watch a programme.",
    "categories": [
      "MediaApp:Video",
      "MediaServer:Video"
    ],
    "platform": "linux",
    "note": "get_iplayer has PVR-like capabilities; You can save lists of programme searches which are automatically recorded when they become available so that you can watch them when you choose and on devices that cannot run Adobe Flash Player – even if you don’t have adequate broadband speeds or if your broadband streams too slowly at peak hours when you want to watch a programme.",
    "logo": "https://raw.githubusercontent.com/Poag/get-iplayer/master/getiplayer.png",
    "name": "get-iplayer",
    "image": "uirel/get-iplayer",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/get-iplayer"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/get-iplayer/downloads"
      }
    ],
    "env": [
      {
        "name": "SHOWS",
        "label": "SHOWS",
        "default": "[TV SHows seperated by commas]"
      },
      {
        "name": "SCHEDULE",
        "label": "SCHEDULE",
        "default": "1h"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Watcher",
    "description": "Watcher is an automatic NZB downloader. You can keep a \"movies I want\"-list and it will search for NZBs of these movies every X hours. Once a movie is found, it will send it to NZBget/sabnzbd or download the to a specified directory.",
    "categories": [
      "Downloaders:",
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "Watcher is an automatic NZB downloader. You can keep a \"movies I want\"-list and it will search for NZBs of these movies every X hours. Once a movie is found, it will send it to NZBget/sabnzbd or download the to a specified directory.",
    "logo": "https://raw.githubusercontent.com/nosmokingbandit/watcher/master/static/images/logo_bg.png",
    "name": "Watcher",
    "image": "uirel/watcher",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "9090": "9090:9090/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/Docker/conf/watcher"
      },
      {
        "container": "/downloads",
        "bind": "/mnt/cache/Docker/DL/complete/Movies/"
      },
      {
        "container": "/movies",
        "bind": "/mnt/user/Films/"
      }
    ]
  },
  {
    "type": 1,
    "title": "lazylibrarian-calibre",
    "description": "LazyLibrarian is a program to follow authors and grab metadata for all your digital reading needs.\n  Calibre is a free and open source e-book library management application developed by users of e-books for users of e-books.",
    "categories": [
      "MediaApp:Books",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "LazyLibrarian is a program to follow authors and grab metadata for all your digital reading needs.\n  Calibre is a free and open source e-book library management application developed by users of e-books for users of e-books.",
    "logo": "https://raw.githubusercontent.com/thraxis/docker-templates/master/thraxis/img/lazylibrarian-calibre-icon.png",
    "name": "lazylibrarian-calibre",
    "image": "thraxis/lazylibrarian-calibre",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5299": "5299:5299/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/downloads",
        "bind": ""
      },
      {
        "container": "/books",
        "bind": ""
      },
      {
        "container": "/magazines",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "transmission-nzbtomedia",
    "description": "Transmission is designed for easy, powerful use. Transmission has the features you want from a BitTorrent client: encryption, a web interface, peer exchange, magnet links, DHT, µTP, UPnP and NAT-PMP port forwarding, webseed support, watch directories, tracker editing, global and per-torrent speed limits, and more.\n  nzbToMedia provides NZB and Torrent postprocessing To CouchPotatoServer, SickBeard/SickRage, HeadPhones, Mylar and Gamez",
    "categories": [
      "Downloaders:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Transmission is designed for easy, powerful use. Transmission has the features you want from a BitTorrent client: encryption, a web interface, peer exchange, magnet links, DHT, µTP, UPnP and NAT-PMP port forwarding, webseed support, watch directories, tracker editing, global and per-torrent speed limits, and more.\n  nzbToMedia provides NZB and Torrent postprocessing To CouchPotatoServer, SickBeard/SickRage, HeadPhones, Mylar and Gamez",
    "logo": "https://raw.githubusercontent.com/thraxis/docker-templates/master/thraxis/img/transmission-nzbtomedia-icon.png",
    "name": "transmission-nzbtomedia",
    "image": "thraxis/transmission-nzbtomedia",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "51413": "51413:51413/tcp",
        "9091": "9091:9091/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/downloads",
        "bind": ""
      },
      {
        "container": "/watch",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Boinc",
    "description": "BOINC lets you help cutting-edge science research using your computer (Windows, Mac, Linux) or Android device. BOINC downloads scientific computing jobs to your computer and runs them invisibly in the background. It's easy and safe.\r\n\r\nYou can attach a BOINC Manager to the client by launching the BOINC Manager, going to View \u003e Advanced View and then, File \u003e Select computer..., and entering the IP address of your unRAID machine, as well as the password you set with BOINC_GUI_RPC_PASSWORD.\r\n\r\nThe client can also be controlled from the command line via the boinccmd command.\r\ndocker exec boinc boinccmd",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "BOINC lets you help cutting-edge science research using your computer (Windows, Mac, Linux) or Android device. BOINC downloads scientific computing jobs to your computer and runs them invisibly in the background. It's easy and safe.\r\n\r\nYou can attach a BOINC Manager to the client by launching the BOINC Manager, going to View \u003e Advanced View and then, File \u003e Select computer..., and entering the IP address of your unRAID machine, as well as the password you set with BOINC_GUI_RPC_PASSWORD.\r\n\r\nThe client can also be controlled from the command line via the boinccmd command.\r\ndocker exec boinc boinccmd",
    "logo": "https://raw.githubusercontent.com/cheesemarathon/docker-templates/master/images/boinc.png",
    "name": "Boinc",
    "image": "boinc/client",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/var/lib/boinc",
        "bind": "/mnt/user/appdata/boinc"
      }
    ],
    "env": [
      {
        "name": "BOINC_GUI_RPC_PASSWORD",
        "label": "BOINC_GUI_RPC_PASSWORD",
        "default": ""
      },
      {
        "name": "BOINC_CMD_LINE_OPTIONS",
        "label": "BOINC_CMD_LINE_OPTIONS",
        "default": "--allow_remote_gui_rpc"
      }
    ]
  },
  {
    "type": 1,
    "title": "CloudCommander",
    "description": "CloudCommander is a simple web file browser with a built in text editor and archive compress/extract abilities.\n\nInstructions:\nSet Port to the port you want to be able to access from. Defaults to 8765\nSet Mount Point to the directory you want to be able to access in the browser. Defaults to /mnt/user, all shares",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "CloudCommander is a simple web file browser with a built in text editor and archive compress/extract abilities.\n\nInstructions:\nSet Port to the port you want to be able to access from. Defaults to 8765\nSet Mount Point to the directory you want to be able to access in the browser. Defaults to /mnt/user, all shares",
    "logo": "https://raw.githubusercontent.com/cheesemarathon/docker-templates/master/images/cloudcmdLogo.png",
    "name": "CloudCommander",
    "image": "coderaiser/cloudcmd",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8000": "8765:8000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/UNRAID",
        "bind": "/mnt/user"
      },
      {
        "container": "/root",
        "bind": "/mnt/user/appdata/cloudcmd"
      }
    ],
    "env": [
      {
        "name": "HOME",
        "label": "HOME",
        "default": "/root"
      }
    ]
  },
  {
    "type": 1,
    "title": "diyHue",
    "description": "diyHue emulates a Phillips Hue bridge allowing you to controll other smart lights and bulbs with the Hue ecosystem.\n    Find more info at the diyHue GitHub wiki: https://github.com/mariusmotea/diyHue/wiki\n    To setup just set an IP address in the network settings, along with setting the MAC and IP variabales with the values for the br0 network",
    "categories": [
      "HomeAutomation:"
    ],
    "platform": "linux",
    "note": "diyHue emulates a Phillips Hue bridge allowing you to controll other smart lights and bulbs with the Hue ecosystem.\n    Find more info at the diyHue GitHub wiki: https://github.com/mariusmotea/diyHue/wiki\n    To setup just set an IP address in the network settings, along with setting the MAC and IP variabales with the values for the br0 network",
    "logo": "https://raw.githubusercontent.com/cheesemarathon/docker-templates/master/images/diyhue.png",
    "name": "diyHue",
    "image": "diyhue/core:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "1900": "1900:1900/udp",
        "2100": "2100:2100/udp",
        "443": "443:443/tcp",
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/opt/hue-emulator/export/",
        "bind": "/mnt/user/appdata/diyHue"
      }
    ],
    "env": [
      {
        "name": "MAC",
        "label": "MAC",
        "default": "bc:5f:f4:cd:c6:19"
      },
      {
        "name": "IP",
        "label": "IP",
        "default": "192.168.1.4"
      }
    ]
  },
  {
    "type": 1,
    "title": "GenericCache",
    "description": "This docker container provides a caching proxy server for game download content. For any network with more than one PC gamer connected, this will drastically reduce internet bandwidth consumption.\n\tThis container is designed to support any game that uses HTTP and also supports HTTP range requests (used by Origin). This should make it suitable for:\n\tSteam (Valve)\n\tOrigin (EA Games)\n\tRiot Games (League of Legends)\n\tBattle.net (Hearthstone, Starcraft 2, Overwatch)\n\tFrontier Launchpad (Elite Dangerous, Planet Coaster)\n\tUplay (Ubisoft)\n\tWindows Updates\n\tPlease see https://squishedmooo.com/?p=1 for install instructions! You will need them!\n\tThis container should be used in conjunction with SteamcacheDNS and SNIProxy.",
    "categories": [
      "Backup:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "This docker container provides a caching proxy server for game download content. For any network with more than one PC gamer connected, this will drastically reduce internet bandwidth consumption.\n\tThis container is designed to support any game that uses HTTP and also supports HTTP range requests (used by Origin). This should make it suitable for:\n\tSteam (Valve)\n\tOrigin (EA Games)\n\tRiot Games (League of Legends)\n\tBattle.net (Hearthstone, Starcraft 2, Overwatch)\n\tFrontier Launchpad (Elite Dangerous, Planet Coaster)\n\tUplay (Ubisoft)\n\tWindows Updates\n\tPlease see https://squishedmooo.com/?p=1 for install instructions! You will need them!\n\tThis container should be used in conjunction with SteamcacheDNS and SNIProxy.",
    "logo": "https://raw.githubusercontent.com/cheesemarathon/docker-templates/master/images/steamcache.png",
    "name": "GenericCache",
    "image": "steamcache/generic:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data/cache",
        "bind": "/mnt/user/appdata/gen-cache/data"
      },
      {
        "container": "/data/logs",
        "bind": "/mnt/user/appdata/gen-cache/logs"
      }
    ],
    "env": [
      {
        "name": "CACHE_MEM_SIZE",
        "label": "CACHE_MEM_SIZE",
        "default": "500m"
      },
      {
        "name": "CACHE_DISK_SIZE",
        "label": "CACHE_DISK_SIZE",
        "default": "500g"
      },
      {
        "name": "CACHE_MAX_AGE",
        "label": "CACHE_MAX_AGE",
        "default": "3650d"
      }
    ]
  },
  {
    "type": 1,
    "title": "Ghost",
    "description": "Ghost is a fully open source, adaptable platform for building and running a modern online publication.",
    "categories": [
      "Network:Web"
    ],
    "platform": "linux",
    "note": "Ghost is a fully open source, adaptable platform for building and running a modern online publication.",
    "logo": "https://raw.githubusercontent.com/cheesemarathon/docker-templates/master/images/Ghost.png",
    "name": "Ghost",
    "image": "ghost",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "2368": "2368:2368/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/lib/ghost/content",
        "bind": "/mnt/user/appdata/ghost"
      }
    ],
    "env": [
      {
        "name": "mail__options__auth__user",
        "label": "mail__options__auth__user",
        "default": ""
      },
      {
        "name": "database__client",
        "label": "database__client",
        "default": "mysql"
      },
      {
        "name": "NODE_ENV",
        "label": "NODE_ENV",
        "default": "production"
      },
      {
        "name": "database__connection__host",
        "label": "database__connection__host",
        "default": ""
      },
      {
        "name": "mail__transport",
        "label": "mail__transport",
        "default": "SMTP"
      },
      {
        "name": "mail__options__service",
        "label": "mail__options__service",
        "default": "Mailgun"
      },
      {
        "name": "url",
        "label": "url",
        "default": ""
      },
      {
        "name": "mail__options__auth__pass",
        "label": "mail__options__auth__pass",
        "default": ""
      },
      {
        "name": "database__connection__user",
        "label": "database__connection__user",
        "default": "ghost"
      },
      {
        "name": "database__connection__password",
        "label": "database__connection__password",
        "default": ""
      },
      {
        "name": "database__connection__database",
        "label": "database__connection__database",
        "default": "ghost"
      }
    ]
  },
  {
    "type": 1,
    "title": "KDEInDocker",
    "description": "KDE In Docker + VNC + noVNC Web UI\nDefault Password: admin",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "KDE In Docker + VNC + noVNC Web UI\nDefault Password: admin",
    "logo": "https://raw.githubusercontent.com/cheesemarathon/docker-templates/master/images/KID.png",
    "name": "KDEInDocker",
    "image": "msjpq/firefox-vnc",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5900": "4900:5900/tcp",
        "8080": "4686:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/KID"
      }
    ],
    "env": [
      {
        "name": "SCR_HEIGHT",
        "label": "SCR_HEIGHT",
        "default": "900"
      },
      {
        "name": "noVNC PATH_PREFIX",
        "label": "noVNC PATH_PREFIX",
        "default": "/"
      },
      {
        "name": "RECON_DELAY",
        "label": "RECON_DELAY",
        "default": "20"
      },
      {
        "name": "PAGE_TITLE",
        "label": "PAGE_TITLE",
        "default": "KID"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "SCR_WIDTH",
        "label": "SCR_WIDTH",
        "default": "1600"
      },
      {
        "name": "VNC_RESIZE",
        "label": "VNC_RESIZE",
        "default": "scale"
      },
      {
        "name": "ROOT_PASSWORD",
        "label": "ROOT_PASSWORD",
        "default": "admin"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Metabase",
    "description": "Simple access to Metabase through a Docker container. Metabase is the easy, open source way for everyone in your company to ask questions and learn from data.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Simple access to Metabase through a Docker container. Metabase is the easy, open source way for everyone in your company to ask questions and learn from data.",
    "logo": "https://raw.githubusercontent.com/cheesemarathon/docker-templates/master/images/MetabaseLogo.png",
    "name": "Metabase",
    "image": "metabase/metabase",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3000": "3000:3000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/tmp",
        "bind": "/mnt/user/appdata/Metabase"
      }
    ],
    "env": [
      {
        "name": "MB_DB_FILE",
        "label": "MB_DB_FILE",
        "default": "/tmp/metabase.db"
      }
    ]
  },
  {
    "type": 1,
    "title": "Minio",
    "description": "Minio is a high performance distributed object storage server, designed for\nlarge-scale private cloud infrastructure. Minio is widely deployed across the\nworld with over 157M+ docker pulls",
    "categories": [
      "Backup:",
      "Cloud:"
    ],
    "platform": "linux",
    "note": "Minio is a high performance distributed object storage server, designed for\nlarge-scale private cloud infrastructure. Minio is widely deployed across the\nworld with over 157M+ docker pulls",
    "logo": "https://raw.githubusercontent.com/cheesemarathon/docker-templates/master/images/minio.png",
    "name": "Minio",
    "image": "minio/minio",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "9000": "9768:9000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": ""
      },
      {
        "container": "/root/.minio",
        "bind": "/mnt/user/appdata/minio"
      }
    ],
    "env": [
      {
        "name": "MINIO_ACCESS_KEY",
        "label": "MINIO_ACCESS_KEY",
        "default": ""
      },
      {
        "name": "MINIO_SECRET_KEY",
        "label": "MINIO_SECRET_KEY",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "OAuth2-Proxy",
    "description": "A reverse proxy and static file server that provides authentication using Providers (Google, GitHub, and others) to validate accounts by email, domain or group.\r\n\r\nPlease visit support thread for install / setup instructions",
    "categories": [
      "Tools:Utilities",
      "Network:Proxy",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "A reverse proxy and static file server that provides authentication using Providers (Google, GitHub, and others) to validate accounts by email, domain or group.\r\n\r\nPlease visit support thread for install / setup instructions",
    "name": "OAuth2-Proxy",
    "image": "quay.io/oauth2-proxy/oauth2-proxy",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "4180": "4180:4180/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/oauth2/",
        "bind": "/mnt/user/appdata/oauth2/"
      }
    ]
  },
  {
    "type": 1,
    "title": "SNIProxy",
    "description": "When running a LAN Cache and overriding DNS entries, there are some services including the Origin launcher which will try and use HTTPS to talk to one of the hostnames that are being overridden.\n\tThis breaks updates to the Origin client. The solution is to run this container SNI Proxy. This accepts the HTTPS requests, looks at the host being requested and sends the request on to the correct server.\n\tPlease see https://squishedmooo.com/?p=1 for install instructions! You will need them!",
    "categories": [
      "Backup:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "When running a LAN Cache and overriding DNS entries, there are some services including the Origin launcher which will try and use HTTPS to talk to one of the hostnames that are being overridden.\n\tThis breaks updates to the Origin client. The solution is to run this container SNI Proxy. This accepts the HTTPS requests, looks at the host being requested and sends the request on to the correct server.\n\tPlease see https://squishedmooo.com/?p=1 for install instructions! You will need them!",
    "logo": "https://raw.githubusercontent.com/cheesemarathon/docker-templates/master/images/steamcache.png",
    "name": "SNIProxy",
    "image": "steamcache/sniproxy:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "443:443/tcp"
      }
    ]
  },
  {
    "type": 1,
    "title": "SteamcacheDNS",
    "description": "SteamcacheDNS provides DNS entries for *.cs.steampowered.com and other download URLs to be used in conjunction with a GenericCache server\n\tPlease see https://squishedmooo.com/?p=1 for install instructions! You will need them!",
    "categories": [
      "Backup:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "SteamcacheDNS provides DNS entries for *.cs.steampowered.com and other download URLs to be used in conjunction with a GenericCache server\n\tPlease see https://squishedmooo.com/?p=1 for install instructions! You will need them!",
    "logo": "https://raw.githubusercontent.com/cheesemarathon/docker-templates/master/images/steamcache-dns.png",
    "name": "SteamcacheDNS",
    "image": "steamcache/steamcache-dns:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "53": "53:53/udp"
      }
    ],
    "env": [
      {
        "name": "DISABLE_ORIGIN",
        "label": "DISABLE_ORIGIN",
        "default": ""
      },
      {
        "name": "DISABLE_STEAM",
        "label": "DISABLE_STEAM",
        "default": ""
      },
      {
        "name": "DISABLE_UPLAY",
        "label": "DISABLE_UPLAY",
        "default": ""
      },
      {
        "name": "DISABLE_BLIZZARD",
        "label": "DISABLE_BLIZZARD",
        "default": ""
      },
      {
        "name": "LANCACHE_IP",
        "label": "LANCACHE_IP",
        "default": "192.168.1.50"
      },
      {
        "name": "UPSTREAM_DNS",
        "label": "UPSTREAM_DNS",
        "default": "8.8.8.8"
      },
      {
        "name": "USE_GENERIC_CACHE",
        "label": "USE_GENERIC_CACHE",
        "default": "true"
      },
      {
        "name": "DISABLE_FRONTIER",
        "label": "DISABLE_FRONTIER",
        "default": ""
      },
      {
        "name": "DISABLE_RIOT",
        "label": "DISABLE_RIOT",
        "default": ""
      },
      {
        "name": "DISABLE_WINDOWS",
        "label": "DISABLE_WINDOWS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Taskcafe",
    "description": "A free and open source alternative project management tool.\nPlease note that this project is still in active development. Some options may not work yet!\nSetup: Please install Postgresql first and then fill in the conncetion details below",
    "categories": [
      "Tools:Utilities",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "A free and open source alternative project management tool.\nPlease note that this project is still in active development. Some options may not work yet!\nSetup: Please install Postgresql first and then fill in the conncetion details below",
    "logo": "https://raw.githubusercontent.com/cheesemarathon/docker-templates/master/images/taskcafe.png",
    "name": "Taskcafe",
    "image": "taskcafe/taskcafe",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3333": "3298:3333/tcp"
      }
    ],
    "env": [
      {
        "name": "TASKCAFE_DATABASE_HOST",
        "label": "TASKCAFE_DATABASE_HOST",
        "default": "192.168.1.41"
      },
      {
        "name": "TASKCAFE_MIGRATE",
        "label": "TASKCAFE_MIGRATE",
        "default": "true"
      },
      {
        "name": "TASKCAFE_DATABASE_PASSWORD",
        "label": "TASKCAFE_DATABASE_PASSWORD",
        "default": "admin43"
      },
      {
        "name": "TASKCAFE_DATABASE_USER",
        "label": "TASKCAFE_DATABASE_USER",
        "default": "taskcafe"
      }
    ]
  },
  {
    "type": 1,
    "title": "ApacheGuacamole",
    "description": "Apache GuacamoleApache Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC and RDP.",
    "categories": [
      "Network:Management",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "Apache GuacamoleApache Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC and RDP.",
    "logo": "https://i.imgur.com/eflpez4.png",
    "name": "ApacheGuacamole",
    "image": "jasonbean/guacamole",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/ApacheGuacamole"
      }
    ],
    "env": [
      {
        "name": "OPT_DUO",
        "label": "OPT_DUO",
        "default": "N"
      },
      {
        "name": "OPT_CAS",
        "label": "OPT_CAS",
        "default": "N"
      },
      {
        "name": "OPT_TOTP",
        "label": "OPT_TOTP",
        "default": "N"
      },
      {
        "name": "OPT_HEADER",
        "label": "OPT_HEADER",
        "default": "N"
      },
      {
        "name": "OPT_SAML",
        "label": "OPT_SAML",
        "default": "N"
      },
      {
        "name": "OPT_MYSQL",
        "label": "OPT_MYSQL",
        "default": "Y"
      },
      {
        "name": "OPT_MYSQL_EXTENSION",
        "label": "OPT_MYSQL_EXTENSION",
        "default": "N"
      },
      {
        "name": "OPT_QUICKCONNECT",
        "label": "OPT_QUICKCONNECT",
        "default": "N"
      },
      {
        "name": "OPT_SQLSERVER",
        "label": "OPT_SQLSERVER",
        "default": "N"
      },
      {
        "name": "OPT_LDAP",
        "label": "OPT_LDAP",
        "default": "N"
      }
    ]
  },
  {
    "type": 1,
    "title": "ApacheGuacamoleNoMariaDB",
    "description": "Apache GuacamoleApache Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC and RDP.",
    "categories": [
      "Network:Management",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "Apache GuacamoleApache Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC and RDP.",
    "logo": "https://i.imgur.com/eflpez4.png",
    "name": "ApacheGuacamoleNoMariaDB",
    "image": "jasonbean/guacamole:latest-nomariadb",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/ApacheGuacamole"
      }
    ],
    "env": [
      {
        "name": "OPT_QUICKCONNECT",
        "label": "OPT_QUICKCONNECT",
        "default": "N"
      },
      {
        "name": "OPT_HEADER",
        "label": "OPT_HEADER",
        "default": "N"
      },
      {
        "name": "OPT_SAML",
        "label": "OPT_SAML",
        "default": "N"
      },
      {
        "name": "OPT_MYSQL",
        "label": "OPT_MYSQL",
        "default": "Y"
      },
      {
        "name": "OPT_LDAP",
        "label": "OPT_LDAP",
        "default": "N"
      },
      {
        "name": "OPT_DUO",
        "label": "OPT_DUO",
        "default": "N"
      },
      {
        "name": "OPT_CAS",
        "label": "OPT_CAS",
        "default": "N"
      },
      {
        "name": "OPT_TOTP",
        "label": "OPT_TOTP",
        "default": "N"
      },
      {
        "name": "OPT_SQLSERVER",
        "label": "OPT_SQLSERVER",
        "default": "N"
      }
    ]
  },
  {
    "type": 1,
    "title": "MongoDB",
    "description": "MongoDBMongoDB (from \"humongous\") is a cross-platform document-oriented database. Classified as a NoSQL database, MongoDB eschews the traditional table-based relational database structure in favor of JSON-like documents with dynamic schemas (MongoDB calls the format BSON), making the integration of data in certain types of applications easier and faster. Released under a combination of the GNU Affero General Public License and the Apache License, MongoDB is free and open-source software.",
    "categories": [
      "Network:Other"
    ],
    "platform": "linux",
    "note": "MongoDBMongoDB (from \"humongous\") is a cross-platform document-oriented database. Classified as a NoSQL database, MongoDB eschews the traditional table-based relational database structure in favor of JSON-like documents with dynamic schemas (MongoDB calls the format BSON), making the integration of data in certain types of applications easier and faster. Released under a combination of the GNU Affero General Public License and the Apache License, MongoDB is free and open-source software.",
    "logo": "https://raw.githubusercontent.com/jason-bean/docker-templates/master/jasonbean-repo/mongo.sh-600x600.png",
    "name": "MongoDB",
    "image": "mongo",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27017": "27017:27017/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data/db",
        "bind": "/mnt/user/appdata/mongodb/"
      }
    ]
  },
  {
    "type": 1,
    "title": "Plex-Media-Server",
    "description": "Plex Media Server\n \n    Enjoy your media on all your devices.\n    All your movie, TV Show, music, and photo collections at your fingertips, anywhere you go on all the devices you love.",
    "categories": [
      "MediaServer:Video",
      "MediaServer:Music",
      "MediaServer:Photos"
    ],
    "platform": "linux",
    "note": "Plex Media Server\n \n    Enjoy your media on all your devices.\n    All your movie, TV Show, music, and photo collections at your fingertips, anywhere you go on all the devices you love.",
    "logo": "https://raw.githubusercontent.com/plexinc/pms-docker/master/img/plex-server.png",
    "name": "Plex-Media-Server",
    "image": "plexinc/pms-docker",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/transcode",
        "bind": ""
      },
      {
        "container": "/data",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PLEX_UID",
        "label": "PLEX_UID",
        "default": "99"
      },
      {
        "name": "PLEX_GID",
        "label": "PLEX_GID",
        "default": "100"
      },
      {
        "name": "VERSION",
        "label": "VERSION",
        "default": "latest"
      },
      {
        "name": "PLEX_CLAIM",
        "label": "PLEX_CLAIM",
        "default": "Insert Token from https://plex.tv/claim"
      }
    ]
  },
  {
    "type": 1,
    "title": "Caddy",
    "description": "Caddy is an HTTP/2 web server with automatic HTTPS",
    "categories": [
      "Network:Web"
    ],
    "platform": "linux",
    "note": "Caddy is an HTTP/2 web server with automatic HTTPS",
    "logo": "https://raw.githubusercontent.com/cmer/docker-templates/master/cmer/images/caddy-icon.png",
    "name": "Caddy",
    "image": "cmer/caddy",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "2015": "2015:2015/tcp",
        "443": "443:443/tcp",
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/caddy",
        "bind": "/mnt/cache/appdata/caddy/conf"
      },
      {
        "container": "/var/www",
        "bind": "/mnt/cache/appdata/caddy/www"
      }
    ],
    "env": [
      {
        "name": "RUN_ARGS",
        "label": "RUN_ARGS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Minio",
    "categories": [
      "Network:Web"
    ],
    "platform": "linux",
    "note": "Minio is a distributed object storage server built for cloud applications and devops.",
    "logo": "https://raw.githubusercontent.com/cmer/docker-templates/master/cmer/images/minio-icon.png",
    "name": "Minio",
    "image": "cmer/minio",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "Seafile",
    "description": "Seafile is file synchronisation and sharing server.",
    "categories": [
      "Cloud:",
      "Network:Other",
      "Productivity:"
    ],
    "platform": "linux",
    "note": "Seafile is file synchronisation and sharing server.",
    "logo": "https://raw.githubusercontent.com/cmer/docker-templates/master/cmer/images/seafile-icon.png",
    "name": "Seafile",
    "image": "cmer/seafile",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8000": "8000:8000/tcp",
        "8082": "8082:8082/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/seafile",
        "bind": "/mnt/user/seafile"
      }
    ],
    "env": [
      {
        "name": "MYSQL_PORT",
        "label": "MYSQL_PORT",
        "default": "3306"
      },
      {
        "name": "MYSQL_ROOT_PASSWORD",
        "label": "MYSQL_ROOT_PASSWORD",
        "default": ""
      },
      {
        "name": "SEAFILE_NAME",
        "label": "SEAFILE_NAME",
        "default": "Seafile"
      },
      {
        "name": "SEAFILE_ADMIN",
        "label": "SEAFILE_ADMIN",
        "default": ""
      },
      {
        "name": "SEAFILE_ADMIN_PW",
        "label": "SEAFILE_ADMIN_PW",
        "default": ""
      },
      {
        "name": "MYSQL_USER",
        "label": "MYSQL_USER",
        "default": "seafile"
      },
      {
        "name": "MYSQL_USER_PASSWORD",
        "label": "MYSQL_USER_PASSWORD",
        "default": ""
      },
      {
        "name": "SEAFILE_ADDRESS",
        "label": "SEAFILE_ADDRESS",
        "default": ""
      },
      {
        "name": "PRO",
        "label": "PRO",
        "default": "false"
      },
      {
        "name": "VERSION",
        "label": "VERSION",
        "default": "latest"
      },
      {
        "name": "MYSQL_SERVER",
        "label": "MYSQL_SERVER",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "MinecraftPE",
    "description": "Nukkit is a Nuclear-Powered Server Software For Minecraft Pocket Edition\n\nVERY IMPORTANT:\n First run use Screen on Uraid\n docker exec -ti MinecraftPE /bin/bash\n \n Run command :\n java -jar /nukkit-1.0-SNAPSHOT.jar\n select language\n \n after the first run everything should work fine\n\n To Interact with Server / adminstration,\n use \"docker attach MinecraftPE\" at command promt\n Press ctrl-p-ctrl-q to exit without shutting down the server",
    "categories": [
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "Nukkit is a Nuclear-Powered Server Software For Minecraft Pocket Edition\n\nVERY IMPORTANT:\n First run use Screen on Uraid\n docker exec -ti MinecraftPE /bin/bash\n \n Run command :\n java -jar /nukkit-1.0-SNAPSHOT.jar\n select language\n \n after the first run everything should work fine\n\n To Interact with Server / adminstration,\n use \"docker attach MinecraftPE\" at command promt\n Press ctrl-p-ctrl-q to exit without shutting down the server",
    "logo": "https://i.imgur.com/zn0eOhH.png",
    "name": "MinecraftPE",
    "image": "ixilon/nukkit",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "19132": "19132:19132/udp"
      }
    ],
    "volumes": [
      {
        "container": "/srv/nukkit/",
        "bind": "/mnt/user/appdata/minecraftpe"
      }
    ],
    "env": [
      {
        "name": "LANGUAGE",
        "label": "LANGUAGE",
        "default": "en_US.UTF-8"
      },
      {
        "name": "LC_ALL",
        "label": "LC_ALL",
        "default": "en_US.UTF-8"
      },
      {
        "name": "TZ",
        "label": "TZ",
        "default": "America/Denver"
      }
    ]
  },
  {
    "type": 1,
    "title": "MineOS-node",
    "description": "MineOS is a server front-end to ease managing Minecraft administrative tasks. This iteration using Node.js aims to enhance previous MineOS scripts (Python-based), by leveraging the event-triggering, asyncronous model of Node.JS and websockets.\r\n\r\nThis allows the front-end to provide system health, disk and memory usage, and logging in real-time.\r\n\r\nDefault Username: mc\r\nDefault password: mypass\r\nPlease change your password\r\n\r\nDefault configuration:\r\nWeb Port:  8443\r\nDynmap Port: 8125\r\nMinecraft Ports (10 by default): 25565-25575\r\nContainer Path: /var/games/minecraft\r\nStorage Path (optional for faster server back-ups if using plugins like dynmap):  /mnt/data\r\n\r\nUbuntu, latest commit By Hexparrot",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "MineOS is a server front-end to ease managing Minecraft administrative tasks. This iteration using Node.js aims to enhance previous MineOS scripts (Python-based), by leveraging the event-triggering, asyncronous model of Node.JS and websockets.\r\n\r\nThis allows the front-end to provide system health, disk and memory usage, and logging in real-time.\r\n\r\nDefault Username: mc\r\nDefault password: mypass\r\nPlease change your password\r\n\r\nDefault configuration:\r\nWeb Port:  8443\r\nDynmap Port: 8125\r\nMinecraft Ports (10 by default): 25565-25575\r\nContainer Path: /var/games/minecraft\r\nStorage Path (optional for faster server back-ups if using plugins like dynmap):  /mnt/data\r\n\r\nUbuntu, latest commit By Hexparrot",
    "logo": "https://vignette2.wikia.nocookie.net/lotr-minecraft-mod-exiles/images/f/f2/Minecraft_server_setup.png/revision/latest?cb=20160911172557",
    "name": "MineOS-node",
    "image": "hexparrot/mineos",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "0": "0:0/tcp",
        "25565": "25565:25565/udp",
        "8443": "8443:8443/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/games/minecraft",
        "bind": "/mnt/cache/appdata/minecraft/"
      },
      {
        "container": "/mnt/data",
        "bind": "/mnt/cache/minecraft"
      }
    ],
    "env": [
      {
        "name": "USER_PASSWORD",
        "label": "USER_PASSWORD",
        "default": "mypass"
      }
    ]
  },
  {
    "type": 1,
    "title": "plex-discord-bot",
    "description": "A Discord bot that allows you to search, play, and queue music from your Plex Media Server.\r\nCommands\r\n!plexTest : a test to see make sure your Plex server is connected properly\r\n!clearqueue : clears all songs in queue\r\n!nextpage : get next page of songs if desired song is not listed\r\n!pause : pauses current song if one is playing\r\n!play  : bot will join voice channel and play song if one song available. if more than one, bot will return a list to choose from\r\n!playsong  : plays a song from the generated song list\r\n!removesong  : removes song by index from the song queue\r\n!resume : resumes song if previously paused\r\n!skip : skips the current song if one is playing and plays the next song in queue if it exists\r\n!stop : stops song if one is playing\r\n!viewqueue : displays current song queue",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "A Discord bot that allows you to search, play, and queue music from your Plex Media Server.\r\nCommands\r\n!plexTest : a test to see make sure your Plex server is connected properly\r\n!clearqueue : clears all songs in queue\r\n!nextpage : get next page of songs if desired song is not listed\r\n!pause : pauses current song if one is playing\r\n!play  : bot will join voice channel and play song if one song available. if more than one, bot will return a list to choose from\r\n!playsong  : plays a song from the generated song list\r\n!removesong  : removes song by index from the song queue\r\n!resume : resumes song if previously paused\r\n!skip : skips the current song if one is playing and plays the next song in queue if it exists\r\n!stop : stops song if one is playing\r\n!viewqueue : displays current song queue",
    "name": "plex-discord-bot",
    "image": "ninjaneer/plex-discord-bot",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "0": "0:0/tcp"
      }
    ],
    "env": [
      {
        "name": "TZ",
        "label": "TZ",
        "default": "America/Denver"
      },
      {
        "name": "DISCORD_BOT_USERNAME",
        "label": "DISCORD_BOT_USERNAME",
        "default": "username"
      },
      {
        "name": "PLEX_LOCAL_IP",
        "label": "PLEX_LOCAL_IP",
        "default": "Local IP"
      },
      {
        "name": "PLEX_TOKEN",
        "label": "PLEX_TOKEN",
        "default": "Token"
      },
      {
        "name": "PLEX_MACHINEID",
        "label": "PLEX_MACHINEID",
        "default": "Machine ID"
      },
      {
        "name": "PLEX_MANAGED_USERNAME",
        "label": "PLEX_MANAGED_USERNAME",
        "default": "Managed user"
      },
      {
        "name": "DISCORD_CLIENT_ID",
        "label": "DISCORD_CLIENT_ID",
        "default": "Client ID"
      },
      {
        "name": "DISCORD_CLIENT_SECRET",
        "label": "DISCORD_CLIENT_SECRET",
        "default": "Client Secret"
      },
      {
        "name": "DISCORD_BOT_TOKEN",
        "label": "DISCORD_BOT_TOKEN",
        "default": "token"
      },
      {
        "name": "PLEX_USERNAME",
        "label": "PLEX_USERNAME",
        "default": "Username"
      },
      {
        "name": "PLEX_PASSWORD",
        "label": "PLEX_PASSWORD",
        "default": "Password"
      }
    ]
  },
  {
    "type": 1,
    "title": "Transmission_VPN",
    "description": "Docker container which runs Transmission torrent client with WebUI while connecting to OpenVPN.\r\nWhen using PIA as provider it will update Transmission hourly with assigned open port. Please read the instructions below.\"\r\nYou must set the environment variables OPENVPN_PROVIDER, OPENVPN_USERNAME and OPENVPN_PASSWORD to provide basic connection details.\r\nRequired environment options\r\nVariable\t                                Function\t                                        Example\r\nOPENVPN_PROVIDER      Sets the OpenVPN provider to use.\tOPENVPN_PROVIDER=provider. All Providers are listed in the Drop Down \r\nOPENVPN_USERNAME\tYour OpenVPN username\tOPENVPN_USERNAME=asdf\r\nOPENVPN_PASSWORD\tYour OpenVPN password\tOPENVPN_PASSWORD=asdf\r\n\r\nNetwork configuration options\r\nVariable\t                            Function\t                                                      Example\r\nOPENVPN_CONFIG\tSets the OpenVPN endpoint to connect to.\t        OPENVPN_CONFIG=UK Southampton",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "Docker container which runs Transmission torrent client with WebUI while connecting to OpenVPN.\r\nWhen using PIA as provider it will update Transmission hourly with assigned open port. Please read the instructions below.\"\r\nYou must set the environment variables OPENVPN_PROVIDER, OPENVPN_USERNAME and OPENVPN_PASSWORD to provide basic connection details.\r\nRequired environment options\r\nVariable\t                                Function\t                                        Example\r\nOPENVPN_PROVIDER      Sets the OpenVPN provider to use.\tOPENVPN_PROVIDER=provider. All Providers are listed in the Drop Down \r\nOPENVPN_USERNAME\tYour OpenVPN username\tOPENVPN_USERNAME=asdf\r\nOPENVPN_PASSWORD\tYour OpenVPN password\tOPENVPN_PASSWORD=asdf\r\n\r\nNetwork configuration options\r\nVariable\t                            Function\t                                                      Example\r\nOPENVPN_CONFIG\tSets the OpenVPN endpoint to connect to.\t        OPENVPN_CONFIG=UK Southampton",
    "logo": "https://i.imgur.com/vLsgHcp.png",
    "name": "Transmission_VPN",
    "image": "haugene/transmission-openvpn",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "1198": "1198:1198/udp",
        "9091": "9091:9091/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/watch",
        "bind": "/mnt/user/T_Media/Torrent/watch/"
      },
      {
        "container": "/mnt/user/T_Media/Torrent/",
        "bind": "/mnt/user/T_Media/Torrent/"
      },
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/transmission/"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/T_Media/Torrent/"
      },
      {
        "container": "/downloads",
        "bind": "/mnt/user/T_Media/Torrent/"
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "TRANSMISSION_RATIO_LIMIT",
        "label": "TRANSMISSION_RATIO_LIMIT",
        "default": "1.1"
      },
      {
        "name": "TRANSMISSION_RATIO_LIMIT_ENABLED",
        "label": "TRANSMISSION_RATIO_LIMIT_ENABLED",
        "default": "true"
      },
      {
        "name": "TRANSMISSION_CACHE_SIZE_MB",
        "label": "TRANSMISSION_CACHE_SIZE_MB",
        "default": "10"
      },
      {
        "name": "TRANSMISSION_INCOMPLETE_DIR",
        "label": "TRANSMISSION_INCOMPLETE_DIR",
        "default": "/downloads/incomplete"
      },
      {
        "name": "GLOBAL_APPLY_PERMISSIONS",
        "label": "GLOBAL_APPLY_PERMISSIONS",
        "default": "false"
      },
      {
        "name": "OPENVPN_CONFIG",
        "label": "OPENVPN_CONFIG",
        "default": "Switzerland"
      },
      {
        "name": "TRANSMISSION_RPC_PASSWORD",
        "label": "TRANSMISSION_RPC_PASSWORD",
        "default": "password"
      },
      {
        "name": "LOCAL_NETWORK",
        "label": "LOCAL_NETWORK",
        "default": "192.168.0.0/24"
      },
      {
        "name": "TRANSMISSION_RPC_USERNAME",
        "label": "TRANSMISSION_RPC_USERNAME",
        "default": "admin"
      },
      {
        "name": "OPENVPN_OPTS",
        "label": "OPENVPN_OPTS",
        "default": "--inactive 3600 --ping 10 --ping-exit 60"
      },
      {
        "name": "TRANSMISSION_RPC_AUTHENTICATION_REQUIRED",
        "label": "TRANSMISSION_RPC_AUTHENTICATION_REQUIRED",
        "default": "true"
      },
      {
        "name": "TRANSMISSION_WEB_UI",
        "label": "TRANSMISSION_WEB_UI",
        "default": "transmission-web-control"
      },
      {
        "name": "OPENVPN_USERNAME",
        "label": "OPENVPN_USERNAME",
        "default": "Username"
      },
      {
        "name": "OPENVPN_PASSWORD",
        "label": "OPENVPN_PASSWORD",
        "default": "Password"
      },
      {
        "name": "TRANSMISSION_DOWNLOAD_DIR",
        "label": "TRANSMISSION_DOWNLOAD_DIR",
        "default": "/downloads"
      },
      {
        "name": "TRANSMISSION_DOWNLOAD_QUEUE_SIZE",
        "label": "TRANSMISSION_DOWNLOAD_QUEUE_SIZE",
        "default": "15"
      },
      {
        "name": "OPENVPN_PROVIDER",
        "label": "OPENVPN_PROVIDER",
        "default": "PIA"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "Unifi",
    "description": "Use the UniFi Controller software to quickly configure and administer an enterprise Wi‐Fi network. RF map and performance features, real-time status, automatic UAP device detection, and advanced security options are all seamlessly integrated.",
    "categories": [
      "Network:Management",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Use the UniFi Controller software to quickly configure and administer an enterprise Wi‐Fi network. RF map and performance features, real-time status, automatic UAP device detection, and advanced security options are all seamlessly integrated.",
    "logo": "https://dl.ubnt.com/press/Company_Logos/U_Logo/WEB/U_Logo_RGB.png",
    "name": "Unifi",
    "image": "brettm357/unifi",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "3478": "3478:3478/udp",
        "6789": "6789:6789/tcp",
        "8080": "8080:8080/tcp",
        "8081": "8081:8081/tcp",
        "8443": "8443:8443/tcp",
        "8843": "8843:8843/tcp",
        "8880": "8880:8880/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/usr/lib/unifi/logs",
        "bind": "/mnt/cache/appdata/unifi/logs"
      },
      {
        "container": "/usr/lib/unifi/data",
        "bind": "/mnt/cache/appdata/unifi"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Avidemux",
    "description": "Avidemux is a free video editor designed for simple cutting, filtering and encoding tasks.  It supports many file types, including AVI, DVD compatible MPEG files, MP4 and ASF, using a variety of codecs.  Tasks can be automated using projects, job queue and powerful scripting capabilities.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 80MB in download size).",
    "categories": [
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "Avidemux is a free video editor designed for simple cutting, filtering and encoding tasks.  It supports many file types, including AVI, DVD compatible MPEG files, MP4 and ASF, using a variety of codecs.  Tasks can be automated using projects, job queue and powerful scripting capabilities.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 80MB in download size).",
    "logo": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/avidemux-icon.png",
    "name": "Avidemux",
    "image": "jlesage/avidemux",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5800": "7811:5800/tcp",
        "5900": "7911:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/avidemux"
      },
      {
        "container": "/storage",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "X11VNC_EXTRA_OPTS",
        "label": "X11VNC_EXTRA_OPTS",
        "default": ""
      },
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "APP_NICENESS",
        "label": "APP_NICENESS",
        "default": ""
      },
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1280"
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "768"
      },
      {
        "name": "SECURE_CONNECTION",
        "label": "SECURE_CONNECTION",
        "default": "0"
      }
    ]
  },
  {
    "type": 1,
    "title": "CloudBerryBackup",
    "description": "Backup files and folders to cloud storage of your choice: Amazon S3, Azure Blob Storage, Google Cloud Storage, HP Cloud, Rackspace Cloud Files, OpenStack, DreamObjects and other.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 60MB in download size).",
    "categories": [
      "Backup:"
    ],
    "platform": "linux",
    "note": "Backup files and folders to cloud storage of your choice: Amazon S3, Azure Blob Storage, Google Cloud Storage, HP Cloud, Rackspace Cloud Files, OpenStack, DreamObjects and other.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 60MB in download size).",
    "logo": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/cloudberry-backup-icon.png",
    "name": "CloudBerryBackup",
    "image": "jlesage/cloudberry-backup",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "43210": "43210:43210/tcp",
        "43211": "43211:43211/tcp",
        "5800": "7802:5800/tcp",
        "5900": "7902:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/cloudberry-backup"
      },
      {
        "container": "/storage",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "SECURE_CONNECTION",
        "label": "SECURE_CONNECTION",
        "default": "0"
      },
      {
        "name": "CBB_WEB_INTERFACE_USER",
        "label": "CBB_WEB_INTERFACE_USER",
        "default": ""
      },
      {
        "name": "CBB_WEB_INTERFACE_PASSWORD",
        "label": "CBB_WEB_INTERFACE_PASSWORD",
        "default": ""
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      },
      {
        "name": "APP_NICENESS",
        "label": "APP_NICENESS",
        "default": ""
      },
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1280"
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "768"
      },
      {
        "name": "X11VNC_EXTRA_OPTS",
        "label": "X11VNC_EXTRA_OPTS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "CrashPlan",
    "categories": [
      "Backup:"
    ],
    "platform": "linux",
    "note": "CrashPlan makes it easy to protect your digital life, so you can get back to\nwhat’s important in real life.  Only CrashPlan offers totally free local and\noffsite backup. A subscription to the cloud backup service gets you continuous\nbackup, mobile file access and lots more. For the ultimate in computer backup,\nget all three, from the same easy application.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 160MB in download size).",
    "logo": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/crashplan-icon.png",
    "name": "CrashPlan",
    "image": "jlesage/crashplan",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "CrashPlanPRO",
    "description": "CrashPlan offers the most comprehensive online backup solution to tens of\nthousands of businesses around the world.  The highly secure, automatic and\ncontinuous service provides customers the peace of mind that their digital life\nis protected and easily accessible.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 250MB in download size).",
    "categories": [
      "Backup:"
    ],
    "platform": "linux",
    "note": "CrashPlan offers the most comprehensive online backup solution to tens of\nthousands of businesses around the world.  The highly secure, automatic and\ncontinuous service provides customers the peace of mind that their digital life\nis protected and easily accessible.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 250MB in download size).",
    "logo": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/crashplan-pro-icon.png",
    "name": "CrashPlanPRO",
    "image": "jlesage/crashplan-pro",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5800": "7810:5800/tcp",
        "5900": "7910:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/crashplan-pro"
      },
      {
        "container": "/storage",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "X11VNC_EXTRA_OPTS",
        "label": "X11VNC_EXTRA_OPTS",
        "default": ""
      },
      {
        "name": "APP_NICENESS",
        "label": "APP_NICENESS",
        "default": ""
      },
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1280"
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "768"
      },
      {
        "name": "SECURE_CONNECTION",
        "label": "SECURE_CONNECTION",
        "default": "0"
      },
      {
        "name": "CRASHPLAN_SRV_MAX_MEM",
        "label": "CRASHPLAN_SRV_MAX_MEM",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "dupeGuru",
    "description": "dupeGuru is a tool to find duplicate files on your computer. It can scan either\nfilenames or contents. The filename scan features a fuzzy matching algorithm\nthat can find duplicate filenames even when they are not exactly the same.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 100MB in download size).",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "dupeGuru is a tool to find duplicate files on your computer. It can scan either\nfilenames or contents. The filename scan features a fuzzy matching algorithm\nthat can find duplicate filenames even when they are not exactly the same.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 100MB in download size).",
    "logo": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/dupeguru-icon.png",
    "name": "dupeGuru",
    "image": "jlesage/dupeguru",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5800": "7801:5800/tcp",
        "5900": "7901:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/dupeguru"
      },
      {
        "container": "/storage",
        "bind": "/mnt/user"
      },
      {
        "container": "/trash",
        "bind": "/dev/null"
      }
    ],
    "env": [
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "APP_NICENESS",
        "label": "APP_NICENESS",
        "default": ""
      },
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1280"
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "768"
      },
      {
        "name": "SECURE_CONNECTION",
        "label": "SECURE_CONNECTION",
        "default": "0"
      },
      {
        "name": "X11VNC_EXTRA_OPTS",
        "label": "X11VNC_EXTRA_OPTS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "FileBot",
    "description": "FileBot is the ultimate tool for organizing and renaming your movies, tv shows\nor anime, and music well as downloading subtitles and artwork. It's smart and\njust works.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 215MB in download size).",
    "categories": [
      "MediaApp:Other"
    ],
    "platform": "linux",
    "note": "FileBot is the ultimate tool for organizing and renaming your movies, tv shows\nor anime, and music well as downloading subtitles and artwork. It's smart and\njust works.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 215MB in download size).",
    "logo": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/filebot-icon.png",
    "name": "FileBot",
    "image": "jlesage/filebot",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5800": "7813:5800/tcp",
        "5900": "7913:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/output",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/filebot"
      },
      {
        "container": "/storage",
        "bind": "/mnt/user"
      },
      {
        "container": "/watch",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "AMC_CONFLICT",
        "label": "AMC_CONFLICT",
        "default": "auto"
      },
      {
        "name": "AMC_MATCH_MODE",
        "label": "AMC_MATCH_MODE",
        "default": "opportunistic"
      },
      {
        "name": "AMC_ARTWORK",
        "label": "AMC_ARTWORK",
        "default": "n"
      },
      {
        "name": "AMC_CUSTOM_OPTIONS",
        "label": "AMC_CUSTOM_OPTIONS",
        "default": ""
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1280"
      },
      {
        "name": "OPENSUBTITLES_USERNAME",
        "label": "OPENSUBTITLES_USERNAME",
        "default": ""
      },
      {
        "name": "OPENSUBTITLES_PASSWORD",
        "label": "OPENSUBTITLES_PASSWORD",
        "default": ""
      },
      {
        "name": "AMC_SERIES_FORMAT",
        "label": "AMC_SERIES_FORMAT",
        "default": "{plex}"
      },
      {
        "name": "APP_NICENESS",
        "label": "APP_NICENESS",
        "default": ""
      },
      {
        "name": "SECURE_CONNECTION",
        "label": "SECURE_CONNECTION",
        "default": "0"
      },
      {
        "name": "AMC_ACTION",
        "label": "AMC_ACTION",
        "default": "test"
      },
      {
        "name": "AMC_SUBTITLE_LANG",
        "label": "AMC_SUBTITLE_LANG",
        "default": ""
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      },
      {
        "name": "AMC_INSTALL_PKGS",
        "label": "AMC_INSTALL_PKGS",
        "default": ""
      },
      {
        "name": "X11VNC_EXTRA_OPTS",
        "label": "X11VNC_EXTRA_OPTS",
        "default": ""
      },
      {
        "name": "AMC_ANIME_FORMAT",
        "label": "AMC_ANIME_FORMAT",
        "default": "{plex}"
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "768"
      },
      {
        "name": "AMC_INTERVAL",
        "label": "AMC_INTERVAL",
        "default": "1800"
      },
      {
        "name": "AMC_INPUT_DIR",
        "label": "AMC_INPUT_DIR",
        "default": "/watch"
      },
      {
        "name": "FILEBOT_CUSTOM_OPTIONS",
        "label": "FILEBOT_CUSTOM_OPTIONS",
        "default": ""
      },
      {
        "name": "AMC_PROCESS_MUSIC",
        "label": "AMC_PROCESS_MUSIC",
        "default": "y"
      },
      {
        "name": "AMC_OUTPUT_DIR",
        "label": "AMC_OUTPUT_DIR",
        "default": "/output"
      },
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "AMC_INPUT_STABLE_TIME",
        "label": "AMC_INPUT_STABLE_TIME",
        "default": "10"
      },
      {
        "name": "AMC_MUSIC_FORMAT",
        "label": "AMC_MUSIC_FORMAT",
        "default": "{plex}"
      },
      {
        "name": "AMC_MOVIE_FORMAT",
        "label": "AMC_MOVIE_FORMAT",
        "default": "{plex}"
      }
    ]
  },
  {
    "type": 1,
    "title": "FileZilla",
    "description": "FileZilla is a cross-platform graphical FTP, SFTP, and FTPS file management tool with a vast list of features.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 100MB in download size).",
    "categories": [
      "Network:FTP"
    ],
    "platform": "linux",
    "note": "FileZilla is a cross-platform graphical FTP, SFTP, and FTPS file management tool with a vast list of features.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 100MB in download size).",
    "logo": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/filezilla-icon.png",
    "name": "FileZilla",
    "image": "jlesage/filezilla",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5800": "7809:5800/tcp",
        "5900": "7909:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/filezilla"
      },
      {
        "container": "/storage",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "768"
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1280"
      },
      {
        "name": "X11VNC_EXTRA_OPTS",
        "label": "X11VNC_EXTRA_OPTS",
        "default": ""
      },
      {
        "name": "INSTALL_EXTRA_PKGS",
        "label": "INSTALL_EXTRA_PKGS",
        "default": ""
      },
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "APP_NICENESS",
        "label": "APP_NICENESS",
        "default": ""
      },
      {
        "name": "SECURE_CONNECTION",
        "label": "SECURE_CONNECTION",
        "default": "0"
      }
    ]
  },
  {
    "type": 1,
    "title": "Firefox",
    "description": "Mozilla Firefox is a free and open-source web browser developed by Mozilla Foundation and its subsidiary, Mozilla Corporation.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 150MB in download size).",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Mozilla Firefox is a free and open-source web browser developed by Mozilla Foundation and its subsidiary, Mozilla Corporation.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 150MB in download size).",
    "logo": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/firefox-icon.png",
    "name": "Firefox",
    "image": "jlesage/firefox",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5800": "7814:5800/tcp",
        "5900": "7914:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/firefox"
      }
    ],
    "env": [
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "APP_NICENESS",
        "label": "APP_NICENESS",
        "default": ""
      },
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1280"
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "768"
      },
      {
        "name": "SECURE_CONNECTION",
        "label": "SECURE_CONNECTION",
        "default": "0"
      },
      {
        "name": "X11VNC_EXTRA_OPTS",
        "label": "X11VNC_EXTRA_OPTS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "HandBrake",
    "description": "HandBrake is a tool for converting video from nearly any format to a selection of modern, widely supported codecs.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    A fully automated mode is also available: drop files into a watch folder and let HandBrake process them without any user interaction.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 80MB in download size).",
    "categories": [
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "HandBrake is a tool for converting video from nearly any format to a selection of modern, widely supported codecs.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    A fully automated mode is also available: drop files into a watch folder and let HandBrake process them without any user interaction.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 80MB in download size).",
    "logo": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/handbrake-icon.png",
    "name": "HandBrake",
    "image": "jlesage/handbrake",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5800": "7803:5800/tcp",
        "5900": "7903:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/storage",
        "bind": "/mnt/user"
      },
      {
        "container": "/watch",
        "bind": ""
      },
      {
        "container": "/output",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/handbrake"
      }
    ],
    "env": [
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      },
      {
        "name": "APP_NICENESS",
        "label": "APP_NICENESS",
        "default": ""
      },
      {
        "name": "SECURE_CONNECTION",
        "label": "SECURE_CONNECTION",
        "default": "0"
      },
      {
        "name": "AUTOMATED_CONVERSION_PRESET",
        "label": "AUTOMATED_CONVERSION_PRESET",
        "default": "General/Very Fast 1080p30"
      },
      {
        "name": "AUTOMATED_CONVERSION_KEEP_SOURCE",
        "label": "AUTOMATED_CONVERSION_KEEP_SOURCE",
        "default": "1"
      },
      {
        "name": "AUTOMATED_CONVERSION_CHECK_INTERVAL",
        "label": "AUTOMATED_CONVERSION_CHECK_INTERVAL",
        "default": "5"
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "768"
      },
      {
        "name": "X11VNC_EXTRA_OPTS",
        "label": "X11VNC_EXTRA_OPTS",
        "default": ""
      },
      {
        "name": "AUTOMATED_CONVERSION_OUTPUT_DIR",
        "label": "AUTOMATED_CONVERSION_OUTPUT_DIR",
        "default": "/output"
      },
      {
        "name": "AUTOMATED_CONVERSION_SOURCE_STABLE_TIME",
        "label": "AUTOMATED_CONVERSION_SOURCE_STABLE_TIME",
        "default": "5"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1280"
      },
      {
        "name": "AUTOMATED_CONVERSION_FORMAT",
        "label": "AUTOMATED_CONVERSION_FORMAT",
        "default": "mp4"
      },
      {
        "name": "AUTOMATED_CONVERSION_NON_VIDEO_FILE_EXTENSIONS",
        "label": "AUTOMATED_CONVERSION_NON_VIDEO_FILE_EXTENSIONS",
        "default": "jpg jpeg bmp png gif txt nfo"
      },
      {
        "name": "AUTOMATED_CONVERSION_OUTPUT_SUBDIR",
        "label": "AUTOMATED_CONVERSION_OUTPUT_SUBDIR",
        "default": ""
      },
      {
        "name": "AUTOMATED_CONVERSION_SOURCE_MIN_DURATION",
        "label": "AUTOMATED_CONVERSION_SOURCE_MIN_DURATION",
        "default": "10"
      },
      {
        "name": "AUTOMATED_CONVERSION_NO_GUI_PROGRESS",
        "label": "AUTOMATED_CONVERSION_NO_GUI_PROGRESS",
        "default": "0"
      },
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "AUTOMATED_CONVERSION_NON_VIDEO_FILE_ACTION",
        "label": "AUTOMATED_CONVERSION_NON_VIDEO_FILE_ACTION",
        "default": "ignore"
      },
      {
        "name": "AUTOMATED_CONVERSION_MAX_WATCH_FOLDERS",
        "label": "AUTOMATED_CONVERSION_MAX_WATCH_FOLDERS",
        "default": "5"
      },
      {
        "name": "AUTOMATED_CONVERSION_HANDBRAKE_CUSTOM_ARGS",
        "label": "AUTOMATED_CONVERSION_HANDBRAKE_CUSTOM_ARGS",
        "default": ""
      },
      {
        "name": "AUTOMATED_CONVERSION_INSTALL_PKGS",
        "label": "AUTOMATED_CONVERSION_INSTALL_PKGS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "JDownloader2",
    "description": "JDownloader 2 is a free, open-source download management tool with a huge\ncommunity of developers that makes downloading as easy and fast as it should be.\nUsers can start, stop or pause downloads, set bandwith limitations, auto-extract\narchives and much more. It's an easy-to-extend framework that can save hours of\nyour valuable time every day!\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 100MB in download size).",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "JDownloader 2 is a free, open-source download management tool with a huge\ncommunity of developers that makes downloading as easy and fast as it should be.\nUsers can start, stop or pause downloads, set bandwith limitations, auto-extract\narchives and much more. It's an easy-to-extend framework that can save hours of\nyour valuable time every day!\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 100MB in download size).",
    "logo": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/jdownloader-2-icon.png",
    "name": "JDownloader2",
    "image": "jlesage/jdownloader-2",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5800": "7807:5800/tcp",
        "5900": "7907:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/jdownloader-2"
      },
      {
        "container": "/output",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "X11VNC_EXTRA_OPTS",
        "label": "X11VNC_EXTRA_OPTS",
        "default": ""
      },
      {
        "name": "INSTALL_EXTRA_PKGS",
        "label": "INSTALL_EXTRA_PKGS",
        "default": ""
      },
      {
        "name": "APP_NICENESS",
        "label": "APP_NICENESS",
        "default": ""
      },
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1280"
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "768"
      },
      {
        "name": "SECURE_CONNECTION",
        "label": "SECURE_CONNECTION",
        "default": "0"
      }
    ]
  },
  {
    "type": 1,
    "title": "MakeMKV",
    "description": "MakeMKV is your one-click solution to convert video that you own into free and\npatents-unencumbered format that can be played everywhere. MakeMKV is a format\nconverter, otherwise called \"transcoder\". It converts the video clips from\nproprietary (and usually encrypted) disc into a set of MKV files, preserving\nmost information but not changing it in any way. The MKV format can store\nmultiple video/audio tracks with all meta-information and preserve chapters.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    A fully automated mode is also available: insert a DVD or Blu-ray disc into an optical drive and let MakeMKV rips it without any user interaction.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 150MB in download size).",
    "categories": [
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "MakeMKV is your one-click solution to convert video that you own into free and\npatents-unencumbered format that can be played everywhere. MakeMKV is a format\nconverter, otherwise called \"transcoder\". It converts the video clips from\nproprietary (and usually encrypted) disc into a set of MKV files, preserving\nmost information but not changing it in any way. The MKV format can store\nmultiple video/audio tracks with all meta-information and preserve chapters.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    A fully automated mode is also available: insert a DVD or Blu-ray disc into an optical drive and let MakeMKV rips it without any user interaction.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 150MB in download size).",
    "logo": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/makemkv-icon.png",
    "name": "MakeMKV",
    "image": "jlesage/makemkv",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5800": "7806:5800/tcp",
        "5900": "7906:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/makemkv"
      },
      {
        "container": "/storage",
        "bind": "/mnt/user"
      },
      {
        "container": "/output",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "AUTO_DISC_RIPPER_BD_MODE",
        "label": "AUTO_DISC_RIPPER_BD_MODE",
        "default": "mkv"
      },
      {
        "name": "AUTO_DISC_RIPPER_FORCE_UNIQUE_OUTPUT_DIR",
        "label": "AUTO_DISC_RIPPER_FORCE_UNIQUE_OUTPUT_DIR",
        "default": "0"
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      },
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1280"
      },
      {
        "name": "X11VNC_EXTRA_OPTS",
        "label": "X11VNC_EXTRA_OPTS",
        "default": ""
      },
      {
        "name": "AUTO_DISC_RIPPER_EJECT",
        "label": "AUTO_DISC_RIPPER_EJECT",
        "default": "0"
      },
      {
        "name": "AUTO_DISC_RIPPER_MIN_TITLE_LENGTH",
        "label": "AUTO_DISC_RIPPER_MIN_TITLE_LENGTH",
        "default": ""
      },
      {
        "name": "AUTO_DISC_RIPPER_PARALLEL_RIP",
        "label": "AUTO_DISC_RIPPER_PARALLEL_RIP",
        "default": "0"
      },
      {
        "name": "AUTO_DISC_RIPPER_INTERVAL",
        "label": "AUTO_DISC_RIPPER_INTERVAL",
        "default": "5"
      },
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "APP_NICENESS",
        "label": "APP_NICENESS",
        "default": ""
      },
      {
        "name": "SECURE_CONNECTION",
        "label": "SECURE_CONNECTION",
        "default": "0"
      },
      {
        "name": "MAKEMKV_KEY",
        "label": "MAKEMKV_KEY",
        "default": "BETA"
      },
      {
        "name": "AUTO_DISC_RIPPER",
        "label": "AUTO_DISC_RIPPER",
        "default": "0"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "768"
      }
    ]
  },
  {
    "type": 1,
    "title": "MediaInfo",
    "description": "MediaInfo is a convenient unified display of the most relevant technical and tag data for video and audio files.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 100MB in download size).",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "MediaInfo is a convenient unified display of the most relevant technical and tag data for video and audio files.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 100MB in download size).",
    "logo": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/mediainfo-icon.png",
    "name": "MediaInfo",
    "image": "jlesage/mediainfo",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5800": "7817:5800/tcp",
        "5900": "7917:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/mediainfo"
      },
      {
        "container": "/storage",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "APP_NICENESS",
        "label": "APP_NICENESS",
        "default": ""
      },
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1280"
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "768"
      },
      {
        "name": "SECURE_CONNECTION",
        "label": "SECURE_CONNECTION",
        "default": "0"
      },
      {
        "name": "X11VNC_EXTRA_OPTS",
        "label": "X11VNC_EXTRA_OPTS",
        "default": ""
      },
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "MKVCleaver",
    "description": "MKVCleaver is a tool for batch extraction of data from MKV files\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 100MB in download size).",
    "categories": [
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "MKVCleaver is a tool for batch extraction of data from MKV files\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 100MB in download size).",
    "logo": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/mkvcleaver-icon.png",
    "name": "MKVCleaver",
    "image": "jlesage/mkvcleaver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5800": "7812:5800/tcp",
        "5900": "7912:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/storage",
        "bind": "/mnt/user"
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/mkvcleaver"
      }
    ],
    "env": [
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "APP_NICENESS",
        "label": "APP_NICENESS",
        "default": ""
      },
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1280"
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "768"
      },
      {
        "name": "SECURE_CONNECTION",
        "label": "SECURE_CONNECTION",
        "default": "0"
      },
      {
        "name": "X11VNC_EXTRA_OPTS",
        "label": "X11VNC_EXTRA_OPTS",
        "default": ""
      },
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "MKVToolNix",
    "description": "MKVToolNix is a set of tools to create, alter and inspect Matroska files.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 100MB in download size).",
    "categories": [
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "MKVToolNix is a set of tools to create, alter and inspect Matroska files.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 100MB in download size).",
    "logo": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/mkvtoolnix-icon.png",
    "name": "MKVToolNix",
    "image": "jlesage/mkvtoolnix",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5800": "7805:5800/tcp",
        "5900": "7905:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/mkvtoolnix"
      },
      {
        "container": "/storage",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "APP_NICENESS",
        "label": "APP_NICENESS",
        "default": ""
      },
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1280"
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "768"
      },
      {
        "name": "SECURE_CONNECTION",
        "label": "SECURE_CONNECTION",
        "default": "0"
      },
      {
        "name": "X11VNC_EXTRA_OPTS",
        "label": "X11VNC_EXTRA_OPTS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "NginxProxyManager",
    "description": "Nginx Proxy Manager enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.\n    \n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 100MB in download size).",
    "categories": [
      "Network:Web",
      "Network:Proxy",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Nginx Proxy Manager enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.\n    \n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 100MB in download size).",
    "logo": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/nginx-proxy-manager-icon.png",
    "name": "NginxProxyManager",
    "image": "jlesage/nginx-proxy-manager",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "4443": "18443:4443/tcp",
        "8080": "1880:8080/tcp",
        "8181": "7818:8181/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/nginx-proxy-manager"
      }
    ],
    "env": [
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "APP_NICENESS",
        "label": "APP_NICENESS",
        "default": ""
      },
      {
        "name": "DISABLE_IPV6",
        "label": "DISABLE_IPV6",
        "default": "0"
      }
    ]
  },
  {
    "type": 1,
    "title": "PuTTY",
    "description": "PuTTY is a free and open-source terminal emulator, serial console and network file transfer application. It supports several network protocols, including SCP, SSH, Telnet, rlogin, and raw socket connection. It can also connect to a serial port.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 50MB in download size).",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "PuTTY is a free and open-source terminal emulator, serial console and network file transfer application. It supports several network protocols, including SCP, SSH, Telnet, rlogin, and raw socket connection. It can also connect to a serial port.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 50MB in download size).",
    "logo": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/putty-icon.png",
    "name": "PuTTY",
    "image": "jlesage/putty",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5800": "7816:5800/tcp",
        "5900": "7916:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/putty"
      }
    ],
    "env": [
      {
        "name": "X11VNC_EXTRA_OPTS",
        "label": "X11VNC_EXTRA_OPTS",
        "default": ""
      },
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "APP_NICENESS",
        "label": "APP_NICENESS",
        "default": ""
      },
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1280"
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "768"
      },
      {
        "name": "SECURE_CONNECTION",
        "label": "SECURE_CONNECTION",
        "default": "0"
      }
    ]
  },
  {
    "type": 1,
    "title": "QDirStat",
    "description": "QDirStat is a graphical application to show where your disk space has gone and to help you to clean it up.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 100MB in download size).",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "QDirStat is a graphical application to show where your disk space has gone and to help you to clean it up.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 100MB in download size).",
    "logo": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/qdirstat-icon.png",
    "name": "QDirStat",
    "image": "jlesage/qdirstat",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5800": "7815:5800/tcp",
        "5900": "7915:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/qdirstat"
      },
      {
        "container": "/storage",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1280"
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "768"
      },
      {
        "name": "SECURE_CONNECTION",
        "label": "SECURE_CONNECTION",
        "default": "0"
      },
      {
        "name": "X11VNC_EXTRA_OPTS",
        "label": "X11VNC_EXTRA_OPTS",
        "default": ""
      },
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "APP_NICENESS",
        "label": "APP_NICENESS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "tsMuxeR",
    "description": "tsMuxer is a Transport Stream muxer. Remux/mux elementary streams, EVO/VOB/MPG,\nMKV/MKA, MP4/MOV, TS, M2TS to TS to M2TS. Supported video codecs H.264, VC-1,\nMPEG2. Supported audio codecs AAC, AC3 / E-AC3(DD+), DTS/ DTS-HD. Ability to set\nmuxing fps manually and automatically, change level for H.264 streams, shift\nsound tracks, extract DTS core from DTS-HD, join files. Output/author to\ncompliant Blu-ray Disc or AVCHD.  Blu-ray 3D support.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 100MB in download size).",
    "categories": [
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "tsMuxer is a Transport Stream muxer. Remux/mux elementary streams, EVO/VOB/MPG,\nMKV/MKA, MP4/MOV, TS, M2TS to TS to M2TS. Supported video codecs H.264, VC-1,\nMPEG2. Supported audio codecs AAC, AC3 / E-AC3(DD+), DTS/ DTS-HD. Ability to set\nmuxing fps manually and automatically, change level for H.264 streams, shift\nsound tracks, extract DTS core from DTS-HD, join files. Output/author to\ncompliant Blu-ray Disc or AVCHD.  Blu-ray 3D support.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.\n    Also, being based on Alpine Linux, size of this container\n    is very small (less than 100MB in download size).",
    "logo": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/tsmuxer-icon.png",
    "name": "tsMuxeR",
    "image": "jlesage/tsmuxer",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5800": "7808:5800/tcp",
        "5900": "7908:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/tsmuxer"
      },
      {
        "container": "/storage",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "APP_NICENESS",
        "label": "APP_NICENESS",
        "default": ""
      },
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1280"
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "768"
      },
      {
        "name": "SECURE_CONNECTION",
        "label": "SECURE_CONNECTION",
        "default": "0"
      },
      {
        "name": "X11VNC_EXTRA_OPTS",
        "label": "X11VNC_EXTRA_OPTS",
        "default": ""
      },
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "LogitechMediaServer",
    "description": "Logitech Media Server (formerly SlimServer, SqueezeCenter and Squeezebox Server) is a streaming audio server supported by Logitech (formerly Slim Devices), developed in particular to support their Squeezebox range of digital audio receivers.",
    "categories": [
      "MediaServer:Music"
    ],
    "platform": "linux",
    "note": "Logitech Media Server (formerly SlimServer, SqueezeCenter and Squeezebox Server) is a streaming audio server supported by Logitech (formerly Slim Devices), developed in particular to support their Squeezebox range of digital audio receivers.",
    "logo": "https://raw.githubusercontent.com/dlandon/docker.templates/master/logitechmediaserver.png",
    "name": "LogitechMediaServer",
    "image": "dlandon/logitechmediaserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3483": "3483:3483/tcp",
        "9000": "9000:9000/tcp",
        "9090": "9090:9090/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/music",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/LogitechMediaServer"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "ownCloud",
    "description": "OwnCloud provides universal access to your files via the web, your computer or your mobile devices — wherever you are. Mariadb is built into the image. Built with php 7.4, mariadb 10.3 and nginx 1.15",
    "categories": [
      "Cloud:",
      "Network:Other",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "OwnCloud provides universal access to your files via the web, your computer or your mobile devices — wherever you are. Mariadb is built into the image. Built with php 7.4, mariadb 10.3 and nginx 1.15",
    "logo": "https://raw.githubusercontent.com/dlandon/docker.templates/master/owncloud.png",
    "name": "ownCloud",
    "image": "dlandon/owncloud",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "8443:443/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/ownCloud"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/ownCloud/data"
      }
    ],
    "env": [
      {
        "name": "DB_PASS",
        "label": "DB_PASS",
        "default": "owncloud"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Z80Pack",
    "description": "Z80Pack is an emulator for emulating CP/M 1, CP/M 2, CP/M 3, and MP/M II on Linux.  This is a command line Docker only.  There is a built in Shell in a Box WebGUI that is a command line browser window.  You can also execute bash in the Docker.",
    "categories": [
      "Other:"
    ],
    "platform": "linux",
    "note": "Z80Pack is an emulator for emulating CP/M 1, CP/M 2, CP/M 3, and MP/M II on Linux.  This is a command line Docker only.  There is a built in Shell in a Box WebGUI that is a command line browser window.  You can also execute bash in the Docker.",
    "logo": "https://raw.githubusercontent.com/dlandon/docker.templates/master/z80pack.png",
    "name": "Z80Pack",
    "image": "dlandon/z80pack",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "4200": "4200:4200/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/Z80Pack"
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "Zoneminder",
    "description": "Zoneminder is the top Linux video camera security and surveillance solution. ZoneMinder is intended for use in single or multi-camera video security applications, including commercial or home CCTV, theft prevention and child, family member or home monitoring and other domestic care scenarios such as nanny cam installations. It supports capture, analysis, recording, and monitoring of video data coming from one or more video or network cameras attached to a Linux system. ZoneMinder also support web and semi-automatic control of Pan/Tilt/Zoom cameras using a variety of protocols. It is suitable for use as a DIY home video security system and for commercial or professional video security and surveillance. It can also be integrated into a home automation system via X.10 or other protocols. If you're looking for a low cost CCTV system or a more flexible alternative to cheap DVR systems then give ZoneMinder a try.",
    "categories": [
      "HomeAutomation:",
      "MediaApp:Video",
      "MediaServer:Video",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Zoneminder is the top Linux video camera security and surveillance solution. ZoneMinder is intended for use in single or multi-camera video security applications, including commercial or home CCTV, theft prevention and child, family member or home monitoring and other domestic care scenarios such as nanny cam installations. It supports capture, analysis, recording, and monitoring of video data coming from one or more video or network cameras attached to a Linux system. ZoneMinder also support web and semi-automatic control of Pan/Tilt/Zoom cameras using a variety of protocols. It is suitable for use as a DIY home video security system and for commercial or professional video security and surveillance. It can also be integrated into a home automation system via X.10 or other protocols. If you're looking for a low cost CCTV system or a more flexible alternative to cheap DVR systems then give ZoneMinder a try.",
    "logo": "https://raw.githubusercontent.com/dlandon/docker.templates/master/zoneminder.png",
    "name": "Zoneminder",
    "image": "dlandon/zoneminder",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "8443:443/tcp",
        "9000": "9000:9000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/Zoneminder"
      },
      {
        "container": "/var/cache/zoneminder",
        "bind": "/mnt/user/appdata/Zoneminder/data"
      }
    ],
    "env": [
      {
        "name": "INSTALL_HOOK",
        "label": "INSTALL_HOOK",
        "default": "0"
      },
      {
        "name": "INSTALL_TINY_YOLOV4",
        "label": "INSTALL_TINY_YOLOV4",
        "default": "0"
      },
      {
        "name": "INSTALL_FACE",
        "label": "INSTALL_FACE",
        "default": "0"
      },
      {
        "name": "INSTALL_YOLO",
        "label": "INSTALL_YOLO",
        "default": "0"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "INSTALL_TINY_YOLOV3",
        "label": "INSTALL_TINY_YOLOV3",
        "default": "0"
      },
      {
        "name": "INSTALL_YOLOV3",
        "label": "INSTALL_YOLOV3",
        "default": "0"
      },
      {
        "name": "INSTALL_YOLOV4",
        "label": "INSTALL_YOLOV4",
        "default": "0"
      },
      {
        "name": "SHMEM",
        "label": "SHMEM",
        "default": "50%"
      },
      {
        "name": "INSTALL_TINY_YOLO",
        "label": "INSTALL_TINY_YOLO",
        "default": "0"
      }
    ]
  },
  {
    "type": 1,
    "title": "bitcoinunlimited",
    "description": "The Bitcoin Unlimited project seeks to provide a voice to all stakeholders in the Bitcoin ecosystem.\r\n\r\nConverted By @JustinAiken using Community Applications",
    "categories": [
      "Network:Other"
    ],
    "platform": "linux",
    "note": "The Bitcoin Unlimited project seeks to provide a voice to all stakeholders in the Bitcoin ecosystem.\r\n\r\nConverted By @JustinAiken using Community Applications",
    "logo": "https://raw.githubusercontent.com/JustinAiken/unraid-docker-templates/master/bitcoinunlimited/bitcoin.png",
    "name": "bitcoinunlimited",
    "image": "amacneil/bitcoinunlimited",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "18332": "18332:18332/tcp",
        "18333": "18333:18333/tcp",
        "8332": "8332:8332/tcp",
        "8333": "8333:8333/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/blockchain"
      }
    ]
  },
  {
    "type": 1,
    "title": "puppetmaster",
    "description": "Simple puppet master docker based on Centos7\n  # docker-puppetmaster\n  Docker image for puppet server v5 designed to run on unraid\n  If you want the 3.5 version please use docker-puppetmaster:v3 which is currently using puppet 3.5.7\n\n  This is super basic, you have to map /etc/puppet and /etc/puppet/ssl as the confdir and ssl dir\n\n  You must have the conf directory setup, it will not be populated - map to /etc/puppetlabs/puppet\n  You must have the code directory setup, it will not be created - map to /etc/puppetlabs/code\n  However an empty SSL directory is fine, puppet will set this up.\n\n  Also include puppet-lint in case you want to check in the docker container.\n  Also includes perl for a script I run on puppetmaster for staggering puppet run times.",
    "categories": [
      "Tools:Utilities",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "Simple puppet master docker based on Centos7\n  # docker-puppetmaster\n  Docker image for puppet server v5 designed to run on unraid\n  If you want the 3.5 version please use docker-puppetmaster:v3 which is currently using puppet 3.5.7\n\n  This is super basic, you have to map /etc/puppet and /etc/puppet/ssl as the confdir and ssl dir\n\n  You must have the conf directory setup, it will not be populated - map to /etc/puppetlabs/puppet\n  You must have the code directory setup, it will not be created - map to /etc/puppetlabs/code\n  However an empty SSL directory is fine, puppet will set this up.\n\n  Also include puppet-lint in case you want to check in the docker container.\n  Also includes perl for a script I run on puppetmaster for staggering puppet run times.",
    "logo": "https://raw.githubusercontent.com/deasmi/docker-puppetmaster/master/logo.png",
    "name": "puppetmaster",
    "image": "deasmi/docker-puppetmaster",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8081": "8081:8081/tcp",
        "8140": "8140:8140/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/puppetlabs/puppet",
        "bind": "/yourpuppet/conf"
      },
      {
        "container": "/etc/puppetlabs/puppet/ssl",
        "bind": "/yourpuppet/ssl/"
      },
      {
        "container": "/etc/puppetlabs/code",
        "bind": "/yourpuppet/conf/code"
      }
    ]
  },
  {
    "type": 1,
    "title": "Tailscale",
    "description": "Private networks made easy\r\n\r\nConnect all your devices using WireGuard,® without the hassle.\r\nTailscale makes it as easy as installing an app and signing in.\r\n\r\nThis container sets up tailscale for unraid.\r\n\r\nIt will register as hostname unraid, if you want to change that see 'Extra Parameters' below and change to the hostname you would like.\r\n\r\n** IMPORTANT When you first start this container you must check the log file for the logon URL and then enter it into a browser and logon to tail scale. I would then also advise setting the keys to not expire for your unraid host **\r\n\r\n** Note that this will expose your whole server into your tailscale VPN network ** \r\nDo not do this if you do not understand what that means.",
    "categories": [
      "Network:VPN"
    ],
    "platform": "linux",
    "note": "Private networks made easy\r\n\r\nConnect all your devices using WireGuard,® without the hassle.\r\nTailscale makes it as easy as installing an app and signing in.\r\n\r\nThis container sets up tailscale for unraid.\r\n\r\nIt will register as hostname unraid, if you want to change that see 'Extra Parameters' below and change to the hostname you would like.\r\n\r\n** IMPORTANT When you first start this container you must check the log file for the logon URL and then enter it into a browser and logon to tail scale. I would then also advise setting the keys to not expire for your unraid host **\r\n\r\n** Note that this will expose your whole server into your tailscale VPN network ** \r\nDo not do this if you do not understand what that means.",
    "logo": "https://raw.githubusercontent.com/deasmi/unraid-tailscale/master/logo.png",
    "name": "Tailscale",
    "image": "deasmi/unraid-tailscale:1.0.5.1",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/state",
        "bind": "/mnt/user/appdata/tailscale"
      }
    ],
    "env": [
      {
        "name": "UP_FLAGS",
        "label": "UP_FLAGS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "aria2-with-ariang",
    "description": "The aim for this project is to create the worlds best and hottest interface to interact with aria2. Very simple to use, just download and open index.html in any web browser.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "The aim for this project is to create the worlds best and hottest interface to interact with aria2. Very simple to use, just download and open index.html in any web browser.",
    "logo": "https://raw.githubusercontent.com/fanningert/unraid-docker-templates/master/fanningert/icons/aria2ariang.png",
    "name": "aria2-with-ariang",
    "image": "fanningert/aria2-with-ariang",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6800": "6800:6800/tcp",
        "6881": "6881:6881/tcp",
        "6889": "6889:6889/tcp",
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/download",
        "bind": ""
      },
      {
        "container": "/conf",
        "bind": "/mnt/user/appdata/aria2-with-ariang/"
      }
    ],
    "env": [
      {
        "name": "aria2SaveSessionInterval",
        "label": "aria2SaveSessionInterval",
        "default": "10"
      },
      {
        "name": "aria2BtRequireCrypto",
        "label": "aria2BtRequireCrypto",
        "default": "false"
      },
      {
        "name": "aria2Continue",
        "label": "aria2Continue",
        "default": "true"
      },
      {
        "name": "aria2MinSplitSize",
        "label": "aria2MinSplitSize",
        "default": "10M"
      },
      {
        "name": "aria2MaxOverallDownloadLimit",
        "label": "aria2MaxOverallDownloadLimit",
        "default": "0"
      },
      {
        "name": "aria2Secret",
        "label": "aria2Secret",
        "default": "YOUR_SECRET_CODE"
      },
      {
        "name": "aria2MaxConcurrentDownloads",
        "label": "aria2MaxConcurrentDownloads",
        "default": "5"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "aria2ListenPort",
        "label": "aria2ListenPort",
        "default": "6889"
      },
      {
        "name": "aria2EnableDht",
        "label": "aria2EnableDht",
        "default": "true"
      },
      {
        "name": "aria2BtMinCryptoLevel",
        "label": "aria2BtMinCryptoLevel",
        "default": "plain"
      },
      {
        "name": "aria2Split",
        "label": "aria2Split",
        "default": "5"
      },
      {
        "name": "aria2MaxConnectionPerServer",
        "label": "aria2MaxConnectionPerServer",
        "default": "10"
      },
      {
        "name": "aria2ForceSave",
        "label": "aria2ForceSave",
        "default": "true"
      },
      {
        "name": "aria2MaxDownloadLimit",
        "label": "aria2MaxDownloadLimit",
        "default": "0"
      },
      {
        "name": "aria2LogLevel",
        "label": "aria2LogLevel",
        "default": "warn"
      },
      {
        "name": "aria2BtLoadSavedMetadata",
        "label": "aria2BtLoadSavedMetadata",
        "default": "false"
      },
      {
        "name": "aria2SeedRatio",
        "label": "aria2SeedRatio",
        "default": "1"
      },
      {
        "name": "aria2SeedTime",
        "label": "aria2SeedTime",
        "default": "0"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "aria2DhtListenPort",
        "label": "aria2DhtListenPort",
        "default": "6881"
      },
      {
        "name": "aria2BtSaveMetadata",
        "label": "aria2BtSaveMetadata",
        "default": "false"
      },
      {
        "name": "aria2DisableIpv6",
        "label": "aria2DisableIpv6",
        "default": "true"
      }
    ]
  },
  {
    "type": 1,
    "title": "aria2-daemon",
    "description": "Aria2 Docker - Deamon only",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "Aria2 Docker - Deamon only",
    "logo": "https://raw.githubusercontent.com/fanningert/unraid-docker-templates/master/fanningert/icons/aria2daemon.png",
    "name": "aria2-daemon",
    "image": "fanningert/aria2-daemon",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6800": "6800:6800/tcp",
        "6881": "6881:6881/tcp",
        "6889": "6889:6889/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/download",
        "bind": ""
      },
      {
        "container": "/conf",
        "bind": "/mnt/user/appdata/aria2-daemon/"
      }
    ],
    "env": [
      {
        "name": "aria2BtRequireCrypto",
        "label": "aria2BtRequireCrypto",
        "default": "false"
      },
      {
        "name": "aria2BtMinCryptoLevel",
        "label": "aria2BtMinCryptoLevel",
        "default": "plain"
      },
      {
        "name": "aria2BtLoadSavedMetadata",
        "label": "aria2BtLoadSavedMetadata",
        "default": "false"
      },
      {
        "name": "aria2MinSplitSize",
        "label": "aria2MinSplitSize",
        "default": "10M"
      },
      {
        "name": "aria2Split",
        "label": "aria2Split",
        "default": "5"
      },
      {
        "name": "aria2MaxConnectionPerServer",
        "label": "aria2MaxConnectionPerServer",
        "default": "10"
      },
      {
        "name": "aria2ListenPort",
        "label": "aria2ListenPort",
        "default": "6889"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "aria2SeedTime",
        "label": "aria2SeedTime",
        "default": "0"
      },
      {
        "name": "aria2MaxOverallDownloadLimit",
        "label": "aria2MaxOverallDownloadLimit",
        "default": "0"
      },
      {
        "name": "aria2EnableDht",
        "label": "aria2EnableDht",
        "default": "true"
      },
      {
        "name": "aria2Continue",
        "label": "aria2Continue",
        "default": "true"
      },
      {
        "name": "aria2SeedRatio",
        "label": "aria2SeedRatio",
        "default": "1"
      },
      {
        "name": "aria2MaxDownloadLimit",
        "label": "aria2MaxDownloadLimit",
        "default": "0"
      },
      {
        "name": "aria2MaxConcurrentDownloads",
        "label": "aria2MaxConcurrentDownloads",
        "default": "5"
      },
      {
        "name": "aria2Secret",
        "label": "aria2Secret",
        "default": "YOUR_SECRET_CODE"
      },
      {
        "name": "aria2ForceSave",
        "label": "aria2ForceSave",
        "default": "true"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "aria2SaveSessionInterval",
        "label": "aria2SaveSessionInterval",
        "default": "10"
      },
      {
        "name": "aria2BtSaveMetadata",
        "label": "aria2BtSaveMetadata",
        "default": "false"
      },
      {
        "name": "aria2DisableIpv6",
        "label": "aria2DisableIpv6",
        "default": "true"
      },
      {
        "name": "aria2DhtListenPort",
        "label": "aria2DhtListenPort",
        "default": "6881"
      },
      {
        "name": "aria2LogLevel",
        "label": "aria2LogLevel",
        "default": "notice"
      }
    ]
  },
  {
    "type": 1,
    "title": "aria2webui",
    "description": "The aim for this project is to create the worlds best and hottest interface to interact with aria2. Very simple to use, just download and open index.html in any web browser.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "The aim for this project is to create the worlds best and hottest interface to interact with aria2. Very simple to use, just download and open index.html in any web browser.",
    "logo": "https://raw.githubusercontent.com/fanningert/unraid-docker-templates/master/fanningert/icons/aria2webui.png",
    "name": "aria2webui",
    "image": "fanningert/aria2-with-webui",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6800": "6800:6800/tcp",
        "6881": "6881:6881/tcp",
        "6889": "6889:6889/tcp",
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/download",
        "bind": ""
      },
      {
        "container": "/conf",
        "bind": "/mnt/user/appdata/aria2-with-webui/"
      }
    ],
    "env": [
      {
        "name": "aria2BtLoadSavedMetadata",
        "label": "aria2BtLoadSavedMetadata",
        "default": "false"
      },
      {
        "name": "aria2MinSplitSize",
        "label": "aria2MinSplitSize",
        "default": "10M"
      },
      {
        "name": "aria2Split",
        "label": "aria2Split",
        "default": "5"
      },
      {
        "name": "aria2MaxConnectionPerServer",
        "label": "aria2MaxConnectionPerServer",
        "default": "10"
      },
      {
        "name": "aria2SeedRatio",
        "label": "aria2SeedRatio",
        "default": "1"
      },
      {
        "name": "aria2SeedTime",
        "label": "aria2SeedTime",
        "default": "0"
      },
      {
        "name": "aria2DisableIpv6",
        "label": "aria2DisableIpv6",
        "default": "true"
      },
      {
        "name": "aria2EnableDht",
        "label": "aria2EnableDht",
        "default": "true"
      },
      {
        "name": "aria2LogLevel",
        "label": "aria2LogLevel",
        "default": "warn"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "aria2ListenPort",
        "label": "aria2ListenPort",
        "default": "6889"
      },
      {
        "name": "aria2DhtListenPort",
        "label": "aria2DhtListenPort",
        "default": "6881"
      },
      {
        "name": "aria2Continue",
        "label": "aria2Continue",
        "default": "true"
      },
      {
        "name": "aria2MaxConcurrentDownloads",
        "label": "aria2MaxConcurrentDownloads",
        "default": "5"
      },
      {
        "name": "aria2BtRequireCrypto",
        "label": "aria2BtRequireCrypto",
        "default": "false"
      },
      {
        "name": "aria2SaveSessionInterval",
        "label": "aria2SaveSessionInterval",
        "default": "10"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "aria2BtMinCryptoLevel",
        "label": "aria2BtMinCryptoLevel",
        "default": "plain"
      },
      {
        "name": "aria2BtSaveMetadata",
        "label": "aria2BtSaveMetadata",
        "default": "false"
      },
      {
        "name": "aria2ForceSave",
        "label": "aria2ForceSave",
        "default": "true"
      },
      {
        "name": "aria2MaxDownloadLimit",
        "label": "aria2MaxDownloadLimit",
        "default": "0"
      },
      {
        "name": "aria2MaxOverallDownloadLimit",
        "label": "aria2MaxOverallDownloadLimit",
        "default": "0"
      },
      {
        "name": "aria2Secret",
        "label": "aria2Secret",
        "default": "YOUR_SECRET_CODE"
      }
    ]
  },
  {
    "type": 1,
    "title": "CalibreWeb",
    "description": "Calibre Web is a web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database.",
    "categories": [
      "MediaApp:Books",
      "MediaServer:Books"
    ],
    "platform": "linux",
    "note": "Calibre Web is a web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database.",
    "logo": "https://raw.githubusercontent.com/fanningert/unraid-docker-templates/master/fanningert/icons/calibreweb.png",
    "name": "CalibreWeb",
    "image": "technosoft2000/calibre-web",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8083": "8083:8083/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/books",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "SET_CONTAINER_TIMEZONE",
        "label": "SET_CONTAINER_TIMEZONE",
        "default": "true"
      },
      {
        "name": "CONTAINER_TIMEZONE",
        "label": "CONTAINER_TIMEZONE",
        "default": "UTC"
      }
    ]
  },
  {
    "type": 1,
    "title": "Cloud-Commander",
    "categories": [
      "Tools:Utilities",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Cloud Commander is an orthodox web file manager with console and editor.",
    "logo": "https://raw.githubusercontent.com/fanningert/unraid-docker-templates/master/fanningert/icons/cloudcmd.png",
    "name": "Cloud-Commander",
    "image": "coderaiser/cloudcmd:latest-alpine",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "Gitea",
    "description": "Gitea: Git with a cup of tea - The goal of this project is to make the easiest, fastest, and most painless way of setting up a self-hosted Git service. Using Go, this can be done with an independent binary distribution across all platforms which Go supports, including Linux, macOS, and Windows on x86, amd64, ARM and PowerPC architectures. Want to try it before doing anything else? Do it with the online demo! This project has been forked from Gogs.",
    "categories": [
      "Backup:",
      "Cloud:",
      "Productivity:",
      "Tools:Utilities",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Gitea: Git with a cup of tea - The goal of this project is to make the easiest, fastest, and most painless way of setting up a self-hosted Git service. Using Go, this can be done with an independent binary distribution across all platforms which Go supports, including Linux, macOS, and Windows on x86, amd64, ARM and PowerPC architectures. Want to try it before doing anything else? Do it with the online demo! This project has been forked from Gogs.",
    "logo": "https://raw.githubusercontent.com/fanningert/unraid-docker-templates/master/fanningert/icons/gitea.png",
    "name": "Gitea",
    "image": "gitea/gitea",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "22": "22:22/tcp",
        "3000": "3000:3000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/gitea"
      }
    ]
  },
  {
    "type": 1,
    "title": "Guacamole---guacd",
    "description": "Provides the guacd daemon, built from the released guacamole-server source with support for VNC, RDP, SSH, and telnet.",
    "categories": [
      "Network:Other",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Provides the guacd daemon, built from the released guacamole-server source with support for VNC, RDP, SSH, and telnet.",
    "logo": "https://raw.githubusercontent.com/fanningert/unraid-docker-templates/master/fanningert/icons/guacd.png",
    "name": "Guacamole---guacd",
    "image": "guacamole/guacd",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "4822": "4822:4822/tcp"
      }
    ]
  },
  {
    "type": 1,
    "title": "Rocket.Chat",
    "description": "Rocket.Chat is a Web Chat Server, developed in JavaScript, using the Meteor fullstack framework.\r\n\r\nIt is a great solution for communities and companies wanting to privately host their own chat service or for developers looking forward to build and evolve their own chat platforms.",
    "categories": [
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "Rocket.Chat is a Web Chat Server, developed in JavaScript, using the Meteor fullstack framework.\r\n\r\nIt is a great solution for communities and companies wanting to privately host their own chat service or for developers looking forward to build and evolve their own chat platforms.",
    "logo": "https://raw.githubusercontent.com/fanningert/unraid-docker-templates/master/fanningert/icons/rocketchat.png",
    "name": "Rocket.Chat",
    "image": "library/rocket.chat",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3000": "3000:3000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/app/uploads",
        "bind": "/mnt/user/appdata/rocketchat"
      }
    ],
    "env": [
      {
        "name": "ROOT_URL",
        "label": "ROOT_URL",
        "default": "http://localhost:3000"
      },
      {
        "name": "MONGO_URL",
        "label": "MONGO_URL",
        "default": "mongodb://mongo:27017/rocketchat"
      }
    ]
  },
  {
    "type": 1,
    "title": "Virt-Manager",
    "description": "The virt-manager application is a desktop user interface for managing virtual machines through libvirt. It primarily targets KVM VMs, but also manages Xen and LXC (linux containers). It presents a summary view of running domains, their live performance \u0026amp; resource utilization statistics. Wizards enable the creation of new domains, and configuration \u0026amp; adjustment of a domain’s resource allocation \u0026amp; virtual hardware. An embedded VNC and SPICE client viewer presents a full graphical console to the guest domain.",
    "categories": [
      "Tools:Utilities",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "The virt-manager application is a desktop user interface for managing virtual machines through libvirt. It primarily targets KVM VMs, but also manages Xen and LXC (linux containers). It presents a summary view of running domains, their live performance \u0026amp; resource utilization statistics. Wizards enable the creation of new domains, and configuration \u0026amp; adjustment of a domain’s resource allocation \u0026amp; virtual hardware. An embedded VNC and SPICE client viewer presents a full graphical console to the guest domain.",
    "logo": "https://raw.githubusercontent.com/fanningert/unraid-docker-templates/master/fanningert/icons/virtmanager.png",
    "name": "Virt-Manager",
    "image": "fanningert/docker-virtmanager",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/dev/urandom",
        "bind": "/dev/urandom"
      }
    ],
    "env": [
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1024"
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "768"
      },
      {
        "name": "TZ",
        "label": "TZ",
        "default": "America/Chicago"
      },
      {
        "name": "LANG",
        "label": "LANG",
        "default": "en_US.UTF-8"
      },
      {
        "name": "LANGUAGE",
        "label": "LANGUAGE",
        "default": "en_US.UTF-8"
      }
    ]
  },
  {
    "type": 1,
    "title": "malfurious-mailserver",
    "description": "Mailserver is an all-in-one SMTP/IMAP utility that also includes many features such as Anti-Spam/Virus filters.",
    "categories": [
      "Network:Web"
    ],
    "platform": "linux",
    "note": "Mailserver is an all-in-one SMTP/IMAP utility that also includes many features such as Anti-Spam/Virus filters.",
    "logo": "https://raw.githubusercontent.com/Malfurious/docker-templates/master/images/MailserverIcon.png",
    "name": "malfurious-mailserver",
    "image": "malfurious/mailserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "11334": "11334:11334/tcp",
        "143": "143:143/tcp",
        "25": "25:25/tcp",
        "4190": "4190:4190/tcp",
        "587": "587:587/tcp",
        "993": "993:993/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/mail",
        "bind": ""
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/malfurious-mailserver/redis"
      },
      {
        "container": "/etc/letsencrypt",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "POST_USER",
        "label": "POST_USER",
        "default": "postfix"
      },
      {
        "name": "POST_PASS",
        "label": "POST_PASS",
        "default": ""
      },
      {
        "name": "POST_DB",
        "label": "POST_DB",
        "default": "postfix"
      },
      {
        "name": "MYSQL_HOST",
        "label": "MYSQL_HOST",
        "default": ""
      },
      {
        "name": "RSPAMD_PASSWORD",
        "label": "RSPAMD_PASSWORD",
        "default": ""
      },
      {
        "name": "PASS_CRYPT",
        "label": "PASS_CRYPT",
        "default": ""
      },
      {
        "name": "MAIL_HOST",
        "label": "MAIL_HOST",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "malfurious-roundcube-postfixadmin",
    "description": "Postfixadmin is an administrative interface for malfurious-mailserver.\n   Roundcube is a fast and efficient Webmail client.",
    "categories": [
      "Network:Web"
    ],
    "platform": "linux",
    "note": "Postfixadmin is an administrative interface for malfurious-mailserver.\n   Roundcube is a fast and efficient Webmail client.",
    "logo": "https://raw.githubusercontent.com/Malfurious/docker-templates/master/images/roundcube.png",
    "name": "malfurious-roundcube-postfixadmin",
    "image": "malfurious/roundcube-postfixadmin",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp",
        "8888": "8888:8888/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/enigma",
        "bind": "/mnt/user/appdata/malfurious-roundcube-postfixadmin"
      }
    ],
    "env": [
      {
        "name": "ROUND_USER",
        "label": "ROUND_USER",
        "default": "roundcube"
      },
      {
        "name": "POST_PASS",
        "label": "POST_PASS",
        "default": ""
      },
      {
        "name": "MAIL_HOST",
        "label": "MAIL_HOST",
        "default": "mail.domain.com"
      },
      {
        "name": "ENABLE_SMTPS",
        "label": "ENABLE_SMTPS",
        "default": "true"
      },
      {
        "name": "ROUND_PASS",
        "label": "ROUND_PASS",
        "default": ""
      },
      {
        "name": "POST_DB",
        "label": "POST_DB",
        "default": "postfix"
      },
      {
        "name": "POSTFIX_PORT",
        "label": "POSTFIX_PORT",
        "default": "8080"
      },
      {
        "name": "PASS_CRYPT",
        "label": "PASS_CRYPT",
        "default": ""
      },
      {
        "name": "MYSQL_HOST",
        "label": "MYSQL_HOST",
        "default": ""
      },
      {
        "name": "ROUND_DB",
        "label": "ROUND_DB",
        "default": "roundcube"
      },
      {
        "name": "ENABLE_IMAPS",
        "label": "ENABLE_IMAPS",
        "default": "true"
      },
      {
        "name": "DISABLE_INSTALLER",
        "label": "DISABLE_INSTALLER",
        "default": "false"
      },
      {
        "name": "ROUNDCUBE_PORT",
        "label": "ROUNDCUBE_PORT",
        "default": "8888"
      },
      {
        "name": "POST_USER",
        "label": "POST_USER",
        "default": "postfix"
      }
    ]
  },
  {
    "type": 1,
    "title": "GitLab-CE",
    "categories": [
      "Network:",
      "Backup:"
    ],
    "platform": "linux",
    "note": "GitLab Community Edition docker image based on the Omnibus package",
    "logo": "https://raw.githubusercontent.com/malvarez00/unRAID-Docker-Templates/master/malvarez00/icons/gitlab_96x96.png",
    "name": "GitLab-CE",
    "image": "gitlab/gitlab-ce",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "HOOBS",
    "description": "HOOBS is a Homebridge stack with a interface that simplifies configuration and installing plugins. This adds a process wrapper for Homebridge.  \r\nIt also adds an API that can be used as an endpoint for an application.\r\n\r\nHOOBS is not a Homebridge plugin. It is a separate application designed to be a parent to \r\nHomebridge. Since this is independent, it can control Homebridge. \r\nThis also keeps all of the plugins in one place. No need to install plugins in the global \r\nscope, which helps keep your Homebridge server more secure.\r\n\r\nDefault Paths:\r\n\r\nApplication Path -\u003e /hoobs\r\n\r\nConfiguration Path -\u003e /hoobs/etc\r\n\r\nLocal Modules Path -\u003e /hoobs/node_modules\r\n\r\nGlobal Modules Path -\u003e /usr/lib/node_modules\r\n\r\nFor More Information visit:https://hoobs.org/",
    "categories": [
      "HomeAutomation:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "HOOBS is a Homebridge stack with a interface that simplifies configuration and installing plugins. This adds a process wrapper for Homebridge.  \r\nIt also adds an API that can be used as an endpoint for an application.\r\n\r\nHOOBS is not a Homebridge plugin. It is a separate application designed to be a parent to \r\nHomebridge. Since this is independent, it can control Homebridge. \r\nThis also keeps all of the plugins in one place. No need to install plugins in the global \r\nscope, which helps keep your Homebridge server more secure.\r\n\r\nDefault Paths:\r\n\r\nApplication Path -\u003e /hoobs\r\n\r\nConfiguration Path -\u003e /hoobs/etc\r\n\r\nLocal Modules Path -\u003e /hoobs/node_modules\r\n\r\nGlobal Modules Path -\u003e /usr/lib/node_modules\r\n\r\nFor More Information visit:https://hoobs.org/",
    "logo": "https://raw.githubusercontent.com/malvarez00/unRAID-Docker-Templates/master/malvarez00/icons/hoobs_96x96.png",
    "name": "HOOBS",
    "image": "hoobs/hoobs:3.2.9",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "51826": "51826:51826/tcp",
        "8080": "8282:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/hoobs",
        "bind": "/mnt/user/appdata/hoobs/"
      }
    ]
  },
  {
    "type": 1,
    "title": "MotionEye",
    "description": "MotionEye Docker\r\nA surveillance solution base on: MotionEye, Motion and Docker.\r\n\r\nIt's easy and ready to use. Just configure a camera and run this docker, then videos and images will be saved once a motion is detected while a notification e-mail including the recorded video and a preview image will be sent. On top of that, the webcam can be accessed anytime via HTTP live streaming.\r\n\r\nDefault Username: admin\r\nDefault Password: BLANK\r\n\r\nRoot Directory \"/var/lib/motioneye/",
    "categories": [
      "Network:"
    ],
    "platform": "linux",
    "note": "MotionEye Docker\r\nA surveillance solution base on: MotionEye, Motion and Docker.\r\n\r\nIt's easy and ready to use. Just configure a camera and run this docker, then videos and images will be saved once a motion is detected while a notification e-mail including the recorded video and a preview image will be sent. On top of that, the webcam can be accessed anytime via HTTP live streaming.\r\n\r\nDefault Username: admin\r\nDefault Password: BLANK\r\n\r\nRoot Directory \"/var/lib/motioneye/",
    "logo": "https://raw.githubusercontent.com/malvarez00/unRAID-Docker-Templates/master/malvarez00/icons/motioneye_96x96.png",
    "name": "MotionEye",
    "image": "malvarez00/docker-motioneye",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8765": "8765:8765/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/motioneye",
        "bind": "/mnt/cache/appdata/MotionEye/config"
      },
      {
        "container": "/var/lib/motioneye",
        "bind": "/mnt/user/data/MotionEye"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "UniFi-Video",
    "description": "Docker-UniFi-Video\r\n\r\n    Port - Type (TCP/UDP) - Purpose\r\n     7022 - TCP - SSH (NVR Side)\r\n     6666 - TCP - Inbound Camera Streams (NVR Side)\r\n     7004 - UDP - UVC-Micro Talkback (Camera Side)\r\n     7080 - TCP - HTTP Web UI \u0026amp; API (NVR Side)\r\n     7442 - TCP - Camera Management (NVR Side)\r\n     7443 - TCP - HTTPS Web UI \u0026amp; API (NVR Side)\r\n     7445 - TCP - Video over HTTP\r\n     7446 - TCP - Video over HTTPS\r\n     7447 - TCP - RTSP via the controller",
    "categories": [
      "Network:"
    ],
    "platform": "linux",
    "note": "Docker-UniFi-Video\r\n\r\n    Port - Type (TCP/UDP) - Purpose\r\n     7022 - TCP - SSH (NVR Side)\r\n     6666 - TCP - Inbound Camera Streams (NVR Side)\r\n     7004 - UDP - UVC-Micro Talkback (Camera Side)\r\n     7080 - TCP - HTTP Web UI \u0026amp; API (NVR Side)\r\n     7442 - TCP - Camera Management (NVR Side)\r\n     7443 - TCP - HTTPS Web UI \u0026amp; API (NVR Side)\r\n     7445 - TCP - Video over HTTP\r\n     7446 - TCP - Video over HTTPS\r\n     7447 - TCP - RTSP via the controller",
    "logo": "https://raw.githubusercontent.com/malvarez00/unRAID-Docker-Templates/master/malvarez00/icons/unifi_96x96.png",
    "name": "UniFi-Video",
    "image": "malvarez00/docker-unifi-video",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "22": "7022:22/tcp",
        "6666": "6666:6666/tcp",
        "7004": "7004:7004/udp",
        "7080": "7080:7080/tcp",
        "7442": "7442:7442/tcp",
        "7443": "7443:7443/tcp",
        "7445": "7445:7445/tcp",
        "7446": "7446:7446/tcp",
        "7447": "7447:7447/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/lib/unifi-video",
        "bind": "/mnt/cache/appdata/UniFi-Video/datapath"
      },
      {
        "container": "/var/log/unifi-video",
        "bind": "/mnt/cache/appdata/UniFi-Video/logpath"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "DahuaVTO2MQTT",
    "description": "Listens to events from Dahua VTO unit and publishes them via MQTT Message\r\n\r\n\r\nFor integration with Home Assistant see https://community.home-assistant.io/t/dahua-vto-to-mqtt-broker/169781\r\n\r\nSource: https://github.com/elad-bar/DahuaVTO2MQTT",
    "categories": [
      "HomeAutomation:"
    ],
    "platform": "linux",
    "note": "Listens to events from Dahua VTO unit and publishes them via MQTT Message\r\n\r\n\r\nFor integration with Home Assistant see https://community.home-assistant.io/t/dahua-vto-to-mqtt-broker/169781\r\n\r\nSource: https://github.com/elad-bar/DahuaVTO2MQTT",
    "logo": "https://i.imgur.com/OAg2gT1.png",
    "name": "DahuaVTO2MQTT",
    "image": "ronnieroller/dahuavto2mqtt:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "env": [
      {
        "name": "DAHUA_VTO_HOST",
        "label": "DAHUA_VTO_HOST",
        "default": "192.168.1.210"
      },
      {
        "name": "DAHUA_VTO_USERNAME",
        "label": "DAHUA_VTO_USERNAME",
        "default": "admin"
      },
      {
        "name": "DAHUA_VTO_PASSWORD",
        "label": "DAHUA_VTO_PASSWORD",
        "default": ""
      },
      {
        "name": "MQTT_BROKER_HOST",
        "label": "MQTT_BROKER_HOST",
        "default": "192.168.1.2"
      },
      {
        "name": "MQTT_BROKER_PORT",
        "label": "MQTT_BROKER_PORT",
        "default": "1883"
      },
      {
        "name": "MQTT_BROKER_USERNAME",
        "label": "MQTT_BROKER_USERNAME",
        "default": ""
      },
      {
        "name": "MQTT_BROKER_PASSWORD",
        "label": "MQTT_BROKER_PASSWORD",
        "default": ""
      },
      {
        "name": "MQTT_BROKER_TOPIC_PREFIX",
        "label": "MQTT_BROKER_TOPIC_PREFIX",
        "default": "DahuaVTO"
      }
    ]
  },
  {
    "type": 1,
    "title": "ddns",
    "description": "Personal DDNS client with Digital Ocean Networking DNS as backend.\r\n\r\nSee https://github.com/skibish/ddns/blob/master/README.md on how to configure the .ddns.yml",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Personal DDNS client with Digital Ocean Networking DNS as backend.\r\n\r\nSee https://github.com/skibish/ddns/blob/master/README.md on how to configure the .ddns.yml",
    "logo": "https://i.imgur.com/NFr4J1k.png",
    "name": "ddns",
    "image": "ronnieroller/ddns",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/ddns"
      }
    ]
  },
  {
    "type": 1,
    "title": "Lidarr",
    "description": "Lidarr is a music collection manager for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new tracks from your favorite artists and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.\r\n\r\n/config : Storing all Lidarr config files \r\n/data : Storing all Lidarr data files \r\n/music : Point to your music location",
    "categories": [
      "Downloaders:",
      "MediaApp:Music"
    ],
    "platform": "linux",
    "note": "Lidarr is a music collection manager for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new tracks from your favorite artists and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.\r\n\r\n/config : Storing all Lidarr config files \r\n/data : Storing all Lidarr data files \r\n/music : Point to your music location",
    "logo": "https://i.imgur.com/tWOwRrb.png",
    "name": "Lidarr",
    "image": "volikon/lidarr",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8686": "8686:8686/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/music",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/data",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Liquid-dl",
    "description": "Liquid-dl is a simple tool for utlities such as FFMPEG, youtube-dl, and scdl. It provides a simple framework with simple point and click options allowing users\r\nto just click on what they need and use the bare minimum commands to get the results needed.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "Liquid-dl is a simple tool for utlities such as FFMPEG, youtube-dl, and scdl. It provides a simple framework with simple point and click options allowing users\r\nto just click on what they need and use the bare minimum commands to get the results needed.",
    "logo": "https://i.imgur.com/9UXxDSr.png",
    "name": "Liquid-dl",
    "image": "kthulu120/liquid_dl",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8000": "8734:8000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/downloads",
        "bind": "/mnt/cache/appdata/liquid-dl"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "media-roller",
    "description": "Mobile friendly tool for downloading videos from social media.\r\n\r\nFor direct downloads: http://:/api?url=SOME_URL\r\n\r\nWritten in Golang using youtube-dl and ffmpeg for conversion.",
    "categories": [
      "Tools:Utilities",
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "Mobile friendly tool for downloading videos from social media.\r\n\r\nFor direct downloads: http://:/api?url=SOME_URL\r\n\r\nWritten in Golang using youtube-dl and ffmpeg for conversion.",
    "logo": "https://i.imgur.com/I7iwfnF.png",
    "name": "media-roller",
    "image": "ronnieroller/media-roller",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3000": "3000:3000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/download",
        "bind": "/mnt/user/media/video-downloads"
      }
    ]
  },
  {
    "type": 1,
    "title": "pgAdmin4",
    "description": "pgAdmin is the most popular and feature rich Open Source administration and development platform for PostgreSQL, the most advanced Open Source database in the world",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "pgAdmin is the most popular and feature rich Open Source administration and development platform for PostgreSQL, the most advanced Open Source database in the world",
    "logo": "https://i.imgur.com/N4wDUnJ.png",
    "name": "pgAdmin4",
    "image": "fenglc/pgadmin4",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5050": "5050:5050/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/lib/pgadmin",
        "bind": "/mnt/user/appdata/pgadmin/config/"
      }
    ]
  },
  {
    "type": 1,
    "title": "youtube-dl-server",
    "description": "Web / REST interface for downloading youtube videos onto a server.\r\n\r\nEnter a video url to download the video to the server. Url can be to YouTube or any other supported site. The server will automatically download the highest quality version available.\r\n\r\nJust navigate to http://{{address}}:{{port}}/youtube-dl and enter the requested {{url}}.\r\n\r\ncurl -X POST --data-urlencode \"url={{url}}\" http://{{address}}:{{port}}/youtube-dl/q\n/youtube-dl : Downloads go there",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "Web / REST interface for downloading youtube videos onto a server.\r\n\r\nEnter a video url to download the video to the server. Url can be to YouTube or any other supported site. The server will automatically download the highest quality version available.\r\n\r\nJust navigate to http://{{address}}:{{port}}/youtube-dl and enter the requested {{url}}.\r\n\r\ncurl -X POST --data-urlencode \"url={{url}}\" http://{{address}}:{{port}}/youtube-dl/q\n/youtube-dl : Downloads go there",
    "logo": "https://i.imgur.com/taKLB37.png",
    "name": "youtube-dl-server",
    "image": "kmb32123/youtube-dl-server",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/youtube-dl",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "OpenConnectServer",
    "description": "OpenConnect server is an SSL VPN server. Its purpose is to be a secure, small, fast and configurable VPN server. It implements the OpenConnect SSL VPN protocol, and has also (currently experimental) compatibility with clients using the AnyConnect SSL VPN protocol. The OpenConnect protocol provides a dual TCP/UDP VPN channel, and uses the standard IETF security protocols to secure it. This container is an automated build linked to alpine. The dockerfile was written to always download and compile the latest release of OpenConnect VPN server when built.",
    "categories": [
      "Network:Other"
    ],
    "platform": "linux",
    "note": "OpenConnect server is an SSL VPN server. Its purpose is to be a secure, small, fast and configurable VPN server. It implements the OpenConnect SSL VPN protocol, and has also (currently experimental) compatibility with clients using the AnyConnect SSL VPN protocol. The OpenConnect protocol provides a dual TCP/UDP VPN channel, and uses the standard IETF security protocols to secure it. This container is an automated build linked to alpine. The dockerfile was written to always download and compile the latest release of OpenConnect VPN server when built.",
    "logo": "https://raw.githubusercontent.com/MarkusMcNugen/docker-templates/master/openconnect/ocserv-icon.png",
    "name": "OpenConnectServer",
    "image": "markusmcnugen/openconnect",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "0": "4443:0/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/openconnect/"
      }
    ],
    "env": [
      {
        "name": "SRV_CN",
        "label": "SRV_CN",
        "default": "vpn.example.com"
      },
      {
        "name": "SRV_ORG",
        "label": "SRV_ORG",
        "default": "My Company"
      },
      {
        "name": "SRV_DAYS",
        "label": "SRV_DAYS",
        "default": "9999"
      },
      {
        "name": "SPLIT_DNS_DOMAINS",
        "label": "SPLIT_DNS_DOMAINS",
        "default": ""
      },
      {
        "name": "CA_CN",
        "label": "CA_CN",
        "default": "VPN CA"
      },
      {
        "name": "CA_DAYS",
        "label": "CA_DAYS",
        "default": "9999"
      },
      {
        "name": "CA_ORG",
        "label": "CA_ORG",
        "default": "OCSERV"
      },
      {
        "name": "TUNNEL_MODE",
        "label": "TUNNEL_MODE",
        "default": "all"
      },
      {
        "name": "TUNNEL_ROUTES",
        "label": "TUNNEL_ROUTES",
        "default": ""
      },
      {
        "name": "POWER_USER",
        "label": "POWER_USER",
        "default": "no"
      },
      {
        "name": "LISTEN_PORT",
        "label": "LISTEN_PORT",
        "default": "4443"
      },
      {
        "name": "DNS_SERVERS",
        "label": "DNS_SERVERS",
        "default": "8.8.8.8,37.235.1.174,8.8.4.4,37.235.1.177"
      }
    ]
  },
  {
    "type": 1,
    "title": "qbittorrentvpn",
    "description": "Docker container which runs the latest headless qBittorrent client with WebUI wth optional OpenVPN connection including iptables killswitch to prevent IP leakage when tunnel does down. This is an automated build linked with Ubuntu. \r\n\r\nNOTE: Dont use WebUI from the unRAID menu, it throws a header redirect error in qBittorrent. Instead type the IP:PORT directly into a browser address bar.\r\n\r\nNOTE2: If you want to change the ports, change the environmental variables as well as the exposed ports for the container instead of forwarding a host port to 8080 inside the container. qBittorrent will throw a DNS rebinding error.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "Docker container which runs the latest headless qBittorrent client with WebUI wth optional OpenVPN connection including iptables killswitch to prevent IP leakage when tunnel does down. This is an automated build linked with Ubuntu. \r\n\r\nNOTE: Dont use WebUI from the unRAID menu, it throws a header redirect error in qBittorrent. Instead type the IP:PORT directly into a browser address bar.\r\n\r\nNOTE2: If you want to change the ports, change the environmental variables as well as the exposed ports for the container instead of forwarding a host port to 8080 inside the container. qBittorrent will throw a DNS rebinding error.",
    "logo": "https://raw.githubusercontent.com/MarkusMcNugen/docker-templates/master/qbittorrentvpn/qbittorrentvpn-icon.png",
    "name": "qbittorrentvpn",
    "image": "markusmcnugen/qbittorrentvpn",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "8080:8080/tcp",
        "8999": "8999:8999/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/downloads",
        "bind": "/mnt/user/Downloads/"
      },
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/qbittorrentvpn/"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "002"
      },
      {
        "name": "INCOMING_PORT_ENV",
        "label": "INCOMING_PORT_ENV",
        "default": "8999"
      },
      {
        "name": "WEBUI_PORT",
        "label": "WEBUI_PORT",
        "default": "8080"
      },
      {
        "name": "VPN_ENABLED",
        "label": "VPN_ENABLED",
        "default": "yes"
      },
      {
        "name": "VPN_PASSWORD",
        "label": "VPN_PASSWORD",
        "default": ""
      },
      {
        "name": "NAME_SERVERS",
        "label": "NAME_SERVERS",
        "default": "8.8.8.8,8.8.4.4"
      },
      {
        "name": "WEBUI_PORT_ENV",
        "label": "WEBUI_PORT_ENV",
        "default": "8080"
      },
      {
        "name": "INCOMING_PORT",
        "label": "INCOMING_PORT",
        "default": "8999"
      },
      {
        "name": "VPN_USERNAME",
        "label": "VPN_USERNAME",
        "default": ""
      },
      {
        "name": "LAN_NETWORK",
        "label": "LAN_NETWORK",
        "default": "192.168.2.0/24"
      }
    ]
  },
  {
    "type": 1,
    "title": "sftp",
    "categories": [
      "Tools:Utilities",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "Easy to use SFTP (SSH File Transfer Protocol) server with OpenSSH and Fail2ban installed for extra hardening against brute force attacks. Forked from atmoz/sftp. This is an automated build linked with phusion/baseimage.",
    "logo": "https://raw.githubusercontent.com/MarkusMcNugen/docker-templates/master/sftp/SFTP.png",
    "name": "sftp",
    "image": "markusmcnugen/sftp:latest",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "Cloudflare-DDNS",
    "description": "Bash script running as cronjob in Docker to update CloudFlare DNS records.",
    "categories": [
      "Network:Management",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Bash script running as cronjob in Docker to update CloudFlare DNS records.",
    "name": "Cloudflare-DDNS",
    "image": "janarj/cloudflare-ddns:1.1",
    "restart_policy": "unless-stopped",
    "env": [
      {
        "name": "IPv6",
        "label": "IPv6",
        "default": ""
      },
      {
        "name": "IPv6_DNS_RECORD",
        "label": "IPv6_DNS_RECORD",
        "default": ""
      },
      {
        "name": "ZONE_IDENTIFIER",
        "label": "ZONE_IDENTIFIER",
        "default": ""
      },
      {
        "name": "DNS_RECORD",
        "label": "DNS_RECORD",
        "default": ""
      },
      {
        "name": "AUTH_EMAIL",
        "label": "AUTH_EMAIL",
        "default": ""
      },
      {
        "name": "AUTH_TOKEN",
        "label": "AUTH_TOKEN",
        "default": ""
      },
      {
        "name": "DOMAIN",
        "label": "DOMAIN",
        "default": ""
      },
      {
        "name": "PROXIED",
        "label": "PROXIED",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "DockerRegistry",
    "description": "Docker Registry is used to store and distribute Docker images using HTTP API. This allows you host your own private Registry and store your images.",
    "categories": [
      "Cloud:",
      "Network:Management",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Docker Registry is used to store and distribute Docker images using HTTP API. This allows you host your own private Registry and store your images.",
    "logo": "https://raw.githubusercontent.com/juusujanar/unraid-templates/master/img/DockerRegistry-logo.png",
    "name": "DockerRegistry",
    "image": "registry",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5000": "5000:5000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/lib/registry",
        "bind": "/mnt/user/appdata/registry"
      }
    ]
  },
  {
    "type": 1,
    "title": "Portainer",
    "description": "Portainer is a simple management solution for Docker. It consists of a web UI that allows you to easily manage your Docker containers, images, networks and volumes.",
    "categories": [
      "Network:Management",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Portainer is a simple management solution for Docker. It consists of a web UI that allows you to easily manage your Docker containers, images, networks and volumes.",
    "logo": "https://raw.githubusercontent.com/juusujanar/unraid-templates/master/img/Portainer-logo.png",
    "name": "Portainer",
    "image": "portainer/portainer",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "9000": "9000:9000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/portainer"
      },
      {
        "container": "/var/run/docker.sock",
        "bind": "/var/run/docker.sock"
      }
    ]
  },
  {
    "type": 1,
    "title": "Postgres10",
    "description": "PostgreSQL is a powerful, open source object-relational database system. Based on official Postgres Docker image.",
    "categories": [
      "Network:Management",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "PostgreSQL is a powerful, open source object-relational database system. Based on official Postgres Docker image.",
    "logo": "https://raw.githubusercontent.com/juusujanar/unraid-templates/master/img/PostgreSQL-logo.png",
    "name": "Postgres10",
    "image": "postgres:10",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5432": "5432:5432/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/lib/postgresql/data",
        "bind": "/mnt/cache/appdata/postgres"
      }
    ],
    "env": [
      {
        "name": "POSTGRES_PASSWORD",
        "label": "POSTGRES_PASSWORD",
        "default": ""
      },
      {
        "name": "POSTGRES_USER",
        "label": "POSTGRES_USER",
        "default": ""
      },
      {
        "name": "POSTGRES_DB",
        "label": "POSTGRES_DB",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Postgres11",
    "description": "PostgreSQL is a powerful, open source object-relational database system. Based on official Postgres Docker image.",
    "categories": [
      "Network:Management",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "PostgreSQL is a powerful, open source object-relational database system. Based on official Postgres Docker image.",
    "logo": "https://raw.githubusercontent.com/juusujanar/unraid-templates/master/img/PostgreSQL-logo.png",
    "name": "Postgres11",
    "image": "postgres:11",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5432": "5432:5432/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/lib/postgresql/data",
        "bind": "/mnt/cache/appdata/postgres"
      }
    ],
    "env": [
      {
        "name": "POSTGRES_PASSWORD",
        "label": "POSTGRES_PASSWORD",
        "default": ""
      },
      {
        "name": "POSTGRES_USER",
        "label": "POSTGRES_USER",
        "default": ""
      },
      {
        "name": "POSTGRES_DB",
        "label": "POSTGRES_DB",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Redis",
    "description": "Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache and message broker. Based on official Redis Docker image.",
    "categories": [
      "Network:Management",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache and message broker. Based on official Redis Docker image.",
    "logo": "https://raw.githubusercontent.com/juusujanar/unraid-templates/master/img/Redis-logo.png",
    "name": "Redis",
    "image": "redis",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6379": "6379:6379/tcp"
      }
    ]
  },
  {
    "type": 1,
    "title": "Cacti",
    "description": "Cacti is a complete network graphing solution designed to harness the power of RRDTool's data storage and graphing functionality.  For full details go to: www.cacti.net.  The stated minium unRAID version of 6.4.1 is simply because that is the version I run and can test.\r\n\r\nSETUP AND CONFIGURATION:\r\n---------------------------------------------\r\n     0.  SNMP poller default port is 161UDP. \r\n     1.  If you have an SNMP poller plug-in already installed on your unRAID host, you'll find it will conflict with this Docker. Either uninstall the SNMP plugin you are using, or make the changes to have both work (author assumes you know what you're doing).\r\n     2.  Has a webui, default set at 8180, adapt as needed to work on your host.\r\n     3.  During initial setup the path to SPINE is incorrect. Change it to:\r\n          /usr/local/spine/bin/spine\r\n     4. First login  --  userid: admin    \r\n                         password: admin\r\n\r\nFIRST RUN (Recommendation):\r\n---------------------------------------------\r\n   On left hand menu, Under \"Automation\" click on, \"Networks\"  THEN \"Test Network\" on right-side main frame.  In Subnet Range change this to fit your network. Click \"Save\" THEN \"Return\" at the bottom.\r\n   Next click on the checkbox for \"Test Network\" THEN in \"Choose an action\" box click ENABLE --\u003e GO \r\n  Check the checkbox for \"test Network\" again THEN choose \"Discover now\"",
    "categories": [
      "Productivity:",
      "Tools:Utilities",
      "Other:",
      "Network:Management",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "Cacti is a complete network graphing solution designed to harness the power of RRDTool's data storage and graphing functionality.  For full details go to: www.cacti.net.  The stated minium unRAID version of 6.4.1 is simply because that is the version I run and can test.\r\n\r\nSETUP AND CONFIGURATION:\r\n---------------------------------------------\r\n     0.  SNMP poller default port is 161UDP. \r\n     1.  If you have an SNMP poller plug-in already installed on your unRAID host, you'll find it will conflict with this Docker. Either uninstall the SNMP plugin you are using, or make the changes to have both work (author assumes you know what you're doing).\r\n     2.  Has a webui, default set at 8180, adapt as needed to work on your host.\r\n     3.  During initial setup the path to SPINE is incorrect. Change it to:\r\n          /usr/local/spine/bin/spine\r\n     4. First login  --  userid: admin    \r\n                         password: admin\r\n\r\nFIRST RUN (Recommendation):\r\n---------------------------------------------\r\n   On left hand menu, Under \"Automation\" click on, \"Networks\"  THEN \"Test Network\" on right-side main frame.  In Subnet Range change this to fit your network. Click \"Save\" THEN \"Return\" at the bottom.\r\n   Next click on the checkbox for \"Test Network\" THEN in \"Choose an action\" box click ENABLE --\u003e GO \r\n  Check the checkbox for \"test Network\" again THEN choose \"Discover now\"",
    "logo": "https://www.cacti.net/images/cacti.png",
    "name": "Cacti",
    "image": "quantumobject/docker-cacti",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "161": "161:161/udp",
        "80": "8180:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/Cacti"
      }
    ]
  },
  {
    "type": 1,
    "title": "poste",
    "description": "FREE version of Poste.io, full mail server solution. POP3, SMTP, IMAP, Spamassassin, WebMail, WebAdmin. \r\nINITIAL SETUP:\r\n------------------------\r\n      0.  Requires registered FQDN to send/receive external email.\r\n      1.  Following ports are used by container for mail: 25, 110, 143, 443, 465, 587, 993, 995\r\n      2.  Following ports are used by container for webui: 443, 8280    (These may conflict, check your ports)\r\n      3.  Make a user share for mail data, default is  /mnt/user/poste\r\n      4.  Some or all mail ports may need to be opened, forwarded, or dmz for  mail send/receive to work.\r\nOptional arguments\r\n-e \"HTTPS=OFF\" To disable all redirects to encrypted HTTP, its useful when you are using some kind of reverse proxy (place this argument before image name!)\r\n-------------------------\r\nNOTE: Marked as BETA, simply because author is not an expert in email exchange servers -- software itself looks pretty good.",
    "categories": [
      "Cloud:",
      "Productivity:",
      "Tools:Utilities",
      "Network:Web",
      "Network:Other",
      "Network:Messenger",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "FREE version of Poste.io, full mail server solution. POP3, SMTP, IMAP, Spamassassin, WebMail, WebAdmin. \r\nINITIAL SETUP:\r\n------------------------\r\n      0.  Requires registered FQDN to send/receive external email.\r\n      1.  Following ports are used by container for mail: 25, 110, 143, 443, 465, 587, 993, 995\r\n      2.  Following ports are used by container for webui: 443, 8280    (These may conflict, check your ports)\r\n      3.  Make a user share for mail data, default is  /mnt/user/poste\r\n      4.  Some or all mail ports may need to be opened, forwarded, or dmz for  mail send/receive to work.\r\nOptional arguments\r\n-e \"HTTPS=OFF\" To disable all redirects to encrypted HTTP, its useful when you are using some kind of reverse proxy (place this argument before image name!)\r\n-------------------------\r\nNOTE: Marked as BETA, simply because author is not an expert in email exchange servers -- software itself looks pretty good.",
    "logo": "https://icons.iconarchive.com/icons/paomedia/small-n-flat/96/envelope-icon.png",
    "name": "poste",
    "image": "analogic/poste.io",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "110": "110:110/tcp",
        "143": "143:143/tcp",
        "25": "25:25/tcp",
        "4190": "4190:4190/tcp",
        "443": "443:443/tcp",
        "465": "465:465/tcp",
        "587": "587:587/tcp",
        "80": "8280:80/tcp",
        "993": "993:993/tcp",
        "995": "995:995/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/poste"
      }
    ]
  },
  {
    "type": 1,
    "title": "QDirStat",
    "description": "QDirStat is a graphical application displaying files as graphically proportional rectangles to their storage size on disk, allowing the user to see what is taking up space on their volumes. \r\n\r\n#   Docker Application access is through RDP, host port defaults at: 33389.\r\n      *Default MS RDP port is: 3389 (for reference) .\r\n\r\n#   \"Array\" template field: The host path you want to scan using QDirStat, the Docker location is /files. \r\n    ***  Please note this applications has features to erase files, IT WORKS!  ***",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "QDirStat is a graphical application displaying files as graphically proportional rectangles to their storage size on disk, allowing the user to see what is taking up space on their volumes. \r\n\r\n#   Docker Application access is through RDP, host port defaults at: 33389.\r\n      *Default MS RDP port is: 3389 (for reference) .\r\n\r\n#   \"Array\" template field: The host path you want to scan using QDirStat, the Docker location is /files. \r\n    ***  Please note this applications has features to erase files, IT WORKS!  ***",
    "logo": "https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/75fdaefa-5803-4389-a0e0-50741eea0b8f/d3ta2r4-a344e078-8a2c-4a30-bcaa-e2820a65d2c8.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwic3ViIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsImF1ZCI6WyJ1cm46c2VydmljZTpmaWxlLmRvd25sb2FkIl0sIm9iaiI6W1t7InBhdGgiOiIvZi83NWZkYWVmYS01ODAzLTQzODktYTBlMC01MDc0MWVlYTBiOGYvZDN0YTJyNC1hMzQ0ZTA3OC04YTJjLTRhMzAtYmNhYS1lMjgyMGE2NWQyYzgucG5nIn1dXX0.JPI_PBWoinQhcsSWng7AlVT8G9_RD8ILQL8gX6Wr8Fw",
    "name": "QDirStat",
    "image": "mjdumont1/qdirstat",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3389": "33389:3389/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/files",
        "bind": "/mnt/user/"
      }
    ]
  },
  {
    "type": 1,
    "title": "StorjMonitor",
    "description": "Storj daemon + CLI; multiple-node in template support; Storjstat.com monitor installed.\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n   Storj is a Crypto-asset and P2P cloud storage service. This Docker runs the back-end client for Storj allowing internet users to rent their disk space and earn STORJ an Ethereum asset.  **The template author makes no guarantee that STORJ or ETH will retain, or increase in fiat value.**\r\n\r\nSETUP REQUIREMENTS:\r\n-------------------------------------\r\n    1.   TCP port 4000 open on host.\r\n    2.   Path on host for Storj data to sit.  IE: make a user share,  /mnt/user/storj \r\n    3.   Your Ethereum-based wallet address.\r\n    4.   The max allowed space STORJ can take up on the host; remember to make it less \r\n    5.   DDNS or DNS address.\r\nOPTIONAL REQUIREMENTS:\r\n    1.   Storjstat.com API-Key\r\n    2.   Additional network ports, if running multiple nodes. By default it increments from 4000. IE 4001, 4002, 4003++, and so on.\r\n\r\nSTORJ DAEMON STATUS:  (In your command line)\r\n--------------------------------------------------\r\ndocker exec StorjMonitor storjshare status\r\n--------------------------------------------------",
    "categories": [
      "Cloud:",
      "Tools:Utilities",
      "Other:",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "Storj daemon + CLI; multiple-node in template support; Storjstat.com monitor installed.\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n   Storj is a Crypto-asset and P2P cloud storage service. This Docker runs the back-end client for Storj allowing internet users to rent their disk space and earn STORJ an Ethereum asset.  **The template author makes no guarantee that STORJ or ETH will retain, or increase in fiat value.**\r\n\r\nSETUP REQUIREMENTS:\r\n-------------------------------------\r\n    1.   TCP port 4000 open on host.\r\n    2.   Path on host for Storj data to sit.  IE: make a user share,  /mnt/user/storj \r\n    3.   Your Ethereum-based wallet address.\r\n    4.   The max allowed space STORJ can take up on the host; remember to make it less \r\n    5.   DDNS or DNS address.\r\nOPTIONAL REQUIREMENTS:\r\n    1.   Storjstat.com API-Key\r\n    2.   Additional network ports, if running multiple nodes. By default it increments from 4000. IE 4001, 4002, 4003++, and so on.\r\n\r\nSTORJ DAEMON STATUS:  (In your command line)\r\n--------------------------------------------------\r\ndocker exec StorjMonitor storjshare status\r\n--------------------------------------------------",
    "logo": "https://i.imgur.com/hfyAiA4.png",
    "name": "StorjMonitor",
    "image": "zugz/r8mystorj:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/storj",
        "bind": "/mnt/user/storj"
      }
    ],
    "env": [
      {
        "name": "SHARE_SIZE",
        "label": "SHARE_SIZE",
        "default": "100GB"
      },
      {
        "name": "STORJ_MONITOR_API_KEY",
        "label": "STORJ_MONITOR_API_KEY",
        "default": ""
      },
      {
        "name": "NODE_DIR",
        "label": "NODE_DIR",
        "default": "Node_"
      },
      {
        "name": "TUNNELING_REQUIRED",
        "label": "TUNNELING_REQUIRED",
        "default": "FALSE"
      },
      {
        "name": "DEL_LOGS",
        "label": "DEL_LOGS",
        "default": "FALSE"
      },
      {
        "name": "WALLET_ADDRESS",
        "label": "WALLET_ADDRESS",
        "default": ""
      },
      {
        "name": "RPCADDRESS",
        "label": "RPCADDRESS",
        "default": "0.0.0.0"
      },
      {
        "name": "NODE_COUNT",
        "label": "NODE_COUNT",
        "default": "0"
      },
      {
        "name": "DEL_LOGS_DAYS",
        "label": "DEL_LOGS_DAYS",
        "default": "7"
      }
    ]
  },
  {
    "type": 1,
    "title": "Sia",
    "description": "Sia is a decentralized storage platform secured by blockchain technology. The Sia Storage Platform leverages underutilized hard drive capacity around the world to create a data storage marketplace that is more reliable and lower cost than traditional cloud storage providers.",
    "categories": [
      "Cloud:",
      "Other:"
    ],
    "platform": "linux",
    "note": "Sia is a decentralized storage platform secured by blockchain technology. The Sia Storage Platform leverages underutilized hard drive capacity around the world to create a data storage marketplace that is more reliable and lower cost than traditional cloud storage providers.",
    "logo": "https://i.imgur.com/XiSQgV4.png",
    "name": "Sia",
    "image": "mtlynch/sia",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/sia-data",
        "bind": "/mnt/user/Sia"
      }
    ],
    "env": [
      {
        "name": "SIA_WALLET_PASSWORD",
        "label": "SIA_WALLET_PASSWORD",
        "default": ""
      },
      {
        "name": "SIA_MODULES",
        "label": "SIA_MODULES",
        "default": "gctwh"
      }
    ]
  },
  {
    "type": 1,
    "title": "Storj",
    "description": "STORJ DAEMON Docker - using Storj public automated build. This template, nor author, are affiliated with storj.io. \r\n      https://www.storj.io\r\n      https://hub.docker.com/r/oreandawe/storjshare-cli/\r\n\r\n   Storj is a Crypto-asset and P2P cloud storage service. This Docker runs the back-end client for Storj allowing internet users to rent their disk space and earn SJX an Ethereum asset.  **The template author makes no guarantee that SJX or ETH will retain, or increase in fiat value.** This is only the Storj Daemon and CLI tool.\r\n\r\nSETUP REQUIREMENTS:\r\n-------------------------------------\r\n    1.   TCP ports 4000 open on host and setup on container (should be set below)\r\n    2.   Path on host for Storj data to sit.  IE: make a user share,  /mnt/user/storj \r\n    3.   Your Ethereum-based wallet address.\r\n    4.   The max allowed space STORJ can take up on the host; remember to make it less \r\n\r\nSTORJ DAEMON STATUS:  (In your command line)\r\n--------------------------------------------------\r\ndocker exec Storj storjshare status\r\n--------------------------------------------------\r\n\r\nOptional Component:\r\nStorjStat is a free community made tool for monitoring your Storj farming node(s), the tool gives you both real-time and historical analysis. See storjstat.com and calxibe/StorjMonitor for more information. The StorjStat API is optionally supported by using the STORJ_MONITOR_API_KEY environment variable when starting the storjshare-cli Docker container.",
    "categories": [
      "Cloud:",
      "Tools:Utilities",
      "Other:",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "STORJ DAEMON Docker - using Storj public automated build. This template, nor author, are affiliated with storj.io. \r\n      https://www.storj.io\r\n      https://hub.docker.com/r/oreandawe/storjshare-cli/\r\n\r\n   Storj is a Crypto-asset and P2P cloud storage service. This Docker runs the back-end client for Storj allowing internet users to rent their disk space and earn SJX an Ethereum asset.  **The template author makes no guarantee that SJX or ETH will retain, or increase in fiat value.** This is only the Storj Daemon and CLI tool.\r\n\r\nSETUP REQUIREMENTS:\r\n-------------------------------------\r\n    1.   TCP ports 4000 open on host and setup on container (should be set below)\r\n    2.   Path on host for Storj data to sit.  IE: make a user share,  /mnt/user/storj \r\n    3.   Your Ethereum-based wallet address.\r\n    4.   The max allowed space STORJ can take up on the host; remember to make it less \r\n\r\nSTORJ DAEMON STATUS:  (In your command line)\r\n--------------------------------------------------\r\ndocker exec Storj storjshare status\r\n--------------------------------------------------\r\n\r\nOptional Component:\r\nStorjStat is a free community made tool for monitoring your Storj farming node(s), the tool gives you both real-time and historical analysis. See storjstat.com and calxibe/StorjMonitor for more information. The StorjStat API is optionally supported by using the STORJ_MONITOR_API_KEY environment variable when starting the storjshare-cli Docker container.",
    "logo": "https://i.imgur.com/hfyAiA4.png",
    "name": "Storj",
    "image": "oreandawe/storjshare-cli",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "0": "0:0/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/storj",
        "bind": "/mnt/user/storj"
      }
    ],
    "env": [
      {
        "name": "WALLET_ADDRESS",
        "label": "WALLET_ADDRESS",
        "default": ""
      },
      {
        "name": "SHARE_SIZE",
        "label": "SHARE_SIZE",
        "default": "1TB"
      },
      {
        "name": "RPCADDRESS",
        "label": "RPCADDRESS",
        "default": "0.0.0.0"
      },
      {
        "name": "STORJ_MONITOR_API_KEY",
        "label": "STORJ_MONITOR_API_KEY",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "telly",
    "categories": [
      "Tools:Utilities",
      "MediaApp:Video",
      "MediaServer:Video",
      "Network:Proxy"
    ],
    "platform": "linux",
    "note": "Telly - IPTV on Plex Live TV\r\n\r\nAn IPTV Proxy for Plex Live TV \u0026amp; DVR",
    "logo": "https://i.imgur.com/eapTTSL.png",
    "name": "telly",
    "image": "tombowditch/telly",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "tautulli",
    "description": "This is the official container supported by the Tautulli devs.\r\n\r\nTautulli is a 3rd party application that you can run alongside your Plex Media Server to monitor activity and track various statistics.",
    "categories": [
      "Tools:Utilities",
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "This is the official container supported by the Tautulli devs.\r\n\r\nTautulli is a 3rd party application that you can run alongside your Plex Media Server to monitor activity and track various statistics.",
    "logo": "https://raw.githubusercontent.com/Tautulli/Tautulli-Unraid-Template/master/img/logo-circle.png",
    "name": "tautulli",
    "image": "tautulli/tautulli",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8181": "8181:8181/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/tautulli"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "TZ",
        "label": "TZ",
        "default": "UTC"
      }
    ]
  },
  {
    "type": 1,
    "title": "DiskSpeed",
    "description": "Display drives attached to controllers and perform benchmark speed tests. Performing the occasional benchmark will help you determine if a drive is starting to fail even if the SMART logic isn't flagging errors as of yet. Privileged mode is required for this application to function and see the storage controllers \u0026amp; drives attached to the host machine.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Display drives attached to controllers and perform benchmark speed tests. Performing the occasional benchmark will help you determine if a drive is starting to fail even if the SMART logic isn't flagging errors as of yet. Privileged mode is required for this application to function and see the storage controllers \u0026amp; drives attached to the host machine.",
    "logo": "https://raw.githubusercontent.com/jbartlett777/DiskSpeed/master/DiskSpeed.png",
    "name": "DiskSpeed",
    "image": "jbartlett777/diskspeed",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8888": "18888:8888/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/tmp/DiskSpeed",
        "bind": "/mnt/user/appdata/DiskSpeed/"
      },
      {
        "container": "/var/local/emhttp",
        "bind": "/var/local/emhttp"
      }
    ]
  },
  {
    "type": 1,
    "title": "splunk",
    "description": "Splunk Splunk captures, indexes, and correlates real-time data in a searchable repository from which it can generate graphs, reports, alerts, dashboards, and visualizations. Try it as your remote syslog server!",
    "categories": [
      "Tools:Utilities",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "Splunk Splunk captures, indexes, and correlates real-time data in a searchable repository from which it can generate graphs, reports, alerts, dashboards, and visualizations. Try it as your remote syslog server!",
    "logo": "https://i.imgur.com/KKoQMo6.png",
    "name": "splunk",
    "image": "zyphermonkey/splunk",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "514": "514:514/udp",
        "8000": "9000:8000/tcp",
        "8088": "8088:8088/tcp",
        "8089": "8089:8089/tcp",
        "9997": "9997:9997/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/dockerlogs",
        "bind": "/mnt/user/Docker/appdata"
      },
      {
        "container": "/opt/splunk/var",
        "bind": "/mnt/user/appdata/splunk/var"
      },
      {
        "container": "/opt/splunk/etc",
        "bind": "/mnt/user/appdata/splunk/etc"
      },
      {
        "container": "/data",
        "bind": "/var/log"
      },
      {
        "container": "/license",
        "bind": "/mnt/user/appdata/splunk/"
      },
      {
        "container": "/dockervarlib",
        "bind": "/var/lib/docker"
      }
    ]
  },
  {
    "type": 1,
    "title": "fogproject",
    "description": "FOG Project can capture, deploy, and manage Windows, Mac OSX, and various Linux distributions.",
    "categories": [
      "Network:Other"
    ],
    "platform": "linux",
    "note": "FOG Project can capture, deploy, and manage Windows, Mac OSX, and various Linux distributions.",
    "logo": "https://raw.githubusercontent.com/Mudislander/docker-templates/master/img/fogproject_icon.png",
    "name": "fogproject",
    "image": "mudislander/fogproject",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "21": "21:21/tcp",
        "69": "69:69/tcp",
        "80": "80:80/tcp",
        "9000": "9000:9000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/lib/mysql",
        "bind": "/mnt/cache/FOGServer/MySQL"
      },
      {
        "container": "/images",
        "bind": "/mnt/cache/FOGServer/images"
      }
    ],
    "env": [
      {
        "name": "IP",
        "label": "IP",
        "default": "192.168.0.200"
      }
    ]
  },
  {
    "type": 1,
    "title": "OpenRA",
    "description": "Mudislanders Template for mounting OpenRA's dedicated server by rmoriz \r\nOpenRA is a project that recreates and modernizes the classic Command \u0026amp; Conquer real time strategy games. We have developed a flexible open source game engine (the OpenRA engine) that provides a common platform for rebuilding and reimagining classic 2D and 2.5D RTS games (the OpenRA mods).",
    "categories": [
      "Network:Other"
    ],
    "platform": "linux",
    "note": "Mudislanders Template for mounting OpenRA's dedicated server by rmoriz \r\nOpenRA is a project that recreates and modernizes the classic Command \u0026amp; Conquer real time strategy games. We have developed a flexible open source game engine (the OpenRA engine) that provides a common platform for rebuilding and reimagining classic 2D and 2.5D RTS games (the OpenRA mods).",
    "logo": "https://raw.githubusercontent.com/Mudislander/docker-templates/master/img/openra.png",
    "name": "OpenRA",
    "image": "rmoriz/openra",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "1234": "1234:1234/tcp"
      }
    ],
    "env": [
      {
        "name": "MAP",
        "label": "MAP",
        "default": ""
      },
      {
        "name": "AdvertiseOnline",
        "label": "AdvertiseOnline",
        "default": "True"
      },
      {
        "name": "EnableSingleplayer",
        "label": "EnableSingleplayer",
        "default": "False"
      },
      {
        "name": "ListenPort",
        "label": "ListenPort",
        "default": "1234"
      },
      {
        "name": "Mod",
        "label": "Mod",
        "default": "ra"
      },
      {
        "name": "Ban",
        "label": "Ban",
        "default": ""
      },
      {
        "name": "Password",
        "label": "Password",
        "default": ""
      },
      {
        "name": "ExternalPort",
        "label": "ExternalPort",
        "default": "1234"
      },
      {
        "name": "Name",
        "label": "Name",
        "default": "DEDICATED SERVER"
      },
      {
        "name": "MOTD",
        "label": "MOTD",
        "default": "Have Fun!!"
      }
    ]
  },
  {
    "type": 1,
    "title": "xteve",
    "description": "Xteve is a IPTV Proxy for Plex. It takes a M3U list from an IPTV provider and allows filtering with regex along with channel mapping to EPG. It will then generate a local EPG that Plex can understand. For this to all work you need plexpass.",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "Xteve is a IPTV Proxy for Plex. It takes a M3U list from an IPTV provider and allows filtering with regex along with channel mapping to EPG. It will then generate a local EPG that Plex can understand. For this to all work you need plexpass.",
    "name": "xteve",
    "image": "bl0m1/xtevedocker",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "34400": "34400:34400/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/root/xteve",
        "bind": "/mnt/user/appdata/xteve"
      },
      {
        "container": "/tmp/xteve",
        "bind": "/tmp/xteve"
      }
    ]
  },
  {
    "type": 1,
    "title": "ZeroTier",
    "description": "Zerotier is an open source, cross-platform virtual LAN / VPN.\n    It allows remote access to devices as if they all reside in the same local network.\n    All traffic is encrypted end-to-end and takes the most direct path available for minimum latency and maximum performance, using VPN-like connections.\n    After installing up Zerotier on unRaid and any other devices - a VPN connection will be set up and all connected devices will be available to each other like they are in the same network.\n    SMB shares, TimeMachine will be autodetected and UIs will be accessible on regular hostnames and ports.",
    "categories": [
      "Network:DNS",
      "Network:Management",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "Zerotier is an open source, cross-platform virtual LAN / VPN.\n    It allows remote access to devices as if they all reside in the same local network.\n    All traffic is encrypted end-to-end and takes the most direct path available for minimum latency and maximum performance, using VPN-like connections.\n    After installing up Zerotier on unRaid and any other devices - a VPN connection will be set up and all connected devices will be available to each other like they are in the same network.\n    SMB shares, TimeMachine will be autodetected and UIs will be accessible on regular hostnames and ports.",
    "logo": "https://raw.githubusercontent.com/Spikhalskiy/docker-templates/master/images/zerotier_ico.png",
    "name": "ZeroTier",
    "image": "spikhalskiy/zerotier",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/var/lib/zerotier-one",
        "bind": "/mnt/user/appdata/zerotier/zerotier-one"
      }
    ],
    "env": [
      {
        "name": "NETWORK_ID",
        "label": "NETWORK_ID",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "ESPHome",
    "description": "Utilizing the official ESPHome Container. ESPHome is the perfect solution for creating custom firmwares for your ESP8266/ESP32 boards. Its primary focus is making the process to get your ESP running as simple as possible, with many helper tools to ensure you will have the best user experience.",
    "categories": [
      "HomeAutomation:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Utilizing the official ESPHome Container. ESPHome is the perfect solution for creating custom firmwares for your ESP8266/ESP32 boards. Its primary focus is making the process to get your ESP running as simple as possible, with many helper tools to ensure you will have the best user experience.",
    "logo": "https://raw.githubusercontent.com/digiblur/unraid-docker-templates/master/images/esphome.png",
    "name": "ESPHome",
    "image": "esphome/esphome",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6052": "6052:6052/tcp",
        "6123": "6123:6123/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/esphome"
      }
    ]
  },
  {
    "type": 1,
    "title": "ha-dockermon",
    "description": "A NodeJS RESTful API which can be used with Home Assistant to report the state of Docker Containers Custom Component to automatically add all your docker switches to home assistant.  https://gitlab.com/custom_components/hadockermon Additional info including the API can be found here:\r\nhttps://github.com/philhawthorne/ha-dockermon",
    "categories": [
      "HomeAutomation:",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "A NodeJS RESTful API which can be used with Home Assistant to report the state of Docker Containers Custom Component to automatically add all your docker switches to home assistant.  https://gitlab.com/custom_components/hadockermon Additional info including the API can be found here:\r\nhttps://github.com/philhawthorne/ha-dockermon",
    "logo": "https://raw.githubusercontent.com/digiblur/unraid-docker-templates/master/images/ha-dockermon_icon.png",
    "name": "ha-dockermon",
    "image": "philhawthorne/ha-dockermon",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8126": "8126:8126/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/run/docker.sock",
        "bind": "/var/run/docker.sock"
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/ha-dockermon/"
      }
    ]
  },
  {
    "type": 1,
    "title": "hassio_supervisor",
    "description": "Testing Purposes Only - This install method is NOT a supported method of HA Install!  The WebUI will be provided by the homeassistant docker container on port 8123 of this server.\r\n\r\nHass.io Supervisor Docker Container - Hass.io is a Docker-based system for managing your Home Assistant installation and related applications. The system is controlled via Home Assistant which communicates with the Supervisor. The Supervisor provides an API to manage the installation. This includes changing network settings or installing and updating software.",
    "categories": [
      "HomeAutomation:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Testing Purposes Only - This install method is NOT a supported method of HA Install!  The WebUI will be provided by the homeassistant docker container on port 8123 of this server.\r\n\r\nHass.io Supervisor Docker Container - Hass.io is a Docker-based system for managing your Home Assistant installation and related applications. The system is controlled via Home Assistant which communicates with the Supervisor. The Supervisor provides an API to manage the installation. This includes changing network settings or installing and updating software.",
    "logo": "https://raw.githubusercontent.com/digiblur/unraid-docker-templates/master/images/ha_round2.png",
    "name": "hassio_supervisor",
    "image": "homeassistant/amd64-hassio-supervisor",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/hassio/"
      },
      {
        "container": "/var/run/docker.sock",
        "bind": "/var/run/docker.sock"
      },
      {
        "container": "/var/run/dbus",
        "bind": "/var/run/dbus"
      }
    ],
    "env": [
      {
        "name": "HOMEASSISTANT_REPOSITORY",
        "label": "HOMEASSISTANT_REPOSITORY",
        "default": "homeassistant/intel-nuc-homeassistant"
      },
      {
        "name": "SUPERVISOR_SHARE",
        "label": "SUPERVISOR_SHARE",
        "default": "/mnt/user/appdata/hassio/"
      },
      {
        "name": "SUPERVISOR_NAME",
        "label": "SUPERVISOR_NAME",
        "default": "hassio_supervisor"
      }
    ]
  },
  {
    "type": 1,
    "title": "neolink",
    "description": "Neolink is a small program that acts as a proxy between Reolink IP cameras and normal RTSP clients. Certain cameras, such as the Reolink B800, do not implement ONVIF or RTSP, but instead use a proprietary \"Baichuan\" protocol only compatible with their apps and NVRs (any camera that uses \"port 9000\" will likely be using this protocol).\r\n\r\nNOTE: See the GitHub Repo for examples for setting up your appdata/neolink/config.toml file for each camera.  https://github.com/thirtythreeforty/neolink\r\n\r\nNeolink allows you to use NVR software such as Shinobi or Blue Iris to receive video from these cameras instead. The Reolink NVR is not required, and the cameras are unmodified. Your NVR software connects to Neolink, which forwards the video stream from the camera.\r\n\r\nThe Neolink project is not affiliated with Reolink in any way; everything it does has been reverse engineered.",
    "categories": [
      "HomeAutomation:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Neolink is a small program that acts as a proxy between Reolink IP cameras and normal RTSP clients. Certain cameras, such as the Reolink B800, do not implement ONVIF or RTSP, but instead use a proprietary \"Baichuan\" protocol only compatible with their apps and NVRs (any camera that uses \"port 9000\" will likely be using this protocol).\r\n\r\nNOTE: See the GitHub Repo for examples for setting up your appdata/neolink/config.toml file for each camera.  https://github.com/thirtythreeforty/neolink\r\n\r\nNeolink allows you to use NVR software such as Shinobi or Blue Iris to receive video from these cameras instead. The Reolink NVR is not required, and the cameras are unmodified. Your NVR software connects to Neolink, which forwards the video stream from the camera.\r\n\r\nThe Neolink project is not affiliated with Reolink in any way; everything it does has been reverse engineered.",
    "logo": "https://raw.githubusercontent.com/digiblur/unraid-docker-templates/master/images/letter_n_blue.png",
    "name": "neolink",
    "image": "thirtythreeforty/neolink",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8554": "8554:8554/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/neolink.toml",
        "bind": "/mnt/user/appdata/neolink/config.toml"
      }
    ]
  },
  {
    "type": 1,
    "title": "smartthings-mqtt-bridge",
    "description": "A bridge between SmartThings and MQTT (there is NO webconsole!)\r\n\r\nThis project was spawned by the desire to control SmartThings from within Home Assistant. Since Home Assistant already supports MQTT, we chose to go and build a bridge between SmartThings and MQTT.\r\n\r\nSetup info available at: https://github.com/stjohnjohnson/smartthings-mqtt-bridge",
    "categories": [
      "HomeAutomation:",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "A bridge between SmartThings and MQTT (there is NO webconsole!)\r\n\r\nThis project was spawned by the desire to control SmartThings from within Home Assistant. Since Home Assistant already supports MQTT, we chose to go and build a bridge between SmartThings and MQTT.\r\n\r\nSetup info available at: https://github.com/stjohnjohnson/smartthings-mqtt-bridge",
    "logo": "https://raw.githubusercontent.com/digiblur/unraid-docker-templates/master/images/smartthings-mqtt-bridge_icon.png",
    "name": "smartthings-mqtt-bridge",
    "image": "stjohnjohnson/smartthings-mqtt-bridge",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/smartthings-mqtt-bridge"
      }
    ]
  },
  {
    "type": 1,
    "title": "speedtest",
    "description": "Self-hosted HTML5 Speedtest Docker Container\r\n\r\nGreat for troubleshooting bandwidth, ping and jitter issues through a reverse proxy with unRaid.",
    "categories": [
      "Network:Management",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Self-hosted HTML5 Speedtest Docker Container\r\n\r\nGreat for troubleshooting bandwidth, ping and jitter issues through a reverse proxy with unRaid.",
    "logo": "https://raw.githubusercontent.com/digiblur/unraid-docker-templates/master/images/speedtest_icon.png",
    "name": "speedtest",
    "image": "adolfintel/speedtest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "6580:80/tcp"
      }
    ]
  },
  {
    "type": 1,
    "title": "TasmoAdmin",
    "description": "TasmoAdmin (previously SonWEB) is an administrative Website for Home Automation Devices flashed with (https://github.com/arendst/Sonoff-Tasmota). \r\nVideo Tutorial: https://www.youtube.com/watch?v=vJUhRyi3-BQ",
    "categories": [
      "HomeAutomation:",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "TasmoAdmin (previously SonWEB) is an administrative Website for Home Automation Devices flashed with (https://github.com/arendst/Sonoff-Tasmota). \r\nVideo Tutorial: https://www.youtube.com/watch?v=vJUhRyi3-BQ",
    "logo": "https://raw.githubusercontent.com/digiblur/unraid-docker-templates/master/images/tasmoadmin_icon.png",
    "name": "TasmoAdmin",
    "image": "raymondmm/tasmoadmin",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "9541:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/tasmoadmin/"
      }
    ]
  },
  {
    "type": 1,
    "title": "tasmobackup",
    "description": "Tasmota backup - TasmoBackup - Backup all your tasmota devices in one place.  Add/scan for your Tasmota devices.  Use the backupall.php page to schedule automated backups of all devices!",
    "categories": [
      "HomeAutomation:",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "Tasmota backup - TasmoBackup - Backup all your tasmota devices in one place.  Add/scan for your Tasmota devices.  Use the backupall.php page to schedule automated backups of all devices!",
    "logo": "https://raw.githubusercontent.com/danmed/TasmoBackupV1/master/TasmoBackup.png",
    "name": "tasmobackup",
    "image": "danmed/tasmobackupv1",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "8259:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/www/html/data",
        "bind": "/mnt/user/appdata/tasmobackupv1"
      }
    ],
    "env": [
      {
        "name": "DBTYPE",
        "label": "DBTYPE",
        "default": "sqlite"
      },
      {
        "name": "DBNAME",
        "label": "DBNAME",
        "default": "data/tasmobackup"
      }
    ]
  },
  {
    "type": 1,
    "title": "tasui",
    "description": "TasUI is a zero-install device management interface web application for all your Tasmota devices. It will discover your deployed devices and allow you to set up and configure every device from a single dashboard. This initial version includes multiple views (Control, Health, Firmware, Wi-Fi, \u0026amp; MQTT) to allow you to quickly assess the state of your devices. There is also a detailed view (e.g., SetOptions, Status, etc.) available.",
    "categories": [
      "HomeAutomation:",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "TasUI is a zero-install device management interface web application for all your Tasmota devices. It will discover your deployed devices and allow you to set up and configure every device from a single dashboard. This initial version includes multiple views (Control, Health, Firmware, Wi-Fi, \u0026amp; MQTT) to allow you to quickly assess the state of your devices. There is also a detailed view (e.g., SetOptions, Status, etc.) available.",
    "logo": "https://raw.githubusercontent.com/digiblur/unraid-docker-templates/master/images/tasui.png",
    "name": "tasui",
    "image": "iotreboot/tasui:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "8383:80/tcp"
      }
    ]
  },
  {
    "type": 1,
    "title": "unms",
    "description": "This is an all-in-one Alpine Linux based Docker image for running the Ubiquiti Network Management System. This image contains all the components required to run UNMS in a single container and uses the s6-overlay for process management.\r\n\r\nThe container can be accessed via HTTP with port 6080 or HTTPS 6443.  \r\n\r\nUNMS Setup:\r\nAccess the container and walk through the initial setup wizard of adding the username/passwords and devices to be monitored.",
    "categories": [
      "Network:Management",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "This is an all-in-one Alpine Linux based Docker image for running the Ubiquiti Network Management System. This image contains all the components required to run UNMS in a single container and uses the s6-overlay for process management.\r\n\r\nThe container can be accessed via HTTP with port 6080 or HTTPS 6443.  \r\n\r\nUNMS Setup:\r\nAccess the container and walk through the initial setup wizard of adding the username/passwords and devices to be monitored.",
    "logo": "https://raw.githubusercontent.com/digiblur/unraid-docker-templates/master/images/unms_icon.png",
    "name": "unms",
    "image": "nico640/docker-unms",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "6443:443/tcp",
        "80": "6080:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/unms"
      }
    ]
  },
  {
    "type": 1,
    "title": "AMP",
    "description": "CubeCoders AMP. Manage servers like Minecraft (McMyAdmin3, replaces McMyAdmin2), TF2, and more. PLEASE READ SUPPORT THREAD ABOUT MAC ADDRESSES! More info on usage in support thread.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "CubeCoders AMP. Manage servers like Minecraft (McMyAdmin3, replaces McMyAdmin2), TF2, and more. PLEASE READ SUPPORT THREAD ABOUT MAC ADDRESSES! More info on usage in support thread.",
    "logo": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/amp.png",
    "name": "AMP",
    "image": "mitchtalmadge/amp-dockerized",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "25565": "25565:25565/tcp",
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/home/amp/.ampdata",
        "bind": "/mnt/user/appdata/amp"
      }
    ],
    "env": [
      {
        "name": "NIGHTLY",
        "label": "NIGHTLY",
        "default": ""
      },
      {
        "name": "LICENCE",
        "label": "LICENCE",
        "default": ""
      },
      {
        "name": "MODULE",
        "label": "MODULE",
        "default": "ADS"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": "admin"
      },
      {
        "name": "PASSWORD",
        "label": "PASSWORD",
        "default": "password"
      }
    ]
  },
  {
    "type": 1,
    "title": "Appdaemon",
    "description": "HADashboard and Python apps for Home Assistant.\r\n\r\nNote that you MUST manually edit your auto-generated appdaemon.yaml file to add a few required settings.\r\nSee support threat here for an example: https://lime-technology.com/forums/topic/72041-support-appdaemon-hadashboard-corneliousjd-repo/",
    "categories": [
      "HomeAutomation:",
      "Other:"
    ],
    "platform": "linux",
    "note": "HADashboard and Python apps for Home Assistant.\r\n\r\nNote that you MUST manually edit your auto-generated appdaemon.yaml file to add a few required settings.\r\nSee support threat here for an example: https://lime-technology.com/forums/topic/72041-support-appdaemon-hadashboard-corneliousjd-repo/",
    "logo": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/appdaemon.png",
    "name": "Appdaemon",
    "image": "acockburn/appdaemon",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5050": "5050:5050/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/conf",
        "bind": "/mnt/user/appdata/appdaemon"
      }
    ],
    "env": [
      {
        "name": "HA_URL",
        "label": "HA_URL",
        "default": "http://X.X.X.X:8123"
      },
      {
        "name": "TOKEN",
        "label": "TOKEN",
        "default": ""
      },
      {
        "name": "DASH_URL",
        "label": "DASH_URL",
        "default": "http://$HOSTNAME:5050"
      }
    ]
  },
  {
    "type": 1,
    "title": "OpenEats",
    "description": "OpenEats is a recipe management site that allows users to create, share, and store their personal collection of recipes.\r\nRequires MariaDB container (I recommend LinuxServer's container)\r\n\r\nFIRST RUN: Please wait while the container creats all the necessary tables in the SQL database.\r\nThis can take 5-10 minutes or so and the container will have NO log output when it does this.\r\nPlease be patient, if you interrupt this by stopping the container it will leave you with a broken database!\r\n\r\nPlease use support link for more information about this container.",
    "categories": [
      "Productivity:",
      "Tools:Utilities",
      "Other:"
    ],
    "platform": "linux",
    "note": "OpenEats is a recipe management site that allows users to create, share, and store their personal collection of recipes.\r\nRequires MariaDB container (I recommend LinuxServer's container)\r\n\r\nFIRST RUN: Please wait while the container creats all the necessary tables in the SQL database.\r\nThis can take 5-10 minutes or so and the container will have NO log output when it does this.\r\nPlease be patient, if you interrupt this by stopping the container it will leave you with a broken database!\r\n\r\nPlease use support link for more information about this container.",
    "logo": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/openeats.png",
    "name": "OpenEats",
    "image": "bramblegb/openeats",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "8760:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/code/site-media/",
        "bind": "/mnt/user/appdata/openeats/"
      }
    ],
    "env": [
      {
        "name": "ALLOWED_HOST",
        "label": "ALLOWED_HOST",
        "default": "*"
      },
      {
        "name": "SUPERUSER_NAME",
        "label": "SUPERUSER_NAME",
        "default": "openeats"
      },
      {
        "name": "SUPERUSER_PASSWORD",
        "label": "SUPERUSER_PASSWORD",
        "default": "password"
      },
      {
        "name": "MYSQL_PORT",
        "label": "MYSQL_PORT",
        "default": "3306"
      },
      {
        "name": "MYSQL_ROOT_PASSWORD",
        "label": "MYSQL_ROOT_PASSWORD",
        "default": ""
      },
      {
        "name": "OPENEATS_VERSION",
        "label": "OPENEATS_VERSION",
        "default": "master"
      },
      {
        "name": "MYSQL_HOST",
        "label": "MYSQL_HOST",
        "default": ""
      },
      {
        "name": "MYSQL_DATABASE",
        "label": "MYSQL_DATABASE",
        "default": "openeats"
      },
      {
        "name": "MYSQL_USER",
        "label": "MYSQL_USER",
        "default": ""
      },
      {
        "name": "DJANGO_SECRET_KEY",
        "label": "DJANGO_SECRET_KEY",
        "default": ""
      },
      {
        "name": "DJANGO_DEBUG",
        "label": "DJANGO_DEBUG",
        "default": "False"
      },
      {
        "name": "NODE_LOCALE",
        "label": "NODE_LOCALE",
        "default": "en"
      }
    ]
  },
  {
    "type": 1,
    "title": "Recipes",
    "description": "Recipes is a Django application to manage, tag and search recipes using either built in models or external storage providers hosting PDF's, Images or other files.",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "Recipes is a Django application to manage, tag and search recipes using either built in models or external storage providers hosting PDF's, Images or other files.",
    "logo": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/recipes.png",
    "name": "Recipes",
    "image": "vabene1111/recipes",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8154:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/recipes/data"
      },
      {
        "container": "/opt/recipes/mediafiles/",
        "bind": "/mnt/user/appdata/recipes/media"
      }
    ],
    "env": [
      {
        "name": "GUNICORN_MEDIA",
        "label": "GUNICORN_MEDIA",
        "default": "1"
      },
      {
        "name": "POSTGRES_USER",
        "label": "POSTGRES_USER",
        "default": ""
      },
      {
        "name": "POSTGRES_DB",
        "label": "POSTGRES_DB",
        "default": "/data/recipes.db"
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "0"
      },
      {
        "name": "DB_ENGINE",
        "label": "DB_ENGINE",
        "default": "django.db.backends.sqlite3"
      },
      {
        "name": "SECRET_KEY",
        "label": "SECRET_KEY",
        "default": ""
      },
      {
        "name": "ALLOWED_HOSTS",
        "label": "ALLOWED_HOSTS",
        "default": "*"
      },
      {
        "name": "COMMENT_PREF_DEFAULT",
        "label": "COMMENT_PREF_DEFAULT",
        "default": "1"
      },
      {
        "name": "SHOPPING_MIN_AUTOSYNC_INTERVAL",
        "label": "SHOPPING_MIN_AUTOSYNC_INTERVAL",
        "default": "5"
      },
      {
        "name": "POSTGRES_HOST",
        "label": "POSTGRES_HOST",
        "default": ""
      },
      {
        "name": "POSTGRES_PORT",
        "label": "POSTGRES_PORT",
        "default": "5432"
      },
      {
        "name": "TIMEZONE",
        "label": "TIMEZONE",
        "default": "America/New_York"
      },
      {
        "name": "POSTGRES_PASSWORD",
        "label": "POSTGRES_PASSWORD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Stash",
    "description": "Stash is a Go app which organizes and serves your NSFW adult media content.\r\n\r\ndata: where your media collection is\r\nconfig: where the config file and the stash database file will be stored\r\nmetadata: the main metadata folder, used for import/export functions\r\ncache: a folder to use as cache\r\ngenerated: where the previews, screenshots, transcoded files, and sprites will be generated. This can grow very large if you have a large collection, you may want it on your array instead of your cahce, this choice is up to you.",
    "categories": [
      "MediaApp:Video",
      "MediaApp:Photos",
      "MediaApp:Other"
    ],
    "platform": "linux",
    "note": "Stash is a Go app which organizes and serves your NSFW adult media content.\r\n\r\ndata: where your media collection is\r\nconfig: where the config file and the stash database file will be stored\r\nmetadata: the main metadata folder, used for import/export functions\r\ncache: a folder to use as cache\r\ngenerated: where the previews, screenshots, transcoded files, and sprites will be generated. This can grow very large if you have a large collection, you may want it on your array instead of your cahce, this choice is up to you.",
    "logo": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/stash.png",
    "name": "Stash",
    "image": "stashapp/stash",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "9999": "6969:9999/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/generated",
        "bind": "/mnt/user/appdata/stash/generated"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/private/media/"
      },
      {
        "container": "/root/.stash",
        "bind": "/mnt/user/appdata/stash/config"
      },
      {
        "container": "/metadata",
        "bind": "/mnt/user/appdata/stash/metadata"
      },
      {
        "container": "/cache",
        "bind": "/mnt/user/appdata/stash/cache"
      }
    ],
    "env": [
      {
        "name": "STASH_CACHE",
        "label": "STASH_CACHE",
        "default": "/cache/"
      },
      {
        "name": "STASH_METADATA",
        "label": "STASH_METADATA",
        "default": "/metadata/"
      },
      {
        "name": "STASH_GENERATED",
        "label": "STASH_GENERATED",
        "default": "/generated/"
      },
      {
        "name": "STASH_STASH",
        "label": "STASH_STASH",
        "default": "/data/"
      }
    ]
  },
  {
    "type": 1,
    "title": "SUIStartpage",
    "description": "SUI Startpage is a simple and clean server start page or homepage that you can quickly and easily setup to access your server resources and quick booksmarks and also lets you search on various provider sites via a search bar at the top as well.",
    "categories": [
      "Tools:Utilities",
      "Network:Web"
    ],
    "platform": "linux",
    "note": "SUI Startpage is a simple and clean server start page or homepage that you can quickly and easily setup to access your server resources and quick booksmarks and also lets you search on various provider sites via a search bar at the top as well.",
    "logo": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/sui-startpage.png",
    "name": "SUIStartpage",
    "image": "corneliousjd/sui-startpage",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "8489:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/usr/share/nginx/html",
        "bind": "/mnt/user/appdata/suistartpage/"
      }
    ]
  },
  {
    "type": 1,
    "title": "SteamCacheBundle",
    "description": "SteamcacheBundle provides DNS entries for *.cs.steampowered.com and other download URLs and has GenericCache server and SNIProxy in the built in.\r\nPlease see https://squishedmooo.com/the-new-and-easier-all-in-one-steamcache/ for install instructions! You will need them!\r\nTo see accesslogs type \"tail -f /data/logs/access.log\" (Without quotes) in the docker console.\r\nBig Thanks to cheesemarathon for all the help!\r\nIf you want to use UNRAID's IP download his, containers.",
    "categories": [
      "Backup:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "SteamcacheBundle provides DNS entries for *.cs.steampowered.com and other download URLs and has GenericCache server and SNIProxy in the built in.\r\nPlease see https://squishedmooo.com/the-new-and-easier-all-in-one-steamcache/ for install instructions! You will need them!\r\nTo see accesslogs type \"tail -f /data/logs/access.log\" (Without quotes) in the docker console.\r\nBig Thanks to cheesemarathon for all the help!\r\nIf you want to use UNRAID's IP download his, containers.",
    "logo": "https://raw.githubusercontent.com/mlebjerg/docker-templates/master/images/steamcache.png",
    "name": "SteamCacheBundle",
    "image": "mlebjerg/steamcachebundle:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "0": "80:0/tcp",
        "53": "53:53/udp"
      }
    ],
    "volumes": [
      {
        "container": "/data/cache",
        "bind": "/mnt/user/steamcache"
      },
      {
        "container": "/data/logs",
        "bind": "/mnt/user/appdata/gen-cache/logs"
      }
    ],
    "env": [
      {
        "name": "CACHE_MEM_SIZE",
        "label": "CACHE_MEM_SIZE",
        "default": "500m"
      },
      {
        "name": "DISABLE_FRONTIER",
        "label": "DISABLE_FRONTIER",
        "default": ""
      },
      {
        "name": "DISABLE_ORIGIN",
        "label": "DISABLE_ORIGIN",
        "default": ""
      },
      {
        "name": "DISABLE_RIOT",
        "label": "DISABLE_RIOT",
        "default": ""
      },
      {
        "name": "DISABLE_STEAM",
        "label": "DISABLE_STEAM",
        "default": ""
      },
      {
        "name": "DISABLE_BLIZZARD",
        "label": "DISABLE_BLIZZARD",
        "default": ""
      },
      {
        "name": "LANCACHE_IP",
        "label": "LANCACHE_IP",
        "default": ""
      },
      {
        "name": "CACHE_DISK_SIZE",
        "label": "CACHE_DISK_SIZE",
        "default": "2000g"
      },
      {
        "name": "CACHE_MAX_AGE",
        "label": "CACHE_MAX_AGE",
        "default": "150d"
      },
      {
        "name": "UPSTREAM_DNS",
        "label": "UPSTREAM_DNS",
        "default": "1.1.1.1"
      },
      {
        "name": "USE_GENERIC_CACHE",
        "label": "USE_GENERIC_CACHE",
        "default": "true"
      },
      {
        "name": "DISABLE_UPLAY",
        "label": "DISABLE_UPLAY",
        "default": ""
      },
      {
        "name": "DISABLE_WINDOWS",
        "label": "DISABLE_WINDOWS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "mosquitto",
    "description": "This container is a minimal port of the official Eclipse Mosquitto Docker container with minor tweaks to work more conveniently in unRAID.\r\nConfiguration\r\nTo set up paths and ports, see the descriptions in the unRAID docker settings page.\r\nTo further control mosquitto configuration, place a mosquitto.conf file in the config path, or start the container one time and it will write a template mosquitto.conf.example file to the config path for you to copy and edit. For further details, refer to the full README at https://github.com/cmccambridge/mosquitto-unraid/blob/master/README.md",
    "categories": [
      "HomeAutomation:"
    ],
    "platform": "linux",
    "note": "This container is a minimal port of the official Eclipse Mosquitto Docker container with minor tweaks to work more conveniently in unRAID.\r\nConfiguration\r\nTo set up paths and ports, see the descriptions in the unRAID docker settings page.\r\nTo further control mosquitto configuration, place a mosquitto.conf file in the config path, or start the container one time and it will write a template mosquitto.conf.example file to the config path for you to copy and edit. For further details, refer to the full README at https://github.com/cmccambridge/mosquitto-unraid/blob/master/README.md",
    "logo": "https://raw.githubusercontent.com/cmccambridge/mosquitto-unraid/master/media/eclipse-mosquitto.png",
    "name": "mosquitto",
    "image": "cmccambridge/mosquitto-unraid:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "1883": "1883:1883/tcp",
        "8883": "0:8883/tcp",
        "9001": "0:9001/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/mosquitto/data",
        "bind": ""
      },
      {
        "container": "/mosquitto/log",
        "bind": ""
      },
      {
        "container": "/mosquitto/config",
        "bind": "/mnt/user/appdata/mosquitto"
      }
    ]
  },
  {
    "type": 1,
    "title": "ocrmypdf-auto",
    "description": "This container monitors an input file directory for PDF documents to process, and automatically invokes OCRmyPDF on each file.\nIt uses inotify to monitor the input directory efficiently, and is fairly configurable.\nConfiguration Details\nSee the descriptions of the unRAID volumes and environment variables for highlights of the configurability of ocrmypdf-auto, but for details including how to specify custom commandline parameters to ocrmydf itself, or custom tesseract configuration files, see the full README at https://github.com/cmccambridge/ocrmypdf-auto/blob/master/README.md",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "This container monitors an input file directory for PDF documents to process, and automatically invokes OCRmyPDF on each file.\nIt uses inotify to monitor the input directory efficiently, and is fairly configurable.\nConfiguration Details\nSee the descriptions of the unRAID volumes and environment variables for highlights of the configurability of ocrmypdf-auto, but for details including how to specify custom commandline parameters to ocrmydf itself, or custom tesseract configuration files, see the full README at https://github.com/cmccambridge/ocrmypdf-auto/blob/master/README.md",
    "logo": "https://raw.githubusercontent.com/cmccambridge/ocrmypdf-auto/master/media/logo.png",
    "name": "ocrmypdf-auto",
    "image": "cmccambridge/ocrmypdf-auto:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/input",
        "bind": ""
      },
      {
        "container": "/output",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/ocrmypdf-auto"
      }
    ],
    "env": [
      {
        "name": "OCR_NOTIFY_URL",
        "label": "OCR_NOTIFY_URL",
        "default": ""
      },
      {
        "name": "OCR_PROCESS_EXISTING_ON_START",
        "label": "OCR_PROCESS_EXISTING_ON_START",
        "default": "0"
      },
      {
        "name": "OCR_VERBOSITY",
        "label": "OCR_VERBOSITY",
        "default": ""
      },
      {
        "name": "USERMAP_UID",
        "label": "USERMAP_UID",
        "default": "99"
      },
      {
        "name": "USERMAP_GID",
        "label": "USERMAP_GID",
        "default": "100"
      },
      {
        "name": "OCR_OUTPUT_MODE",
        "label": "OCR_OUTPUT_MODE",
        "default": "MIRROR_TREE"
      },
      {
        "name": "OCR_ACTION_ON_SUCCESS",
        "label": "OCR_ACTION_ON_SUCCESS",
        "default": "NOTHING"
      },
      {
        "name": "OCR_LANGUAGES",
        "label": "OCR_LANGUAGES",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "MyMediaForAlexa",
    "description": "A media server that allows you to stream audio files (e.g. music and audiobooks) that are stored on your unRAID server to Alexa enabled devices such as Amazon Echo or Amazon Dot using voice control.\r\nMore details and the full list of features can be found on the My Media For Alexa web site.  \r\nAdditional detail on setting up My Media For Alexa on unRAID can be found here\r\nTo administer the My Media For Alexa server use the WebUI.",
    "categories": [
      "HomeAutomation:",
      "MediaServer:Music"
    ],
    "platform": "linux",
    "note": "A media server that allows you to stream audio files (e.g. music and audiobooks) that are stored on your unRAID server to Alexa enabled devices such as Amazon Echo or Amazon Dot using voice control.\r\nMore details and the full list of features can be found on the My Media For Alexa web site.  \r\nAdditional detail on setting up My Media For Alexa on unRAID can be found here\r\nTo administer the My Media For Alexa server use the WebUI.",
    "logo": "https://raw.githubusercontent.com/itimpi/MyMediaForAlexa/master/MyMediaForAlexa.png",
    "name": "MyMediaForAlexa",
    "image": "bizmodeller/mymediaforalexa",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "52050": "52050:52050/tcp",
        "52051": "52051:52051/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/datadir",
        "bind": "/mnt/user/appdata/MyMediaForAlexa"
      },
      {
        "container": "/medialibrary",
        "bind": "/mnt/user/?"
      }
    ]
  },
  {
    "type": 1,
    "title": "beets",
    "description": "Beets is the media library management system for obsessive-compulsive music\n    geeks. Its purpose is to get your music collection right once and for\n    all. It catalogs your collection, automatically improving its metadata as\n    it goes using the MusicBrainz database. Then it provides a bouquet of tools\n    for manipulating and accessing your music.",
    "categories": [
      "MediaApp:Music"
    ],
    "platform": "linux",
    "note": "Beets is the media library management system for obsessive-compulsive music\n    geeks. Its purpose is to get your music collection right once and for\n    all. It catalogs your collection, automatically improving its metadata as\n    it goes using the MusicBrainz database. Then it provides a bouquet of tools\n    for manipulating and accessing your music.",
    "logo": "https://raw.githubusercontent.com/thetarkus/docker-templates/master/images/beets-logo.png",
    "name": "beets",
    "image": "thetarkus/beets",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6600": "6600:6600/tcp",
        "8337": "8337:8337/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/import",
        "bind": ""
      },
      {
        "container": "/music",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Funkwhale",
    "description": "Funkwhale is designed to make it easy to listen to music you like, and to discover new artists.",
    "categories": [
      "MediaApp:Music",
      "MediaServer:Music"
    ],
    "platform": "linux",
    "note": "Funkwhale is designed to make it easy to listen to music you like, and to discover new artists.",
    "logo": "https://raw.githubusercontent.com/thetarkus/docker-templates/master/images/funkwhale-logo-500.png",
    "name": "Funkwhale",
    "image": "thetarkus/funkwhale",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "3030:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/music",
        "bind": ""
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/funkwhale"
      }
    ],
    "env": [
      {
        "name": "NESTED_PROXY",
        "label": "NESTED_PROXY",
        "default": "0"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "FUNKWHALE_HOSTNAME",
        "label": "FUNKWHALE_HOSTNAME",
        "default": "yourdomain.funkwhale"
      }
    ]
  },
  {
    "type": 1,
    "title": "Rust-Server",
    "description": "Fully customizable Rust Server at your fingertips.  \r\nSet all of the settings below to suit your needs and save when you are ready.   \r\nFeatures:  \r\nAutomatic updating system with wipe.   \r\nAuto Port forwarding (UPnP).   \r\nSimple Template for faster setup (Great for newbies).  \r\nAuto announcements, upto 5 messages to set.  \r\nEnable option to show wiped date in server title.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "Fully customizable Rust Server at your fingertips.  \r\nSet all of the settings below to suit your needs and save when you are ready.   \r\nFeatures:  \r\nAutomatic updating system with wipe.   \r\nAuto Port forwarding (UPnP).   \r\nSimple Template for faster setup (Great for newbies).  \r\nAuto announcements, upto 5 messages to set.  \r\nEnable option to show wiped date in server title.",
    "logo": "https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/46b63d3c-ae67-464c-9a37-670829b2a157/d72pie6-b94117ae-1ee5-4524-bee5-b1d1e6842781.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwic3ViIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsImF1ZCI6WyJ1cm46c2VydmljZTpmaWxlLmRvd25sb2FkIl0sIm9iaiI6W1t7InBhdGgiOiIvZi80NmI2M2QzYy1hZTY3LTQ2NGMtOWEzNy02NzA4MjliMmExNTcvZDcycGllNi1iOTQxMTdhZS0xZWU1LTQ1MjQtYmVlNS1iMWQxZTY4NDI3ODEucG5nIn1dXX0.RZzbMbw2tLmR_Itu-BYKsA66ApJ7VMzLZ2Q-hf0BPUA",
    "name": "Rust-Server",
    "image": "mdarkness1988/rust-server",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "28015": "28015:28015/tcp",
        "28016": "28016:28016/tcp",
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/steamcmd/rust",
        "bind": "/mnt/user/appdata/Rust-Server/"
      }
    ],
    "env": [
      {
        "name": "OXIDE",
        "label": "OXIDE",
        "default": "0"
      },
      {
        "name": "PERFORMANCE",
        "label": "PERFORMANCE",
        "default": "1"
      },
      {
        "name": "PASSWORD",
        "label": "PASSWORD",
        "default": "changeme"
      },
      {
        "name": "ANNOUNCE4",
        "label": "ANNOUNCE4",
        "default": ""
      },
      {
        "name": "PORTFORWARD_WEB",
        "label": "PORTFORWARD_WEB",
        "default": "8080"
      },
      {
        "name": "PVE",
        "label": "PVE",
        "default": "0"
      },
      {
        "name": "AUTO",
        "label": "AUTO",
        "default": "1"
      },
      {
        "name": "DESCRIPTION",
        "label": "DESCRIPTION",
        "default": ""
      },
      {
        "name": "MAPSEED",
        "label": "MAPSEED",
        "default": "0"
      },
      {
        "name": "SAVE_INTERVAL",
        "label": "SAVE_INTERVAL",
        "default": "300"
      },
      {
        "name": "BANNER",
        "label": "BANNER",
        "default": ""
      },
      {
        "name": "ANNOUNCE2",
        "label": "ANNOUNCE2",
        "default": ""
      },
      {
        "name": "ANNOUNCE3",
        "label": "ANNOUNCE3",
        "default": ""
      },
      {
        "name": "PORTFORWARD_RCON",
        "label": "PORTFORWARD_RCON",
        "default": "28016"
      },
      {
        "name": "MAPSIZE",
        "label": "MAPSIZE",
        "default": "medium"
      },
      {
        "name": "ANNOUNCE1",
        "label": "ANNOUNCE1",
        "default": ""
      },
      {
        "name": "ANNOUNCE5",
        "label": "ANNOUNCE5",
        "default": ""
      },
      {
        "name": "IDENTITY",
        "label": "IDENTITY",
        "default": "My-server-name"
      },
      {
        "name": "NAME",
        "label": "NAME",
        "default": "My Rust Server"
      },
      {
        "name": "PLAYERS",
        "label": "PLAYERS",
        "default": "50"
      },
      {
        "name": "ANNOUNCE_DELAY",
        "label": "ANNOUNCE_DELAY",
        "default": "8"
      },
      {
        "name": "WIPEDAYS",
        "label": "WIPEDAYS",
        "default": ""
      },
      {
        "name": "RELEASE",
        "label": "RELEASE",
        "default": "public"
      },
      {
        "name": "PUBLIC",
        "label": "PUBLIC",
        "default": "1"
      },
      {
        "name": "WIPE_TITLE",
        "label": "WIPE_TITLE",
        "default": "0"
      },
      {
        "name": "ARGUMENTS",
        "label": "ARGUMENTS",
        "default": ""
      },
      {
        "name": "PORTFORWARD_RUST",
        "label": "PORTFORWARD_RUST",
        "default": "28015"
      }
    ]
  },
  {
    "type": 1,
    "title": "jackettvpn",
    "description": "Docker container which runs the latest headless Jackett Server while connecting to WireGuard (experimental) or OpenVPN with iptables killswitch to prevent IP leakage when the tunnel goes down.",
    "categories": [
      "Downloaders:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Docker container which runs the latest headless Jackett Server while connecting to WireGuard (experimental) or OpenVPN with iptables killswitch to prevent IP leakage when the tunnel goes down.",
    "logo": "https://raw.githubusercontent.com/DyonR/docker-templates/master/Icons/jackettvpn/jackettvpn-icon.png",
    "name": "jackettvpn",
    "image": "dyonr/jackettvpn",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "9117": "9117:9117/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/blackhole",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/jackettvpn/"
      }
    ],
    "env": [
      {
        "name": "VPN_ENABLED",
        "label": "VPN_ENABLED",
        "default": "yes"
      },
      {
        "name": "NAME_SERVERS",
        "label": "NAME_SERVERS",
        "default": "1.1.1.1,1.0.0.1"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "002"
      },
      {
        "name": "HEALTH_CHECK_INTERVAL",
        "label": "HEALTH_CHECK_INTERVAL",
        "default": "300"
      },
      {
        "name": "DISABLE_IPV6",
        "label": "DISABLE_IPV6",
        "default": "1"
      },
      {
        "name": "VPN_TYPE",
        "label": "VPN_TYPE",
        "default": "openvpn"
      },
      {
        "name": "VPN_PASSWORD",
        "label": "VPN_PASSWORD",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "HEALTH_CHECK_SILENT",
        "label": "HEALTH_CHECK_SILENT",
        "default": "1"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "VPN_USERNAME",
        "label": "VPN_USERNAME",
        "default": ""
      },
      {
        "name": "WEBUI_PASSWORD",
        "label": "WEBUI_PASSWORD",
        "default": ""
      },
      {
        "name": "LAN_NETWORK",
        "label": "LAN_NETWORK",
        "default": "192.168.0.0/24"
      },
      {
        "name": "HEALTH_CHECK_HOST",
        "label": "HEALTH_CHECK_HOST",
        "default": "one.one.one.one"
      },
      {
        "name": "ADDITIONAL_PORTS",
        "label": "ADDITIONAL_PORTS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "magnetico-environment",
    "description": "magnetico is an autonomous (self-hosted) BitTorrent DHT indexer / crawler / search engine suite.",
    "categories": [
      "Downloaders:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "magnetico is an autonomous (self-hosted) BitTorrent DHT indexer / crawler / search engine suite.",
    "logo": "https://raw.githubusercontent.com/DyonR/docker-templates/master/Icons/magnetico-environment/magnetico-environment-icon.png",
    "name": "magnetico-environment",
    "image": "dyonr/magnetico-environment",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "8556:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/root/.local/share/magneticod",
        "bind": "/mnt/user/appdata/magnetico"
      }
    ],
    "env": [
      {
        "name": "MAGNETICOD_ADDRESS",
        "label": "MAGNETICOD_ADDRESS",
        "default": "0.0.0.0"
      },
      {
        "name": "MAGNETICOD_VERBOSE",
        "label": "MAGNETICOD_VERBOSE",
        "default": ""
      },
      {
        "name": "MAGNETICOW_PASSWORD",
        "label": "MAGNETICOW_PASSWORD",
        "default": "magnetico"
      },
      {
        "name": "MAGNETICOD_NEIGHBORS",
        "label": "MAGNETICOD_NEIGHBORS",
        "default": "1000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "MAGNETICOW_ADDRESS",
        "label": "MAGNETICOW_ADDRESS",
        "default": "0.0.0.0"
      },
      {
        "name": "MAGNETICOD_INTERVAL",
        "label": "MAGNETICOD_INTERVAL",
        "default": "1"
      },
      {
        "name": "MAGNETICOD_PORT",
        "label": "MAGNETICOD_PORT",
        "default": "0"
      },
      {
        "name": "MAGNETICOW_VERBOSE",
        "label": "MAGNETICOW_VERBOSE",
        "default": ""
      },
      {
        "name": "MAGNETICOW_USERNAME",
        "label": "MAGNETICOW_USERNAME",
        "default": "magnetico"
      },
      {
        "name": "MAGNETICOD_LEECHES",
        "label": "MAGNETICOD_LEECHES",
        "default": "50"
      }
    ]
  },
  {
    "type": 1,
    "title": "owncloud-client",
    "description": "Dockerized ownCloud CLI Client (owncloudcmd) to sync from any supported ownCloud-like (e.g. TransIP STACK, NextCloud) enviroment.",
    "categories": [
      "Backup:",
      "Cloud:",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "Dockerized ownCloud CLI Client (owncloudcmd) to sync from any supported ownCloud-like (e.g. TransIP STACK, NextCloud) enviroment.",
    "logo": "https://raw.githubusercontent.com/DyonR/docker-templates/master/Icons/owncloud-client/owncloud-client-icon.jpg",
    "name": "owncloud-client",
    "image": "dyonr/owncloud-client",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/ocdata",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "OC_PROTO",
        "label": "OC_PROTO",
        "default": "https"
      },
      {
        "name": "TRUST_SELFSIGN",
        "label": "TRUST_SELFSIGN",
        "default": "0"
      },
      {
        "name": "SYNC_HIDDEN",
        "label": "SYNC_HIDDEN",
        "default": "0"
      },
      {
        "name": "RUN_INTERVAL",
        "label": "RUN_INTERVAL",
        "default": "30"
      },
      {
        "name": "OC_WEBDAV",
        "label": "OC_WEBDAV",
        "default": "remote.php/webdav"
      },
      {
        "name": "OC_USER",
        "label": "OC_USER",
        "default": ""
      },
      {
        "name": "OC_PASS",
        "label": "OC_PASS",
        "default": ""
      },
      {
        "name": "OC_SERVER",
        "label": "OC_SERVER",
        "default": ""
      },
      {
        "name": "OC_URLPATH",
        "label": "OC_URLPATH",
        "default": "/owncloud/"
      },
      {
        "name": "OC_FILEPATH",
        "label": "OC_FILEPATH",
        "default": "/"
      },
      {
        "name": "RUN_UID",
        "label": "RUN_UID",
        "default": "99"
      },
      {
        "name": "RUN_GID",
        "label": "RUN_GID",
        "default": "100"
      },
      {
        "name": "SILENCE_OUTPUT",
        "label": "SILENCE_OUTPUT",
        "default": "1"
      }
    ]
  },
  {
    "type": 1,
    "title": "qbittorrentvpn",
    "description": "Docker container which runs the latest qBittorrent-nox client while connecting to WireGuard (experimental) or OpenVPN with iptables killswitch to prevent IP leakage when the tunnel goes down.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "Docker container which runs the latest qBittorrent-nox client while connecting to WireGuard (experimental) or OpenVPN with iptables killswitch to prevent IP leakage when the tunnel goes down.",
    "logo": "https://raw.githubusercontent.com/DyonR/docker-templates/master/Icons/qbittorrentvpn/qbittorrent-icon-256.png",
    "name": "qbittorrentvpn",
    "image": "dyonr/qbittorrentvpn",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "8080:8080/tcp",
        "8999": "8999:8999/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/downloads",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/qbittorrentvpn/"
      }
    ],
    "env": [
      {
        "name": "VPN_PASSWORD",
        "label": "VPN_PASSWORD",
        "default": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "NAME_SERVERS",
        "label": "NAME_SERVERS",
        "default": "1.1.1.1,1.0.0.1"
      },
      {
        "name": "VPN_TYPE",
        "label": "VPN_TYPE",
        "default": "openvpn"
      },
      {
        "name": "HEALTH_CHECK_HOST",
        "label": "HEALTH_CHECK_HOST",
        "default": "one.one.one.one"
      },
      {
        "name": "HEALTH_CHECK_INTERVAL",
        "label": "HEALTH_CHECK_INTERVAL",
        "default": "300"
      },
      {
        "name": "ADDITIONAL_PORTS",
        "label": "ADDITIONAL_PORTS",
        "default": ""
      },
      {
        "name": "VPN_ENABLED",
        "label": "VPN_ENABLED",
        "default": "yes"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "002"
      },
      {
        "name": "ENABLE_SSL",
        "label": "ENABLE_SSL",
        "default": "yes"
      },
      {
        "name": "LAN_NETWORK",
        "label": "LAN_NETWORK",
        "default": "192.168.0.0/24"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "HEALTH_CHECK_SILENT",
        "label": "HEALTH_CHECK_SILENT",
        "default": "1"
      },
      {
        "name": "DISABLE_IPV6",
        "label": "DISABLE_IPV6",
        "default": "1"
      },
      {
        "name": "INSTALL_PYTHON3",
        "label": "INSTALL_PYTHON3",
        "default": "no"
      },
      {
        "name": "VPN_USERNAME",
        "label": "VPN_USERNAME",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "sabnzbdvpn",
    "description": "Docker container which runs the SABnzbd while connecting to WireGuard or OpenVPN with iptables killswitch to prevent IP leakage when the tunnel goes down.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "Docker container which runs the SABnzbd while connecting to WireGuard or OpenVPN with iptables killswitch to prevent IP leakage when the tunnel goes down.",
    "logo": "https://raw.githubusercontent.com/DyonR/docker-templates/master/Icons/sabnzbdvpn/sabnzbdvpn-icon-256.png",
    "name": "sabnzbdvpn",
    "image": "dyonr/sabnzbdvpn",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "8080:8080/tcp",
        "8443": "8443:8443/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/downloads",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/sabnzbdvpn/"
      }
    ],
    "env": [
      {
        "name": "VPN_ENABLED",
        "label": "VPN_ENABLED",
        "default": "yes"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "VPN_USERNAME",
        "label": "VPN_USERNAME",
        "default": ""
      },
      {
        "name": "HEALTH_CHECK_SILENT",
        "label": "HEALTH_CHECK_SILENT",
        "default": "1"
      },
      {
        "name": "NAME_SERVERS",
        "label": "NAME_SERVERS",
        "default": "1.1.1.1,1.0.0.1"
      },
      {
        "name": "HEALTH_CHECK_INTERVAL",
        "label": "HEALTH_CHECK_INTERVAL",
        "default": "300"
      },
      {
        "name": "DISABLE_IPV6",
        "label": "DISABLE_IPV6",
        "default": "1"
      },
      {
        "name": "ADDITIONAL_PORTS",
        "label": "ADDITIONAL_PORTS",
        "default": ""
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "002"
      },
      {
        "name": "HEALTH_CHECK_HOST",
        "label": "HEALTH_CHECK_HOST",
        "default": "one.one.one.one"
      },
      {
        "name": "VPN_TYPE",
        "label": "VPN_TYPE",
        "default": "openvpn"
      },
      {
        "name": "VPN_PASSWORD",
        "label": "VPN_PASSWORD",
        "default": ""
      },
      {
        "name": "LAN_NETWORK",
        "label": "LAN_NETWORK",
        "default": "192.168.0.0/24"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "Google-MusicManager",
    "description": "Upload your personal music collection to Google Play Music",
    "categories": [
      "Backup:",
      "Cloud:",
      "MediaApp:Music",
      "MediaServer:Music"
    ],
    "platform": "linux",
    "note": "Upload your personal music collection to Google Play Music",
    "logo": "https://i.imgur.com/E9wSQ9N.png",
    "name": "Google-MusicManager",
    "image": "rix1337/docker-google-musicmanager",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/music",
        "bind": "/mnt/user/Music"
      },
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/google-musicmanager"
      }
    ],
    "env": [
      {
        "name": "PORT",
        "label": "PORT",
        "default": "5920"
      },
      {
        "name": "PASSWORD",
        "label": "PASSWORD",
        "default": "GoogleMusic"
      }
    ]
  },
  {
    "type": 1,
    "title": "GooglePhotosSync",
    "description": "Google Photos Sync downloads your Google Photos to the local file system. It will backup all the photos the user uploaded to Google Photos, but also the album information and additional Google Photos 'Creations' (animations, panoramas, movies, effects and collages).\r\n\r\nHow to set this up:\r\n1. Place your client_secret.json at /config\r\n    How to get it is best described at Logix's Article at Linux Uprising\r\n2. Afterwards you need to sign into the application once which cannot be done headlessly (using the \"Syncing\" command)\r\n3. Afterwards you can call the \"Syncing\" command any time you wish, as long as the container is running (e.g. by using cron).\r\n\r\nSyncing:\r\ndocker exec -it GooglePhotosSync gphotos-sync /storage\r\nBy itself this container will do nothing. A sync will only occur when you call the above command on a running container.",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "Google Photos Sync downloads your Google Photos to the local file system. It will backup all the photos the user uploaded to Google Photos, but also the album information and additional Google Photos 'Creations' (animations, panoramas, movies, effects and collages).\r\n\r\nHow to set this up:\r\n1. Place your client_secret.json at /config\r\n    How to get it is best described at Logix's Article at Linux Uprising\r\n2. Afterwards you need to sign into the application once which cannot be done headlessly (using the \"Syncing\" command)\r\n3. Afterwards you can call the \"Syncing\" command any time you wish, as long as the container is running (e.g. by using cron).\r\n\r\nSyncing:\r\ndocker exec -it GooglePhotosSync gphotos-sync /storage\r\nBy itself this container will do nothing. A sync will only occur when you call the above command on a running container.",
    "logo": "https://i.imgur.com/uNmkYOq.png",
    "name": "GooglePhotosSync",
    "image": "rix1337/docker-gphotos-sync",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/storage",
        "bind": "/mnt/user/Google Photos"
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/gphotos-sync"
      }
    ]
  },
  {
    "type": 1,
    "title": "MyJD-API",
    "description": "This is a standalone version of RSScrawler's MyJDownloader API for use with projects like Organizr.\r\n\r\n--jd-device is optional if only one device is present\r\n\r\nJDownloader is expected to be running and connected to my.jdownloader.org - the script will otherwise fail to launch.",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "This is a standalone version of RSScrawler's MyJDownloader API for use with projects like Organizr.\r\n\r\n--jd-device is optional if only one device is present\r\n\r\nJDownloader is expected to be running and connected to my.jdownloader.org - the script will otherwise fail to launch.",
    "logo": "https://raw.githubusercontent.com/rix1337/docker-templates/master/rix1337/myjd-api.png",
    "name": "MyJD-API",
    "image": "rix1337/docker-myjd-api",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/myjd-api"
      }
    ],
    "env": [
      {
        "name": "DEVICE",
        "label": "DEVICE",
        "default": ""
      },
      {
        "name": "USER",
        "label": "USER",
        "default": ""
      },
      {
        "name": "PASS",
        "label": "PASS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Ripper",
    "description": "This container will detect optical disks by their type and rip them automatically.",
    "categories": [
      "Backup:",
      "MediaApp:Video",
      "MediaApp:Music",
      "MediaApp:Other",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "This container will detect optical disks by their type and rip them automatically.",
    "logo": "https://raw.githubusercontent.com/rix1337/docker-templates/master/rix1337/ripper.png",
    "name": "Ripper",
    "image": "rix1337/docker-ripper",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/dev/sr0",
        "bind": "/dev/sr0"
      },
      {
        "container": "/out",
        "bind": "/mnt/user/Downloads/"
      },
      {
        "container": "/config/",
        "bind": "/mnt/user/appdata/ripper"
      }
    ]
  },
  {
    "type": 1,
    "title": "RSScrawler",
    "description": "This python-based script crawls pre-defined RSS feeds and outputs JD2-crawljobs\r\n\tOnly useful for German users. Very advanced and user friendly features.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "This python-based script crawls pre-defined RSS feeds and outputs JD2-crawljobs\r\n\tOnly useful for German users. Very advanced and user friendly features.",
    "logo": "https://raw.githubusercontent.com/rix1337/docker-templates/master/rix1337/rsscrawler.png",
    "name": "RSScrawler",
    "image": "rix1337/docker-rsscrawler",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "9090": "9090:9090/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/rsscrawler/"
      }
    ],
    "env": [
      {
        "name": "LOGLEVEL",
        "label": "LOGLEVEL",
        "default": "INFO"
      },
      {
        "name": "USER",
        "label": "USER",
        "default": ""
      },
      {
        "name": "PASS",
        "label": "PASS",
        "default": ""
      },
      {
        "name": "DEVICE",
        "label": "DEVICE",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "gsdock",
    "description": "GoodSync Connect Server\r\n\r\nRuns the GoodSync Connect Linux server to store your backups. Valid GoodSync Connect account required.\r\n\r\nThe WebUI credentials are the same as your GoodSync Connect account credentials that you set as GS_USER and GS_PWD",
    "categories": [
      "Backup:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "GoodSync Connect Server\r\n\r\nRuns the GoodSync Connect Linux server to store your backups. Valid GoodSync Connect account required.\r\n\r\nThe WebUI credentials are the same as your GoodSync Connect account credentials that you set as GS_USER and GS_PWD",
    "logo": "https://lh5.ggpht.com/wKQx6--IZ50yitxPX24gbsO2rrehdaGNw9J4rHceHlwNPFrNY7CfCO3UDQub7GrsQr4=w300",
    "name": "gsdock",
    "image": "shrmn/gsdock",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "11000": "11000:11000/tcp",
        "33333": "33333:33333/tcp",
        "33338": "33338:33338/udp",
        "33339": "33339:33339/udp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user"
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/gsdock"
      }
    ],
    "env": [
      {
        "name": "GS_USER",
        "label": "GS_USER",
        "default": ""
      },
      {
        "name": "GS_PWD",
        "label": "GS_PWD",
        "default": ""
      },
      {
        "name": "GS_ID",
        "label": "GS_ID",
        "default": "unraid"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "organizrv2",
    "description": "HTPC/Homelab Services Organizer - Written in PHP",
    "categories": [
      "Tools:Utilities",
      "Network:Web",
      "Network:Proxy",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "HTPC/Homelab Services Organizer - Written in PHP",
    "logo": "https://raw.githubusercontent.com/causefx/Organizr/v2-master/plugins/images/organizr/logo-no-border.png",
    "name": "organizrv2",
    "image": "organizrtools/organizr-v2",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "0:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "AdGuard-Home",
    "description": "AdGuard Home is a network-wide software for blocking ads \u0026 tracking. After you set it up, it’ll cover ALL your home devices, and you don’t need any client-side software for that. With the rise of Internet-Of-Things and connected devices, it becomes more and more important to be able to control your whole network.",
    "categories": [
      "Network:"
    ],
    "platform": "linux",
    "note": "AdGuard Home is a network-wide software for blocking ads \u0026 tracking. After you set it up, it’ll cover ALL your home devices, and you don’t need any client-side software for that. With the rise of Internet-Of-Things and connected devices, it becomes more and more important to be able to control your whole network.",
    "logo": "https://raw.githubusercontent.com/SiwatINC/unraid-ca-repository/master/icons/adguard.png",
    "name": "AdGuard-Home",
    "image": "adguard/adguardhome",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3000": "3000:3000/tcp",
        "53": "53:53/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/opt/adguardhome/work",
        "bind": "/mnt/user/appdata/adguard_home/workingdir"
      },
      {
        "container": "/opt/adguardhome/conf",
        "bind": "/mnt/user/appdata/adguard_home/config"
      }
    ]
  },
  {
    "type": 1,
    "title": "Facebox",
    "description": "Facebox detects and identifies faces in photos. You can teach facebox with as little as one sample image.\n    Facebox required that you have an API Key which you can obtain for free by going to https://machinebox.io/login?return_url=%2Faccount",
    "categories": [
      "HomeAutomation:",
      "Tools:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Facebox detects and identifies faces in photos. You can teach facebox with as little as one sample image.\n    Facebox required that you have an API Key which you can obtain for free by going to https://machinebox.io/login?return_url=%2Faccount",
    "logo": "https://machinebox.io/assets/static/img/boxes/facebox.jpg",
    "name": "Facebox",
    "image": "machinebox/facebox",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "env": [
      {
        "name": "MB_KEY",
        "label": "MB_KEY",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "H265ize",
    "description": "h265ize is a fire and forget weapon. A nodejs utility utilizing ffmpeg to encode large quantities of videos with the hevc codec. For more information visit ayrton.sparling.us.\n   \n   if you want to create the hvec file alongside your input file, put in the parent directory of your input For example: if your input is in /mnt/user/cache/medialib/mymedia/ set your output to /mnt/user/cache/medialib/",
    "categories": [
      "Tools:"
    ],
    "platform": "linux",
    "note": "h265ize is a fire and forget weapon. A nodejs utility utilizing ffmpeg to encode large quantities of videos with the hevc codec. For more information visit ayrton.sparling.us.\n   \n   if you want to create the hvec file alongside your input file, put in the parent directory of your input For example: if your input is in /mnt/user/cache/medialib/mymedia/ set your output to /mnt/user/cache/medialib/",
    "logo": "https://raw.githubusercontent.com/SiwatINC/unraid-ca-repository/master/icons/h265ize.png",
    "name": "H265ize",
    "image": "siwatinc/h265ize_unraid",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/mnt",
        "bind": "/mnt"
      },
      {
        "container": "/tmp",
        "bind": "/mnt/user/h265ize/temp"
      }
    ],
    "env": [
      {
        "name": "preset",
        "label": "preset",
        "default": "fast"
      },
      {
        "name": "output",
        "label": "output",
        "default": "/mnt/user/h265ize/output"
      },
      {
        "name": "input",
        "label": "input",
        "default": "/mnt/user/h265ize/input"
      },
      {
        "name": "qp",
        "label": "qp",
        "default": "19"
      },
      {
        "name": "format",
        "label": "format",
        "default": "mp4"
      }
    ]
  },
  {
    "type": 1,
    "title": "HomeBridge",
    "description": "Homebridge is a lightweight NodeJS server you can run on your home network that emulates the iOS HomeKit API. It supports Plugins, which are community-contributed modules that provide a basic bridge from HomeKit to various 3rd-party APIs provided by manufacturers of \"smart home\" devices.\n    Instruction:\n      1. in the \"packages\" variable, place the all packages name you wanted in the box seperated by space (Example is in the box, Plugin list is in https://www.npmjs.com/search?q=homebridge-plugin)\n      2. create the container\n      3. create the config.json in the homebridge directory (/mnt/user/appdata/homebridge/config.json)\n      4. add your devices to the config.json by refering to https://github.com/nfarina/homebridge",
    "categories": [
      "HomeAutomation:",
      "Tools:"
    ],
    "platform": "linux",
    "note": "Homebridge is a lightweight NodeJS server you can run on your home network that emulates the iOS HomeKit API. It supports Plugins, which are community-contributed modules that provide a basic bridge from HomeKit to various 3rd-party APIs provided by manufacturers of \"smart home\" devices.\n    Instruction:\n      1. in the \"packages\" variable, place the all packages name you wanted in the box seperated by space (Example is in the box, Plugin list is in https://www.npmjs.com/search?q=homebridge-plugin)\n      2. create the container\n      3. create the config.json in the homebridge directory (/mnt/user/appdata/homebridge/config.json)\n      4. add your devices to the config.json by refering to https://github.com/nfarina/homebridge",
    "logo": "https://i1.wp.com/www.deviousweb.com/wp-content/uploads/2017/06/HomeKit.png",
    "name": "HomeBridge",
    "image": "siwatinc/homebridge_nogui_unraid",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/root/.homebridge",
        "bind": "/mnt/user/appdata/homebridge"
      }
    ],
    "env": [
      {
        "name": "packages",
        "label": "packages",
        "default": "homebridge-pilight homebridge-info"
      }
    ]
  },
  {
    "type": 1,
    "title": "HomeBridge-with-webGUI",
    "description": "Homebridge with GUI (default user:pass=admin:admin) is a lightweight NodeJS server you can run on your home network that emulates the iOS HomeKit API. It supports Plugins, which are community-contributed modules that provide a basic bridge from HomeKit to various 3rd-party APIs provided by manufacturers of \"smart home\" devices.\n    Instruction:\n      1. in the \"packages\" variable, place the all packages name you wanted in the box seperated by space (Example is in the box, Plugin list is in https://www.npmjs.com/search?q=homebridge-plugin)\n      2. create the container\n      3. create the config.json in the homebridge directory (/mnt/user/appdata/homebridge/config.json)\n      4. add your devices to the config.json by refering to https://github.com/nfarina/homebridge",
    "categories": [
      "HomeAutomation:",
      "Tools:"
    ],
    "platform": "linux",
    "note": "Homebridge with GUI (default user:pass=admin:admin) is a lightweight NodeJS server you can run on your home network that emulates the iOS HomeKit API. It supports Plugins, which are community-contributed modules that provide a basic bridge from HomeKit to various 3rd-party APIs provided by manufacturers of \"smart home\" devices.\n    Instruction:\n      1. in the \"packages\" variable, place the all packages name you wanted in the box seperated by space (Example is in the box, Plugin list is in https://www.npmjs.com/search?q=homebridge-plugin)\n      2. create the container\n      3. create the config.json in the homebridge directory (/mnt/user/appdata/homebridge/config.json)\n      4. add your devices to the config.json by refering to https://github.com/nfarina/homebridge",
    "logo": "https://i1.wp.com/www.deviousweb.com/wp-content/uploads/2017/06/HomeKit.png",
    "name": "HomeBridge-with-webGUI",
    "image": "siwatinc/homebridge_gui_unraid",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/root/.homebridge",
        "bind": "/mnt/user/appdata/homebridge"
      }
    ],
    "env": [
      {
        "name": "packages",
        "label": "packages",
        "default": "homebridge-pilight homebridge-info"
      },
      {
        "name": "aptpackages",
        "label": "aptpackages",
        "default": "ffmpeg"
      }
    ]
  },
  {
    "type": 1,
    "title": "Home-Assistant-Control-Panel",
    "description": "Using a phone or tablet device you can hook into your Home Assistant server and get access to a simple to use Control Panel. Mount the device on your wall to create the ultimate home automation accessory and unlock the true potential of your Smart devices.\n  API Setup Instruction: https://reformedreality.com/home-assistant-control-panel#api-setup",
    "categories": [
      "HomeAutomation:",
      "Tools:"
    ],
    "platform": "linux",
    "note": "Using a phone or tablet device you can hook into your Home Assistant server and get access to a simple to use Control Panel. Mount the device on your wall to create the ultimate home automation accessory and unlock the true potential of your Smart devices.\n  API Setup Instruction: https://reformedreality.com/home-assistant-control-panel#api-setup",
    "name": "Home-Assistant-Control-Panel",
    "image": "siwatinc/home_assistant_control_panel_unraid_ab",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "8033:80/tcp"
      }
    ]
  },
  {
    "type": 1,
    "title": "NGINXPageSpeed",
    "description": "NGINX OpenSource Build with PageSpeed, The PageSpeed modules are open-source server modules that optimize your site automatically.",
    "categories": [
      "Network:Web"
    ],
    "platform": "linux",
    "note": "NGINX OpenSource Build with PageSpeed, The PageSpeed modules are open-source server modules that optimize your site automatically.",
    "logo": "https://raw.githubusercontent.com/SiwatINC/unraid-ca-repository/master/icons/pagespeed_32dp.png",
    "name": "NGINXPageSpeed",
    "image": "siwatinc/nginx-pagespeed",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "444:443/tcp",
        "80": "81:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/nginx-pagespeed"
      },
      {
        "container": "/var/cache/nginx",
        "bind": "/mnt/user/appdata/nginx-pagespeed/cache"
      }
    ]
  },
  {
    "type": 1,
    "title": "OnlyOffice-Community-Server",
    "description": "ONLYOFFICE Community Server is a free open source collaborative system developed to manage documents, projects, customer relationship and email correspondence, all in one place.\n\t  HTTPS Support can be enable creating a \"certs\" folder in the data directory and placing onlyoffice.crt and onlyoffice.key in it",
    "categories": [
      "Productivity:",
      "Tools:"
    ],
    "platform": "linux",
    "note": "ONLYOFFICE Community Server is a free open source collaborative system developed to manage documents, projects, customer relationship and email correspondence, all in one place.\n\t  HTTPS Support can be enable creating a \"certs\" folder in the data directory and placing onlyoffice.crt and onlyoffice.key in it",
    "logo": "https://pbs.twimg.com/profile_images/801693107125362689/al5MQBQM_normal.jpg",
    "name": "OnlyOffice-Community-Server",
    "image": "onlyoffice/communityserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "4431:443/tcp",
        "5222": "5222:5222/tcp",
        "80": "8081:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/log/onlyoffice",
        "bind": "/mnt/user/appdata/onlyofficecs/logs"
      },
      {
        "container": "/var/www/onlyoffice/Data",
        "bind": "/mnt/user/appdata/onlyofficecs/Data"
      },
      {
        "container": "/var/lib/mysql",
        "bind": "/mnt/user/appdata/onlyofficecs/database"
      }
    ]
  },
  {
    "type": 1,
    "title": "OnlyOfficeDocumentServer",
    "description": "ONLYOFFICE Document Server is an online office suite comprising viewers and editors for texts, spreadsheets and presentations, fully compatible with Office Open XML formats: .docx, .xlsx, .pptx and enabling collaborative editing in real time.\n\tHTTPS Support can be enable creating a \"certs\" folder in the data directory and placing onlyoffice.crt and onlyoffice.key in it. Add fonts by placing .ttf in the font folder and force updating the container.",
    "categories": [
      "Productivity:",
      "Tools:"
    ],
    "platform": "linux",
    "note": "ONLYOFFICE Document Server is an online office suite comprising viewers and editors for texts, spreadsheets and presentations, fully compatible with Office Open XML formats: .docx, .xlsx, .pptx and enabling collaborative editing in real time.\n\tHTTPS Support can be enable creating a \"certs\" folder in the data directory and placing onlyoffice.crt and onlyoffice.key in it. Add fonts by placing .ttf in the font folder and force updating the container.",
    "logo": "https://pbs.twimg.com/profile_images/801693107125362689/al5MQBQM_normal.jpg",
    "name": "OnlyOfficeDocumentServer",
    "image": "onlyoffice/documentserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "4430:443/tcp",
        "80": "8080:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/lib/postgresql",
        "bind": "/mnt/user/appdata/onlyofficeds/database"
      },
      {
        "container": "/usr/share/fonts/",
        "bind": "/mnt/user/appdata/onlyofficeds/fonts"
      },
      {
        "container": "/var/log/onlyoffice",
        "bind": "/mnt/user/appdata/onlyofficeds/logs"
      },
      {
        "container": "/var/www/onlyoffice/Data",
        "bind": "/mnt/user/appdata/onlyofficeds/Data"
      },
      {
        "container": "/var/lib/onlyoffice",
        "bind": "/mnt/user/appdata/onlyofficeds/lib"
      }
    ]
  },
  {
    "type": 1,
    "title": "Phlex",
    "description": "Flex TV. is a web application that interfaces between google Assistant and Plex to allow you to control playback of media using Actions for Google or IFTTT.\n    Additionally, it interfaces with the API’s for Sonarr, Radarr, Couchpotato, Sickbeard, and Sickrage.\n    It also has customizeable webhooks, so you can basically control anything that has an open API with your voice. If you can send data to a URL to do a thing, you can program it in Flex TV.\n    It is recomended to use reverse proxy to enable https",
    "categories": [
      "Tools:"
    ],
    "platform": "linux",
    "note": "Flex TV. is a web application that interfaces between google Assistant and Plex to allow you to control playback of media using Actions for Google or IFTTT.\n    Additionally, it interfaces with the API’s for Sonarr, Radarr, Couchpotato, Sickbeard, and Sickrage.\n    It also has customizeable webhooks, so you can basically control anything that has an open API with your voice. If you can send data to a URL to do a thing, you can program it in Flex TV.\n    It is recomended to use reverse proxy to enable https",
    "logo": "https://raw.githubusercontent.com/d8ahazard/Phlex/master/img/android-icon-144x144.png",
    "name": "Phlex",
    "image": "siwatinc/phlex",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "8063:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/phlex"
      }
    ]
  },
  {
    "type": 1,
    "title": "Ubuntu-Playground",
    "description": "Ubuntu Playground (NO GUI) is a place where you can play with ubuntu command NOTE The data of the containter will be clear if you force update the container Click on the container icon then click console to access it",
    "categories": [
      "Tools:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Ubuntu Playground (NO GUI) is a place where you can play with ubuntu command NOTE The data of the containter will be clear if you force update the container Click on the container icon then click console to access it",
    "logo": "https://assets.ubuntu.com/v1/c5cb0f8e-picto-ubuntu.svg",
    "name": "Ubuntu-Playground",
    "image": "siwatinc/ubuntu-playground",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/home/root",
        "bind": "/mnt/user/appdata/ubuntudata"
      }
    ],
    "env": [
      {
        "name": "packages",
        "label": "packages",
        "default": "mc nano sudo"
      }
    ]
  },
  {
    "type": 1,
    "title": "traefik",
    "description": "Traefik is a modern reverse-proxy.  You must have a traefik.toml config located in your appdata/traefik directory.  Example template with very little modification needed is available here https://raw.githubusercontent.com/benderstwin/Portainer-Templates/master/traefik.toml\r\n\r\nNote on SSL - easiest method is to use a free account at cloudflare.  \r\n\r\nIn cloudflare:\r\n\r\nSet up DNS records.\r\n-use CNAMES for subdomains to point to TLD\r\n\r\nOn the crypto tab in cloudflare\r\n-request wildcard ssl cert (universal) for edge\r\n-generate origin cert and key\r\n-enable SSL client authentication\r\n-turn on SSL Full (strict)\r\n\r\nNOTE:  It is possible to use Traefik with ACME (Lets Encrypt).  This will require modification beyond the scope of this template (although you could modify the traefik.toml pretty easily to enable this).\r\n\r\nTO ADD APPS TO TRAEFIK:\r\nTraefik uses labels to assign proxy behavior\r\nAdd these labels to your other containers to enable proxy\r\nAvailable Labels:\r\ntraefik.enable=true  #required to proxy:Enable Traefik to expose app to the frontend and proxy\r\ntraefik.backend=ombi  #required:name of the container Traefik should map to on the back end (sonarr, radarr, jackett etc...)\r\ntraefik.frontend.rule=Host:ombi.domain.com  #required/optional: Sets the subdomain rule.\r\ntraefik.frontend.rule=Host:domain.com; PathPrefixStrip: /ombi #optional for using subfolders\r\ntraefik.port=3579 #required:container port to send traffic to.  Source container port, not the mapping in unraid\r\ntraefik.frontend.auth.basic.usersFile=/shared/.htpasswd  ## This is what sets up the front end interface to use the generated .htaccess file.  Add this line to any site you want additional security on.\r\ntraefik.docker.network=bridge  #required: Specify the docker network\r\ntraefik.frontend.headers.SSLRedirect=true #optional but might as well if you are using SSL\r\ntraefik.frontend.headers.STSSeconds=315360000 #optional\r\ntraefik.frontend.headers.browserXSSFilter=true #optional\r\ntraefik.frontend.headers.contentTypeNosniff=true #optional\r\ntraefik.frontend.headers.forceSTSHeader=true #may be required\r\ntraefik.frontend.headers.SSLHost=domain.com #required\r\ntraefik.frontend.headers.STSIncludeSubdomains=true #may be required\r\ntraefik.frontend.headers.STSPreload=true #optional\r\ntraefik.frontend.headers.frameDeny=true #optional",
    "categories": [
      "Network:Web",
      "Network:Proxy"
    ],
    "platform": "linux",
    "note": "Traefik is a modern reverse-proxy.  You must have a traefik.toml config located in your appdata/traefik directory.  Example template with very little modification needed is available here https://raw.githubusercontent.com/benderstwin/Portainer-Templates/master/traefik.toml\r\n\r\nNote on SSL - easiest method is to use a free account at cloudflare.  \r\n\r\nIn cloudflare:\r\n\r\nSet up DNS records.\r\n-use CNAMES for subdomains to point to TLD\r\n\r\nOn the crypto tab in cloudflare\r\n-request wildcard ssl cert (universal) for edge\r\n-generate origin cert and key\r\n-enable SSL client authentication\r\n-turn on SSL Full (strict)\r\n\r\nNOTE:  It is possible to use Traefik with ACME (Lets Encrypt).  This will require modification beyond the scope of this template (although you could modify the traefik.toml pretty easily to enable this).\r\n\r\nTO ADD APPS TO TRAEFIK:\r\nTraefik uses labels to assign proxy behavior\r\nAdd these labels to your other containers to enable proxy\r\nAvailable Labels:\r\ntraefik.enable=true  #required to proxy:Enable Traefik to expose app to the frontend and proxy\r\ntraefik.backend=ombi  #required:name of the container Traefik should map to on the back end (sonarr, radarr, jackett etc...)\r\ntraefik.frontend.rule=Host:ombi.domain.com  #required/optional: Sets the subdomain rule.\r\ntraefik.frontend.rule=Host:domain.com; PathPrefixStrip: /ombi #optional for using subfolders\r\ntraefik.port=3579 #required:container port to send traffic to.  Source container port, not the mapping in unraid\r\ntraefik.frontend.auth.basic.usersFile=/shared/.htpasswd  ## This is what sets up the front end interface to use the generated .htaccess file.  Add this line to any site you want additional security on.\r\ntraefik.docker.network=bridge  #required: Specify the docker network\r\ntraefik.frontend.headers.SSLRedirect=true #optional but might as well if you are using SSL\r\ntraefik.frontend.headers.STSSeconds=315360000 #optional\r\ntraefik.frontend.headers.browserXSSFilter=true #optional\r\ntraefik.frontend.headers.contentTypeNosniff=true #optional\r\ntraefik.frontend.headers.forceSTSHeader=true #may be required\r\ntraefik.frontend.headers.SSLHost=domain.com #required\r\ntraefik.frontend.headers.STSIncludeSubdomains=true #may be required\r\ntraefik.frontend.headers.STSPreload=true #optional\r\ntraefik.frontend.headers.frameDeny=true #optional",
    "logo": "https://raw.githubusercontent.com/benderstwin/docker-templates/master/images/traefik.png",
    "name": "traefik",
    "image": "traefik:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "443:443/tcp",
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/shared",
        "bind": "/mnt/user/appdata/traefik/shared"
      },
      {
        "container": "/var/run/docker.sock",
        "bind": "/var/run/docker.sock"
      },
      {
        "container": "/etc/traefik",
        "bind": "/mnt/user/appdata/traefik"
      }
    ]
  },
  {
    "type": 1,
    "title": "Varken",
    "description": "Varken requires influxdb and grafana.  Deploy those containers first.\r\n\r\nDutch for PIG. PIG is an Acronym for Plex/InfluxDB/Grafana\r\n\r\nVarken is a standalone command-line utility to aggregate data from the Plex ecosystem into InfluxDB. Examples use Grafana for a frontend\r\n\r\n\r\nYou must edit the varken.ini file in /mnt/user/appdata/varken.",
    "categories": [
      "Tools:Utilities",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "Varken requires influxdb and grafana.  Deploy those containers first.\r\n\r\nDutch for PIG. PIG is an Acronym for Plex/InfluxDB/Grafana\r\n\r\nVarken is a standalone command-line utility to aggregate data from the Plex ecosystem into InfluxDB. Examples use Grafana for a frontend\r\n\r\n\r\nYou must edit the varken.ini file in /mnt/user/appdata/varken.",
    "logo": "https://raw.githubusercontent.com/benderstwin/docker-templates/master/images/varken.png",
    "name": "Varken",
    "image": "boerderij/varken",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/varken"
      }
    ],
    "env": [
      {
        "name": "TZ",
        "label": "TZ",
        "default": "America/Denver"
      }
    ]
  },
  {
    "type": 1,
    "title": "HAdashboard",
    "categories": [
      "HomeAutomation:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "HA Dashboard for Home Assistant.  Template for Unraid.  You must add a password to your HA configuration as the Dashboard requires it.  Edit the configuration.yml for home assistant and add the lines:\r\n\r\nhttp:\r\n  api_password: yourpasswordgoeshere",
    "logo": "https://raw.githubusercontent.com/benderstwin/docker-templates/master/images/favicon-192x192-full.png",
    "name": "HAdashboard",
    "image": "acockburn/appdaemon",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "Seafile",
    "description": "Seafile is file synchronisation and sharing server.",
    "categories": [
      "Cloud:",
      "Network:Other",
      "Productivity:"
    ],
    "platform": "linux",
    "note": "Seafile is file synchronisation and sharing server.",
    "logo": "https://raw.githubusercontent.com/dersimn/docker-unraid-templates/master/dersimn/images/seafile-icon.png",
    "name": "Seafile",
    "image": "seafileltd/seafile",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "4430:443/tcp",
        "80": "8000:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/shared",
        "bind": "/mnt/user/seafile"
      }
    ],
    "env": [
      {
        "name": "SEAFILE_SERVER_HOSTNAME",
        "label": "SEAFILE_SERVER_HOSTNAME",
        "default": ""
      },
      {
        "name": "SEAFILE_ADMIN_EMAIL",
        "label": "SEAFILE_ADMIN_EMAIL",
        "default": "me@example.com"
      },
      {
        "name": "SEAFILE_ADMIN_PASSWORD",
        "label": "SEAFILE_ADMIN_PASSWORD",
        "default": "a_very_secret_password"
      }
    ]
  },
  {
    "type": 1,
    "title": "FoundryVTT",
    "description": "FoundryVTT is a web based Dungeons and Dragons application that allows users to play with others over the internet.  You will have to purchase a copy of foundryvtt from https://foundryvtt.com",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "FoundryVTT is a web based Dungeons and Dragons application that allows users to play with others over the internet.  You will have to purchase a copy of foundryvtt from https://foundryvtt.com",
    "logo": "https://raw.githubusercontent.com/fithwum/files-for-dockers/master/icons/d20.png",
    "name": "FoundryVTT",
    "image": "fithwum/foundry_vtt",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "30000": "30000:30000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/foundry/data",
        "bind": ""
      },
      {
        "container": "/foundry/fvtt",
        "bind": "/mnt/user/appdata/FoundryVTT"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Minecraft",
    "description": "This docker is for running Minecraft vanilla server version 1.16.1 but if you want to run a modded server you can just do not delete the files that are in the folder.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This docker is for running Minecraft vanilla server version 1.16.1 but if you want to run a modded server you can just do not delete the files that are in the folder.",
    "logo": "https://raw.githubusercontent.com/fithwum/files-for-dockers/master/icons/Minecraft.png",
    "name": "Minecraft",
    "image": "fithwum/minecraft",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "25565": "25565:25565/udp"
      }
    ],
    "volumes": [
      {
        "container": "/MCserver/world/",
        "bind": "/mnt/user/Game_Saves/Minecraft/world/"
      },
      {
        "container": "/MCserver",
        "bind": "/mnt/user/appdata/minecraft-server"
      }
    ],
    "env": [
      {
        "name": "ACCEPT_EULA",
        "label": "ACCEPT_EULA",
        "default": "false"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "TeamSpeak3-Simple",
    "description": "TeamSpeak is proprietary voice-over-Internet Protocol (VoIP) software that allows computer users to speak on a chat channel with fellow computer users, much like a telephone conference call. A TeamSpeak user will often wear a headset with an integrated microphone. Users use the TeamSpeak client software to connect to a TeamSpeak server of their choice, from there they can join chat channels and discuss things.",
    "categories": [
      "Network:Voip"
    ],
    "platform": "linux",
    "note": "TeamSpeak is proprietary voice-over-Internet Protocol (VoIP) software that allows computer users to speak on a chat channel with fellow computer users, much like a telephone conference call. A TeamSpeak user will often wear a headset with an integrated microphone. Users use the TeamSpeak client software to connect to a TeamSpeak server of their choice, from there they can join chat channels and discuss things.",
    "logo": "https://raw.githubusercontent.com/fithwum/files-for-dockers/master/icons/Ts3Icon.png",
    "name": "TeamSpeak3-Simple",
    "image": "fithwum/teamspeak3",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "10011": "10011:10011/tcp",
        "30033": "30033:30033/tcp",
        "9987": "9987:9987/udp"
      }
    ],
    "volumes": [
      {
        "container": "/ts3server/files/virtualserver_1/",
        "bind": "/mnt/user/Sync/Teamspeak3-files/files/virtualserver_1/"
      },
      {
        "container": "/ts3server",
        "bind": "/mnt/user/appdata/teamspeak3"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "teamspeak-alpine",
    "description": "TeamSpeak is proprietary voice-over-Internet Protocol (VoIP) software that allows computer users to speak on a chat channel with fellow computer users, much like a telephone conference call. A TeamSpeak user will often wear a headset with an integrated microphone. Users use the TeamSpeak client software to connect to a TeamSpeak server of their choice, from there they can join chat channels and discuss things.",
    "categories": [
      "Network:Voip"
    ],
    "platform": "linux",
    "note": "TeamSpeak is proprietary voice-over-Internet Protocol (VoIP) software that allows computer users to speak on a chat channel with fellow computer users, much like a telephone conference call. A TeamSpeak user will often wear a headset with an integrated microphone. Users use the TeamSpeak client software to connect to a TeamSpeak server of their choice, from there they can join chat channels and discuss things.",
    "logo": "https://raw.githubusercontent.com/fithwum/files-for-dockers/master/icons/Ts3Icon.png",
    "name": "teamspeak-alpine",
    "image": "fithwum/teamspeak-alpine",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "10011": "10011:10011/tcp",
        "30033": "30033:30033/tcp",
        "9987": "9987:9987/udp"
      }
    ],
    "volumes": [
      {
        "container": "/ts3server/files/virtualserver_1/",
        "bind": "/mnt/user/Sync/Teamspeak3-files/files/virtualserver_1/"
      },
      {
        "container": "/ts3server",
        "bind": "/mnt/user/appdata/ts3-alpine"
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "teamspeak-debian",
    "categories": [
      "Network:Voip"
    ],
    "platform": "linux",
    "note": "TeamSpeak is proprietary voice-over-Internet Protocol (VoIP) software that allows computer users to speak on a chat channel with fellow computer users, much like a telephone conference call. A TeamSpeak user will often wear a headset with an integrated microphone. Users use the TeamSpeak client software to connect to a TeamSpeak server of their choice, from there they can join chat channels and discuss things.",
    "logo": "https://raw.githubusercontent.com/fithwum/files-for-dockers/master/icons/Ts3Icon.png",
    "name": "teamspeak-debian",
    "image": "fithwum/teamspeak-debian",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "chowdown",
    "description": "Simple recipes in Markdown format.",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "Simple recipes in Markdown format.",
    "logo": "https://raw.githubusercontent.com/gregyankovoy/docker-templates/master/greg/img/chowdown-logo.png",
    "name": "chowdown",
    "image": "gregyankovoy/chowdown",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "4000": "4000:4000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "goaccess",
    "description": "GoAccess is an open source real-time web log analyzer and interactive viewer that runs in a terminal in *nix systems or through your browser. It provides fast and valuable HTTP statistics for system administrators that require a visual server report on the fly.",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "GoAccess is an open source real-time web log analyzer and interactive viewer that runs in a terminal in *nix systems or through your browser. It provides fast and valuable HTTP statistics for system administrators that require a visual server report on the fly.",
    "logo": "https://raw.githubusercontent.com/gregyankovoy/docker-templates/master/greg/img/goaccess-logo.png",
    "name": "goaccess",
    "image": "gregyankovoy/goaccess",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "7889": "7889:7889/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/goaccess"
      },
      {
        "container": "/opt/log",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "lftp-mirror",
    "description": "Mirrors and removes files from a remote lftp folder to a local folder.",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "Mirrors and removes files from a remote lftp folder to a local folder.",
    "name": "lftp-mirror",
    "image": "gregyankovoy/lftp-mirror",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "LFTP_PARTS",
        "label": "LFTP_PARTS",
        "default": "1"
      },
      {
        "name": "LFTP_FILES",
        "label": "LFTP_FILES",
        "default": "1"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "HOST",
        "label": "HOST",
        "default": ""
      },
      {
        "name": "PORT",
        "label": "PORT",
        "default": "22"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "REMOTE_DIR",
        "label": "REMOTE_DIR",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "hassConfigurator",
    "description": "Home Assistant online configurator container from https://github.com/danielperna84/hass-configurator",
    "categories": [
      "HomeAutomation:"
    ],
    "platform": "linux",
    "note": "Home Assistant online configurator container from https://github.com/danielperna84/hass-configurator",
    "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6e/Home_Assistant_Logo.svg/2000px-Home_Assistant_Logo.svg.png",
    "name": "hassConfigurator",
    "image": "causticlab/hass-configurator-docker:x86_64",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3218": "3218:3218/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/home-assistant-configurator/"
      },
      {
        "container": "/hass-config",
        "bind": "/mnt/user/appdata/home-assistant/"
      }
    ]
  },
  {
    "type": 1,
    "title": "yourls",
    "description": "YOURLS is a set of PHP scripts that will allow you to run Your Own URL Shortener.",
    "categories": [
      "Cloud:",
      "Tools:Utilities",
      "Network:Web",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "YOURLS is a set of PHP scripts that will allow you to run Your Own URL Shortener.",
    "logo": "https://raw.githubusercontent.com/YOURLS/YOURLS/master/images/yourls-logo.png",
    "name": "yourls",
    "image": "yourls",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "8086:80/tcp"
      }
    ],
    "env": [
      {
        "name": "YOURLS_HOURS_OFFSET",
        "label": "YOURLS_HOURS_OFFSET",
        "default": ""
      },
      {
        "name": "YOURLS_PRIVATE",
        "label": "YOURLS_PRIVATE",
        "default": ""
      },
      {
        "name": "YOURLS_USER",
        "label": "YOURLS_USER",
        "default": ""
      },
      {
        "name": "YOURLS_PASS",
        "label": "YOURLS_PASS",
        "default": ""
      },
      {
        "name": "YOURLS_DB_HOST",
        "label": "YOURLS_DB_HOST",
        "default": ""
      },
      {
        "name": "YOURLS_DB_PASS",
        "label": "YOURLS_DB_PASS",
        "default": ""
      },
      {
        "name": "YOURLS_SITE",
        "label": "YOURLS_SITE",
        "default": ""
      },
      {
        "name": "YOURLS_DB_NAME",
        "label": "YOURLS_DB_NAME",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Confluence",
    "description": "Official Confluence-Server Docker Image",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "Official Confluence-Server Docker Image",
    "logo": "https://images.g2crowd.com/uploads/product/image/large_detail/large_detail_1505148164/confluence.png",
    "name": "Confluence",
    "image": "atlassian/confluence-server",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/var/atlassian/application-data/confluence",
        "bind": "/mnt/user/appdata/confluence"
      }
    ]
  },
  {
    "type": 1,
    "title": "FileBrowser",
    "description": "File Browser - Webbased File Browser including sharing functions etc.\r\n\r\nhttps://github.com/filebrowser/filebrowser\r\n\r\nJust Mount other Folder to/srv\r\nExample\r\n/mnt/user/Media/ \u003e /srv/Media\r\n/mnt/user/Docs/ \u003e /srv/Docs\r\n\r\nRead\r\nhttps://docs.filebrowser.xyz/configuration for the config",
    "categories": [
      "Cloud:",
      "Network:Web"
    ],
    "platform": "linux",
    "note": "File Browser - Webbased File Browser including sharing functions etc.\r\n\r\nhttps://github.com/filebrowser/filebrowser\r\n\r\nJust Mount other Folder to/srv\r\nExample\r\n/mnt/user/Media/ \u003e /srv/Media\r\n/mnt/user/Docs/ \u003e /srv/Docs\r\n\r\nRead\r\nhttps://docs.filebrowser.xyz/configuration for the config",
    "logo": "https://raw.githubusercontent.com/maschhoff/docker/master/filebrowser/35781395.png",
    "name": "FileBrowser",
    "image": "filebrowser/filebrowser",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/srv",
        "bind": "/mnt/user/SHARE/"
      },
      {
        "container": "/db/",
        "bind": "/mnt/user/appdata/filebrowser/"
      }
    ]
  },
  {
    "type": 1,
    "title": "Icecast",
    "description": "Icecast for Mopidy http stream\r\n\r\nsetup mopidy audio docker:\r\nmopidy.conf\r\n\r\n\r\noutput = lamemp3enc ! shout2send async=false mount=mopidy ip=XX.XX.XX.XX port=8000 password=hackme\r\n\r\nNOTE: Please download the icecast.xml and void.mp3 from https://github.com/maschhoff/docker/tree/master/icecast\r\nchange username and password etc. there",
    "categories": [
      "Other:",
      "MediaServer:Music"
    ],
    "platform": "linux",
    "note": "Icecast for Mopidy http stream\r\n\r\nsetup mopidy audio docker:\r\nmopidy.conf\r\n\r\n\r\noutput = lamemp3enc ! shout2send async=false mount=mopidy ip=XX.XX.XX.XX port=8000 password=hackme\r\n\r\nNOTE: Please download the icecast.xml and void.mp3 from https://github.com/maschhoff/docker/tree/master/icecast\r\nchange username and password etc. there",
    "name": "Icecast",
    "image": "infiniteproject/icecast",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/etc/icecast.xml",
        "bind": "/mnt/user/appdata/icecast/icecast.xml"
      },
      {
        "container": "/usr/share/icecast/web/void.mp3",
        "bind": "/mnt/user/appdata/icecast/void.mp3"
      }
    ]
  },
  {
    "type": 1,
    "title": "LibreSpeed",
    "categories": [
      "Network:Other"
    ],
    "platform": "linux",
    "note": "This is a very lightweight Speedtest. You can run it locally between you server and your clients.",
    "logo": "https://i.ibb.co/QYMndYK/logo3.png",
    "name": "LibreSpeed",
    "image": "adolfintel/speedtest",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "Mopidy",
    "description": "Mopidy is an extensible music server written in Python.\r\nMopidy plays music from local disk, Spotify, SoundCloud, Google Play Music, and more. You edit the playlist from any phone, tablet, or computer using a range of MPD and web clients.\r\n\r\nThis is Mopidy for unraid with support for snapcast and icecast It is based on whhoesj/mopidy with additin of TuneIn and Youtube and Iris Web Interface.\r\n\r\n- set up the docker\r\n- set up the network to br0 with an ip\r\n- set up volume mount to /mnt/user/appdata/mopidy/mopidy.conf \u003e\u003e /mopidy.conf\r\n- set up volume mount for tmp/snapfifo if you use snapcast /mnt/user/appdata/mopidy/tmp/ \u003e\u003e /tmp  \r\n- set up volume mount for your local media \r\n\r\ngenerate the mopidy.conf file\r\nDoc here https://docs.mopidy.com/en/latest/config/\r\nexample here https://github.com/wernight/docker-mopidy/blob/master/README.md\r\nauthentication for soundcloud and spotify https://www.mopidy.com/authenticate/\r\n\r\nuse my docker icecast or snapcast for music streaming:\r\n \r\nfor audio you need a special config\r\nfor snapcast you have to generate the audio output in a pipe file /tmp/snapfifo this is mounted in both docker container\r\n\r\n\r\noutput = audioresample ! audio/x-raw,rate=48000,channels=2,format=S16LE ! audioconvert ! wavenc ! filesink location=/tmp/snapfifo\r\n\r\nicecast\r\n\r\n\r\noutput = lamemp3enc ! shout2send async=false mount=mopidy ip=X.X.X.X port=8000 password=XXXXX",
    "categories": [
      "Other:",
      "MediaApp:Music",
      "MediaServer:Music"
    ],
    "platform": "linux",
    "note": "Mopidy is an extensible music server written in Python.\r\nMopidy plays music from local disk, Spotify, SoundCloud, Google Play Music, and more. You edit the playlist from any phone, tablet, or computer using a range of MPD and web clients.\r\n\r\nThis is Mopidy for unraid with support for snapcast and icecast It is based on whhoesj/mopidy with additin of TuneIn and Youtube and Iris Web Interface.\r\n\r\n- set up the docker\r\n- set up the network to br0 with an ip\r\n- set up volume mount to /mnt/user/appdata/mopidy/mopidy.conf \u003e\u003e /mopidy.conf\r\n- set up volume mount for tmp/snapfifo if you use snapcast /mnt/user/appdata/mopidy/tmp/ \u003e\u003e /tmp  \r\n- set up volume mount for your local media \r\n\r\ngenerate the mopidy.conf file\r\nDoc here https://docs.mopidy.com/en/latest/config/\r\nexample here https://github.com/wernight/docker-mopidy/blob/master/README.md\r\nauthentication for soundcloud and spotify https://www.mopidy.com/authenticate/\r\n\r\nuse my docker icecast or snapcast for music streaming:\r\n \r\nfor audio you need a special config\r\nfor snapcast you have to generate the audio output in a pipe file /tmp/snapfifo this is mounted in both docker container\r\n\r\n\r\noutput = audioresample ! audio/x-raw,rate=48000,channels=2,format=S16LE ! audioconvert ! wavenc ! filesink location=/tmp/snapfifo\r\n\r\nicecast\r\n\r\n\r\noutput = lamemp3enc ! shout2send async=false mount=mopidy ip=X.X.X.X port=8000 password=XXXXX",
    "logo": "https://raw.githubusercontent.com/maschhoff/docker/master/mopidy/mopidy.png",
    "name": "Mopidy",
    "image": "knex666/mopidy",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/etc/mopidy.conf",
        "bind": "/mnt/user/appdata/mopidy/mopidy.conf"
      },
      {
        "container": "/tmp/",
        "bind": "/mnt/user/appdata/mopidy/tmp/"
      },
      {
        "container": "/media",
        "bind": "/mnt/user/Media/Musik/"
      }
    ]
  },
  {
    "type": 1,
    "title": "Mopidy3",
    "description": "Mopidy is an extensible music server written in Python.\r\nMopidy plays music from local disk, Spotify, SoundCloud, Google Play Music, and more. You edit the playlist from any phone, tablet, or computer using a range of MPD and web clients.\r\n\r\nThis is Mopidy3 for unraid with support for snapcast and icecast.\n\r\n- set up the docker\r\n- set up the network to br0 with an ip\r\n- set up volume mount to /mnt/user/appdata/mopidy/ \u003e\u003e /config/\n- set up volume mount for tmp/snapfifo if you use snapcast /mnt/user/appdata/mopidy/tmp/ \u003e\u003e /tmp  \r\n- set up volume mount for your local media \r\n\r\ngenerate the mopidy.conf file *Doc here https://docs.mopidy.com/en/latest/config/ *example here https://github.com/maschhoff/docker/blob/master/mopidy/mopidy.conf\n\nauthentication for soundcloud and spotify https://www.mopidy.com/authenticate/ *authenticate spotify https://developer.spotify.com/documentation/web-api/quick-start/\n\r\nuse my docker icecast or snapcast for music streaming:\r\n \r\nfor audio you need a special config\r\nfor snapcast you have to generate the audio output in a pipe file /tmp/snapfifo this is mounted in both docker container\r\n\r\n\r\noutput = audioresample ! audio/x-raw,rate=48000,channels=2,format=S16LE ! audioconvert ! wavenc ! filesink location=/tmp/snapfifo\r\n\r\nicecast\r\n\r\n\r\noutput = lamemp3enc ! shout2send async=false mount=mopidy ip=X.X.X.X port=8000 password=XXXXX",
    "categories": [
      "Other:",
      "MediaApp:Music",
      "MediaServer:Music"
    ],
    "platform": "linux",
    "note": "Mopidy is an extensible music server written in Python.\r\nMopidy plays music from local disk, Spotify, SoundCloud, Google Play Music, and more. You edit the playlist from any phone, tablet, or computer using a range of MPD and web clients.\r\n\r\nThis is Mopidy3 for unraid with support for snapcast and icecast.\n\r\n- set up the docker\r\n- set up the network to br0 with an ip\r\n- set up volume mount to /mnt/user/appdata/mopidy/ \u003e\u003e /config/\n- set up volume mount for tmp/snapfifo if you use snapcast /mnt/user/appdata/mopidy/tmp/ \u003e\u003e /tmp  \r\n- set up volume mount for your local media \r\n\r\ngenerate the mopidy.conf file *Doc here https://docs.mopidy.com/en/latest/config/ *example here https://github.com/maschhoff/docker/blob/master/mopidy/mopidy.conf\n\nauthentication for soundcloud and spotify https://www.mopidy.com/authenticate/ *authenticate spotify https://developer.spotify.com/documentation/web-api/quick-start/\n\r\nuse my docker icecast or snapcast for music streaming:\r\n \r\nfor audio you need a special config\r\nfor snapcast you have to generate the audio output in a pipe file /tmp/snapfifo this is mounted in both docker container\r\n\r\n\r\noutput = audioresample ! audio/x-raw,rate=48000,channels=2,format=S16LE ! audioconvert ! wavenc ! filesink location=/tmp/snapfifo\r\n\r\nicecast\r\n\r\n\r\noutput = lamemp3enc ! shout2send async=false mount=mopidy ip=X.X.X.X port=8000 password=XXXXX",
    "logo": "https://raw.githubusercontent.com/maschhoff/docker/master/mopidy/mopidy.png",
    "name": "Mopidy3",
    "image": "knex666/mopidy:3-experimental",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/config/",
        "bind": "/mnt/user/appdata/mopidy/"
      },
      {
        "container": "/tmp/",
        "bind": "/mnt/user/appdata/mopidy/tmp/"
      },
      {
        "container": "/media",
        "bind": "/mnt/user/Media/Musik/"
      }
    ]
  },
  {
    "type": 1,
    "title": "Nextcloud",
    "description": "Nextcloud based on the official docker hub image.\n  Nextcloud 20.X with full ONLYOFFICE integration.\n  Based on Apache.",
    "categories": [
      "Cloud:"
    ],
    "platform": "linux",
    "note": "Nextcloud based on the official docker hub image.\n  Nextcloud 20.X with full ONLYOFFICE integration.\n  Based on Apache.",
    "logo": "https://decatec.de/wp-content/uploads/2017/08/nextcloud_logo.png",
    "name": "Nextcloud",
    "image": "nextcloud:latest",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/var/www/html/data",
        "bind": "/mnt/user/appdata/nextcloud/data"
      },
      {
        "container": "/mnt/Share",
        "bind": "/mnt/user/Share/"
      },
      {
        "container": "/var/www/html",
        "bind": "/mnt/user/appdata/nextcloud/nextcloud"
      },
      {
        "container": "/var/www/html/custom_apps",
        "bind": "/mnt/user/appdata/nextcloud/apps"
      },
      {
        "container": "/var/www/html/config",
        "bind": "/mnt/user/appdata/nextcloud/config"
      }
    ]
  },
  {
    "type": 1,
    "title": "openHAB",
    "description": "openHAB - a vendor and technology agnostic open source automation software for your home.\r\n\r\nFor sample rules etc. have a look at https://github.com/maschhoff/OpenHAB",
    "categories": [
      "HomeAutomation:"
    ],
    "platform": "linux",
    "note": "openHAB - a vendor and technology agnostic open source automation software for your home.\r\n\r\nFor sample rules etc. have a look at https://github.com/maschhoff/OpenHAB",
    "logo": "https://raw.githubusercontent.com/tinglis1/docker-containers/master/openhab/openhab-logo-square.png",
    "name": "openHAB",
    "image": "openhab/openhab:2.5.0-amd64-debian",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/etc/localtime",
        "bind": "/etc/localtime"
      },
      {
        "container": "/openhab/conf",
        "bind": "/mnt/user/appdata/openhab2/conf/"
      },
      {
        "container": "/openhab/userdata",
        "bind": "/mnt/user/appdata/openhab2/userdata/"
      }
    ]
  },
  {
    "type": 1,
    "title": "OpenProject",
    "description": "OpenProject is a web-based project management system for location-independent team collaboration.",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "OpenProject is a web-based project management system for location-independent team collaboration.",
    "logo": "https://avatars2.githubusercontent.com/u/1756674?s=400\u0026amp;v=4",
    "name": "OpenProject",
    "image": "openproject/community:10",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/var/openproject/pgdata",
        "bind": "/mnt/user/appdata/openproject/pgdata"
      },
      {
        "container": "/var/openproject/assets",
        "bind": "/mnt/user/appdata/openproject/assets"
      }
    ],
    "env": [
      {
        "name": "SECRET_KEY_BASE",
        "label": "SECRET_KEY_BASE",
        "default": "secret"
      }
    ]
  },
  {
    "type": 1,
    "title": "RSSNotipy",
    "description": "RSS search an notification.\n  \n  Please Read\n  \n  \n\n  Please read all information on GitHub\n    \n    https://github.com/maschhoff/RSSNotipy\n\nPlease use the sample configuration and files on the GitHub Repo (https://github.com/maschhoff/RSSNotipy/tree/master/data)  and copy it to /mnt/user/appdata/rssnotipy/\n\n \n\nYou have to edit the configuration for your purpose. RSS release sources to search for and upcoming movies from your rss source. And optionally the Api Key of your prefered push service\n\nPlease use it for good reasons. I´ve seen people using the RSS Feed from xREL and underground forum as release source. Please support the movie industrie.\n\n \n\nFor any question - dont mind to ask! The Project is still under development.",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "RSS search an notification.\n  \n  Please Read\n  \n  \n\n  Please read all information on GitHub\n    \n    https://github.com/maschhoff/RSSNotipy\n\nPlease use the sample configuration and files on the GitHub Repo (https://github.com/maschhoff/RSSNotipy/tree/master/data)  and copy it to /mnt/user/appdata/rssnotipy/\n\n \n\nYou have to edit the configuration for your purpose. RSS release sources to search for and upcoming movies from your rss source. And optionally the Api Key of your prefered push service\n\nPlease use it for good reasons. I´ve seen people using the RSS Feed from xREL and underground forum as release source. Please support the movie industrie.\n\n \n\nFor any question - dont mind to ask! The Project is still under development.",
    "logo": "https://image.flaticon.com/icons/png/512/25/25367.png",
    "name": "RSSNotipy",
    "image": "knex666/rssnotipy",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "0": "3247:0/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/RSSNotipy/data",
        "bind": "/mnt/user/appdata/rssnotipy"
      }
    ]
  },
  {
    "type": 1,
    "title": "RTMPServer",
    "description": "This Docker image can be used to create a video streaming server that supports RTMP, HLS, DASH out of the box. It also allows adaptive streaming and custom transcoding of video streams. All modules are built from source on Debian and Alpine Linux base images.\r\n\r\nStream live RTMP content to:\r\nrtmp://:1935/live/\r\nwhere  is any stream key you specify.\r\n\r\nView:\r\nrtmp://:1935/live/\r\nhttp://:8080/hls/.m3u8 \r\nhttp://:8080/dash/_src.mpd",
    "categories": [
      "GameServers:",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "This Docker image can be used to create a video streaming server that supports RTMP, HLS, DASH out of the box. It also allows adaptive streaming and custom transcoding of video streams. All modules are built from source on Debian and Alpine Linux base images.\r\n\r\nStream live RTMP content to:\r\nrtmp://:1935/live/\r\nwhere  is any stream key you specify.\r\n\r\nView:\r\nrtmp://:1935/live/\r\nhttp://:8080/hls/.m3u8 \r\nhttp://:8080/dash/_src.mpd",
    "logo": "https://intinor.com/wp-content/uploads/2017/01/RTMP.png",
    "name": "RTMPServer",
    "image": "alqutami/rtmp-hls",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "shortipy",
    "description": "URL Shortener in python based on flask",
    "categories": [
      "Tools:Utilities",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "URL Shortener in python based on flask",
    "logo": "https://image.flaticon.com/icons/png/512/1828/1828108.png",
    "name": "shortipy",
    "image": "knex666/shortipy",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/shortipy/data",
        "bind": "/mnt/user/appdata/shortipy"
      }
    ]
  },
  {
    "type": 1,
    "title": "Snapcast",
    "description": "use this Audio option in  mopidy.conf in mopidy docker to use Snapcast:\r\n\r\n\r\noutput = audioresample ! audio/x-raw,rate=48000,channels=2,format=S16LE ! audioconvert ! wavenc ! filesink location=/tmp/snapfifo",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "use this Audio option in  mopidy.conf in mopidy docker to use Snapcast:\r\n\r\n\r\noutput = audioresample ! audio/x-raw,rate=48000,channels=2,format=S16LE ! audioconvert ! wavenc ! filesink location=/tmp/snapfifo",
    "logo": "https://icons.iconarchive.com/icons/alecive/flatwoken/512/Apps-Player-Audio-icon.png",
    "name": "Snapcast",
    "image": "kevineye/snapcast",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/data/",
        "bind": "/mnt/user/appdata/mopidy/tmp/"
      }
    ]
  },
  {
    "type": 1,
    "title": "tor-relay",
    "description": "This docker image will install the latest current stable version of Tor server. It will run Tor as an unprivileged regular user, as recommended by torproject.org.\n\nIt includes the latest Tor Debian package from torproject.org which is installed and configured according the Tor project recommendations. Additionally it can be run as a hidden bridge using obfs4proy as well as meek.\n\nThe Tor network relies on volunteers to donate bandwidth. The more people who run relays, the faster the Tor network will be. If you have at least 2 megabits/s for both upload and download, please help out Tor by configuring your server to be a Tor relay too.\n\nINSTALLATION:\nCreate a folder appdata/tor-data/config\nDownload sample Config: https://github.com/maschhoff/docker/tree/master/tor-relay\nEdit the config at least NICKNAME and CONTACTINFO in the config file\nPut this into the config folder.\nEdit the docker parameters and run it.\n     \nhttps://github.com/chriswayg/tor-server",
    "categories": [
      "Network:Other"
    ],
    "platform": "linux",
    "note": "This docker image will install the latest current stable version of Tor server. It will run Tor as an unprivileged regular user, as recommended by torproject.org.\n\nIt includes the latest Tor Debian package from torproject.org which is installed and configured according the Tor project recommendations. Additionally it can be run as a hidden bridge using obfs4proy as well as meek.\n\nThe Tor network relies on volunteers to donate bandwidth. The more people who run relays, the faster the Tor network will be. If you have at least 2 megabits/s for both upload and download, please help out Tor by configuring your server to be a Tor relay too.\n\nINSTALLATION:\nCreate a folder appdata/tor-data/config\nDownload sample Config: https://github.com/maschhoff/docker/tree/master/tor-relay\nEdit the config at least NICKNAME and CONTACTINFO in the config file\nPut this into the config folder.\nEdit the docker parameters and run it.\n     \nhttps://github.com/chriswayg/tor-server",
    "logo": "https://clipartart.com/images/tor-browser-icon-clipart-9.png",
    "name": "tor-relay",
    "image": "doudou34/tor-server",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "0": "9030:0/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/tor/",
        "bind": "/mnt/user/appdata/tor-data/config/"
      },
      {
        "container": "/etc/localtime",
        "bind": "/etc/localtime"
      }
    ],
    "env": [
      {
        "name": "TOR_NICKNAME",
        "label": "TOR_NICKNAME",
        "default": "myRelay"
      },
      {
        "name": "CONTACT_EMAIL",
        "label": "CONTACT_EMAIL",
        "default": "mail@domain.com"
      }
    ]
  },
  {
    "type": 1,
    "title": "FoldingAtHome",
    "description": "FoldingAtHome is a project ran by Stanford University to network thousands of computers together, using them to work out the folding of proteins to aid in the research of Alzheimer's, Huntington's, Parkinson's, and many cancers.",
    "categories": [
      "Other:"
    ],
    "platform": "linux",
    "note": "FoldingAtHome is a project ran by Stanford University to network thousands of computers together, using them to work out the folding of proteins to aid in the research of Alzheimer's, Huntington's, Parkinson's, and many cancers.",
    "logo": "https://i.imgur.com/AKptFCw.png",
    "name": "FoldingAtHome",
    "image": "mobiusnine/foldingathome",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "36330": "36330:36330/tcp",
        "7396": "7396:7396/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/FoldingAtHome"
      }
    ],
    "env": [
      {
        "name": "NVIDIA_DRIVER_CAPABILITIES",
        "label": "NVIDIA_DRIVER_CAPABILITIES",
        "default": ""
      },
      {
        "name": "NVIDIA_VISIBLE_DEVICES",
        "label": "NVIDIA_VISIBLE_DEVICES",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Android-8.0",
    "description": "Android in docker solution with noVNC supported and video recording. Work way better with Intel CPUs because AMD doesn't an cpu graphics card. So with amd cpus can be unusable.",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "Android in docker solution with noVNC supported and video recording. Work way better with Intel CPUs because AMD doesn't an cpu graphics card. So with amd cpus can be unusable.",
    "logo": "https://duckduckgo.com/i/333122ce.png",
    "name": "Android-8.0",
    "image": "ulisses1478/docker-android",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6080": "6080:6080/tcp"
      }
    ],
    "env": [
      {
        "name": "EMULATOR_ARGS",
        "label": "EMULATOR_ARGS",
        "default": "-gpu swiftshader_indirect -accel on"
      }
    ]
  },
  {
    "type": 1,
    "title": "BitcoinWalletGUI",
    "description": "Bitcoin wallet with GUI over VNC and NoVNC.\u0026#xD;\nVNC default password: vncpassword",
    "categories": [
      "Other:"
    ],
    "platform": "linux",
    "note": "Bitcoin wallet with GUI over VNC and NoVNC.\u0026#xD;\nVNC default password: vncpassword",
    "logo": "https://en.bitcoin.it/w/images/en/2/29/BC_Logo_.png",
    "name": "BitcoinWalletGUI",
    "image": "ulisses1478/bitcoinwallet-gui",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5901": "5905:5901/tcp",
        "6901": "6901:6901/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/headless/.bitcoin/",
        "bind": "/mnt/user/BitcoinWallet/"
      }
    ],
    "env": [
      {
        "name": "VNC_PW",
        "label": "VNC_PW",
        "default": "PASSWORD"
      },
      {
        "name": "VNC_RESOLUTION",
        "label": "VNC_RESOLUTION",
        "default": "1280x1024"
      },
      {
        "name": "VNC_VIEW_ONLY",
        "label": "VNC_VIEW_ONLY",
        "default": "false"
      }
    ]
  },
  {
    "type": 1,
    "title": "mongo-express",
    "description": "Web-based MongoDB admin interface, written with Node.js and express.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Web-based MongoDB admin interface, written with Node.js and express.",
    "logo": "https://d1q6f0aelx0por.cloudfront.net/product-logos/f80f66d3-d812-48e5-8d6f-e248b25e3dce-mongo-express.png",
    "name": "mongo-express",
    "image": "ulisses1478/mongo-express",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8081": "8081:8081/tcp"
      }
    ],
    "env": [
      {
        "name": "ME_CONFIG_BASICAUTH_PASSWORD ",
        "label": "ME_CONFIG_BASICAUTH_PASSWORD ",
        "default": "password"
      },
      {
        "name": "ME_CONFIG_MONGODB_SERVER",
        "label": "ME_CONFIG_MONGODB_SERVER",
        "default": ""
      },
      {
        "name": "ME_CONFIG_BASICAUTH_USERNAME ",
        "label": "ME_CONFIG_BASICAUTH_USERNAME ",
        "default": "username"
      }
    ]
  },
  {
    "type": 1,
    "title": "phpmyadmin",
    "description": "A web interface for MySQL and MariaDB.",
    "categories": [
      "Tools:Utilities",
      "Other:"
    ],
    "platform": "linux",
    "note": "A web interface for MySQL and MariaDB.",
    "logo": "https://secure.gravatar.com/avatar/4be7d922dc46f22e6b0cf1162f0e329b.jpg",
    "name": "phpmyadmin",
    "image": "phpmyadmin/phpmyadmin",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "8080:80/tcp"
      }
    ],
    "env": [
      {
        "name": "MYSQL_USER",
        "label": "MYSQL_USER",
        "default": "root"
      },
      {
        "name": "MYSQL_PASSWORD",
        "label": "MYSQL_PASSWORD",
        "default": "root"
      },
      {
        "name": "PMA_HOST",
        "label": "PMA_HOST",
        "default": "192.168.70.99"
      },
      {
        "name": "PMA_PORT",
        "label": "PMA_PORT",
        "default": "3306"
      }
    ]
  },
  {
    "type": 1,
    "title": "Shinobi",
    "description": "Shinobi is Open Source, written in Node.js, and real easy to use. It is the future of CCTV and NVR for developers and end-users alike. It is catered to by professionals and most importantly by the one who created it. \r;\n\r;\nTo change the super user username and password you need to login into /super WebUI\r;\nWeb Address : http://xxx.xxx.xxx.xxx:8080/super\r;\nUsername : admin@shinobi.video\r;\nPassword : admin",
    "categories": [
      "Tools:Utilities",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "Shinobi is Open Source, written in Node.js, and real easy to use. It is the future of CCTV and NVR for developers and end-users alike. It is catered to by professionals and most importantly by the one who created it. \r;\n\r;\nTo change the super user username and password you need to login into /super WebUI\r;\nWeb Address : http://xxx.xxx.xxx.xxx:8080/super\r;\nUsername : admin@shinobi.video\r;\nPassword : admin",
    "logo": "https://shinobi.video//libs/assets/icon/apple-touch-icon-57x57.png",
    "name": "Shinobi",
    "image": "ulisses1478/shinobi",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/shinobi/videos",
        "bind": "/mnt/user/ShinobiVideos"
      },
      {
        "container": "/shinobi/",
        "bind": "/mnt/user/appdata/Shinobi/config/"
      },
      {
        "container": "/var/lib/mysql",
        "bind": "/mnt/user/appdata/Shinobi/mysql/"
      }
    ]
  },
  {
    "type": 1,
    "title": "ZcashWalletGUI",
    "description": "You need to run ZcashSwingWallet on the desktop to open the wallet\u0026#xD;\nVNC default password: vncpassword",
    "categories": [
      "Other:"
    ],
    "platform": "linux",
    "note": "You need to run ZcashSwingWallet on the desktop to open the wallet\u0026#xD;\nVNC default password: vncpassword",
    "logo": "https://z.cash/wp-content/uploads/2018/09/zcash-icon-fullcolor.png",
    "name": "ZcashWalletGUI",
    "image": "ulisses1478/zcashwallet",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5901": "5901:5901/tcp",
        "6901": "6901:6901/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/headless/.zcash/",
        "bind": "/mnt/user/appdata/Zcashwallet/"
      }
    ],
    "env": [
      {
        "name": "VNC_RESOLUTION",
        "label": "VNC_RESOLUTION",
        "default": "1280x1024"
      },
      {
        "name": "VNC_VIEW_ONLY",
        "label": "VNC_VIEW_ONLY",
        "default": "false"
      },
      {
        "name": "VNC_PW",
        "label": "VNC_PW",
        "default": "PASSWORD"
      }
    ]
  },
  {
    "type": 1,
    "title": "cron-streamripper",
    "description": "Streamripper that runs on a cron schedule\r\n        Directions:\r\n        1. Create an executable file (sh script) that runs streamripper and store it in the Programs Dir directory\r\n        2. Create a valid cron file named station-cron in the Cron Dir directory (must be done for the container to run) that runs the file created in 1.",
    "categories": [
      "Other:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Streamripper that runs on a cron schedule\r\n        Directions:\r\n        1. Create an executable file (sh script) that runs streamripper and store it in the Programs Dir directory\r\n        2. Create a valid cron file named station-cron in the Cron Dir directory (must be done for the container to run) that runs the file created in 1.",
    "logo": "https://raw.githubusercontent.com/FoxxMD/unraid-docker-templates/master/antenna.png",
    "name": "cron-streamripper",
    "image": "dax333/cron-streamripper",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/etc/cron.d",
        "bind": "/mnt/user/appdata/cron-streamripper/cron"
      },
      {
        "container": "/home/streamripper/streams",
        "bind": "/mnt/user/appdata/cron-streamripper/streams"
      },
      {
        "container": "/home/streamripper/programs",
        "bind": "/mnt/user/appdata/cron-streamripper/programs"
      }
    ]
  },
  {
    "type": 1,
    "title": "elasticsearch",
    "description": "Elasticsearch with instructions for installation on unraid. \r\n        Default Elasticsearch version is 6.6.2\r\n        To change version simply edit the version tag in the repository field to an available version on dockerhub. This template not tested on alpine images.",
    "categories": [
      "Other:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Elasticsearch with instructions for installation on unraid. \r\n        Default Elasticsearch version is 6.6.2\r\n        To change version simply edit the version tag in the repository field to an available version on dockerhub. This template not tested on alpine images.",
    "logo": "https://raw.githubusercontent.com/FoxxMD/unraid-docker-templates/master/elasticsearch.png",
    "name": "elasticsearch",
    "image": "elasticsearch:6.6.2",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "9200": "9200:9200/tcp",
        "9300": "9300:9300/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/usr/share/elasticsearch/data",
        "bind": "/mnt/user/appdata/elasticsearch/data"
      }
    ],
    "env": [
      {
        "name": "discovery.type",
        "label": "discovery.type",
        "default": "single-node"
      }
    ]
  },
  {
    "type": 1,
    "title": "fr24feed-piaware",
    "description": "All-in-one image for feeding FlightRadar24/FlightAware ADS-B/MLAT data with an RTL-SDR device and local web server for displaying aircraft positions on a map.\r\n        Docker contains: \r\n         * Piaware (Flightaware ADS-B and MLAT ground station software/feed)\r\n         * fr24feed (FlightRadar24 ADS-B software feed)\r\n         * Dump1090 for receiving and parsing data to the above software\r\n         * Simple HTTP Server to display received data (aircraft positions/track) on a real-time map\r\n        Installation\r\n        Follow the directions on the github README (Project Page link on unraid) with the provided Config entries in this template. See the support thread for more info.\r\n        Usage\r\n        If the container starts without error you can verify RTL-SDR is in use and feeds are working by checking the container log. Use the WebUI button to see the map;",
    "categories": [
      "Network:Web",
      "Other:"
    ],
    "platform": "linux",
    "note": "All-in-one image for feeding FlightRadar24/FlightAware ADS-B/MLAT data with an RTL-SDR device and local web server for displaying aircraft positions on a map.\r\n        Docker contains: \r\n         * Piaware (Flightaware ADS-B and MLAT ground station software/feed)\r\n         * fr24feed (FlightRadar24 ADS-B software feed)\r\n         * Dump1090 for receiving and parsing data to the above software\r\n         * Simple HTTP Server to display received data (aircraft positions/track) on a real-time map\r\n        Installation\r\n        Follow the directions on the github README (Project Page link on unraid) with the provided Config entries in this template. See the support thread for more info.\r\n        Usage\r\n        If the container starts without error you can verify RTL-SDR is in use and feeds are working by checking the container log. Use the WebUI button to see the map;",
    "logo": "https://raw.githubusercontent.com/FoxxMD/unraid-docker-templates/master/icons/flightaware.jpg",
    "name": "fr24feed-piaware",
    "image": "thomx/fr24feed-piaware",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "0:8080/tcp",
        "8754": "8754:8754/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/piaware.conf",
        "bind": "/mnt/user/appdata/fr24feed-piaware/piaware.conf"
      },
      {
        "container": "/usr/lib/fr24/public_html/config.js",
        "bind": "/mnt/user/appdata/fr24feed-piaware/config.js"
      },
      {
        "container": "/etc/fr24feed.ini",
        "bind": "/mnt/user/appdata/fr24feed-piaware/fr24feed.ini"
      }
    ]
  },
  {
    "type": 1,
    "title": "maloja",
    "description": "Self-hosted music scrobble database to create personal listening statistics and charts as a substitute for Last.fm / Libre.fm / GNU FM.\r\n        \r\n        Features include:\r\n        *  Easy import of existing scrobble data in CSV format (from last.fm, etc.)\r\n        * Custom rules for importing/scrobbling\r\n        * Custom and 3rd party integrations for album/artist artwork\r\n        * Insightful charting to display time-sliced \"top charts\" for tracks and artists\r\n        * Full listening history and track lookup using multiple sources (youtube, gmusic, spotify..)\r\n        *  A first-party chrome extension for scrobbling from the web as well as third-party scrobble-compliant endpoints for use with other extensions and applications\r\n        \r\n        See the project, https://github.com/krateng/maloja, for more information or the support thread for recommended setup.",
    "categories": [
      "MediaServer:Music",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Self-hosted music scrobble database to create personal listening statistics and charts as a substitute for Last.fm / Libre.fm / GNU FM.\r\n        \r\n        Features include:\r\n        *  Easy import of existing scrobble data in CSV format (from last.fm, etc.)\r\n        * Custom rules for importing/scrobbling\r\n        * Custom and 3rd party integrations for album/artist artwork\r\n        * Insightful charting to display time-sliced \"top charts\" for tracks and artists\r\n        * Full listening history and track lookup using multiple sources (youtube, gmusic, spotify..)\r\n        *  A first-party chrome extension for scrobbling from the web as well as third-party scrobble-compliant endpoints for use with other extensions and applications\r\n        \r\n        See the project, https://github.com/krateng/maloja, for more information or the support thread for recommended setup.",
    "logo": "https://raw.githubusercontent.com/FoxxMD/unraid-docker-templates/master/icons/maloja.png",
    "name": "maloja",
    "image": "joniator/maloja:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "42010": "42010:42010/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/maloja"
      },
      {
        "container": "/root/.local/share/maloja",
        "bind": "/mnt/user/appdata/maloja"
      }
    ],
    "env": [
      {
        "name": "MALOJA_HOST",
        "label": "MALOJA_HOST",
        "default": "0.0.0.0"
      },
      {
        "name": "MALOJA_SKIP_SETUP",
        "label": "MALOJA_SKIP_SETUP",
        "default": "yes"
      },
      {
        "name": "MALOJA_DATA_DIRECTORY",
        "label": "MALOJA_DATA_DIRECTORY",
        "default": "/config"
      }
    ]
  },
  {
    "type": 1,
    "title": "ozwdaemon",
    "description": "Container for running the OpenZWave MQTT Adapter (for Home Assistant via the new Z-Wave Integration)\r\n        \r\n        You will need a running MQTT instance and a z-wave controller in order to use this container.\r\n        \r\n        For more information see:\r\n        https://github.com/OpenZWave/qt-openzwave\r\n        https://www.home-assistant.io/integrations/ozw/\r\n        \r\n        Or visit the unraid forum support thread for more configuration/info",
    "categories": [
      "HomeAutomation:",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "Container for running the OpenZWave MQTT Adapter (for Home Assistant via the new Z-Wave Integration)\r\n        \r\n        You will need a running MQTT instance and a z-wave controller in order to use this container.\r\n        \r\n        For more information see:\r\n        https://github.com/OpenZWave/qt-openzwave\r\n        https://www.home-assistant.io/integrations/ozw/\r\n        \r\n        Or visit the unraid forum support thread for more configuration/info",
    "logo": "https://raw.githubusercontent.com/FoxxMD/unraid-docker-templates/master/icons/zwave.png",
    "name": "ozwdaemon",
    "image": "openzwave/ozwdaemon:allinone-latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "1983": "0:1983/tcp",
        "7800": "7800:7800/tcp"
      }
    ],
    "env": [
      {
        "name": "OZW_NETWORK_KEY",
        "label": "OZW_NETWORK_KEY",
        "default": ""
      },
      {
        "name": "MQTT_SERVER",
        "label": "MQTT_SERVER",
        "default": ""
      },
      {
        "name": "USB_PATH",
        "label": "USB_PATH",
        "default": ""
      },
      {
        "name": "MQTT_PORT",
        "label": "MQTT_PORT",
        "default": ""
      },
      {
        "name": "MQTT_USERNAME",
        "label": "MQTT_USERNAME",
        "default": ""
      },
      {
        "name": "MQTT_PASSWORD",
        "label": "MQTT_PASSWORD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "pgadmin4",
    "description": "pgAdmin 4 is a web based administration tool for the PostgreSQL database. This is the official image provided by pgadmin.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "pgAdmin 4 is a web based administration tool for the PostgreSQL database. This is the official image provided by pgadmin.",
    "logo": "https://raw.githubusercontent.com/FoxxMD/unraid-docker-templates/master/icons/pgadmin4.png",
    "name": "pgadmin4",
    "image": "dpage/pgadmin4",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "8792:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/lib/pgadmin",
        "bind": "/mnt/user/appdata/pgadmin4"
      }
    ],
    "env": [
      {
        "name": "PGADMIN_DEFAULT_EMAIL",
        "label": "PGADMIN_DEFAULT_EMAIL",
        "default": ""
      },
      {
        "name": "PGADMIN_DEFAULT_PASSWORD",
        "label": "PGADMIN_DEFAULT_PASSWORD",
        "default": ""
      },
      {
        "name": "PGADMIN_LISTEN_ADDRESS",
        "label": "PGADMIN_LISTEN_ADDRESS",
        "default": "0.0.0.0"
      }
    ]
  },
  {
    "type": 1,
    "title": "pinry",
    "description": "A tiling image board system for people who want to save, tag, and share images, videos and webpages in an easy to skim through format. Basically self-hosted Pinterest. Project includes a chrome/firefox extension bookmarklet.",
    "categories": [
      "Cloud:",
      "MediaServer:Photos",
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "A tiling image board system for people who want to save, tag, and share images, videos and webpages in an easy to skim through format. Basically self-hosted Pinterest. Project includes a chrome/firefox extension bookmarklet.",
    "logo": "https://raw.githubusercontent.com/FoxxMD/unraid-docker-templates/master/icons/pinry.png",
    "name": "pinry",
    "image": "getpinry/pinry",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "8438:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/pinry"
      }
    ]
  },
  {
    "type": 1,
    "title": "shinysdr",
    "description": "Software-defined radio receiver application built on GNU Radio with a web-based UI and plugins.\r\n        This docker includes additional plugins courtesy of the maintainer:\r\n        * python-libhamlib2 -- Controlling external hardware radios\r\n        * gr-air-modes -- ADS-B, aircraft transponders",
    "categories": [
      "MediaApp:Music",
      "MediaApp:Other"
    ],
    "platform": "linux",
    "note": "Software-defined radio receiver application built on GNU Radio with a web-based UI and plugins.\r\n        This docker includes additional plugins courtesy of the maintainer:\r\n        * python-libhamlib2 -- Controlling external hardware radios\r\n        * gr-air-modes -- ADS-B, aircraft transponders",
    "logo": "https://raw.githubusercontent.com/FoxxMD/unraid-docker-templates/master/icons/shinysdr.png",
    "name": "shinysdr",
    "image": "jeffersonjhunt/shinysdr",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8100": "8100:8100/tcp",
        "8101": "8101:8101/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/shinysdr/config/"
      }
    ]
  },
  {
    "type": 1,
    "title": "shoginn-dump1090",
    "categories": [
      "Network:Web",
      "Other:"
    ],
    "platform": "linux",
    "note": "dump1090 is a simple Mode S decoder for RTLSDR devices\r\n        This is a docker build for flightaware's dump1090 designed to feed ADSB data from any RTLSDR USB, serial/network AVR, or BEAST device.\r\n        Usage\r\n        * You must provide the path to the radio device using the RTL-SDR Device mapping. Refer to the support thread for instructions on how to find and provide a USB device for this mapping.\r\n        * Ports for raw/beast output consumption have defaults provided. Clients will use these ports to consume the data (flightaware, flightrader24, etc.)",
    "logo": "https://raw.githubusercontent.com/FoxxMD/unraid-docker-templates/master/icons/dump1090.png",
    "name": "shoginn-dump1090",
    "image": "shoginn/dump1090:latest",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "shoginn-flightaware",
    "categories": [
      "Network:Web",
      "Other:"
    ],
    "platform": "linux",
    "note": "FlightAware is a digital aviation company that operates a flight tracking and data platform. This docker contains the binary for FlightAware's FlightFeeder application, which consumes an ADSB feed and uploads the parsed data to FA.\r\n        Refer to the support thread for instructions on how to setup a dump1090 feed with your radio device.",
    "logo": "https://raw.githubusercontent.com/FoxxMD/unraid-docker-templates/master/icons/flightaware.png",
    "name": "shoginn-flightaware",
    "image": "shoginn/flightaware:latest",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "shoginn-flightradar24",
    "categories": [
      "Network:Web",
      "Other:"
    ],
    "platform": "linux",
    "note": "FlightRadar24 is a Swedish internet-based service that shows real-time commercial aircraft flight information on a map. This docker contains FR24's binary for consuming an ADSB feed and uploading the parsed data to FR24.\r\n        Refer to the support thread for instructions on how to setup a dump1090 feed with your radio device.\n        Note: If you have issues with the docker crashing with default settings set mlat and mlat w/o gps to no. There is a known bug in the current fr24 binary build.",
    "logo": "https://raw.githubusercontent.com/FoxxMD/unraid-docker-templates/master/icons/flightradar24.png",
    "name": "shoginn-flightradar24",
    "image": "shoginn/flightradar24:latest",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "shoginn-vrs",
    "categories": [
      "Network:Web"
    ],
    "platform": "linux",
    "note": "Virtual Radar Server is an open-source .NET application used to overlay and track the real time position of aircraft on a map within a modern browser.\r\n        VRS can receive aircraft data from a multitude of sources including ADS-B streams.\r\n        Refer to the support thread for more information on setup/configuration beyond initial docker initialization.",
    "logo": "https://raw.githubusercontent.com/FoxxMD/unraid-docker-templates/master/icons/vrs.png",
    "name": "shoginn-vrs",
    "image": "shoginn/vrs:latest",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "statping",
    "description": "An easy to use Status Page for your websites and applications. Statping will automatically fetch the application and render a beautiful status page with tons of features for you to build an even better status page.",
    "categories": [
      "Network:Web",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "An easy to use Status Page for your websites and applications. Statping will automatically fetch the application and render a beautiful status page with tons of features for you to build an even better status page.",
    "logo": "https://raw.githubusercontent.com/FoxxMD/unraid-docker-templates/master/icons/statping.png",
    "name": "statping",
    "image": "statping/statping:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8366:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/app",
        "bind": "/mnt/user/appdata/statping"
      }
    ]
  },
  {
    "type": 1,
    "title": "szurubooru-api",
    "description": "Backend API container for Szurubooru, an image board engine for small and medium communities",
    "categories": [
      "MediaServer:Photos"
    ],
    "platform": "linux",
    "note": "Backend API container for Szurubooru, an image board engine for small and medium communities",
    "logo": "https://raw.githubusercontent.com/FoxxMD/unraid-docker-templates/master/szurubooru.png",
    "name": "szurubooru-api",
    "image": "szurubooru/server:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6666": "6666:6666/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/szurubooru/data"
      }
    ],
    "env": [
      {
        "name": "POSTGRES_HOST",
        "label": "POSTGRES_HOST",
        "default": ""
      },
      {
        "name": "POSTGRES_DB",
        "label": "POSTGRES_DB",
        "default": ""
      },
      {
        "name": "POSTGRES_USER",
        "label": "POSTGRES_USER",
        "default": ""
      },
      {
        "name": "POSTGRES_PASSWORD",
        "label": "POSTGRES_PASSWORD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "szurubooru-client",
    "description": "Frontend container for Szurubooru, an image board engine for small and medium communities\r\n        Requires the backend container, szurubooru-api, in order to work.",
    "categories": [
      "MediaApp:Photos"
    ],
    "platform": "linux",
    "note": "Frontend container for Szurubooru, an image board engine for small and medium communities\r\n        Requires the backend container, szurubooru-api, in order to work.",
    "logo": "https://raw.githubusercontent.com/FoxxMD/unraid-docker-templates/master/szurubooru.png",
    "name": "szurubooru-client",
    "image": "szurubooru/client:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "8118:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/szurubooru/data"
      }
    ],
    "env": [
      {
        "name": "BUILD_INFO",
        "label": "BUILD_INFO",
        "default": "latest"
      },
      {
        "name": "BACKEND_HOST",
        "label": "BACKEND_HOST",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "whoogle-search",
    "description": "Get Google search results, but without any ads, javascript, AMP links, cookies, or IP address tracking. Also includes a dark mode.\r\n        \r\n        Refer to the project page for additional configuration and usage https://github.com/benbusby/whoogle-search",
    "categories": [
      "Cloud:",
      "Network:Web",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Get Google search results, but without any ads, javascript, AMP links, cookies, or IP address tracking. Also includes a dark mode.\r\n        \r\n        Refer to the project page for additional configuration and usage https://github.com/benbusby/whoogle-search",
    "logo": "https://raw.githubusercontent.com/FoxxMD/unraid-docker-templates/master/icons/whoogle.png",
    "name": "whoogle-search",
    "image": "benbusby/whoogle-search",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5000": "8798:5000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/whoogle"
      }
    ],
    "env": [
      {
        "name": "HTTPS_ONLY",
        "label": "HTTPS_ONLY",
        "default": ""
      },
      {
        "name": "EXPOSE_PORT",
        "label": "EXPOSE_PORT",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "7DaysToDie",
    "description": "This Docker will download and install SteamCMD. It will also install 7 Days to Die and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install 7 Days to Die and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/7dtd.png",
    "name": "7DaysToDie",
    "image": "ich777/steamcmd:7dtd",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "26900": "26900:26900/tcp",
        "26901": "26901:26901/udp",
        "26902": "26902:26902/udp",
        "26903": "26903:26903/udp",
        "27015": "27015:27015/udp",
        "8080": "8080:8080/tcp",
        "8082": "8082:8082/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/7dtd"
      },
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      }
    ],
    "env": [
      {
        "name": "SERVERCONFIG",
        "label": "SERVERCONFIG",
        "default": "serverconfig.xml"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-logfile 7DaysToDie_Data/output_log.txt $@"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "294420"
      }
    ]
  },
  {
    "type": 1,
    "title": "AlienSwarm",
    "description": "This Docker will download and install SteamCMD. It will also install Alien Swarm and run it.\r\n\r\n(!!!This container will only run on systems with less than 32 CPU cores!!!)\r\n\r\nInstall Note: You must provide a valid Steam username and password with Steam Guard disabled (the user dosen't have to have the game in the library).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Alien Swarm and run it.\r\n\r\n(!!!This container will only run on systems with less than 32 CPU cores!!!)\r\n\r\nInstall Note: You must provide a valid Steam username and password with Steam Guard disabled (the user dosen't have to have the game in the library).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/alienswarm.png",
    "name": "AlienSwarm",
    "image": "ich777/steamcmd:alienswarm",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/alienswarm"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+map lobby -maxplayers 4 +exec server.cfg"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "635"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "swarm"
      }
    ]
  },
  {
    "type": 1,
    "title": "AlienSwarm-ReactiveDrop",
    "description": "This Docker will download and install SteamCMD. It will also install Alien Swarm: Reactive Drop and run it. (!!!This container will only run on systems with less than 32 CPU cores!!!) \r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Alien Swarm: Reactive Drop and run it. (!!!This container will only run on systems with less than 32 CPU cores!!!) \r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/alienswarmreactivedrop.png",
    "name": "AlienSwarm-ReactiveDrop",
    "image": "ich777/steamcmd:alienswarmreactivedrop",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/alienswarm-reactivedrop"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+map lobby -maxplayers 4 +exec server.cfg"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "563560"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "reactivedrop"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Altitude",
    "description": "This Docker will download and install Altitude and run it.\r\n\r\nDefault Servername: Docker Altitude Server | Default Password: Docker | Default Admin Password: adminDocker\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install Altitude and run it.\r\n\r\nDefault Servername: Docker Altitude Server | Default Password: Docker | Default Admin Password: adminDocker\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/altitude.png",
    "name": "Altitude",
    "image": "ich777/altitude",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27276": "27276:27276/udp"
      }
    ],
    "volumes": [
      {
        "container": "/altitude",
        "bind": "/mnt/cache/appdata/altitude"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "DL_URL",
        "label": "DL_URL",
        "default": "http://installer.altitudegame.com/0.0.1/altitude.sh"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Anope",
    "description": "Anope is a set of IRC Services designed for flexibility and ease of use.\r\n\r\nThis container is configured by default to work with InspIRCd - fill out the required variables and start the container (also click on 'Show more settings' on the template page of InspIRCd to configure it for the Anope Services).\r\n\r\nWARNING: If you change a variable here it has no effect to the configuration - the configuration file is only changed on the first start of the container.\r\n\r\nIf you made a mistake at the first start go to your the '/anope/conf' directory in your appdata folder and delete the file 'services.conf' after a restart of the container the values will be written again).",
    "categories": [
      "Network:Other",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Anope is a set of IRC Services designed for flexibility and ease of use.\r\n\r\nThis container is configured by default to work with InspIRCd - fill out the required variables and start the container (also click on 'Show more settings' on the template page of InspIRCd to configure it for the Anope Services).\r\n\r\nWARNING: If you change a variable here it has no effect to the configuration - the configuration file is only changed on the first start of the container.\r\n\r\nIf you made a mistake at the first start go to your the '/anope/conf' directory in your appdata folder and delete the file 'services.conf' after a restart of the container the values will be written again).",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/anope.png",
    "name": "Anope",
    "image": "ich777/anope",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/anope",
        "bind": "/mnt/cache/appdata/anope"
      }
    ],
    "env": [
      {
        "name": "IP_ADDR",
        "label": "IP_ADDR",
        "default": ""
      },
      {
        "name": "CASEMAP",
        "label": "CASEMAP",
        "default": "rfc1459"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      },
      {
        "name": "HOST",
        "label": "HOST",
        "default": "irc.example.com"
      },
      {
        "name": "SSL",
        "label": "SSL",
        "default": "yes"
      },
      {
        "name": "PORT",
        "label": "PORT",
        "default": "7000"
      },
      {
        "name": "PASSWORD",
        "label": "PASSWORD",
        "default": ""
      },
      {
        "name": "IRCD",
        "label": "IRCD",
        "default": "inspircd3"
      },
      {
        "name": "LOCAL_HOSTNAME",
        "label": "LOCAL_HOSTNAME",
        "default": "services"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "ARKSurvivalEvolved",
    "description": "This Docker will download and install SteamCMD. It will also install ARK:SurvivalEvolved and run it (Normal server startup of ARK can take a long time!).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install ARK:SurvivalEvolved and run it (Normal server startup of ARK can take a long time!).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/arkse.png",
    "name": "ARKSurvivalEvolved",
    "image": "ich777/steamcmd:arkse",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp",
        "27020": "27020:27020/tcp",
        "7777": "7777:7777/udp",
        "7778": "7778:7778/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/ark-se"
      }
    ],
    "env": [
      {
        "name": "SERVER_NAME",
        "label": "SERVER_NAME",
        "default": ""
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "MAP",
        "label": "MAP",
        "default": "TheIsland"
      },
      {
        "name": "SRV_PWD",
        "label": "SRV_PWD",
        "default": ""
      },
      {
        "name": "SRV_ADMIN_PWD",
        "label": "SRV_ADMIN_PWD",
        "default": ""
      },
      {
        "name": "GAME_PARAMS_EXTRA",
        "label": "GAME_PARAMS_EXTRA",
        "default": "-server -log"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "376030"
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "ArmA3ExileMod",
    "description": "This Docker will download and install SteamCMD. It will also install ArmA III including ExileMod 1.0.4 and run it (You can also change the download URL so that you can install older builds of ExileMod).\r\n\r\nTo run this container you must provide a valid Steam username and password since the game needs a valid account to download (NOTICE: You must disable Steam Guard otherwise this container will not work, Steam recommens  to make a new Steam account for dedicated servers).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install ArmA III including ExileMod 1.0.4 and run it (You can also change the download URL so that you can install older builds of ExileMod).\r\n\r\nTo run this container you must provide a valid Steam username and password since the game needs a valid account to download (NOTICE: You must disable Steam Guard otherwise this container will not work, Steam recommens  to make a new Steam account for dedicated servers).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/arma3exilemod.png",
    "name": "ArmA3ExileMod",
    "image": "ich777/steamcmd:arma3exilemod",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "2302": "2302:2302/tcp",
        "2303": "2303:2303/udp",
        "2304": "2304:2304/udp",
        "2305": "2305:2305/udp",
        "2306": "2306:2306/udp",
        "3306": "3306:3306/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/arma3exilemod/gamefiles"
      },
      {
        "container": "/serverdata/.local/share",
        "bind": "/mnt/cache/appdata/arma3exilemod/profiles"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "WORKSHOP_MAN_INST",
        "label": "WORKSHOP_MAN_INST",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "EXILEMOD_SERVER_URL",
        "label": "EXILEMOD_SERVER_URL",
        "default": "http://www.exilemod.com/ExileServer-1.0.4a.zip"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "233780"
      },
      {
        "name": "MARIA_DB_ROOT_PWD",
        "label": "MARIA_DB_ROOT_PWD",
        "default": "ExileMod"
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "2302"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "ArmA3",
    "description": "This Docker will download and install SteamCMD. It will also install ArmA III and run it.\r\nTo run this container you must provide a valid Steam username and password since the game needs a valid account to download (NOTICE: You must disable Steam Guard otherwise this container will not work, Steam recommens  to make a new Steam account for dedicated servers).\r\n\r\nPassword Notice: The Docker will automaticly download a server.cfg preconfigured with ServerName: Docker Server and Password: Docker\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install ArmA III and run it.\r\nTo run this container you must provide a valid Steam username and password since the game needs a valid account to download (NOTICE: You must disable Steam Guard otherwise this container will not work, Steam recommens  to make a new Steam account for dedicated servers).\r\n\r\nPassword Notice: The Docker will automaticly download a server.cfg preconfigured with ServerName: Docker Server and Password: Docker\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/armaiii.png",
    "name": "ArmA3",
    "image": "ich777/steamcmd:arma3",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "2302": "2302:2302/tcp",
        "2303": "2303:2303/udp",
        "2304": "2304:2304/udp",
        "2305": "2305:2305/udp",
        "2306": "2306:2306/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/.local/share",
        "bind": "/mnt/cache/appdata/arma3/profiles"
      },
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/arma3/gamefiles"
      }
    ],
    "env": [
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "233780"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-config=server.cfg -mod="
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "2302"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "AssettoCorsa",
    "description": "This Docker will download and install SteamCMD. It will also install AssettoCorsa and run it.\r\nTo run this container you must provide a valid Steam username and password since the game needs a valid account to download (NOTICE: You must disable Steam Guard otherwise this container will not work, Steam recommens  to make a new Steam account for dedicated servers).\r\n\r\nATTENTION: You MUST provide a Steam User account with SteFirst Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install AssettoCorsa and run it.\r\nTo run this container you must provide a valid Steam username and password since the game needs a valid account to download (NOTICE: You must disable Steam Guard otherwise this container will not work, Steam recommens  to make a new Steam account for dedicated servers).\r\n\r\nATTENTION: You MUST provide a Steam User account with SteFirst Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/assettocorsa.png",
    "name": "AssettoCorsa",
    "image": "ich777/steamcmd:assettocorsa",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "50041": "50041:50041/tcp",
        "8081": "8081:8081/tcp",
        "8772": "8772:8772/tcp",
        "9600": "9600:9600/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/assettocorsa"
      }
    ],
    "env": [
      {
        "name": "INSTALL_ASSETTO_SERVER_MANAGER",
        "label": "INSTALL_ASSETTO_SERVER_MANAGER",
        "default": "true"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "302550"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "INSTALL_STRACKER",
        "label": "INSTALL_STRACKER",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "AssettoCorsaCompetizione",
    "description": "This Docker will run the AssettoCorsa Competizione Server.\r\n\r\nATTENTION: You have to copy over the 'accServer.exe' in your server directory, you can find it in your GAMEDIRECTORY/accServer.exe\r\nLet the container start up for the first time copy over the file and then restart the container.\r\n\r\nNotice: The initial servername and credentials are: 'ACC Docker Server' Password: 'Docker' AdminPassword: 'adminDocker' (all config files are located in the '/cfg' directory in your serverfolder).",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will run the AssettoCorsa Competizione Server.\r\n\r\nATTENTION: You have to copy over the 'accServer.exe' in your server directory, you can find it in your GAMEDIRECTORY/accServer.exe\r\nLet the container start up for the first time copy over the file and then restart the container.\r\n\r\nNotice: The initial servername and credentials are: 'ACC Docker Server' Password: 'Docker' AdminPassword: 'adminDocker' (all config files are located in the '/cfg' directory in your serverfolder).",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/acc.png",
    "name": "AssettoCorsaCompetizione",
    "image": "ich777/accompetizione-server",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "9201": "9201:9201/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/acc",
        "bind": "/mnt/cache/appdata/assettocorsacompetizione"
      }
    ],
    "env": [
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      }
    ]
  },
  {
    "type": 1,
    "title": "ATLAS",
    "description": "This Docker will download and install SteamCMD. It will also install ATLAS and run it (this docker does also have a built in Redis server for quick server setup, you also can disable it in the variables below).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install ATLAS and run it (this docker does also have a built in Redis server for quick server setup, you also can disable it in the variables below).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/atlas.png",
    "name": "ATLAS",
    "image": "ich777/steamcmd:atlas",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27000": "27000:27000/tcp",
        "32330": "32330:32330/tcp",
        "5750": "5750:5750/udp",
        "5751": "5751:5751/udp",
        "57550": "57550:57550/udp",
        "6379": "6379:6379/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/cache/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/atlas"
      }
    ],
    "env": [
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "?ServerX=0?ServerY=0?AltSaveDirectoryName=00?MaxPlayers=50?ReservedPlayerSlots=10?QueryPort=57550?Port=5750"
      },
      {
        "name": "ENA_REDIS",
        "label": "ENA_REDIS",
        "default": "yes"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "1006030"
      },
      {
        "name": "MAP_NAME",
        "label": "MAP_NAME",
        "default": "Ocean"
      },
      {
        "name": "GAME_PARAMS_EXTRA",
        "label": "GAME_PARAMS_EXTRA",
        "default": "-log -server -NoBattlEye"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Avorion",
    "description": "This Docker will download and install SteamCMD. It will also install Avorion and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Avorion and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/avorion.png",
    "name": "Avorion",
    "image": "ich777/steamcmd:avorion",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27000": "27000:27000/tcp",
        "27003": "27003:27003/udp",
        "27020": "27020:27020/udp",
        "27021": "27021:27021/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/avorion"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "565060"
      },
      {
        "name": "GALAXY_NAME",
        "label": "GALAXY_NAME",
        "default": "AvorionDocker"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "Barotrauma",
    "description": "This Docker will download and install SteamCMD. It will also install Barotrauma and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nCONSOLE: To connect to the console from Unraid itself and type in: 'docker exec -u steam -ti NAMEOFYOURCONTAINER screen -xS Barotrauma' (without quotes), to disconnect from the console simply close the window.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Barotrauma and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nCONSOLE: To connect to the console from Unraid itself and type in: 'docker exec -u steam -ti NAMEOFYOURCONTAINER screen -xS Barotrauma' (without quotes), to disconnect from the console simply close the window.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/barotrauma.png",
    "name": "Barotrauma",
    "image": "ich777/steamcmd:barotrauma",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp",
        "27016": "27016:27016/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/barotrauma"
      }
    ],
    "env": [
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "1026340"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Chrome",
    "description": "Google Chrome is a web browser developed by Google.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Google Chrome is a web browser developed by Google.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/chrome.png",
    "name": "Chrome",
    "image": "ich777/chrome",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/chrome",
        "bind": "/mnt/cache/appdata/chrome/"
      }
    ],
    "env": [
      {
        "name": "EXTRA_PARAMETERS",
        "label": "EXTRA_PARAMETERS",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "CUSTOM_RES_W",
        "label": "CUSTOM_RES_W",
        "default": "1280"
      },
      {
        "name": "CUSTOM_RES_H",
        "label": "CUSTOM_RES_H",
        "default": "768"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      }
    ]
  },
  {
    "type": 1,
    "title": "Citadel-ForgedWithFire",
    "description": "This Docker will download and install SteamCMD. It will also install Citadel - Forged with Fire and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Citadel - Forged with Fire and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/citadelfwf.png",
    "name": "Citadel-ForgedWithFire",
    "image": "ich777/steamcmd:citadelfwf",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp",
        "7777": "7777:7777/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/citadelfwf"
      }
    ],
    "env": [
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "489650 "
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "ColonySurvival",
    "description": "This Docker will download and install SteamCMD. It will also install Colony Survival and run it.\r\n\r\nCONSOLE: To connect to the console open up a terminal and type in: 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS ColonySurvival' (without quotes),\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Colony Survival and run it.\r\n\r\nCONSOLE: To connect to the console open up a terminal and type in: 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS ColonySurvival' (without quotes),\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/colonysurvival.png",
    "name": "ColonySurvival",
    "image": "ich777/steamcmd:colonysurvival",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27016": "27016:27016/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/colonysurvival"
      }
    ],
    "env": [
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "SRV_WORLDNAME",
        "label": "SRV_WORLDNAME",
        "default": "ColonySurvival"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "748090"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+server.gameport 27016"
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "SRV_NAME",
        "label": "SRV_NAME",
        "default": "Colony Survival Docker"
      },
      {
        "name": "SRV_NETTYPE",
        "label": "SRV_NETTYPE",
        "default": "SteamOnline"
      }
    ]
  },
  {
    "type": 1,
    "title": "ConanExiles",
    "description": "This Docker will download and install SteamCMD. It will also install Conan Exiles and run it.\r\n\r\nServername: 'Docker ConanExiles' Password: 'Docker' rconPassword: 'adminDocker'\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Conan Exiles and run it.\r\n\r\nServername: 'Docker ConanExiles' Password: 'Docker' rconPassword: 'adminDocker'\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/conanexiles.png",
    "name": "ConanExiles",
    "image": "ich777/steamcmd:conanexiles",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp",
        "7777": "7777:7777/tcp",
        "7778": "7778:7778/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/conanexiles/"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "WS_CONTENT",
        "label": "WS_CONTENT",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "443030"
      }
    ]
  },
  {
    "type": 1,
    "title": "CounterStrike2D",
    "description": "This Docker will download and install CounterStrike 2D.\r\nCounterStrike 2D is a free to play top down shooter (you can get it on Steam or at https://www.cs2d.com/)",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install CounterStrike 2D.\r\nCounterStrike 2D is a free to play top down shooter (you can get it on Steam or at https://www.cs2d.com/)",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/cs2d.png",
    "name": "CounterStrike2D",
    "image": "ich777/cs2dserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "36963": "36963:36963/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/cs2d"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "FORCE_UPDATE",
        "label": "FORCE_UPDATE",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "CSGO",
    "description": "This Docker will download and install SteamCMD. It will also install Counter-Strike: GO and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\nPUBLIC PLAY: If you want that your server is public listed you must add '+sv_setsteamaccount YOURTOKEN' to the GAME_PARAMS (without the quotes and replace YOURTOKEN with your token).\r\nCreate your token here: https://steamcommunity.com/dev/managegameservers (every gameserver needs it's own token!!!)\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Counter-Strike: GO and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\nPUBLIC PLAY: If you want that your server is public listed you must add '+sv_setsteamaccount YOURTOKEN' to the GAME_PARAMS (without the quotes and replace YOURTOKEN with your token).\r\nCreate your token here: https://steamcommunity.com/dev/managegameservers (every gameserver needs it's own token!!!)\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/csgo.png",
    "name": "CSGO",
    "image": "ich777/steamcmd",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/cstrikego"
      }
    ],
    "env": [
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+game_type 0 -usercon +game_mode 0 +mapgroup mg_active +map de_dust2"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "740"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "csgo"
      }
    ]
  },
  {
    "type": 1,
    "title": "CSMM-7DtD",
    "description": "This Docker will install and download CSMM for 7DtD (CatalysmsServerManager).\r\nIt's a powerfull Server Manager with Server automation, Discord notifications, High ping kicker, Country ban, Player tracking, Ingame commands, Economy system, Discord integration, Support ticket system, Server analytics,... for 7DtD.\r\n\r\nUPDATE NOTICE: Simply set the 'Force Update' to 'true' and restart the container (don't forget to turn it off after the update).",
    "categories": [
      "GameServers:",
      "Network:Other",
      "Productivity:",
      "Tools:Utilities",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "This Docker will install and download CSMM for 7DtD (CatalysmsServerManager).\r\nIt's a powerfull Server Manager with Server automation, Discord notifications, High ping kicker, Country ban, Player tracking, Ingame commands, Economy system, Discord integration, Support ticket system, Server analytics,... for 7DtD.\r\n\r\nUPDATE NOTICE: Simply set the 'Force Update' to 'true' and restart the container (don't forget to turn it off after the update).",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/csmm.png",
    "name": "CSMM-7DtD",
    "image": "ich777/csmm-7dtd",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "1337": "1337:1337/tcp",
        "3306": "3306:3306/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/csmm-7dtd",
        "bind": "/mnt/cache/appdata/csmm-7dtd"
      }
    ],
    "env": [
      {
        "name": "DB_BKP_INTERV",
        "label": "DB_BKP_INTERV",
        "default": "90"
      },
      {
        "name": "CSMM_DL_URL",
        "label": "CSMM_DL_URL",
        "default": "https://github.com/CatalysmsServerManager/7-days-to-die-server-manager/archive/master.zip"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "STEAM_API_KEY",
        "label": "STEAM_API_KEY",
        "default": ""
      },
      {
        "name": "CLIENTSECRET",
        "label": "CLIENTSECRET",
        "default": ""
      },
      {
        "name": "CLIENTID",
        "label": "CLIENTID",
        "default": ""
      },
      {
        "name": "FORCE_UPDATE",
        "label": "FORCE_UPDATE",
        "default": ""
      },
      {
        "name": "CSMM_LOGLEVEL",
        "label": "CSMM_LOGLEVEL",
        "default": "info"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "HOSTNAME",
        "label": "HOSTNAME",
        "default": ""
      },
      {
        "name": "BOTTOKEN",
        "label": "BOTTOKEN",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "CSSource",
    "description": "This Docker will download and install SteamCMD. It will also install Counter-Strike: Source and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Counter-Strike: Source and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/css.png",
    "name": "CSSource",
    "image": "ich777/steamcmd",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/cstrikesource"
      }
    ],
    "env": [
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "cstrike"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-secure +maxplayers 32 +map de_dust2"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "232330"
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "CStrike1.6",
    "description": "This Docker will download and install SteamCMD. It will also install Counter-Strike 1.6 and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Counter-Strike 1.6 and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/cs1.6.png",
    "name": "CStrike1.6",
    "image": "ich777/steamcmd:cstrike1.6",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/cstrike1.6"
      }
    ],
    "env": [
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "90"
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "cstrike"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+maxplayers 32 +map de_dust"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "GAME_MOD",
        "label": "GAME_MOD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "CStrikeConditionZero",
    "description": "This Docker will download and install SteamCMD. It will also install Counter-Strike Condition Zero and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Counter-Strike Condition Zero and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/cstrikeczero.png",
    "name": "CStrikeConditionZero",
    "image": "ich777/steamcmd:cstrikeczero",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/cstrikeczero"
      }
    ],
    "env": [
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "czero"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-secure +maxplayers 32 +map as_oilrig"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "90 +app_set_config '90 mod dmc'"
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_MOD",
        "label": "GAME_MOD",
        "default": "90 mod czero"
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Dawn-of-Light-Server",
    "description": "This Docker will download and install Dawn of Light Server and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u dol -ti NAMEOFYOURCONTAINER screen -xS DoL' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install Dawn of Light Server and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u dol -ti NAMEOFYOURCONTAINER screen -xS DoL' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/DoL.png",
    "name": "Dawn-of-Light-Server",
    "image": "ich777/dawn-of-light-server",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "10300": "10300:10300/tcp",
        "10400": "10400:10400/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/dol",
        "bind": "/mnt/cache/appdata/dawn-of-light"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "DayOfDefeat-Classic",
    "description": "This Docker will download and install SteamCMD. It will also install Day of Defeat Classic and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Day of Defeat Classic and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/dodclassic.png",
    "name": "DayOfDefeat-Classic",
    "image": "ich777/steamcmd:dodclassic",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/dodclassic"
      }
    ],
    "env": [
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "90 +app_set_config '90 mod dod'"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "dod"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+map dod_avalanche +maxplayer 24"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "GAME_MOD",
        "label": "GAME_MOD",
        "default": "90 mod dod"
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "DayOfDefeatSource",
    "description": "This Docker will download and install SteamCMD. It will also install Day of Defeat: Source and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nPASSWORD: The initial password is 'Docker', if you want to change or delete the password edit the file 'server.cfg'.\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Day of Defeat: Source and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nPASSWORD: The initial password is 'Docker', if you want to change or delete the password edit the file 'server.cfg'.\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/dods.png",
    "name": "DayOfDefeatSource",
    "image": "ich777/steamcmd:dods",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/dods"
      }
    ],
    "env": [
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "232290"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "dod"
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-secure +maxplayers 24 +map dod_kalt"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "DayOfInfamy",
    "description": "This Docker will download and install SteamCMD. It will also install Day Of Infamy and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Day Of Infamy and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/dayofinfamy.png",
    "name": "DayOfInfamy",
    "image": "ich777/steamcmd:dayofinfamy",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/dayofinfamy"
      }
    ],
    "env": [
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "462310"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+map sicily +mp_gamemode frontline"
      }
    ]
  },
  {
    "type": 1,
    "title": "DaysOfWar",
    "description": "This Docker will download and install SteamCMD. It will also install Days of War and run it.\r\n\r\nServername: 'Docker Days-of-War' Password: 'Docker' rconPassword: 'adminDocker'\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Days of War and run it.\r\n\r\nServername: 'Docker Days-of-War' Password: 'Docker' rconPassword: 'adminDocker'\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/daysofwar.png",
    "name": "DaysOfWar",
    "image": "ich777/steamcmd:daysofwar",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp",
        "7777": "7777:7777/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/daysofwar/"
      }
    ],
    "env": [
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "541790"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "QUERY_PORT",
        "label": "QUERY_PORT",
        "default": "27015"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "dow_cathedral"
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "7777"
      }
    ]
  },
  {
    "type": 1,
    "title": "DebianBuster",
    "description": "This Container is a full Debian Buster Xfce4 Desktop environment with a noVNC webGUI and all the basic tools pre-installed.\r\n\r\nROOT ACCESS: 1. Open up your WebGUI 2. Open up a terminal 3. Type in 'su' 4. Type in your password that you've set (no screenoutput is shown if you type in passwords in Linux) 5. Press Enter 6. You should now be root.\r\n\r\nIf you want to install some other application you can do that by creating a user.sh and mounting it to the container to /opt/scripts/user.sh (a standard bash script should do the trick).\r\n\r\nYou also can reverse proxy this container with nginx or apache (for more info see the Github/Dockerhub page).\r\n\r\nStorage Note: All things that are saved in the container should be in the home or a subdirectory in your homefolder, all files that are store outside your homefolder are not persistant and will be wiped if there is an update of the container or you change something in the template.\r\n\r\nATTENTION: This container is not finished yet and currently in alpha state.",
    "categories": [
      "Productivity:",
      "Tools:System",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "This Container is a full Debian Buster Xfce4 Desktop environment with a noVNC webGUI and all the basic tools pre-installed.\r\n\r\nROOT ACCESS: 1. Open up your WebGUI 2. Open up a terminal 3. Type in 'su' 4. Type in your password that you've set (no screenoutput is shown if you type in passwords in Linux) 5. Press Enter 6. You should now be root.\r\n\r\nIf you want to install some other application you can do that by creating a user.sh and mounting it to the container to /opt/scripts/user.sh (a standard bash script should do the trick).\r\n\r\nYou also can reverse proxy this container with nginx or apache (for more info see the Github/Dockerhub page).\r\n\r\nStorage Note: All things that are saved in the container should be in the home or a subdirectory in your homefolder, all files that are store outside your homefolder are not persistant and will be wiped if there is an update of the container or you change something in the template.\r\n\r\nATTENTION: This container is not finished yet and currently in alpha state.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/debianbuster.png",
    "name": "DebianBuster",
    "image": "ich777/debian-buster",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/debian",
        "bind": "/mnt/cache/appdata/debian-buster"
      }
    ],
    "env": [
      {
        "name": "ROOT_PWD",
        "label": "ROOT_PWD",
        "default": ""
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "CUSTOM_RES_W",
        "label": "CUSTOM_RES_W",
        "default": "1800"
      },
      {
        "name": "CUSTOM_RES_H",
        "label": "CUSTOM_RES_H",
        "default": "1000"
      },
      {
        "name": "USER_LOCALES",
        "label": "USER_LOCALES",
        "default": "en_US.UTF8 UTF-8"
      },
      {
        "name": "DEV",
        "label": "DEV",
        "default": "true"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "DebianBuster-Nvidia",
    "description": "This Container is a full Debian Buster Xfce4 Desktop environment with Nvidia Drivers installed also it has a noVNC webGUI and all the basic tools pre-installed.\r\n\r\nI mainly created it for playing Steam games with In Home Streaming to my Raspberry Pi, an older laptop and my mobile phone (please not that In Home Streaming also works over the internet).\r\nAll games including windows games through Proton should just works fine, a few tested games where: Pikuniku, Dirt Rally, Broforce, Astroneer, CS: Source.\r\n\r\nROOT ACCESS: 1. Open up your WebGUI 2. Open up a terminal 3. Type in 'su' 4. Type in your password that you've set (no screenoutput is shown if you type in passwords in Linux) 5. Press Enter 6. You should now be root.\r\n\r\nATTENTION: This container needs the Linuxserver.io Plugin installed correctly, please be sure that you dont't use the primary graphics card that is set in the BIOS with this contianer! If you have a monitor attached please leave the variable: 'Xorg Dsplay Output Port' empty!!!\r\n\r\nIf you want to install some other application you can do that by creating a user.sh and mounting it to the container to /opt/scripts/user.sh (a standard bash script should do the trick).\r\n\r\nStorage Note: All things that are saved in the container should be in the home or a subdirectory in your homefolder, all files that are store outside your homefolder are not persistant and will be wiped if there is an update of the container or you change something in the template.\r\nYou can also mount any directory from your server to /mnt/... (I recommend you to do this if you got a big Steam Library and save everything there).\r\n\r\nCONTROLLER: Note that the controller works in Big Picture mode but will not work in the games since Unraid doesn't have the kernel modules 'joydev' and 'uinput' loaded/available. If you want to use the controller please map the buttons to key inputs and everything works just fine.\r\n\r\nNETWORK MODE: If you want to use the container as a Steam In Home Streaming host device you should set the network type to bridge and assign it it's own IP, if you don't do this the traffic will be routed through the internet since Steam thinks you are on a different network.\r\n\r\nATTENTION: This container is not finished yet and currently in alpha state.\r\n\r\nIf you got any questions, suggestions for improvements or can help with the password issue above please feel free to open an issue on my Github or write a forum post.",
    "categories": [
      "Productivity:",
      "Tools:System",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "This Container is a full Debian Buster Xfce4 Desktop environment with Nvidia Drivers installed also it has a noVNC webGUI and all the basic tools pre-installed.\r\n\r\nI mainly created it for playing Steam games with In Home Streaming to my Raspberry Pi, an older laptop and my mobile phone (please not that In Home Streaming also works over the internet).\r\nAll games including windows games through Proton should just works fine, a few tested games where: Pikuniku, Dirt Rally, Broforce, Astroneer, CS: Source.\r\n\r\nROOT ACCESS: 1. Open up your WebGUI 2. Open up a terminal 3. Type in 'su' 4. Type in your password that you've set (no screenoutput is shown if you type in passwords in Linux) 5. Press Enter 6. You should now be root.\r\n\r\nATTENTION: This container needs the Linuxserver.io Plugin installed correctly, please be sure that you dont't use the primary graphics card that is set in the BIOS with this contianer! If you have a monitor attached please leave the variable: 'Xorg Dsplay Output Port' empty!!!\r\n\r\nIf you want to install some other application you can do that by creating a user.sh and mounting it to the container to /opt/scripts/user.sh (a standard bash script should do the trick).\r\n\r\nStorage Note: All things that are saved in the container should be in the home or a subdirectory in your homefolder, all files that are store outside your homefolder are not persistant and will be wiped if there is an update of the container or you change something in the template.\r\nYou can also mount any directory from your server to /mnt/... (I recommend you to do this if you got a big Steam Library and save everything there).\r\n\r\nCONTROLLER: Note that the controller works in Big Picture mode but will not work in the games since Unraid doesn't have the kernel modules 'joydev' and 'uinput' loaded/available. If you want to use the controller please map the buttons to key inputs and everything works just fine.\r\n\r\nNETWORK MODE: If you want to use the container as a Steam In Home Streaming host device you should set the network type to bridge and assign it it's own IP, if you don't do this the traffic will be routed through the internet since Steam thinks you are on a different network.\r\n\r\nATTENTION: This container is not finished yet and currently in alpha state.\r\n\r\nIf you got any questions, suggestions for improvements or can help with the password issue above please feel free to open an issue on my Github or write a forum post.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/debian-nvidia.png",
    "name": "DebianBuster-Nvidia",
    "image": "ich777/debian-buster:nvidia-steam",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/debian",
        "bind": "/mnt/cache/appdata/debian-buster-nvidia"
      }
    ],
    "env": [
      {
        "name": "DFP_NR",
        "label": "DFP_NR",
        "default": "1"
      },
      {
        "name": "USER_LOCALES",
        "label": "USER_LOCALES",
        "default": "en_US.UTF-8 UTF-8"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "NVIDIA_DRIVER_CAPABILITIES",
        "label": "NVIDIA_DRIVER_CAPABILITIES",
        "default": "all"
      },
      {
        "name": "ENABLE_VNC_SRV",
        "label": "ENABLE_VNC_SRV",
        "default": "true"
      },
      {
        "name": "V_TERM_NR",
        "label": "V_TERM_NR",
        "default": "1"
      },
      {
        "name": "DISPLAY",
        "label": "DISPLAY",
        "default": ":0"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "ROOT_PWD",
        "label": "ROOT_PWD",
        "default": ""
      },
      {
        "name": "NV_DRV_V",
        "label": "NV_DRV_V",
        "default": ""
      },
      {
        "name": "PCI_ADDR",
        "label": "PCI_ADDR",
        "default": ""
      },
      {
        "name": "NVIDIA_BUILD_OPTS",
        "label": "NVIDIA_BUILD_OPTS",
        "default": "-a -N -q --install-libglvnd --ui=none --no-kernel-module"
      },
      {
        "name": "NVIDIA_VISIBLE_DEVICES",
        "label": "NVIDIA_VISIBLE_DEVICES",
        "default": ""
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      }
    ]
  },
  {
    "type": 1,
    "title": "DirSyncPro",
    "description": "This Docker will download and install the Runtime and also DirSyncPro with optional encryption by CryFS.\r\nYou can sync your files to another offsite SMB (is removed in the latest version, please use Unassigned Devices Plugin in Unraid and mount the share with the 'local' option), FTP or WebDAV share also don't forget to specify a path where your source files are.\r\nYou can also use this tool to duplicate your files on the server to another directory.\r\nENCRYPTION: If you want to use encryption by CryFS you can enable it in the variables below and the mounted folder will be automaticaly encrypted (smb: '/mnt/smb' - ftp: '/mnt/ftp' - webdav: '/mnt/webdav' - local: if you set the type to 'local' you must set the container mountpoint to: '/mnt/local'). Please also note if you set up a encrypted share for the first time the destination folder should be empty since CryFS will create a folder with the basic information for the encryption and all the split files (don't delete any folder since it can corrupt files). The docker will automaticaly create a directory named 'cryfs' in the main directory of DirSyncPro, please copy the 'cryfs.cfg' to a save place since you will need this file and your selected password for CryFS to decrypt the files.\r\nRestoring of encrypted files on another computer/server with this Docker: start the container once with CryFS enabled but set no password, the container will start and create the 'cryfs' directory, stop the container copy your cryfs.cfg in the 'cryfs' folder edit the Docker and set the apropriate password and blocksize for the cryfs.cfg and restart the Docker. Now you can sync from/or to your encrypted share again.\r\n\r\nAlso there is a commandline mode without the GUI if you configured all right under the 'Show more settings' section, please be sure that you put your config file in the main directory of the Docker and specify it.",
    "categories": [
      "Backup:",
      "Network:Other",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "This Docker will download and install the Runtime and also DirSyncPro with optional encryption by CryFS.\r\nYou can sync your files to another offsite SMB (is removed in the latest version, please use Unassigned Devices Plugin in Unraid and mount the share with the 'local' option), FTP or WebDAV share also don't forget to specify a path where your source files are.\r\nYou can also use this tool to duplicate your files on the server to another directory.\r\nENCRYPTION: If you want to use encryption by CryFS you can enable it in the variables below and the mounted folder will be automaticaly encrypted (smb: '/mnt/smb' - ftp: '/mnt/ftp' - webdav: '/mnt/webdav' - local: if you set the type to 'local' you must set the container mountpoint to: '/mnt/local'). Please also note if you set up a encrypted share for the first time the destination folder should be empty since CryFS will create a folder with the basic information for the encryption and all the split files (don't delete any folder since it can corrupt files). The docker will automaticaly create a directory named 'cryfs' in the main directory of DirSyncPro, please copy the 'cryfs.cfg' to a save place since you will need this file and your selected password for CryFS to decrypt the files.\r\nRestoring of encrypted files on another computer/server with this Docker: start the container once with CryFS enabled but set no password, the container will start and create the 'cryfs' directory, stop the container copy your cryfs.cfg in the 'cryfs' folder edit the Docker and set the apropriate password and blocksize for the cryfs.cfg and restart the Docker. Now you can sync from/or to your encrypted share again.\r\n\r\nAlso there is a commandline mode without the GUI if you configured all right under the 'Show more settings' section, please be sure that you put your config file in the main directory of the Docker and specify it.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/dirsyncpro.png",
    "name": "DirSyncPro",
    "image": "ich777/dirsyncpro",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/dirsyncpro",
        "bind": "/mnt/cache/appdata/dirsyncpro"
      },
      {
        "container": "/mnt/sourcefiles",
        "bind": "/"
      }
    ],
    "env": [
      {
        "name": "CRYFS_PWD",
        "label": "CRYFS_PWD",
        "default": ""
      },
      {
        "name": "RUNTIME_NAME",
        "label": "RUNTIME_NAME",
        "default": "basicjre"
      },
      {
        "name": "CMD_FILE",
        "label": "CMD_FILE",
        "default": ""
      },
      {
        "name": "REMOTE_USER",
        "label": "REMOTE_USER",
        "default": ""
      },
      {
        "name": "CRYFS_BLOCKSIZE",
        "label": "CRYFS_BLOCKSIZE",
        "default": "262144"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "CMD_MODE",
        "label": "CMD_MODE",
        "default": ""
      },
      {
        "name": "REMOTE_TYPE",
        "label": "REMOTE_TYPE",
        "default": "local"
      },
      {
        "name": "REMOTE_DIR",
        "label": "REMOTE_DIR",
        "default": ""
      },
      {
        "name": "REMOTE_PWD",
        "label": "REMOTE_PWD",
        "default": ""
      },
      {
        "name": "CRYFS",
        "label": "CRYFS",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "DL_URL",
        "label": "DL_URL",
        "default": "https://sourceforge.net/projects/directorysync/files/DirSync Pro (stable)/1.53/DirSyncPro-1.53-Linux.tar.gz"
      },
      {
        "name": "CRYFS_EXTRA_PARAMETERS",
        "label": "CRYFS_EXTRA_PARAMETERS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "DMClassic",
    "description": "This Docker will download and install SteamCMD. It will also install Deatmatch Classic and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Deatmatch Classic and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/dmclassic.png",
    "name": "DMClassic",
    "image": "ich777/steamcmd:dmclassic",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/dmclassic"
      }
    ],
    "env": [
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "dmc"
      },
      {
        "name": "GAME_MOD",
        "label": "GAME_MOD",
        "default": "90 mod dmc"
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "90 +app_set_config '90 mod dmc'"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-secure +maxplayers 32 +map dmc_dm3.bsp"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "DoH-Client",
    "description": "This Container will create a DNS Server wich connects by default to Goole's \u0026amp; DNS.SB's DoH resolver with ECS disabled (you can change that simply by editing the 'doh-client.conf' in your root directory of the container)\r\n\r\nYou easily can now hide your DNS querys from your ISP with this docker for your whole internal network, you can use it in combination with DoH-Server to protect even your mobile devices and encrypt all your querys.\r\n\r\nYou can also use this infront of your PiHole to also block Ad's and with DoH-Server to secure your mobile devices.\r\n\r\nIf you got any questions please post it in the support thread on the Unraid forums.\r\n\r\nI strongly recommend you to run the container in custom mode and give it a static IP address so that you expose all ports from the container and to avoid any network problems.\r\n\r\nUpdate Notice: If you want to upgrade to a newer version of the DoH-Server just enter the preferred version number (eg. '2.1.2' without quotes, get them from here: https://github.com/m13253/dns-over-https/releases or set to 'latest' without quotes to check on each container start if there is a new version available)\r\n\r\nThe Docker needs to be run in bridge mode and a Fixed IP address.\r\n\r\nThis Docker is based on the DoH Client component from: https://github.com/m13253/dns-over-https",
    "categories": [
      "Network:Other"
    ],
    "platform": "linux",
    "note": "This Container will create a DNS Server wich connects by default to Goole's \u0026amp; DNS.SB's DoH resolver with ECS disabled (you can change that simply by editing the 'doh-client.conf' in your root directory of the container)\r\n\r\nYou easily can now hide your DNS querys from your ISP with this docker for your whole internal network, you can use it in combination with DoH-Server to protect even your mobile devices and encrypt all your querys.\r\n\r\nYou can also use this infront of your PiHole to also block Ad's and with DoH-Server to secure your mobile devices.\r\n\r\nIf you got any questions please post it in the support thread on the Unraid forums.\r\n\r\nI strongly recommend you to run the container in custom mode and give it a static IP address so that you expose all ports from the container and to avoid any network problems.\r\n\r\nUpdate Notice: If you want to upgrade to a newer version of the DoH-Server just enter the preferred version number (eg. '2.1.2' without quotes, get them from here: https://github.com/m13253/dns-over-https/releases or set to 'latest' without quotes to check on each container start if there is a new version available)\r\n\r\nThe Docker needs to be run in bridge mode and a Fixed IP address.\r\n\r\nThis Docker is based on the DoH Client component from: https://github.com/m13253/dns-over-https",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/DoH-Client.png",
    "name": "DoH-Client",
    "image": "ich777/doh-client",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "53": "53:53/udp"
      }
    ],
    "volumes": [
      {
        "container": "/DoH",
        "bind": "/mnt/cache/appdata/doh-client"
      }
    ],
    "env": [
      {
        "name": "DoH_V",
        "label": "DoH_V",
        "default": "latest"
      },
      {
        "name": "GO_DL_URL",
        "label": "GO_DL_URL",
        "default": "https://dl.google.com/go/go1.13.1.linux-amd64.tar.gz"
      }
    ]
  },
  {
    "type": 1,
    "title": "DoH-Server",
    "description": "This is a simple DoH Server for Unraid.\r\n\r\nYou easily can hide your DNS querys from your ISP with this docker on Firefox or Chrome and even on Android with the Intra App (by default it is set to use the Cloudflare and Google DNS servers).\r\n\r\nAs a special bonus you can hide all Ad's on your Android Device on the go without the need of a VPN (for Android Devices only the Intra app is needed https://getintra.org/)! Very usefull if you have kids and they should not visit certain sites or if you simply don't like Ad's on your Android Device.\r\n\r\nAll you need is a PiHole, a Webserver with an SSL Certificate \u0026amp; this Docker (i highly recommend you for the PiHole Docker: https://hub.docker.com/r/pihole/pihole | for the Webserver: https://hub.docker.com/r/linuxserver/letsencrypt both Dockers are available in the CA Applications).\r\nA detailed guide is available on my github page for this project: https://github.com/ich777/docker-DoH\r\n\r\nIf you got any questions please poste it in the support thread on the Unraid forums.\r\n\r\nI strongly recommend you to run the container in custom mode and give it a static IP address so that you expose all ports from the container and to avoid any network problems.\r\n\r\nUpdate Notice: If you want to upgrade to a newer version of the DoH-Server just enter the preferred version number (eg. '2.1.2' without quotes, get them from here: https://github.com/m13253/dns-over-https/releases or set to 'latest' without quotes to check on each container start if there is a new version available)\r\n\r\nThe Docker runns by default on port: 8053 and handels querys in the directory /dns-query (eg: http://192.168.1.7:8053/dns-query)\r\n\r\nThis Docker is based on the DoH Server component from: https://github.com/m13253/dns-over-https",
    "categories": [
      "Network:Other"
    ],
    "platform": "linux",
    "note": "This is a simple DoH Server for Unraid.\r\n\r\nYou easily can hide your DNS querys from your ISP with this docker on Firefox or Chrome and even on Android with the Intra App (by default it is set to use the Cloudflare and Google DNS servers).\r\n\r\nAs a special bonus you can hide all Ad's on your Android Device on the go without the need of a VPN (for Android Devices only the Intra app is needed https://getintra.org/)! Very usefull if you have kids and they should not visit certain sites or if you simply don't like Ad's on your Android Device.\r\n\r\nAll you need is a PiHole, a Webserver with an SSL Certificate \u0026amp; this Docker (i highly recommend you for the PiHole Docker: https://hub.docker.com/r/pihole/pihole | for the Webserver: https://hub.docker.com/r/linuxserver/letsencrypt both Dockers are available in the CA Applications).\r\nA detailed guide is available on my github page for this project: https://github.com/ich777/docker-DoH\r\n\r\nIf you got any questions please poste it in the support thread on the Unraid forums.\r\n\r\nI strongly recommend you to run the container in custom mode and give it a static IP address so that you expose all ports from the container and to avoid any network problems.\r\n\r\nUpdate Notice: If you want to upgrade to a newer version of the DoH-Server just enter the preferred version number (eg. '2.1.2' without quotes, get them from here: https://github.com/m13253/dns-over-https/releases or set to 'latest' without quotes to check on each container start if there is a new version available)\r\n\r\nThe Docker runns by default on port: 8053 and handels querys in the directory /dns-query (eg: http://192.168.1.7:8053/dns-query)\r\n\r\nThis Docker is based on the DoH Server component from: https://github.com/m13253/dns-over-https",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/DoH.png",
    "name": "DoH-Server",
    "image": "ich777/doh-server",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/DoH",
        "bind": "/mnt/cache/appdata/doh-server"
      }
    ],
    "env": [
      {
        "name": "DoH_V",
        "label": "DoH_V",
        "default": "latest"
      },
      {
        "name": "GO_DL_URL",
        "label": "GO_DL_URL",
        "default": "https://dl.google.com/go/go1.13.1.linux-amd64.tar.gz"
      }
    ]
  },
  {
    "type": 1,
    "title": "DontStarveTogether",
    "description": "This Docker will download and install SteamCMD. It will also install Don't Starve Together and run it.\r\n\r\nATTENTION: After the first complete startup (you can see it in the log) copy your 'cluster_token.txt' in the 'token/Cluster_1' folder and restart the container.\r\nFirst Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Don't Starve Together and run it.\r\n\r\nATTENTION: After the first complete startup (you can see it in the log) copy your 'cluster_token.txt' in the 'token/Cluster_1' folder and restart the container.\r\nFirst Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/dontstarve.png",
    "name": "DontStarveTogether",
    "image": "ich777/steamcmd:dontstarve",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "10890": "10890:10890/udp",
        "27016": "27016:27016/udp",
        "8766": "8766:8766/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/.klei/DoNotStarveTogether",
        "bind": "/mnt/cache/appdata/dontstarve/token"
      },
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/dontstarve/serverfiles"
      }
    ],
    "env": [
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "CAVES",
        "label": "CAVES",
        "default": "true"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "343050"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "ECO",
    "description": "This Docker will download and install SteamCMD. It will also install ECO and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nPASSWORD: The initial password is 'Docker'.\r\n\r\nECO Management Window: You can connect to the ECO Management Window by going to: 'http://YOURSERVERIP:8080/vnc_auto.html' (without quotes - note that you must enable set 'Server Management' to 'true')\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install ECO and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nPASSWORD: The initial password is 'Docker'.\r\n\r\nECO Management Window: You can connect to the ECO Management Window by going to: 'http://YOURSERVERIP:8080/vnc_auto.html' (without quotes - note that you must enable set 'Server Management' to 'true')\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/eco.png",
    "name": "ECO",
    "image": "ich777/steamcmd:eco",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3000": "3000:3000/udp",
        "3001": "3001:3001/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/eco"
      }
    ],
    "env": [
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "739590"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      }
    ]
  },
  {
    "type": 1,
    "title": "Electrum",
    "description": "Electrum is a Bitcoin wallet focused on speed and simplicity, with low resource usage. It uses remote servers that handle the most complicated parts of the Bitcoin system, and it allows you to recover your wallet from a secret phrase.\r\n\r\nATTENTION: Please keep in mind that your wallet is stored in the created folder in your appdata directory/.electrum/wallets/YOURWALLETNAME - I strongly recommend you to backup this file on a regular basis!\r\n\r\nIMPORT: If you are already using Electrum you can import your existing wallet by placing the WALLETFILE in the appdata directory for electrum/.electrum/wallets and then choose to use a existing wallet.",
    "categories": [
      "Network:Other",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Electrum is a Bitcoin wallet focused on speed and simplicity, with low resource usage. It uses remote servers that handle the most complicated parts of the Bitcoin system, and it allows you to recover your wallet from a secret phrase.\r\n\r\nATTENTION: Please keep in mind that your wallet is stored in the created folder in your appdata directory/.electrum/wallets/YOURWALLETNAME - I strongly recommend you to backup this file on a regular basis!\r\n\r\nIMPORT: If you are already using Electrum you can import your existing wallet by placing the WALLETFILE in the appdata directory for electrum/.electrum/wallets and then choose to use a existing wallet.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/electrum.png",
    "name": "Electrum",
    "image": "ich777/electrum",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/electrum",
        "bind": "/mnt/cache/appdata/electrum"
      }
    ],
    "env": [
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      },
      {
        "name": "CUSTOM_RES_W",
        "label": "CUSTOM_RES_W",
        "default": "1024"
      },
      {
        "name": "CUSTOM_RES_H",
        "label": "CUSTOM_RES_H",
        "default": "768"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      }
    ]
  },
  {
    "type": 1,
    "title": "ENiGMA-BBS",
    "description": "This Docker will download and install ENiGMA½ BBS.\r\nIt will only install the basic functions from ENiGMA½ BBS but you can also extend the container with your own Door BBS.\r\n\r\nADMIN: The first logon user will become the sysadmin!\r\n\r\nManual Page: https://nuskooler.github.io/enigma-bbs/",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install ENiGMA½ BBS.\r\nIt will only install the basic functions from ENiGMA½ BBS but you can also extend the container with your own Door BBS.\r\n\r\nADMIN: The first logon user will become the sysadmin!\r\n\r\nManual Page: https://nuskooler.github.io/enigma-bbs/",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/enigma1-2bbs.png",
    "name": "ENiGMA-BBS",
    "image": "ich777/enigma-1-2-bbs",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8888": "8888:8888/tcp",
        "8889": "8889:8889/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/enigma-bbs",
        "bind": "/mnt/cache/appdata/enigmabbs"
      }
    ],
    "env": [
      {
        "name": "NVM_URI",
        "label": "NVM_URI",
        "default": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh"
      },
      {
        "name": "ENIGMABBS_F_U",
        "label": "ENIGMABBS_F_U",
        "default": ""
      },
      {
        "name": "NVM_F_U",
        "label": "NVM_F_U",
        "default": ""
      },
      {
        "name": "NVM_V",
        "label": "NVM_V",
        "default": "10"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "ENIGMABBS_DL_URL",
        "label": "ENIGMABBS_DL_URL",
        "default": "https://github.com/NuSkooler/enigma-bbs.git"
      }
    ]
  },
  {
    "type": 1,
    "title": "Enpass",
    "description": "Enpass is a cross-platform password management app to securely store passwords and other credentials in a virtual vault locked with a master password.\r\n\r\nUnlike most other popular password managers, Enpass is an offline password manager. The app does not store user data on its servers, but locally on their own devices, encrypted. Users can choose to synchronize their data between different devices using their own preferred cloud storage service like Google Drive, Box, Dropbox, OneDrive, iCloud, and WebDAV.",
    "categories": [
      "Network:Other",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Enpass is a cross-platform password management app to securely store passwords and other credentials in a virtual vault locked with a master password.\r\n\r\nUnlike most other popular password managers, Enpass is an offline password manager. The app does not store user data on its servers, but locally on their own devices, encrypted. Users can choose to synchronize their data between different devices using their own preferred cloud storage service like Google Drive, Box, Dropbox, OneDrive, iCloud, and WebDAV.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/enpass.png",
    "name": "Enpass",
    "image": "ich777/enpass",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/enpass",
        "bind": "/mnt/cache/appdata/enpass"
      }
    ],
    "env": [
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      },
      {
        "name": "CUSTOM_RES_W",
        "label": "CUSTOM_RES_W",
        "default": "1024"
      },
      {
        "name": "CUSTOM_RES_H",
        "label": "CUSTOM_RES_H",
        "default": "768"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Factorio",
    "description": "This Docker Container will download the latest stable release of the game, generate the map and you're ready to play.\r\n\r\nIf you want to play the latest beta release of the game change the repository to \"factoriotools/factorio:latest\" in Advanced View.\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\n\r\nThe Docker Container is originaly created by dtandersen and now moved to factoriotools.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker Container will download the latest stable release of the game, generate the map and you're ready to play.\r\n\r\nIf you want to play the latest beta release of the game change the repository to \"factoriotools/factorio:latest\" in Advanced View.\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\n\r\nThe Docker Container is originaly created by dtandersen and now moved to factoriotools.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/factorio.png",
    "name": "Factorio",
    "image": "factoriotools/factorio:stable",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "34197": "34197:34197/udp"
      }
    ],
    "volumes": [
      {
        "container": "/factorio",
        "bind": "/mnt/cache/appdata/factorio/"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Ferdi-Client",
    "description": "Ferdi is a destkop app that helps you organize how you use your favourite apps by combining them into one application. It is based on Franz - a software already used by thousands of people - with the difference that Ferdi gives you many additional features and doesn't restrict its usage! Ferdi is compatible with your existing Franz account so you can continue right where you left off.\r\n\r\nUPDATE: The container will check on every start/restart if there is a newer version available.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Ferdi is a destkop app that helps you organize how you use your favourite apps by combining them into one application. It is based on Franz - a software already used by thousands of people - with the difference that Ferdi gives you many additional features and doesn't restrict its usage! Ferdi is compatible with your existing Franz account so you can continue right where you left off.\r\n\r\nUPDATE: The container will check on every start/restart if there is a newer version available.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/ferdi.png",
    "name": "Ferdi-Client",
    "image": "ich777/ferdi-client",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/ferdi",
        "bind": "/mnt/cache/appdata/ferdi-client/"
      }
    ],
    "env": [
      {
        "name": "CUSTOM_RES_H",
        "label": "CUSTOM_RES_H",
        "default": "768"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "CUSTOM_RES_W",
        "label": "CUSTOM_RES_W",
        "default": "1280"
      }
    ]
  },
  {
    "type": 1,
    "title": "Firefox",
    "description": "This container will download and install Firefox in the preferred version and language.\r\n\r\nUPDATE: The container will check on every restart if there is a newer version available.\r\n\r\nATTENTION: If you want to change the language, you have to delete every file in the 'firefox' directory except the 'profile' folder.\r\n\r\nRESOLUTION: You can also change the resolution from the WebGUI, to do that simply click on 'Show more settings...' (on a resolution change it can occour that the screen is not filled entirely with the Firefox window, simply restart the container and it will be fullscreen again).",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "This container will download and install Firefox in the preferred version and language.\r\n\r\nUPDATE: The container will check on every restart if there is a newer version available.\r\n\r\nATTENTION: If you want to change the language, you have to delete every file in the 'firefox' directory except the 'profile' folder.\r\n\r\nRESOLUTION: You can also change the resolution from the WebGUI, to do that simply click on 'Show more settings...' (on a resolution change it can occour that the screen is not filled entirely with the Firefox window, simply restart the container and it will be fullscreen again).",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/firefox.png",
    "name": "Firefox",
    "image": "ich777/firefox",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/firefox",
        "bind": "/mnt/cache/appdata/firefox/"
      }
    ],
    "env": [
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "FIREFOX_V",
        "label": "FIREFOX_V",
        "default": "latest"
      },
      {
        "name": "FIREFOX_LANG",
        "label": "FIREFOX_LANG",
        "default": "en-US"
      },
      {
        "name": "CUSTOM_RES_W",
        "label": "CUSTOM_RES_W",
        "default": "1280"
      },
      {
        "name": "CUSTOM_RES_H",
        "label": "CUSTOM_RES_H",
        "default": "768"
      },
      {
        "name": "EXTRA_PARAMETERS",
        "label": "EXTRA_PARAMETERS",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "FistfulOfFrags",
    "description": "This Docker will download and install SteamCMD. It will also install Fistful of Frags and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Fistful of Frags and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/fistfuloffrags.png",
    "name": "FistfulOfFrags",
    "image": "ich777/steamcmd:fistfuloffrags",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/fistfuloffrags"
      }
    ],
    "env": [
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "fof"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "295230"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+maxplayers 20 +map fof_fistful"
      }
    ]
  },
  {
    "type": 1,
    "title": "FiveM",
    "description": "With this Docker you can run FiveM (GTA V MOD SERVER) it will automatically download the latest version or if you want to updated it yourself set the ‘Manual Updates’ (in the 'Show more settings' tab down below) to ‘true’ (without quotes). The Docker will automatically extract it and download all other required files (resources, server.cfg). You can get fx.tar.xz from here: https://runtime.fivem.net/artifacts/fivem/build_proot_linux/master/ To run this container you must provide a valid Server Key (you can get them from here: https://keymaster.fivem.net/) and your prefered Server Name.\r\n\r\nUpdate Notice: Simply restart the container and it will download the newest version or if you set ‘Manual Updates’ to ‘true’ place the new fx.tar.xz in the main directory and restart the container.\r\n\r\nConsole: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS FiveM' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "With this Docker you can run FiveM (GTA V MOD SERVER) it will automatically download the latest version or if you want to updated it yourself set the ‘Manual Updates’ (in the 'Show more settings' tab down below) to ‘true’ (without quotes). The Docker will automatically extract it and download all other required files (resources, server.cfg). You can get fx.tar.xz from here: https://runtime.fivem.net/artifacts/fivem/build_proot_linux/master/ To run this container you must provide a valid Server Key (you can get them from here: https://keymaster.fivem.net/) and your prefered Server Name.\r\n\r\nUpdate Notice: Simply restart the container and it will download the newest version or if you set ‘Manual Updates’ to ‘true’ place the new fx.tar.xz in the main directory and restart the container.\r\n\r\nConsole: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS FiveM' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/fivem.png",
    "name": "FiveM",
    "image": "ich777/fivemserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "30110": "30110:30110/tcp",
        "30120": "30120:30120/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/fivem"
      }
    ],
    "env": [
      {
        "name": "START_VARS",
        "label": "START_VARS",
        "default": ""
      },
      {
        "name": "SRV_NAME",
        "label": "SRV_NAME",
        "default": ""
      },
      {
        "name": "SERVER_KEY",
        "label": "SERVER_KEY",
        "default": ""
      },
      {
        "name": "SRV_ADR",
        "label": "SRV_ADR",
        "default": "https://runtime.fivem.net/artifacts/fivem/build_proot_linux/master/"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "",
        "label": "",
        "default": ""
      },
      {
        "name": "GAME_CONFIG",
        "label": "GAME_CONFIG",
        "default": "server.cfg"
      }
    ]
  },
  {
    "type": 1,
    "title": "FlutterCoin-Wallet",
    "description": "FlutterCoin may be a coin with the tried and true algorithm of scrypt, but it's definitely anything but ordinary.\r\n\r\nThis is a community driven triple hybrid coin and the very first to offer a highly secure network through: Proof of Work (Mining), Proof of Stake (Investing), and it's own highly innovative Proof of Transaction (Using).\r\n\r\nATTENTION: Please keep in mind that your wallet is stored in the created folder in your appdata directory/.fluttercoin/wallet.dat - I strongly recommend you to backup this file on a regular basis!\r\n\r\nIMPORT: If you are already using FlutterCoin you can import your existing wallet by placing the 'wallet.dat' in the appdata directory for fluttercoin/.fluttercoin/wallet.dat (please let the container fully startup if you are using it for the first time and then shut it down before replacing the wallet.dat).\r\n\r\nUPDATED NOTICE: The container will check on every start/restart if there is a newer version available.",
    "categories": [
      "Network:Other",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "FlutterCoin may be a coin with the tried and true algorithm of scrypt, but it's definitely anything but ordinary.\r\n\r\nThis is a community driven triple hybrid coin and the very first to offer a highly secure network through: Proof of Work (Mining), Proof of Stake (Investing), and it's own highly innovative Proof of Transaction (Using).\r\n\r\nATTENTION: Please keep in mind that your wallet is stored in the created folder in your appdata directory/.fluttercoin/wallet.dat - I strongly recommend you to backup this file on a regular basis!\r\n\r\nIMPORT: If you are already using FlutterCoin you can import your existing wallet by placing the 'wallet.dat' in the appdata directory for fluttercoin/.fluttercoin/wallet.dat (please let the container fully startup if you are using it for the first time and then shut it down before replacing the wallet.dat).\r\n\r\nUPDATED NOTICE: The container will check on every start/restart if there is a newer version available.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/fluttercoin.png",
    "name": "FlutterCoin-Wallet",
    "image": "ich777/fluttercoin",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "7408": "7408:7408/tcp",
        "7474": "7474:7474/tcp",
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/fluttercoin",
        "bind": "/mnt/cache/appdata/fluttercoin"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      },
      {
        "name": "CUSTOM_RES_W",
        "label": "CUSTOM_RES_W",
        "default": "1024"
      },
      {
        "name": "EXTRA_PARAMS",
        "label": "EXTRA_PARAMS",
        "default": "-bind=0.0.0.0"
      },
      {
        "name": "CUSTOM_RES_H",
        "label": "CUSTOM_RES_H",
        "default": "768"
      }
    ]
  },
  {
    "type": 1,
    "title": "GarrysMod",
    "description": "This Docker will download and install SteamCMD. It will also install Garry's Mod and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Garry's Mod and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/garrysmod.png",
    "name": "GarrysMod",
    "image": "ich777/steamcmd:garrysmod",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/garrysmod"
      }
    ],
    "env": [
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "4020"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "garrysmod"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-secure +maxplayers 12 +map gm_flatgrass"
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "HalfLife2DeathMatch",
    "description": "This Docker will download and install SteamCMD. It will also install HalfLife2 DeathMatch and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nPASSWORD: The initial password is 'Docker', if you want to change or delete the password edit the file 'server.cfg'.\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install HalfLife2 DeathMatch and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nPASSWORD: The initial password is 'Docker', if you want to change or delete the password edit the file 'server.cfg'.\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/hl2dm.png",
    "name": "HalfLife2DeathMatch",
    "image": "ich777/steamcmd:hl2dm",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/hl2dm"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-secure +maxplayers 16 +map dm_overwatch"
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "232370"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "hl2mp"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Hurtworld",
    "description": "This Docker will download and install SteamCMD. It will also install Hurtworld and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Hurtworld and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/hurtworld.png",
    "name": "Hurtworld",
    "image": "ich777/steamcmd:hurtworld",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "12871": "12871:12871/udp",
        "12881": "12881:12881/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/hurtworld"
      }
    ],
    "env": [
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "405100"
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "SRV_MAXPLAYERS",
        "label": "SRV_MAXPLAYERS",
        "default": "50"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "QUERY_PORT",
        "label": "QUERY_PORT",
        "default": "12881"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ";autosaveenabled 1;addadmin 76561197963117432"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "SRV_NAME",
        "label": "SRV_NAME",
        "default": "Hurtworld Docker"
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "12871"
      }
    ]
  },
  {
    "type": 1,
    "title": "InspIRCd",
    "description": "InspIRCd is a modular Internet Relay Chat (IRC) server written in C++\r\n\r\nIt was created from scratch to be stable, modern and lightweight. It provides a tunable number of features through the use of an advanced but well documented module system. By keeping core functionality to a minimum we hope to increase the stability, security and speed of InspIRCd while also making it customisable to the needs of many different users.\r\n\r\nNOTE: If you want to change the hostname turn on 'Advanced View' and at the 'Extra-Parameters' change '--hostname=YOURPREFERREDHOSTNAME'\r\n\r\nThe container will create a TLS certificate at first start or if the certificate isn't found in the 'conf/' directory, after it is created you can import your own certificate.\r\n\r\nHASH CREATION NOTICE: Read the discription from the variable 'Operator Password Hash' how to create the hash from your password.",
    "categories": [
      "Network:Other",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "InspIRCd is a modular Internet Relay Chat (IRC) server written in C++\r\n\r\nIt was created from scratch to be stable, modern and lightweight. It provides a tunable number of features through the use of an advanced but well documented module system. By keeping core functionality to a minimum we hope to increase the stability, security and speed of InspIRCd while also making it customisable to the needs of many different users.\r\n\r\nNOTE: If you want to change the hostname turn on 'Advanced View' and at the 'Extra-Parameters' change '--hostname=YOURPREFERREDHOSTNAME'\r\n\r\nThe container will create a TLS certificate at first start or if the certificate isn't found in the 'conf/' directory, after it is created you can import your own certificate.\r\n\r\nHASH CREATION NOTICE: Read the discription from the variable 'Operator Password Hash' how to create the hash from your password.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/inspircd.png",
    "name": "InspIRCd",
    "image": "ich777/inspircd",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6667": "6667:6667/tcp",
        "6697": "6697:6697/tcp",
        "7000": "7000:7000/tcp",
        "7001": "7001:7001/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/inspircd",
        "bind": "/mnt/cache/appdata/inspircd"
      }
    ],
    "env": [
      {
        "name": "INSP_ADMIN_NAME",
        "label": "INSP_ADMIN_NAME",
        "default": "Jonny English"
      },
      {
        "name": "INSP_SERVICES_ALLOWMASK",
        "label": "INSP_SERVICES_ALLOWMASK",
        "default": ""
      },
      {
        "name": "INSP_SERVICES_TLS_ON",
        "label": "INSP_SERVICES_TLS_ON",
        "default": "no"
      },
      {
        "name": "INSP_ADMIN_NICK",
        "label": "INSP_ADMIN_NICK",
        "default": "MI5"
      },
      {
        "name": "INSP_TLS_UNIT",
        "label": "INSP_TLS_UNIT",
        "default": "Server Admins"
      },
      {
        "name": "INSP_SERVICES_IPADDR",
        "label": "INSP_SERVICES_IPADDR",
        "default": ""
      },
      {
        "name": "INSP_SERVICES_PASSWORD",
        "label": "INSP_SERVICES_PASSWORD",
        "default": ""
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "INSP_TLS_CN",
        "label": "INSP_TLS_CN",
        "default": "irc.example.com"
      },
      {
        "name": "INSP_TLS_STATE",
        "label": "INSP_TLS_STATE",
        "default": "Example State"
      },
      {
        "name": "INSP_TLS_COUNTRY",
        "label": "INSP_TLS_COUNTRY",
        "default": "XZ"
      },
      {
        "name": "INSP_OPER_HASH",
        "label": "INSP_OPER_HASH",
        "default": "hmac-sha256"
      },
      {
        "name": "INSP_SERVICES_HIDDEN",
        "label": "INSP_SERVICES_HIDDEN",
        "default": "no"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "INSP_NET_SUFFIX",
        "label": "INSP_NET_SUFFIX",
        "default": ".example.com"
      },
      {
        "name": "INSP_ENABLE_DNSBL",
        "label": "INSP_ENABLE_DNSBL",
        "default": "yes"
      },
      {
        "name": "INSP_CONNECT_HASH",
        "label": "INSP_CONNECT_HASH",
        "default": ""
      },
      {
        "name": "INSP_ADMIN_EMAIL",
        "label": "INSP_ADMIN_EMAIL",
        "default": "jonny.english@example.com"
      },
      {
        "name": "INSP_OPER_SSLONLY",
        "label": "INSP_OPER_SSLONLY",
        "default": "yes"
      },
      {
        "name": "INSP_TLS_ORG",
        "label": "INSP_TLS_ORG",
        "default": "Example IRC Network"
      },
      {
        "name": "INSP_TLS_LOC",
        "label": "INSP_TLS_LOC",
        "default": "Example City"
      },
      {
        "name": "INSP_TLS_DURATION",
        "label": "INSP_TLS_DURATION",
        "default": "365"
      },
      {
        "name": "INSP_CONNECT_PASSWORD",
        "label": "INSP_CONNECT_PASSWORD",
        "default": ""
      },
      {
        "name": "INSP_OPER_NAME",
        "label": "INSP_OPER_NAME",
        "default": "oper"
      },
      {
        "name": "INSP_OPER_PASSWORD_HASH",
        "label": "INSP_OPER_PASSWORD_HASH",
        "default": ""
      },
      {
        "name": "INSP_OPER_HOST",
        "label": "INSP_OPER_HOST",
        "default": "*@*"
      },
      {
        "name": "INSP_TLS_MAIL",
        "label": "INSP_TLS_MAIL",
        "default": "nomail@example.com"
      },
      {
        "name": "INSP_NET_NAME",
        "label": "INSP_NET_NAME",
        "default": "InspIRCD"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      }
    ]
  },
  {
    "type": 1,
    "title": "Insurgency",
    "description": "This Docker will download and install SteamCMD. It will also install Insurgency and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Insurgency and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/insurgency.png",
    "name": "Insurgency",
    "image": "ich777/steamcmd:insurgency",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/insurgency"
      }
    ],
    "env": [
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "237410"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+map market_coop +maxplayers 6"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "InsurgencySandstorm",
    "description": "This Docker will download and install SteamCMD. It will also install Insurgency Sandstorm and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nPASSWORD: The initial password is 'Docker', if you want to change or delete it look below at the section GAME_PARAMS.\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Insurgency Sandstorm and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nPASSWORD: The initial password is 'Docker', if you want to change or delete it look below at the section GAME_PARAMS.\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/insurgencysandstorm.png",
    "name": "InsurgencySandstorm",
    "image": "ich777/steamcmd:insurgencysandstorm",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27102": "27102:27102/udp",
        "27131": "27131:27131/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/insurgencysandstorm"
      },
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      }
    ],
    "env": [
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27102"
      },
      {
        "name": "QUERY_PORT",
        "label": "QUERY_PORT",
        "default": "27131"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "581330"
      },
      {
        "name": "SERVER_NAME",
        "label": "SERVER_NAME",
        "default": "DockerServer"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "Oilfield?Scenario=Scenario_Refinery_Push_Security?MaxPlayers=28?Password=Docker"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "IW4x-Server",
    "description": "This Docker will download and install a simple IW4x Server.\r\n\r\nATTENTION: You need to copy over the files from your CoD:MW2 folder to the server directory otherwise the server will not start.\r\n\r\nDOWNLOAD NOTICE: If a download fails or is not available you can simply put the .zip files in the server directory and the container will extract the files and start the server.\r\n\r\nWINE NOTICE: Since this container runs with WINE i can't garantee that it will not crash or other weird behavoir.",
    "categories": [
      "GameServers:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "This Docker will download and install a simple IW4x Server.\r\n\r\nATTENTION: You need to copy over the files from your CoD:MW2 folder to the server directory otherwise the server will not start.\r\n\r\nDOWNLOAD NOTICE: If a download fails or is not available you can simply put the .zip files in the server directory and the container will extract the files and start the server.\r\n\r\nWINE NOTICE: Since this container runs with WINE i can't garantee that it will not crash or other weird behavoir.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/iw4x.png",
    "name": "IW4x-Server",
    "image": "ich777/iw4x-server",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "28960": "28960:28960/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/iw4x",
        "bind": "/mnt/cache/appdata/iw4x"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+exec server.cfg +sv_maxclients 12 +set fs_game mods/bots +set playlistFilename playlists.info"
      },
      {
        "name": "FORCE_UPDATE",
        "label": "FORCE_UPDATE",
        "default": ""
      },
      {
        "name": "IW4X_DL_URL",
        "label": "IW4X_DL_URL",
        "default": "https://dss0.cc/updater/iw4x_files.zip"
      },
      {
        "name": "IW4X_DLC_URL",
        "label": "IW4X_DLC_URL",
        "default": "https://iw4x-my.sharepoint.com/:u:/g/personal/emosewaj_iw4x_onmicrosoft_com/EYnWYmCXExpEvn-bL2262Q0BSy0jVZF0FXslvpJEDPE5Fw?e=gPx8RF\u0026download=1"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "28960"
      }
    ]
  },
  {
    "type": 1,
    "title": "jDownloader2",
    "description": "This Docker will download and install jDownloader2.\r\n\r\nJDownloader 2 is a free, open-source download management tool with a huge community of developers that makes downloading as easy and fast as it should be. Users can start, stop or pause downloads, set bandwith limitations, auto-extract archives and much more...\r\n\r\nUpdate Notice: Updates will be handled through jDownloader2 directly, simply click the 'Check for Updates' in the WebGUI.",
    "categories": [
      "MediaApp:Photos",
      "Productivity:",
      "Tools:Utilities",
      "Backup:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install jDownloader2.\r\n\r\nJDownloader 2 is a free, open-source download management tool with a huge community of developers that makes downloading as easy and fast as it should be. Users can start, stop or pause downloads, set bandwith limitations, auto-extract archives and much more...\r\n\r\nUpdate Notice: Updates will be handled through jDownloader2 directly, simply click the 'Check for Updates' in the WebGUI.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/jdownloader.png",
    "name": "jDownloader2",
    "image": "ich777/jdownloader2",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/jDownloader2",
        "bind": "/mnt/cache/appdata/jdownloader2/"
      },
      {
        "container": "/mnt/jDownloader",
        "bind": "/mnt/user/jDownloader/"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "CUSTOM_RES_W",
        "label": "CUSTOM_RES_W",
        "default": "1024"
      },
      {
        "name": "CUSTOM_RES_H",
        "label": "CUSTOM_RES_H",
        "default": "768"
      }
    ]
  },
  {
    "type": 1,
    "title": "Jenkins",
    "description": "This container will download and install the preferred version of Jenkins and install it.\r\n\r\nUpdate Notice: If set to 'latest' the container will check on every startup if there is a newer version available).\r\n\r\nAll you data is stored in the jenkins/workdir folder in your appdata directory.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "This container will download and install the preferred version of Jenkins and install it.\r\n\r\nUpdate Notice: If set to 'latest' the container will check on every startup if there is a newer version available).\r\n\r\nAll you data is stored in the jenkins/workdir folder in your appdata directory.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/jenkins.png",
    "name": "Jenkins",
    "image": "ich777/jenkins",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/jenkins",
        "bind": "/mnt/cache/appdata/jenkins"
      }
    ],
    "env": [
      {
        "name": "JENKINS_V",
        "label": "JENKINS_V",
        "default": "latest"
      },
      {
        "name": "JENKINS_URL",
        "label": "JENKINS_URL",
        "default": "ftp://mirror.serverion.com"
      },
      {
        "name": "EXTRA_JENKINS_PARAMS",
        "label": "EXTRA_JENKINS_PARAMS",
        "default": ""
      },
      {
        "name": "EXTRA_JVM_PARAMS",
        "label": "EXTRA_JVM_PARAMS",
        "default": ""
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "uid",
        "label": "uid",
        "default": "99"
      },
      {
        "name": "gid",
        "label": "gid",
        "default": "100"
      },
      {
        "name": "RUNTIME_NAME",
        "label": "RUNTIME_NAME",
        "default": "basicjre"
      }
    ]
  },
  {
    "type": 1,
    "title": "jsdos",
    "description": "This Docker will download and install jsdos, you can now play your favourite DOS games in your browser!\r\n\r\nSimply place a zip file with your favourite DOS game in the root of the serverdirectory enter the variables in the template and play the game in your browser (By default it automatically installs CIV).\r\n\r\nThis all is powered by jsdos please also check out the website: https://js-dos.com/ and the GitHub page: https://github.com/caiiiycuk/js-dos\r\n\r\nATTENTION: !!!Only Install one game on one port otherwise your browser will mess up the saves and paths!!!",
    "categories": [
      "GameServers:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "This Docker will download and install jsdos, you can now play your favourite DOS games in your browser!\r\n\r\nSimply place a zip file with your favourite DOS game in the root of the serverdirectory enter the variables in the template and play the game in your browser (By default it automatically installs CIV).\r\n\r\nThis all is powered by jsdos please also check out the website: https://js-dos.com/ and the GitHub page: https://github.com/caiiiycuk/js-dos\r\n\r\nATTENTION: !!!Only Install one game on one port otherwise your browser will mess up the saves and paths!!!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/jsdos.png",
    "name": "jsdos",
    "image": "ich777/jsdos-server",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/jsdos",
        "bind": "/mnt/cache/appdata/jsdos"
      }
    ],
    "env": [
      {
        "name": "APP_NAME",
        "label": "APP_NAME",
        "default": "CivilisazionBI"
      },
      {
        "name": "ZIP_NAME",
        "label": "ZIP_NAME",
        "default": "civ"
      },
      {
        "name": "START_FILE",
        "label": "START_FILE",
        "default": "CIV.EXE"
      },
      {
        "name": "BGND_C",
        "label": "BGND_C",
        "default": "1f1f1f"
      },
      {
        "name": "FPS_C",
        "label": "FPS_C",
        "default": "true"
      },
      {
        "name": "DOSBOX_V",
        "label": "DOSBOX_V",
        "default": "wdosbox"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "KillingFloor",
    "description": "This Docker will download and install SteamCMD. It will also install Killing Floor and run it.\r\n\r\nTo run this container you must provide a valid Steam username and password since the game needs a valid account to download (NOTICE: You must disable Steam Guard otherwise this container will not work, Steam recommens to make a new Steam account for dedicated servers).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Killing Floor and run it.\r\n\r\nTo run this container you must provide a valid Steam username and password since the game needs a valid account to download (NOTICE: You must disable Steam Guard otherwise this container will not work, Steam recommens to make a new Steam account for dedicated servers).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/killingfloor.png",
    "name": "KillingFloor",
    "image": "ich777/steamcmd:killingfloor",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "20560": "20560:20560/udp",
        "28852": "28852:28852/tcp",
        "7707": "7707:7707/udp",
        "7708": "7708:7708/udp",
        "7717": "7717:7717/udp",
        "8075": "8075:8075/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/killingfloor"
      }
    ],
    "env": [
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "215360"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "KillingFloor2",
    "description": "This Docker will download and install SteamCMD. It will also install KillingFloor 2 and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install KillingFloor 2 and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/killingfloor2.png",
    "name": "KillingFloor2",
    "image": "ich777/steamcmd:killingfloor2",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "20560": "20560:20560/udp",
        "27015": "27015:27015/udp",
        "7777": "7777:7777/udp",
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/killingfloor2"
      }
    ],
    "env": [
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "232130"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "kf-bioticslab"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Left4Dead",
    "description": "This Docker will download and install SteamCMD. It will also install Left4Dead and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Left4Dead and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/l4d.png",
    "name": "Left4Dead",
    "image": "ich777/steamcmd:l4d",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/l4d"
      },
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      }
    ],
    "env": [
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "222840"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+maxplayers 4 +map l4d_farm04_barn"
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "left4dead"
      }
    ]
  },
  {
    "type": 1,
    "title": "Left4Dead2",
    "description": "This Docker will download and install SteamCMD. It will also install Left4Dead 2 and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Left4Dead 2 and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/l4d2.png",
    "name": "Left4Dead2",
    "image": "ich777/steamcmd:l4d2",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/l4d2"
      },
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      }
    ],
    "env": [
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "222860"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "left4dead2"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+maxplayers 8 +map c2m1_highway"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Lidarr",
    "description": "Lidarr is a music collection manager for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new tracks from your favorite artists and will grab, sort and rename them.\r\n\r\nUPDATE: The container will check on every start/restart if there is a newer version available (you can also choose between stabel and nightly version - keep in mind that switching from a stable to a nightly version and vice versa can break the container).\r\n\r\nMANUAL VERSION: You can also set a version manually by typing in the version number that you want to use for example: '0.7.0.1347' (without quotes) - you can also change it to 'latest' or 'nightly' like described above.\r\n\r\nATTENTION: Don't change the port in the Lidarr config itself.\r\n\r\nMIGRATION: If you are migrating from another Container please be sure to deltete the files/folders 'logs' and 'config.xml', don't forget to change the root folder for your movies to '/mnt/music' and select 'No, I'll Move the Files Myself'!",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "Lidarr is a music collection manager for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new tracks from your favorite artists and will grab, sort and rename them.\r\n\r\nUPDATE: The container will check on every start/restart if there is a newer version available (you can also choose between stabel and nightly version - keep in mind that switching from a stable to a nightly version and vice versa can break the container).\r\n\r\nMANUAL VERSION: You can also set a version manually by typing in the version number that you want to use for example: '0.7.0.1347' (without quotes) - you can also change it to 'latest' or 'nightly' like described above.\r\n\r\nATTENTION: Don't change the port in the Lidarr config itself.\r\n\r\nMIGRATION: If you are migrating from another Container please be sure to deltete the files/folders 'logs' and 'config.xml', don't forget to change the root folder for your movies to '/mnt/music' and select 'No, I'll Move the Files Myself'!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/lidarr.png",
    "name": "Lidarr",
    "image": "ich777/lidarr",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8686": "8686:8686/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/lidarr",
        "bind": "/mnt/cache/appdata/lidarr"
      },
      {
        "container": "/mnt/music",
        "bind": "/mnt/disks/misc/Music/"
      },
      {
        "container": "/mnt/downloads",
        "bind": "/mnt/user/Downloads/"
      }
    ],
    "env": [
      {
        "name": "MONO_START_PARAMS",
        "label": "MONO_START_PARAMS",
        "default": "--debug"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      },
      {
        "name": "LIDARR_REL",
        "label": "LIDARR_REL",
        "default": "nightly"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "0000"
      }
    ]
  },
  {
    "type": 1,
    "title": "luckyBackup",
    "description": "LuckyBackup is a very user-friendly GUI backup program. It uses rsync as a backend and transfers over only changes made rather than all data.\r\n\r\nUpdate: The container will check on every start/restart if there is a newer version available",
    "categories": [
      "Backup:"
    ],
    "platform": "linux",
    "note": "LuckyBackup is a very user-friendly GUI backup program. It uses rsync as a backend and transfers over only changes made rather than all data.\r\n\r\nUpdate: The container will check on every start/restart if there is a newer version available",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/luckybackup.png",
    "name": "luckyBackup",
    "image": "ich777/luckybackup",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/luckybackup",
        "bind": "/mnt/cache/appdata/luckybackup/"
      },
      {
        "container": "/mnt/user",
        "bind": "/mnt/user/"
      }
    ],
    "env": [
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "CUSTOM_RES_W",
        "label": "CUSTOM_RES_W",
        "default": "1024"
      },
      {
        "name": "CUSTOM_RES_H",
        "label": "CUSTOM_RES_H",
        "default": "768"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "0000"
      }
    ]
  },
  {
    "type": 1,
    "title": "MagicMirror-2",
    "description": "This Container will download and install MagicMirror².\r\n\r\n**MODULE INSTALLATION:** This container can pull modules from Github automatically, simply go to your server directory and in the 'modules' folder after the first startup, there you will find a file named 'modules.txt'.\r\nSimply drop your links from Gitbub into the file (place a 'Y' in front of the link to run a automatic 'npm install' after the download, not every module will work with this automatic module installer) or simply delete the '#' in front of the premade modules in the file and then restart the container to download the modules.\r\nPlease don't forget to also to edit your config.js!\r\n\r\n**Update Notice:** This container will check on every restart if there is a newer version of MagicMirror² available and will download and install it if so.",
    "categories": [
      "HomeAutomation:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "This Container will download and install MagicMirror².\r\n\r\n**MODULE INSTALLATION:** This container can pull modules from Github automatically, simply go to your server directory and in the 'modules' folder after the first startup, there you will find a file named 'modules.txt'.\r\nSimply drop your links from Gitbub into the file (place a 'Y' in front of the link to run a automatic 'npm install' after the download, not every module will work with this automatic module installer) or simply delete the '#' in front of the premade modules in the file and then restart the container to download the modules.\r\nPlease don't forget to also to edit your config.js!\r\n\r\n**Update Notice:** This container will check on every restart if there is a newer version of MagicMirror² available and will download and install it if so.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/magicmirror2.png",
    "name": "MagicMirror-2",
    "image": "ich777/magic-mirror2",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/magicmirror2",
        "bind": "/mnt/user/appdata/magicmirror2"
      }
    ],
    "env": [
      {
        "name": "FORCE_UPDATE_MODULES",
        "label": "FORCE_UPDATE_MODULES",
        "default": ""
      },
      {
        "name": "FORCE_UPDATE",
        "label": "FORCE_UPDATE",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "MEGASync",
    "description": "MEGAsync is an intuitive application that enables you to effortlessly synchronize folders on several computers. You simply need to upload data in the cloud and, within seconds, you can explore the same documents on your own PC.\r\n\r\nMEGAsync can synchronize all of your devices with your MEGA account. Access and work with your data securely across different locations and devices.",
    "categories": [
      "Network:Other",
      "Productivity:",
      "Tools:Utilities",
      "Backup:"
    ],
    "platform": "linux",
    "note": "MEGAsync is an intuitive application that enables you to effortlessly synchronize folders on several computers. You simply need to upload data in the cloud and, within seconds, you can explore the same documents on your own PC.\r\n\r\nMEGAsync can synchronize all of your devices with your MEGA account. Access and work with your data securely across different locations and devices.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/megasync.png",
    "name": "MEGASync",
    "image": "ich777/megasync",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/megasync/.local/share/data/Mega Limited/MEGAsync",
        "bind": "/mnt/cache/appdata/megasync"
      },
      {
        "container": "/mnt/host",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "CUSTOM_RES_W",
        "label": "CUSTOM_RES_W",
        "default": "800"
      },
      {
        "name": "CUSTOM_RES_H",
        "label": "CUSTOM_RES_H",
        "default": "600"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Memories-of-Mars",
    "description": "This Docker will download and install SteamCMD. It will also install Memories of Mars and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nONLINE PLAY: Please be sure to set the variable MULTIHOME to the IP of your Unraid server otherwise you can't connect to the gameserver!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Memories of Mars and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nONLINE PLAY: Please be sure to set the variable MULTIHOME to the IP of your Unraid server otherwise you can't connect to the gameserver!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/memoriesofmars.png",
    "name": "Memories-of-Mars",
    "image": "ich777/steamcmd:memoriesofmars",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "15000": "15000:15000/tcp",
        "7777": "7777:7777/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/memoriesofmars"
      }
    ],
    "env": [
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "897590"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "MULTIHOME",
        "label": "MULTIHOME",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Mindustry",
    "description": "This is a Basic Mindustry Server. It will download the preferred version of Mindustry and run it.\r\n\r\nUPDATE NOTICE: If you set the GAME_V to 'latest' the container will always check on startup for a new version or you can set it to whatever version you preferr eg: '100', '90',... (without quotes, upgrading and downgrading also possible).\r\n\r\nCONSOLE: To connect to the console open up the terminal for this docker and type in: 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS Mindustry' (without quotes).",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This is a Basic Mindustry Server. It will download the preferred version of Mindustry and run it.\r\n\r\nUPDATE NOTICE: If you set the GAME_V to 'latest' the container will always check on startup for a new version or you can set it to whatever version you preferr eg: '100', '90',... (without quotes, upgrading and downgrading also possible).\r\n\r\nCONSOLE: To connect to the console open up the terminal for this docker and type in: 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS Mindustry' (without quotes).",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/mindustry.png",
    "name": "Mindustry",
    "image": "ich777/mindustry-server",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6567": "6567:6567/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/mindustry",
        "bind": "/mnt/cache/appdata/mindustry"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_V",
        "label": "GAME_V",
        "default": "latest"
      },
      {
        "name": "SRV_NAME",
        "label": "SRV_NAME",
        "default": "DockerMindustry"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "MinecraftBasicServer",
    "description": "This is a Basic Minecraft Server, with the basic configuration it will download and install a Vanilla Minecraft.\r\n\r\nYou can also install a FTB (FeedTheBeast), Bukkit, Spigot,... server.\r\n\r\nStart the container for the first time let it do it's work and shut it down.\r\nAfter that copy over your favorite server executable (don't forget to set the Serverfile name to the same as you copied over) and start the container again.\r\n\r\nUPDATE: If you set the variable GAME_V to 'latest' the container will check on every restart if there is a newer version available (if set to 'latest' the variable JAR_NAME has to be 'server').\n\r\nATTENTION: Don't forget to accept the EULA down below and don't forget to edit the 'server.properties' file the server is by default configured to be a LAN server and to be not snooped.\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u minecraft -ti NAMEOFYOURCONTAINER screen -xS Minecraft' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This is a Basic Minecraft Server, with the basic configuration it will download and install a Vanilla Minecraft.\r\n\r\nYou can also install a FTB (FeedTheBeast), Bukkit, Spigot,... server.\r\n\r\nStart the container for the first time let it do it's work and shut it down.\r\nAfter that copy over your favorite server executable (don't forget to set the Serverfile name to the same as you copied over) and start the container again.\r\n\r\nUPDATE: If you set the variable GAME_V to 'latest' the container will check on every restart if there is a newer version available (if set to 'latest' the variable JAR_NAME has to be 'server').\n\r\nATTENTION: Don't forget to accept the EULA down below and don't forget to edit the 'server.properties' file the server is by default configured to be a LAN server and to be not snooped.\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u minecraft -ti NAMEOFYOURCONTAINER screen -xS Minecraft' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/mc.png",
    "name": "MinecraftBasicServer",
    "image": "ich777/minecraftbasicserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "25565": "25565:25565/tcp",
        "25575": "25575:25575/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/minecraft"
      }
    ],
    "env": [
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_V",
        "label": "GAME_V",
        "default": "latest"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "EXTRA_JVM_PARAMS",
        "label": "EXTRA_JVM_PARAMS",
        "default": ""
      },
      {
        "name": "XMX_SIZE",
        "label": "XMX_SIZE",
        "default": "1024"
      },
      {
        "name": "RUNTIME_NAME",
        "label": "RUNTIME_NAME",
        "default": "basicjre"
      },
      {
        "name": "JAR_NAME",
        "label": "JAR_NAME",
        "default": "server"
      },
      {
        "name": "XMS_SIZE",
        "label": "XMS_SIZE",
        "default": "1024"
      },
      {
        "name": "ACCEPT_EULA",
        "label": "ACCEPT_EULA",
        "default": "false"
      }
    ]
  },
  {
    "type": 1,
    "title": "MinecraftBedrockEdition",
    "description": "This is a Basic Minecraft Bedrock Edition Server.\r\n\r\nThis container downloads Minecraft Bedrock Edition Server in the specified version or you can also set it to ‘latest’ to download and check on every restart if there is a newer version available.\r\n\r\nUPDATE NOTICE: If you set the GAME_VERSION to ‘latest’ the container will check on every start/restart if there is a newer version available, otherwise enter the preferred version number that you want to install, you also can downgrade your server (no guarantee that it works if you downgrade much versions).\r\n\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u minecraft -ti NAMEOFYOURCONTAINER screen -xS Minecraft' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This is a Basic Minecraft Bedrock Edition Server.\r\n\r\nThis container downloads Minecraft Bedrock Edition Server in the specified version or you can also set it to ‘latest’ to download and check on every restart if there is a newer version available.\r\n\r\nUPDATE NOTICE: If you set the GAME_VERSION to ‘latest’ the container will check on every start/restart if there is a newer version available, otherwise enter the preferred version number that you want to install, you also can downgrade your server (no guarantee that it works if you downgrade much versions).\r\n\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u minecraft -ti NAMEOFYOURCONTAINER screen -xS Minecraft' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/bedrock.png",
    "name": "MinecraftBedrockEdition",
    "image": "ich777/minecraftbedrockserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "19132": "19132:19132/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/minecraftbedrockedition"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "GAME_VERSION",
        "label": "GAME_VERSION",
        "default": "latest"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Mordhau",
    "description": "This Docker will download and install SteamCMD. It will also install Mordhau and run it. Initial login SERVERNAME: MordhauDocker SERVERPASSWORD: Docker ADMINPASSWORD adminDocker\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Mordhau and run it. Initial login SERVERNAME: MordhauDocker SERVERPASSWORD: Docker ADMINPASSWORD adminDocker\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/mordhau.png",
    "name": "Mordhau",
    "image": "ich777/steamcmd:mordhau",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "15000": "15000:15000/udp",
        "27015": "27015:27015/udp",
        "7777": "7777:7777/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/mordhau"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "BEACON_PORT",
        "label": "BEACON_PORT",
        "default": "15000"
      },
      {
        "name": "QUERY_PORT",
        "label": "QUERY_PORT",
        "default": "27015"
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "7777"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "629800"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "MultiTheftAuto",
    "description": "This Docker will download and install Multi Theft Auto SERVERNAME: Docker MTA Server SERVERPASSWORD: Docker.\r\n\r\nIf you want to connect to the console open a terminal and enter 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS MTA' (without quotes), to disconnect close the window.\r\n\r\nUPDATE NOTICE: You can Force Update this Container (please note that you have to set Download Resources to 'true' and leave Skip Basicconfiguration blank to download everything new).",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install Multi Theft Auto SERVERNAME: Docker MTA Server SERVERPASSWORD: Docker.\r\n\r\nIf you want to connect to the console open a terminal and enter 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS MTA' (without quotes), to disconnect close the window.\r\n\r\nUPDATE NOTICE: You can Force Update this Container (please note that you have to set Download Resources to 'true' and leave Skip Basicconfiguration blank to download everything new).",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/mta.png",
    "name": "MultiTheftAuto",
    "image": "ich777/mtaserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "22003": "22003:22003/udp",
        "22005": "22005:22005/tcp",
        "22126": "22126:22126/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/multitheftauto"
      }
    ],
    "env": [
      {
        "name": "LOGFILE_DIR",
        "label": "LOGFILE_DIR",
        "default": "multitheftauto_linux_x64/mods/deathmatch/logs/server.log"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "",
        "label": "",
        "default": ""
      },
      {
        "name": "DOWNLOAD_RESOURCES",
        "label": "DOWNLOAD_RESOURCES",
        "default": "true"
      }
    ]
  },
  {
    "type": 1,
    "title": "NEOTOKYO",
    "description": "This Docker will download and install SteamCMD. It will also install NEOTOKYO and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install NEOTOKYO and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/neotokyo.png",
    "name": "NEOTOKYO",
    "image": "ich777/steamcmd:neotokyo",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/neotokyo"
      }
    ],
    "env": [
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "313600"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+maxplayers 32 +map nt_dawn_ctg"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "NeotokyoSource"
      }
    ]
  },
  {
    "type": 1,
    "title": "NeverwinterNights-EE",
    "description": "This Docker will download and install Neverwinter Nights: Enhanced Edition and run it (by default this container has a MariaDB and Redis Server integrated).\r\n\r\nFirst Start: Enter the Module name to load in the variable down below (without the .mod extension) start the container and wait for it until the log displays the message that the modules folder is empty, stop the container and place your mod file in the folder (.../Neverwinter Nights/modules) and restart the container (You can also place a mod file from your local installed game into the server eg.: .../Neverwinter Nights/data/mod/Contest of Champions 0492).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u nwnee -ti NAMEOFYOURCONTAINER screen -xS nwnee' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install Neverwinter Nights: Enhanced Edition and run it (by default this container has a MariaDB and Redis Server integrated).\r\n\r\nFirst Start: Enter the Module name to load in the variable down below (without the .mod extension) start the container and wait for it until the log displays the message that the modules folder is empty, stop the container and place your mod file in the folder (.../Neverwinter Nights/modules) and restart the container (You can also place a mod file from your local installed game into the server eg.: .../Neverwinter Nights/data/mod/Contest of Champions 0492).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u nwnee -ti NAMEOFYOURCONTAINER screen -xS nwnee' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/nwnee.png",
    "name": "NeverwinterNights-EE",
    "image": "ich777/nwnee-server",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5121": "5121:5121/udp"
      }
    ],
    "volumes": [
      {
        "container": "/nwnee",
        "bind": "/mnt/cache/appdata/nwnee"
      }
    ],
    "env": [
      {
        "name": "ELC",
        "label": "ELC",
        "default": "0"
      },
      {
        "name": "ONEPARTY",
        "label": "ONEPARTY",
        "default": "0"
      },
      {
        "name": "DIFF",
        "label": "DIFF",
        "default": "1"
      },
      {
        "name": "AUTO_SAV_I",
        "label": "AUTO_SAV_I",
        "default": "5"
      },
      {
        "name": "SRV_NAME",
        "label": "SRV_NAME",
        "default": "Docker NWNEE"
      },
      {
        "name": "PPW",
        "label": "PPW",
        "default": "Docker"
      },
      {
        "name": "ILR",
        "label": "ILR",
        "default": "0"
      },
      {
        "name": "RLD_W_E",
        "label": "RLD_W_E",
        "default": "0"
      },
      {
        "name": "MOD_NAME",
        "label": "MOD_NAME",
        "default": "Contest Of Champions 0492"
      },
      {
        "name": "MAX_CLIENTS",
        "label": "MAX_CLIENTS",
        "default": "4"
      },
      {
        "name": "MINLEVEL",
        "label": "MINLEVEL",
        "default": "1"
      },
      {
        "name": "MAXLEVEL",
        "label": "MAXLEVEL",
        "default": "40"
      },
      {
        "name": "PVP",
        "label": "PVP",
        "default": "0"
      },
      {
        "name": "SERVERVAULT",
        "label": "SERVERVAULT",
        "default": "0"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "NWNEE_V",
        "label": "NWNEE_V",
        "default": "latest"
      },
      {
        "name": "PAUSEAPLAY",
        "label": "PAUSEAPLAY",
        "default": "0"
      },
      {
        "name": "APWD",
        "label": "APWD",
        "default": "adminDocker"
      },
      {
        "name": "PUBLIC_SRV",
        "label": "PUBLIC_SRV",
        "default": "0"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "LOG_LVL",
        "label": "LOG_LVL",
        "default": "4"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      }
    ]
  },
  {
    "type": 1,
    "title": "NZBGet",
    "description": "NZBGet is an Usenet-client written in C++ and designed with performance in mind to achieve maximum download speed by using very little system resources.\r\n\r\nUPDATE: The container will check on every start/restart if there is a newer version available (you can also choose between stabel and prereleases and switch between them - keep in mind sometimes downgrading from a prerelease version could break your configuration).\r\n\r\nMANUAL VERSION: You can also set a version manually by typing in the version number that you want to use eg: '21.0' without quotes - this does only work with release versions.\r\n\r\nATTENTION: Don't change the IP address or the port in the nzbget config itself.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "NZBGet is an Usenet-client written in C++ and designed with performance in mind to achieve maximum download speed by using very little system resources.\r\n\r\nUPDATE: The container will check on every start/restart if there is a newer version available (you can also choose between stabel and prereleases and switch between them - keep in mind sometimes downgrading from a prerelease version could break your configuration).\r\n\r\nMANUAL VERSION: You can also set a version manually by typing in the version number that you want to use eg: '21.0' without quotes - this does only work with release versions.\r\n\r\nATTENTION: Don't change the IP address or the port in the nzbget config itself.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/nzbget.png",
    "name": "NZBGet",
    "image": "ich777/nzbget",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6789": "6789:6789/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/nzbget",
        "bind": "/mnt/cache/appdata/nzbget"
      },
      {
        "container": "/mnt/downloads",
        "bind": "/mnt/user/Downloads/"
      }
    ],
    "env": [
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "0000"
      },
      {
        "name": "NZBGET_V",
        "label": "NZBGET_V",
        "default": "latest"
      }
    ]
  },
  {
    "type": 1,
    "title": "NZBHydra2",
    "description": "NZBHydra 2 is a meta search for newznab indexers and torznab trackers. It provides easy access to newznab indexers and many torznab trackers via Jackett. You can search all your indexers and trackers from one place and use it as an indexer source for tools like Sonarr, Radarr, Lidarr or CouchPotato.\r\n\r\nUPDATE: The container will check on every start/restart if there is a newer version available.\r\n\r\nMANUAL VERSION: You can also set a version manually by typing in the version number that you want to use for example: '3.4.3' (without quotes).",
    "categories": [
      "Downloaders:",
      "MediaApp:Video",
      "MediaApp:Music",
      "MediaApp:Books",
      "MediaApp:Photos",
      "Productivity:"
    ],
    "platform": "linux",
    "note": "NZBHydra 2 is a meta search for newznab indexers and torznab trackers. It provides easy access to newznab indexers and many torznab trackers via Jackett. You can search all your indexers and trackers from one place and use it as an indexer source for tools like Sonarr, Radarr, Lidarr or CouchPotato.\r\n\r\nUPDATE: The container will check on every start/restart if there is a newer version available.\r\n\r\nMANUAL VERSION: You can also set a version manually by typing in the version number that you want to use for example: '3.4.3' (without quotes).",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/nzbhydra2.png",
    "name": "NZBHydra2",
    "image": "ich777/nzbhydra2",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5076": "5076:5076/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/nzbhydra2",
        "bind": "/mnt/cache/appdata/nzbhydra2"
      },
      {
        "container": "/mnt/downloads",
        "bind": "/mnt/user/Downloads/"
      }
    ],
    "env": [
      {
        "name": "NZBHYDRA2_REL",
        "label": "NZBHYDRA2_REL",
        "default": "latest"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "0000"
      }
    ]
  },
  {
    "type": 1,
    "title": "OnlineCheckYourServer",
    "description": "This is a simple container that will check if a domain name or IP address is pingable and send you a message with Pushover if it goes offline.\r\n\r\nYou can install it on your machine to get notified with Pushover if a site goes down, or you can install it on a remote machine to ping your server and get a notification if it's not reachable.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "This is a simple container that will check if a domain name or IP address is pingable and send you a message with Pushover if it goes offline.\r\n\r\nYou can install it on your machine to get notified with Pushover if a site goes down, or you can install it on a remote machine to ping your server and get a notification if it's not reachable.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/pushover.png",
    "name": "OnlineCheckYourServer",
    "image": "ich777/online-check-pushover",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "env": [
      {
        "name": "PUSHOVER_PRIORITY",
        "label": "PUSHOVER_PRIORITY",
        "default": "0"
      },
      {
        "name": "PING_TIMEOUT",
        "label": "PING_TIMEOUT",
        "default": "10"
      },
      {
        "name": "PING_RETRY",
        "label": "PING_RETRY",
        "default": "3600"
      },
      {
        "name": "PUSHOVER_APP_TOKEN",
        "label": "PUSHOVER_APP_TOKEN",
        "default": ""
      },
      {
        "name": "PUSHOVER_USER_TOKEN",
        "label": "PUSHOVER_USER_TOKEN",
        "default": ""
      },
      {
        "name": "PUSHOVER_TITLE",
        "label": "PUSHOVER_TITLE",
        "default": "Online Check"
      },
      {
        "name": "PUSHOVER_MESSAGE",
        "label": "PUSHOVER_MESSAGE",
        "default": "google.com is offline!"
      },
      {
        "name": "HOST",
        "label": "HOST",
        "default": "google.com"
      },
      {
        "name": "PING_INTERVAL",
        "label": "PING_INTERVAL",
        "default": "300"
      }
    ]
  },
  {
    "type": 1,
    "title": "OpenRCT2",
    "description": "This Docker will download and install the preferred version of OpenRCT2 (don't forget to put in the server version to download).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nManual Installation: You can also install a version manually but please be sure to put in the right version number of the file: ‘v0.2.3-develop-e4a2b1f9c’ if the source file is named like this: ‘OpenRCT2-0.2.3-develop-e4a2b1f9c-linux-x86_64.tar’, drop the file into the openrct2 directory and eventually restart the container to install it.\r\n\r\nUpdate Notice: If you want to update or downgrade the game simply change the version number.\r\n\r\nATTENTION: The variables Admin Name \u0026amp; Admin Hash will only work on the first time you enter these, after that you must change it manually in ‘/SERVER_DIR/user-data/users.json’.\n\r\nNOTICE: If you got no IPv6 you will get an Error and a Warning in the log about that, you can ignore that the server runs just fine on IPv4.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install the preferred version of OpenRCT2 (don't forget to put in the server version to download).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nManual Installation: You can also install a version manually but please be sure to put in the right version number of the file: ‘v0.2.3-develop-e4a2b1f9c’ if the source file is named like this: ‘OpenRCT2-0.2.3-develop-e4a2b1f9c-linux-x86_64.tar’, drop the file into the openrct2 directory and eventually restart the container to install it.\r\n\r\nUpdate Notice: If you want to update or downgrade the game simply change the version number.\r\n\r\nATTENTION: The variables Admin Name \u0026amp; Admin Hash will only work on the first time you enter these, after that you must change it manually in ‘/SERVER_DIR/user-data/users.json’.\n\r\nNOTICE: If you got no IPv6 you will get an Error and a Warning in the log about that, you can ignore that the server runs just fine on IPv4.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/openrct2.png",
    "name": "OpenRCT2",
    "image": "ich777/openrct2server",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "11753": "11753:11753/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/openrct2"
      }
    ],
    "env": [
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_VERSION",
        "label": "GAME_VERSION",
        "default": "latest"
      },
      {
        "name": "GAME_CONFIG",
        "label": "GAME_CONFIG",
        "default": "--password Docker"
      },
      {
        "name": "GAME_SAVE_NAME",
        "label": "GAME_SAVE_NAME",
        "default": "docker.sv6"
      },
      {
        "name": "ADMIN_NAME",
        "label": "ADMIN_NAME",
        "default": ""
      },
      {
        "name": "ADMIN_HASH",
        "label": "ADMIN_HASH",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "11753"
      }
    ]
  },
  {
    "type": 1,
    "title": "OpenTTD",
    "description": "This Docker will download and install the version of OpenTTD that you enter in the variable 'Game Version to Install' (if you define 'latest' it will always pull the latest build).\r\n\r\nCONSOLE: If you want to connect to the console open a Terminal and type in 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS OpenTTD' (without quotes). Simply close the windows to disconnect.\r\n\r\nATTENTION: First start and updates can take very long time (Also note: Assigning fewer cores for compiling will result in slower startup on the first start up and updates, RECOMMENDED: leave the 'Compile Cores' blank to use all available cores).\r\n\r\nUpdate Notice: If there is a newer version if set to 'latest' simply restart the container to update it to the latest version. If you want to update from an older build simply set the new build number or set to latest. You can also downgrade to another version.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install the version of OpenTTD that you enter in the variable 'Game Version to Install' (if you define 'latest' it will always pull the latest build).\r\n\r\nCONSOLE: If you want to connect to the console open a Terminal and type in 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS OpenTTD' (without quotes). Simply close the windows to disconnect.\r\n\r\nATTENTION: First start and updates can take very long time (Also note: Assigning fewer cores for compiling will result in slower startup on the first start up and updates, RECOMMENDED: leave the 'Compile Cores' blank to use all available cores).\r\n\r\nUpdate Notice: If there is a newer version if set to 'latest' simply restart the container to update it to the latest version. If you want to update from an older build simply set the new build number or set to latest. You can also downgrade to another version.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/openttd.png",
    "name": "OpenTTD",
    "image": "ich777/openttdserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3979": "3979:3979/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/openttd"
      }
    ],
    "env": [
      {
        "name": "COMPILE_CORES",
        "label": "COMPILE_CORES",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "GAME_VERSION",
        "label": "GAME_VERSION",
        "default": "latest"
      },
      {
        "name": "GFX_PK_V",
        "label": "GFX_PK_V",
        "default": "latest"
      }
    ]
  },
  {
    "type": 1,
    "title": "OpenVPN-Client",
    "description": "This OpenVPN container was designed to be started first to provide a connection to other containers (using '--net=container:OpenVPN-Client'), see the documentation for further help here: https://hub.docker.com/r/dperson/openvpn-client\r\n\r\nThe basic steps for a OpenVPN connection that requires a Username and Password are: 1) Rename your *.ovpn to 'vpn.ovpn' and place it in your OpenVPN-Client directory, 2) Create in the same directory a file named 'vpn.auth' and place your Username in the first line and the Password for the connection in the second line and save it 3) Restart the container open the logs and see if the connection to your VPN establishes successfully.\r\n\r\nTo tunnel traffic from another container through this container edit the template from the other container, set the 'Network Type' to: 'None', enable the advanced view in the top right corner and at 'Extra Parameters' add the following: '--net=container:OpenVPN-Client' (replace 'OpenVPN-Client' with the name of this container if you choose a different name for it) and write down the port(s) that you need to connect to.\r\nAfter that go back to edit this containers template and add the port that you have noted in the above step to this container and click 'Apply' now you can connect to the container that you tunneld the traffic though this container.\r\n\r\nYou can route the traffic from multiple containers through this container with the steps above, if you need more ports then simply add more ports in this containers template.\r\n\r\nDNS: By default this container uses Googles DNS Server: 8.8.8.8 if you want to edit this enable the advanced view and edit this setting at 'Extra Parameters'.\r\n\r\nADVANCED CONFIG: If you leave the appdata directory for this container empty it will start up and you have to manually configure it with the builtin comand: 'openvpn.sh', see: https://hub.docker.com/r/dperson/openvpn-client",
    "categories": [
      "Network:VPN"
    ],
    "platform": "linux",
    "note": "This OpenVPN container was designed to be started first to provide a connection to other containers (using '--net=container:OpenVPN-Client'), see the documentation for further help here: https://hub.docker.com/r/dperson/openvpn-client\r\n\r\nThe basic steps for a OpenVPN connection that requires a Username and Password are: 1) Rename your *.ovpn to 'vpn.ovpn' and place it in your OpenVPN-Client directory, 2) Create in the same directory a file named 'vpn.auth' and place your Username in the first line and the Password for the connection in the second line and save it 3) Restart the container open the logs and see if the connection to your VPN establishes successfully.\r\n\r\nTo tunnel traffic from another container through this container edit the template from the other container, set the 'Network Type' to: 'None', enable the advanced view in the top right corner and at 'Extra Parameters' add the following: '--net=container:OpenVPN-Client' (replace 'OpenVPN-Client' with the name of this container if you choose a different name for it) and write down the port(s) that you need to connect to.\r\nAfter that go back to edit this containers template and add the port that you have noted in the above step to this container and click 'Apply' now you can connect to the container that you tunneld the traffic though this container.\r\n\r\nYou can route the traffic from multiple containers through this container with the steps above, if you need more ports then simply add more ports in this containers template.\r\n\r\nDNS: By default this container uses Googles DNS Server: 8.8.8.8 if you want to edit this enable the advanced view and edit this setting at 'Extra Parameters'.\r\n\r\nADVANCED CONFIG: If you leave the appdata directory for this container empty it will start up and you have to manually configure it with the builtin comand: 'openvpn.sh', see: https://hub.docker.com/r/dperson/openvpn-client",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/openvpn-client.png",
    "name": "OpenVPN-Client",
    "image": "dperson/openvpn-client",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/vpn",
        "bind": "/mnt/cache/appdata/openvpn-client"
      }
    ]
  },
  {
    "type": 1,
    "title": "PavlovVR",
    "description": "This Docker will download and install SteamCMD. It will also install Pavlov VR and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Pavlov VR and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/pavlovvr.png",
    "name": "PavlovVR",
    "image": "ich777/steamcmd:pavlovvr",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "7000": "7000:7000/udp",
        "7200": "7200:7200/udp",
        "7777": "7777:7777/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/pavlovvr"
      }
    ],
    "env": [
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "622970"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "PhotoPrism",
    "description": "PhotoPrism™ is a server-based application for browsing, organizing and sharing your personal photo collection. It makes use of the latest technologies to automatically tag and find pictures without getting in your way. Say goodbye to solutions that force you to upload your visual memories to the cloud.\r\n\r\nPlease also support the developer of this superior project through a PayPal donation or on Patreon.\r\n\r\nDatabase lockups: If you got problems where the database lockes up you should switch to a mysql based database but you have to also setup a dedicated database for that, for example 'MariaDB' from Linuxserver.io - if you need help please visit the support thread of this container and/or the MariaDB thread.",
    "categories": [
      "Productivity:",
      "MediaApp:Photos",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "PhotoPrism™ is a server-based application for browsing, organizing and sharing your personal photo collection. It makes use of the latest technologies to automatically tag and find pictures without getting in your way. Say goodbye to solutions that force you to upload your visual memories to the cloud.\r\n\r\nPlease also support the developer of this superior project through a PayPal donation or on Patreon.\r\n\r\nDatabase lockups: If you got problems where the database lockes up you should switch to a mysql based database but you have to also setup a dedicated database for that, for example 'MariaDB' from Linuxserver.io - if you need help please visit the support thread of this container and/or the MariaDB thread.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/photoprism.png",
    "name": "PhotoPrism",
    "image": "photoprism/photoprism",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "2342": "2342:2342/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/photoprism/originals",
        "bind": "/mnt/user/Pictures"
      },
      {
        "container": "/photoprism/import",
        "bind": ""
      },
      {
        "container": "/photoprism/storage",
        "bind": "/mnt/cache/appdata/photoprism"
      }
    ],
    "env": [
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "PHOTOPRISM_UPLOAD_NSFW",
        "label": "PHOTOPRISM_UPLOAD_NSFW",
        "default": "true"
      },
      {
        "name": "PHOTOPRISM_SITE_AUTHOR",
        "label": "PHOTOPRISM_SITE_AUTHOR",
        "default": ""
      },
      {
        "name": "PHOTOPRISM_THUMB_SIZE_UNCACHED",
        "label": "PHOTOPRISM_THUMB_SIZE_UNCACHED",
        "default": "7680"
      },
      {
        "name": "PHOTOPRISM_THUMB_FILTER",
        "label": "PHOTOPRISM_THUMB_FILTER",
        "default": "lanczos"
      },
      {
        "name": "PHOTOPRISM_EXPERIMENTAL",
        "label": "PHOTOPRISM_EXPERIMENTAL",
        "default": "false"
      },
      {
        "name": "PHOTOPRISM_STORAGE_PATH",
        "label": "PHOTOPRISM_STORAGE_PATH",
        "default": "/photoprism/storage"
      },
      {
        "name": "PHOTOPRISM_SITE_CAPTION",
        "label": "PHOTOPRISM_SITE_CAPTION",
        "default": "Browse Your Life"
      },
      {
        "name": "PHOTOPRISM_ADMIN_PASSWORD",
        "label": "PHOTOPRISM_ADMIN_PASSWORD",
        "default": ""
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "PHOTOPRISM_DATABASE_DSN",
        "label": "PHOTOPRISM_DATABASE_DSN",
        "default": ""
      },
      {
        "name": "PHOTOPRISM_SETTINGS_HIDDEN",
        "label": "PHOTOPRISM_SETTINGS_HIDDEN",
        "default": "false"
      },
      {
        "name": "PHOTOPRISM_THUMB_UNCACHED",
        "label": "PHOTOPRISM_THUMB_UNCACHED",
        "default": "false"
      },
      {
        "name": "PHOTOPRISM_THUMB_SIZE",
        "label": "PHOTOPRISM_THUMB_SIZE",
        "default": "2048"
      },
      {
        "name": "PHOTOPRISM_DETECT_NSFW",
        "label": "PHOTOPRISM_DETECT_NSFW",
        "default": "false"
      },
      {
        "name": "PHOTOPRISM_SITE_TITLE",
        "label": "PHOTOPRISM_SITE_TITLE",
        "default": "PhotoPrism"
      },
      {
        "name": "PHOTOPRISM_SITE_DESCRIPTION",
        "label": "PHOTOPRISM_SITE_DESCRIPTION",
        "default": ""
      },
      {
        "name": "PHOTOPRISM_DATABASE_DRIVER",
        "label": "PHOTOPRISM_DATABASE_DRIVER",
        "default": "sqlite"
      },
      {
        "name": "PHOTOPRISM_JPEG_SIZE",
        "label": "PHOTOPRISM_JPEG_SIZE",
        "default": "7680"
      },
      {
        "name": "PHOTOPRISM_JPEG_QUALITY",
        "label": "PHOTOPRISM_JPEG_QUALITY",
        "default": "90"
      },
      {
        "name": "PHOTOPRISM_DARKTABLE_PRESETS",
        "label": "PHOTOPRISM_DARKTABLE_PRESETS",
        "default": "false"
      }
    ]
  },
  {
    "type": 1,
    "title": "PlanetaryAnnihilation",
    "description": "This Docker will download and install Planetary Annihilation.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nThis Docker supports the original version of Planetary Annihilation and the expansion Planetary Annihilation Titans.\r\n\r\nUpdate Notice: Set the Variable 'Update on Start' to 'true' (without quotes) then the docker will check every restart if there is a newer version available otherwise leave it blank.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install Planetary Annihilation.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nThis Docker supports the original version of Planetary Annihilation and the expansion Planetary Annihilation Titans.\r\n\r\nUpdate Notice: Set the Variable 'Update on Start' to 'true' (without quotes) then the docker will check every restart if there is a newer version available otherwise leave it blank.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/pa.png",
    "name": "PlanetaryAnnihilation",
    "image": "ich777/planetaryannihilationserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "20545": "20545:20545/tcp",
        "8192": "8192:8192/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/planetaryannihilation"
      }
    ],
    "env": [
      {
        "name": "PA_ACC_PWD",
        "label": "PA_ACC_PWD",
        "default": ""
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "20545"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "PA_ACC_NAME",
        "label": "PA_ACC_NAME",
        "default": ""
      },
      {
        "name": "GAME_STREAM",
        "label": "GAME_STREAM",
        "default": "stable"
      },
      {
        "name": "SERVER_NAME",
        "label": "SERVER_NAME",
        "default": "DockerServer"
      },
      {
        "name": "SERVER_PWD",
        "label": "SERVER_PWD",
        "default": "Docker"
      },
      {
        "name": "MAX_PLAYERS",
        "label": "MAX_PLAYERS",
        "default": "12"
      },
      {
        "name": "UPDATE_ON_START",
        "label": "UPDATE_ON_START",
        "default": ""
      },
      {
        "name": "GAME_MODE",
        "label": "GAME_MODE",
        "default": "lobby"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "PostScriptum",
    "description": "This Docker will download and install SteamCMD. It will also install PostScriptum and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install PostScriptum and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/postscriptum.png",
    "name": "PostScriptum",
    "image": "ich777/steamcmd:postscriptum",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "10027": "10027:10027/udp",
        "10037": "10037:10037/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/postscriptum"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "Port=10027 QueryPort=10037 -log"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "746200"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "ProjectZomboid",
    "description": "This Docker will download and install SteamCMD. It will also install Project Zomboid and run it.\r\n\r\nServername: 'Docker ProjectZomboid' Password: 'Docker' AdminPassword: 'adminDocker'\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nCONSOLE: To connect to the console open up a terminal and type in: 'docker exec -u steam -ti NAMEOFYOURCONTAINER screen -xS PZ' (without quotes), to disconnect from the console simply close the window.\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Project Zomboid and run it.\r\n\r\nServername: 'Docker ProjectZomboid' Password: 'Docker' AdminPassword: 'adminDocker'\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nCONSOLE: To connect to the console open up a terminal and type in: 'docker exec -u steam -ti NAMEOFYOURCONTAINER screen -xS PZ' (without quotes), to disconnect from the console simply close the window.\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/projectzomboid.png",
    "name": "ProjectZomboid",
    "image": "ich777/steamcmd:projectzomboid",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "0": "0:0/tcp",
        "16261": "16261:16261/udp",
        "27015": "27015:27015/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/projectzomboid"
      }
    ],
    "env": [
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "ADMIN_PWD",
        "label": "ADMIN_PWD",
        "default": "adminDocker"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "380870"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Pushover-On-Start",
    "description": "This is a simple container that sends a message when the container is started (needed this for a headless machine to know when I can connect or better speaking start up the VM's with WOL).",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "This is a simple container that sends a message when the container is started (needed this for a headless machine to know when I can connect or better speaking start up the VM's with WOL).",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/donegear.png",
    "name": "Pushover-On-Start",
    "image": "ich777/pushover-on-start",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "env": [
      {
        "name": "PUSHOVER_APP_TOKEN",
        "label": "PUSHOVER_APP_TOKEN",
        "default": ""
      },
      {
        "name": "PUSHOVER_USER_TOKEN",
        "label": "PUSHOVER_USER_TOKEN",
        "default": ""
      },
      {
        "name": "PUSHOVER_TITLE",
        "label": "PUSHOVER_TITLE",
        "default": "Startup Complete"
      },
      {
        "name": "PUSHOVER_MESSAGE",
        "label": "PUSHOVER_MESSAGE",
        "default": "Server is now Online!"
      },
      {
        "name": "PUSHOVER_PRIORITY",
        "label": "PUSHOVER_PRIORITY",
        "default": "0"
      }
    ]
  },
  {
    "type": 1,
    "title": "PVK-II",
    "description": "This Docker will download and install SteamCMD. It will also install Pirates, Vikings \u0026amp; Knights 2 and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Pirates, Vikings \u0026amp; Knights 2 and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/pvkii.png",
    "name": "PVK-II",
    "image": "ich777/steamcmd:pvkii",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/pvkii"
      },
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      }
    ],
    "env": [
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "pvkii"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "17575"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-maxplayers 18 +map bt_island"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Quake3",
    "description": "This Docker will download and install Quake III Server (You have to copy your .pk3 files from your game directory to your server).\r\n\r\nPK3 Files: After the container started the first time you have to copy your pak*.pk3 files from your Quake III Arena directory into your server directory: .../.q3a/baseq3/ (i strongly recommend you to place all your pak*.pk3 files into it) after that simply restart the container and it would start the server.\r\n\r\nConfiguring the server: Your server.cfg and maprotationfile.cfg is located into your server directory and .../.q3a/baseq/ (after you successfully started the Quake III Server once).",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install Quake III Server (You have to copy your .pk3 files from your game directory to your server).\r\n\r\nPK3 Files: After the container started the first time you have to copy your pak*.pk3 files from your Quake III Arena directory into your server directory: .../.q3a/baseq3/ (i strongly recommend you to place all your pak*.pk3 files into it) after that simply restart the container and it would start the server.\r\n\r\nConfiguring the server: Your server.cfg and maprotationfile.cfg is located into your server directory and .../.q3a/baseq/ (after you successfully started the Quake III Server once).",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/quake3.png",
    "name": "Quake3",
    "image": "ich777/quake3",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "0": "0:0/udp"
      }
    ],
    "volumes": [
      {
        "container": "/quake3",
        "bind": "/mnt/cache/appdata/quake3"
      }
    ],
    "env": [
      {
        "name": "Q3_PORT",
        "label": "Q3_PORT",
        "default": "27960"
      },
      {
        "name": "DL_URL_PR",
        "label": "DL_URL_PR",
        "default": "https://ftp.gwdg.de/pub/misc/ftp.idsoftware.com/idstuff/quake3/linux/linuxq3apoint-1.32b-3.x86.run"
      },
      {
        "name": "DL_URL_PATCH",
        "label": "DL_URL_PATCH",
        "default": "https://ftp.gwdg.de/pub/misc/ftp.idsoftware.com/idstuff/quake3/quake3-1.32c.zip"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+set sv_punkbuster 0 +set fs_game osp +set com_hunkMegs 32"
      },
      {
        "name": "Q3_MAP",
        "label": "Q3_MAP",
        "default": "q3dm1"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "QuakeLive",
    "description": "This Docker will download and install SteamCMD. It will also install Quake Live and run it.\r\nInitial ServerName: 'Quake Live Docker' and Password: 'Docker' (without quotes)\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Quake Live and run it.\r\nInitial ServerName: 'Quake Live Docker' and Password: 'Docker' (without quotes)\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/quakelive.png",
    "name": "QuakeLive",
    "image": "ich777/steamcmd:quakelive",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27960": "27960:27960/udp",
        "28690": "28690:28690/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/quakelive"
      }
    ],
    "env": [
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27016"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "349090"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Radarr",
    "description": "Radarr A fork of Sonarr to work with movies à la Couchpotato.\r\n\r\nUPDATE: The container will check on every start/restart if there is a newer version available (you can also choose between stabel and nightly version - keep in mind that switching from a stable to a nightly version and vice versa can break the container).\r\n\r\nMANUAL VERSION: You can also set a version manually by typing in the version number that you want to use for example: '0.2.0.1480' (without quotes) - you can also change it to 'latest' or 'nightly' like described above.\r\n\r\nATTENTION: Don't change the port in the Radarr config itself.\r\n\r\nMIGRATION: If you are migrating from another Container please be sure to deltete the files/folders 'logs', 'xdg' and 'config.xml', don't forget to change the root folder for your movies to '/mnt/movies' and select 'No, I'll Move the Files Myself'!",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "Radarr A fork of Sonarr to work with movies à la Couchpotato.\r\n\r\nUPDATE: The container will check on every start/restart if there is a newer version available (you can also choose between stabel and nightly version - keep in mind that switching from a stable to a nightly version and vice versa can break the container).\r\n\r\nMANUAL VERSION: You can also set a version manually by typing in the version number that you want to use for example: '0.2.0.1480' (without quotes) - you can also change it to 'latest' or 'nightly' like described above.\r\n\r\nATTENTION: Don't change the port in the Radarr config itself.\r\n\r\nMIGRATION: If you are migrating from another Container please be sure to deltete the files/folders 'logs', 'xdg' and 'config.xml', don't forget to change the root folder for your movies to '/mnt/movies' and select 'No, I'll Move the Files Myself'!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/radarr.png",
    "name": "Radarr",
    "image": "ich777/radarr",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "7878": "7878:7878/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/radarr",
        "bind": "/mnt/cache/appdata/radarr"
      },
      {
        "container": "/mnt/movies",
        "bind": "/mnt/user/Movies/"
      },
      {
        "container": "/mnt/downloads",
        "bind": "/mnt/user/Downloads/"
      }
    ],
    "env": [
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "0000"
      },
      {
        "name": "MONO_START_PARAMS",
        "label": "MONO_START_PARAMS",
        "default": "--debug"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      },
      {
        "name": "RADARR_REL",
        "label": "RADARR_REL",
        "default": "nightly"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "Rambox-CE",
    "description": "Rambox Community Edition is a Free, Open Source messaging and emailing app that combines common web applications into one. A few of the supported platforms are Airdroid, Discord, Duo, Gmail, Hangouts, ICQ, Steam and many many more.\r\n\r\nUPDATE: The container will check on every start/restart if there is a newer version available.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Rambox Community Edition is a Free, Open Source messaging and emailing app that combines common web applications into one. A few of the supported platforms are Airdroid, Discord, Duo, Gmail, Hangouts, ICQ, Steam and many many more.\r\n\r\nUPDATE: The container will check on every start/restart if there is a newer version available.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/ramboxce.png",
    "name": "Rambox-CE",
    "image": "ich777/ramboxce",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/ramboxce",
        "bind": "/mnt/cache/appdata/ramboxce/"
      }
    ],
    "env": [
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "CUSTOM_RES_W",
        "label": "CUSTOM_RES_W",
        "default": "1280"
      },
      {
        "name": "CUSTOM_RES_H",
        "label": "CUSTOM_RES_H",
        "default": "768"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      }
    ]
  },
  {
    "type": 1,
    "title": "RapidPhotoDownloader",
    "description": "This Docker will download and install Rapid Photo Downloader.\r\n\r\nATTENTION: Please be sure to set the right source and destination folder on the server, otherwise the template creates automaticaly two new folders to your shares if not changed ('rpd-source-folder' \u0026amp; 'rpd-destiantion-folder').\r\n\r\nUpdate Notice: Go to the Rapid Photo Downloader homepage (https://www.damonlynch.net/rapid/) and got to the download selection, rightclick on \"Install script\" and select \"Copy Link Location\" then paste the copied link into the \"Download URL\" variable.",
    "categories": [
      "MediaApp:Photos",
      "Productivity:",
      "Tools:Utilities",
      "Backup:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install Rapid Photo Downloader.\r\n\r\nATTENTION: Please be sure to set the right source and destination folder on the server, otherwise the template creates automaticaly two new folders to your shares if not changed ('rpd-source-folder' \u0026amp; 'rpd-destiantion-folder').\r\n\r\nUpdate Notice: Go to the Rapid Photo Downloader homepage (https://www.damonlynch.net/rapid/) and got to the download selection, rightclick on \"Install script\" and select \"Copy Link Location\" then paste the copied link into the \"Download URL\" variable.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/rapidphotodownloader.png",
    "name": "RapidPhotoDownloader",
    "image": "ich777/rapidphotodownloader",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/media/destination",
        "bind": "/mnt/user/rpd-destination-folder"
      },
      {
        "container": "/rapidphotodownloader",
        "bind": "/mnt/cache/appdata/rapidphotodownloader/"
      },
      {
        "container": "/media/source",
        "bind": "/mnt/user/rpd-source-folder"
      }
    ],
    "env": [
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "DL_URL",
        "label": "DL_URL",
        "default": "https://launchpad.net/rapid/pyqt/0.9.17/+download/install.py"
      },
      {
        "name": "CUSTOM_RES_W",
        "label": "CUSTOM_RES_W",
        "default": "Custom Screen Width"
      },
      {
        "name": "CUSTOM_RES_H",
        "label": "CUSTOM_RES_H",
        "default": "Custom Screen Height"
      },
      {
        "name": "FORCE_UPDATE",
        "label": "FORCE_UPDATE",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Remmina",
    "description": "Remmina is a remote desktop client for POSIX-based computer operating systems. It supports the Remote Desktop Protocol, VNC, NX, XDMCP, SPICE and SSH protocols.\r\n\r\nWith this container you can connect through VNC to your RDP session, SSH,...\r\n\r\nIn the Docker Hub description for the container is a example how to reverse proxy noVNC with nginx and secure it via http basic authentification.",
    "categories": [
      "Network:Other",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Remmina is a remote desktop client for POSIX-based computer operating systems. It supports the Remote Desktop Protocol, VNC, NX, XDMCP, SPICE and SSH protocols.\r\n\r\nWith this container you can connect through VNC to your RDP session, SSH,...\r\n\r\nIn the Docker Hub description for the container is a example how to reverse proxy noVNC with nginx and secure it via http basic authentification.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/remmina.png",
    "name": "Remmina",
    "image": "ich777/remmina",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/remmina",
        "bind": "/mnt/cache/appdata/remmina"
      }
    ],
    "env": [
      {
        "name": "CUSTOM_RES_W",
        "label": "CUSTOM_RES_W",
        "default": "1280"
      },
      {
        "name": "CUSTOM_RES_H",
        "label": "CUSTOM_RES_H",
        "default": "1024"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      }
    ]
  },
  {
    "type": 1,
    "title": "RUST",
    "description": "This Docker will download and install SteamCMD. It will also install RUST and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install RUST and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/rust.png",
    "name": "RUST",
    "image": "ich777/steamcmd:rust",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "28015": "28015:28015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/rust"
      }
    ],
    "env": [
      {
        "name": "SERVER_NAME",
        "label": "SERVER_NAME",
        "default": "RustDockerServer"
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "28015"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+server.maxplayers 10"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "258550"
      },
      {
        "name": "SERVER_DISCRIPTION",
        "label": "SERVER_DISCRIPTION",
        "default": "Simple Unraid Rust Docker Server"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "SABnzbd",
    "description": "SABnzbd is a program to download binary files from Usenet servers. Many people upload all sorts of interesting material to Usenet and you need a special program to get this material with the least effort.\r\n\r\nUPDATE: The container will check on every start/restart if there is a newer version available (you can also choose between stabel and prereleases and switch between them - keep in mind sometimes downgrading from a prerelease version could break your configuration).\r\n\r\nMANUAL VERSION: You can also set a version manually by typing in the version number that you want to use for example: '3.0.1' (without quotes) - you can also change it to 'latest' or 'prerelease' like described above.\r\n\r\nATTENTION: Don't change the IP adress or the port in the SABnzbd config itself - please also note if you change the WebGUI port from 8080 to anything else that it can happen that you have close and reopen the webpage since SABnzbd want's to redirect you to the wrong port after the initial setup.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "SABnzbd is a program to download binary files from Usenet servers. Many people upload all sorts of interesting material to Usenet and you need a special program to get this material with the least effort.\r\n\r\nUPDATE: The container will check on every start/restart if there is a newer version available (you can also choose between stabel and prereleases and switch between them - keep in mind sometimes downgrading from a prerelease version could break your configuration).\r\n\r\nMANUAL VERSION: You can also set a version manually by typing in the version number that you want to use for example: '3.0.1' (without quotes) - you can also change it to 'latest' or 'prerelease' like described above.\r\n\r\nATTENTION: Don't change the IP adress or the port in the SABnzbd config itself - please also note if you change the WebGUI port from 8080 to anything else that it can happen that you have close and reopen the webpage since SABnzbd want's to redirect you to the wrong port after the initial setup.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/sabnzbd.png",
    "name": "SABnzbd",
    "image": "ich777/sabnzbd",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp",
        "9090": "9090:9090/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/sabnzbd",
        "bind": "/mnt/cache/appdata/sabnzbd"
      },
      {
        "container": "/mnt/downloads",
        "bind": "/mnt/user/Downloads/"
      },
      {
        "container": "/mnt/incomplete",
        "bind": "/mnt/user/Downloads/incomplete/"
      }
    ],
    "env": [
      {
        "name": "SABNZBD_REL",
        "label": "SABNZBD_REL",
        "default": "latest"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "0000"
      }
    ]
  },
  {
    "type": 1,
    "title": "SCP-SecretLaboratory",
    "description": "This Docker will download and install SteamCMD. It will also install SCP:Secret Laboratory with MultiAdmin and ServerMod and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!\r\nCONSOLE: To connect to the console open up a terminal and type in: 'docker exec -u steam -ti NAMEOFYOURCONTAINER screen -xS SCP' (without quotes), to disconnect from the console simply close the window.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install SCP:Secret Laboratory with MultiAdmin and ServerMod and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!\r\nCONSOLE: To connect to the console open up a terminal and type in: 'docker exec -u steam -ti NAMEOFYOURCONTAINER screen -xS SCP' (without quotes), to disconnect from the console simply close the window.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/scp-secretlaboratory.png",
    "name": "SCP-SecretLaboratory",
    "image": "ich777/steamcmd:scp-secretlaboratory",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "7777": "7777:7777/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/scp-secretlaboratory"
      }
    ],
    "env": [
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "996560"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Sonarr",
    "description": "Sonarr is a PVR for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.\r\n\r\nUPDATE: The container will check on every start/restart if there is a newer version available (you can also choose between stabel and nightly version - keep in mind that switching from a stable to a nightly version and vice versa can break the container).\r\n\r\nMANUAL VERSION: You can also set a version manually by typing in the version number that you want to use for example: '2.0.0.5250' (without quotes) - you can also change it to 'latest' or 'nightly' like described above.\r\n\r\nATTENTION: Don't change the port in the Sonarr config itself.\r\n\r\nMIGRATION: If you are migrating from another Container please be sure to deltete the files/folders 'logs', 'xdg' and 'config.xml', don't forget to change the root folder for your movies to '/mnt/tv' and select 'No, I'll Move the Files Myself'!",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "Sonarr is a PVR for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.\r\n\r\nUPDATE: The container will check on every start/restart if there is a newer version available (you can also choose between stabel and nightly version - keep in mind that switching from a stable to a nightly version and vice versa can break the container).\r\n\r\nMANUAL VERSION: You can also set a version manually by typing in the version number that you want to use for example: '2.0.0.5250' (without quotes) - you can also change it to 'latest' or 'nightly' like described above.\r\n\r\nATTENTION: Don't change the port in the Sonarr config itself.\r\n\r\nMIGRATION: If you are migrating from another Container please be sure to deltete the files/folders 'logs', 'xdg' and 'config.xml', don't forget to change the root folder for your movies to '/mnt/tv' and select 'No, I'll Move the Files Myself'!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/sonarr.png",
    "name": "Sonarr",
    "image": "ich777/sonarr",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8989": "8989:8989/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/sonarr",
        "bind": "/mnt/cache/appdata/sonarr"
      },
      {
        "container": "/mnt/tv",
        "bind": "/mnt/user/TV-Shows/"
      },
      {
        "container": "/mnt/downloads",
        "bind": "/mnt/user/Downloads/"
      }
    ],
    "env": [
      {
        "name": "SONARR_REL",
        "label": "SONARR_REL",
        "default": "nightly"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "0000"
      },
      {
        "name": "MONO_START_PARAMS",
        "label": "MONO_START_PARAMS",
        "default": "--debug"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      }
    ]
  },
  {
    "type": 1,
    "title": "Squad",
    "description": "This Docker will download and install SteamCMD. It will also install Squad and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Squad and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/squad.png",
    "name": "Squad",
    "image": "ich777/steamcmd:squad",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "21114": "21114:21114/tcp",
        "27165": "27165:27165/udp",
        "27166": "27166:27166/udp",
        "7787": "7787:7787/udp",
        "7788": "7788:7788/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/squad"
      }
    ],
    "env": [
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "403240"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "Port=7787 QueryPort=27165"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Starbound",
    "description": "This Docker will download and install SteamCMD. It will also install Starbound (Valid Steam useraccount with the game purchased and Steam Guard disabled required) and run it.\r\n\r\nATTENTION: For this Docker you have to specify a valid Steam user with Steam Guard disabled and the game purchased otherwise you will get a no subscription error and the gamefiles won't download!\r\nIf you don't want to disable Steam Guard you can install the Docker as normal, click on it and open a console window and type in: '${STEAMCMD_DIR}/steamcmd.sh +login USERNAME PASSWORD +force_install_dir ${SERVER_DIR} +app_update ${GAME_ID} +quit' (without quotes and replace 'USERNAME' and 'PASSWORD' with your credentials), then enter the Steam Guard key and after the command finishes just restart the Docker.\r\n\r\nFirst Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Starbound (Valid Steam useraccount with the game purchased and Steam Guard disabled required) and run it.\r\n\r\nATTENTION: For this Docker you have to specify a valid Steam user with Steam Guard disabled and the game purchased otherwise you will get a no subscription error and the gamefiles won't download!\r\nIf you don't want to disable Steam Guard you can install the Docker as normal, click on it and open a console window and type in: '${STEAMCMD_DIR}/steamcmd.sh +login USERNAME PASSWORD +force_install_dir ${SERVER_DIR} +app_update ${GAME_ID} +quit' (without quotes and replace 'USERNAME' and 'PASSWORD' with your credentials), then enter the Steam Guard key and after the command finishes just restart the Docker.\r\n\r\nFirst Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/starbound.png",
    "name": "Starbound",
    "image": "ich777/steamcmd:starbound",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "21025": "21025:21025/tcp",
        "21026": "21026:21026/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/starbound"
      }
    ],
    "env": [
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "533830"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "StarMade",
    "description": "This container will download and install a StarMade Dedicated Server. It will also install a basic server.cfg at the first startup.\r\n\r\nUPDATE: The container will check on every restart if there is a newer version of StarMade available.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This container will download and install a StarMade Dedicated Server. It will also install a basic server.cfg at the first startup.\r\n\r\nUPDATE: The container will check on every restart if there is a newer version of StarMade available.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/starmade.png",
    "name": "StarMade",
    "image": "ich777/starmade-server",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "4242": "4242:4242/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/starmade",
        "bind": "/mnt/cache/appdata/starmade"
      }
    ],
    "env": [
      {
        "name": "XMS_SIZE",
        "label": "XMS_SIZE",
        "default": "1024"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "STARTER_PARAMS",
        "label": "STARTER_PARAMS",
        "default": "-nogui"
      },
      {
        "name": "DL_URL",
        "label": "DL_URL",
        "default": "http://files.star-made.org/StarMade-Starter.jar"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "XMX_SIZE",
        "label": "XMX_SIZE",
        "default": "1024"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      },
      {
        "name": "RUNTIME_NAME",
        "label": "RUNTIME_NAME",
        "default": "basicjre"
      }
    ]
  },
  {
    "type": 1,
    "title": "Stationeers",
    "description": "This Docker will download and install SteamCMD. It will also install Stationeers and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Stationeers and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/stationeers.png",
    "name": "Stationeers",
    "image": "ich777/steamcmd:stationeers",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp",
        "27500": "27500:27500/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/stationeers"
      }
    ],
    "env": [
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "600760"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-autosaveinterval=300"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Stun-Turn-Server",
    "description": "This is a Basic STUN \u0026amp; TURN server that was mainly created for Nextcloud Talk.\r\n\r\nIt is fully automated and will create all the necessary files and passwords so that the server can sucessfully start and run.\r\n\r\nPlease read all the discriptions from the Variables carefully and also look at the 'Show more settings' tab.\r\n\r\nATTENTION: Please ignore the socket errors after the server startup if you don't have IPv6 enabled on your server.",
    "categories": [
      "Network:"
    ],
    "platform": "linux",
    "note": "This is a Basic STUN \u0026amp; TURN server that was mainly created for Nextcloud Talk.\r\n\r\nIt is fully automated and will create all the necessary files and passwords so that the server can sucessfully start and run.\r\n\r\nPlease read all the discriptions from the Variables carefully and also look at the 'Show more settings' tab.\r\n\r\nATTENTION: Please ignore the socket errors after the server startup if you don't have IPv6 enabled on your server.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/stun-turn.png",
    "name": "Stun-Turn-Server",
    "image": "ich777/stun-turn-server",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5349": "5349:5349/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/stun-turn",
        "bind": "/mnt/cache/appdata/stun-turn-server"
      }
    ],
    "env": [
      {
        "name": "CERT_LENGTH",
        "label": "CERT_LENGTH",
        "default": "2048"
      },
      {
        "name": "CA_LOCALITY",
        "label": "CA_LOCALITY",
        "default": "None"
      },
      {
        "name": "DH_LENGTH",
        "label": "DH_LENGTH",
        "default": "2048"
      },
      {
        "name": "CLI_PASSWORD",
        "label": "CLI_PASSWORD",
        "default": ""
      },
      {
        "name": "LISTENING_IP",
        "label": "LISTENING_IP",
        "default": "0.0.0.0"
      },
      {
        "name": "PORT",
        "label": "PORT",
        "default": "5349"
      },
      {
        "name": "DISPLAY_SECRETS",
        "label": "DISPLAY_SECRETS",
        "default": "true"
      },
      {
        "name": "PRIVKEY_FILE",
        "label": "PRIVKEY_FILE",
        "default": "privkey.pem"
      },
      {
        "name": "DH_FILE",
        "label": "DH_FILE",
        "default": "dhparam.pem"
      },
      {
        "name": "MAX_BPS",
        "label": "MAX_BPS",
        "default": "0"
      },
      {
        "name": "CA_ORGANIZATION",
        "label": "CA_ORGANIZATION",
        "default": "None"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "REALM",
        "label": "REALM",
        "default": "minenet.at"
      },
      {
        "name": "CERT_FILE",
        "label": "CERT_FILE",
        "default": "cert.pem"
      },
      {
        "name": "CERT_VALID_DAYS",
        "label": "CERT_VALID_DAYS",
        "default": "3650"
      },
      {
        "name": "CA_STATE_PROV",
        "label": "CA_STATE_PROV",
        "default": "None"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      },
      {
        "name": "CA_COUNTRY",
        "label": "CA_COUNTRY",
        "default": "US"
      },
      {
        "name": "CIPHER_LIST",
        "label": "CIPHER_LIST",
        "default": "ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384"
      },
      {
        "name": "TOTAL_QUOTA",
        "label": "TOTAL_QUOTA",
        "default": "100"
      },
      {
        "name": "SECRET",
        "label": "SECRET",
        "default": ""
      },
      {
        "name": "EXTRA_PARAMS",
        "label": "EXTRA_PARAMS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "SvenCOOP",
    "description": "This Docker will download and install SteamCMD. It will also install Sven CO-OP and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Sven CO-OP and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/svencoop.png",
    "name": "SvenCOOP",
    "image": "ich777/steamcmd:svencoop",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/svencoop"
      }
    ],
    "env": [
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "276060"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+maxplayers 20 +map hl_c00.bsp +servercfgfile servers/server.cfg"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "TeamFortress-Classic",
    "description": "This Docker will download and install SteamCMD. It will also install TeamFortress-Classic and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install TeamFortress-Classic and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/tfclassic.png",
    "name": "TeamFortress-Classic",
    "image": "ich777/steamcmd:tf",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/tfclassic"
      }
    ],
    "env": [
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "tfc"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-secure +maxplayers 32 +map 2fort"
      },
      {
        "name": "GAME_MOD",
        "label": "GAME_MOD",
        "default": "90 mod tfc"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "90 +app_set_config '90 mod tfc'"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "TeamFortress2",
    "description": "This Docker will download and install TeamFortress2 and run it.\r\n\r\nIt will also install SteamCMD (you can have multiple installations with only one steamcmd directory, check out my other containers).\r\n\r\nATTENTION: First Startup can take very long since it downloads the game server files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install TeamFortress2 and run it.\r\n\r\nIt will also install SteamCMD (you can have multiple installations with only one steamcmd directory, check out my other containers).\r\n\r\nATTENTION: First Startup can take very long since it downloads the game server files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/tf2.png",
    "name": "TeamFortress2",
    "image": "ich777/steamcmd:tf2",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/tf2"
      }
    ],
    "env": [
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "232250"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "tf"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+sv_pure 1 +randommap +maxplayers 24"
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "TeamSpeak3",
    "description": "This container will download and install TeamSpeak3 Server.\r\n\r\nFIRST RUN: at first run the token will be displayed in the log (also don't forget to accept the license in the template).\r\n\r\nUPDATE NOTICE: The container will check on every start/restart if there is a newer version of the server available and install it.",
    "categories": [
      "Network:Voip"
    ],
    "platform": "linux",
    "note": "This container will download and install TeamSpeak3 Server.\r\n\r\nFIRST RUN: at first run the token will be displayed in the log (also don't forget to accept the license in the template).\r\n\r\nUPDATE NOTICE: The container will check on every start/restart if there is a newer version of the server available and install it.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/teamspeak3.png",
    "name": "TeamSpeak3",
    "image": "ich777/teamspeak",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "10011": "10011:10011/tcp",
        "30033": "30033:30033/tcp",
        "9987": "9987:9987/udp"
      }
    ],
    "volumes": [
      {
        "container": "/teamspeak",
        "bind": "/mnt/cache/appdata/teamspeak3"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      },
      {
        "name": "TS3SERVER_LICENSE",
        "label": "TS3SERVER_LICENSE",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Teeworlds",
    "description": "This Docker will download and install a simple Teeworlds Dedicated server with a autoexec.cfg, dm.cfg, tdm.cfg \u0026amp; ctf.cfg preconfigured (the only thing that need to be changed is the Server Name and the RCON Password in the autoexec.cfg).\r\n\r\nATTENTION: Please don't delete the tar.gz file in the main directory!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available and the container will download and install it.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install a simple Teeworlds Dedicated server with a autoexec.cfg, dm.cfg, tdm.cfg \u0026amp; ctf.cfg preconfigured (the only thing that need to be changed is the Server Name and the RCON Password in the autoexec.cfg).\r\n\r\nATTENTION: Please don't delete the tar.gz file in the main directory!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available and the container will download and install it.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/teeworlds.png",
    "name": "Teeworlds",
    "image": "ich777/teeworldsserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8303": "8303:8303/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles/",
        "bind": "/mnt/cache/appdata/teeworlds/"
      }
    ],
    "env": [
      {
        "name": "GAME_CONFIG",
        "label": "GAME_CONFIG",
        "default": "dm.cfg"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Terraria",
    "description": "This Docker will download and install Terraria and run it. SERVER PASSWORD: Docker\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files and creates the map!\r\n\r\nUpdate Notice: The Container will check on every start/restart if there is a newer version of the game available and install it if so.\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS Terraria' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install Terraria and run it. SERVER PASSWORD: Docker\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files and creates the map!\r\n\r\nUpdate Notice: The Container will check on every start/restart if there is a newer version of the game available and install it if so.\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS Terraria' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/terraria.png",
    "name": "Terraria",
    "image": "ich777/terrariaserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "7777": "7777:7777/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/terraria"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-config serverconfig.txt"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Terraria-tModloader",
    "description": "This Docker will download and install Terraria and the tModloader and run it. SERVER PASSWORD: Docker\r\n\r\nATTENTION: The Container will check on every start/restart if there is a newer version of the game available and install it if so.\r\n\r\nUpdate Notice: Change the game version to whatever version do you want and restart the container.\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS Terraria' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install Terraria and the tModloader and run it. SERVER PASSWORD: Docker\r\n\r\nATTENTION: The Container will check on every start/restart if there is a newer version of the game available and install it if so.\r\n\r\nUpdate Notice: Change the game version to whatever version do you want and restart the container.\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS Terraria' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/terraria-tmodloader.png",
    "name": "Terraria-tModloader",
    "image": "ich777/terrariaserver:tmodloader",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "7777": "7777:7777/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/terraria-tmodloader"
      }
    ],
    "env": [
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-config serverconfig.txt"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "Terraria-TShock",
    "description": "This Docker will download and install Terraria and the TShock MOD and run it. SERVER PASSWORD: Docker\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files and creates the map!\r\n\r\nUpdate Notice: The Container will check on every start/restart if there is a newer version of the game available and install it if so.\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS Terraria' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install Terraria and the TShock MOD and run it. SERVER PASSWORD: Docker\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files and creates the map!\r\n\r\nUpdate Notice: The Container will check on every start/restart if there is a newer version of the game available and install it if so.\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS Terraria' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/terraria-tshock.png",
    "name": "Terraria-TShock",
    "image": "ich777/terrariaserver:tshock",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "7777": "7777:7777/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/terraria-tshock"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-config serverconfig.txt"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "TheForest",
    "description": "This Docker will download and install SteamCMD. It will also install The Forest and run it. SERVERNAME: 'The Forest Docker' SERVERPASSWORD: 'Docker' ADMINPASSWORD: 'adminDocker' (you can change this in your SERVERFOLDER/config/config.cfg)\r\n\r\nBETA Warning: Since this Docker runs with WINE it's marked as BETA, i can not guarantee if the server is running always as expected!\r\n\r\nCreate your token here: https://steamcommunity.com/dev/managegameservers (please note that you must generate the token for the APPID: '242760' and every gameserver needs it's own token!!!)\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install The Forest and run it. SERVERNAME: 'The Forest Docker' SERVERPASSWORD: 'Docker' ADMINPASSWORD: 'adminDocker' (you can change this in your SERVERFOLDER/config/config.cfg)\r\n\r\nBETA Warning: Since this Docker runs with WINE it's marked as BETA, i can not guarantee if the server is running always as expected!\r\n\r\nCreate your token here: https://steamcommunity.com/dev/managegameservers (please note that you must generate the token for the APPID: '242760' and every gameserver needs it's own token!!!)\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/theforest.png",
    "name": "TheForest",
    "image": "ich777/steamcmd:theforest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp",
        "27016": "27016:27016/udp",
        "8766": "8766:8766/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/theforest"
      }
    ],
    "env": [
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "556450"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "TheLounge",
    "description": "TheLonge is the self-hosted web IRC client.\r\nModern features brought to IRC, Always connected, Responsive interface, Synchronized experience\r\nThe Lounge is the official and community-managed fork of Shout, by Mattias Erming.\r\n\r\nMultiple Users: If you want to create a new user simply change the name in the 'Username' variable and also the 'Password' variable, this will have no impact to existing users (the 'Username' variable can't be empty and should always have a username in it that is available on the server).",
    "categories": [
      "Network:Other",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "TheLonge is the self-hosted web IRC client.\r\nModern features brought to IRC, Always connected, Responsive interface, Synchronized experience\r\nThe Lounge is the official and community-managed fork of Shout, by Mattias Erming.\r\n\r\nMultiple Users: If you want to create a new user simply change the name in the 'Username' variable and also the 'Password' variable, this will have no impact to existing users (the 'Username' variable can't be empty and should always have a username in it that is available on the server).",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/thelounge.png",
    "name": "TheLounge",
    "image": "ich777/thelounge",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "9000": "9000:9000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/thelounge",
        "bind": "/mnt/cache/appdata/thelounge"
      }
    ],
    "env": [
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "USERPASSWORD",
        "label": "USERPASSWORD",
        "default": ""
      },
      {
        "name": "SAVELOG",
        "label": "SAVELOG",
        "default": "yes"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      }
    ]
  },
  {
    "type": 1,
    "title": "Thunderbird",
    "description": "This container will download and install Thunderbird in the preferred version and language.\r\n\r\nUPDATE: The container will check on every restart if there is a newer version available.\r\n\r\nATTENTION: If you want to change the language, you have to delete every file in the 'thunderbird' directory except the 'profile' folder.\r\n\r\nRESOLUTION: You can also change the resolution from the WebGUI, to do that simply click on 'Show more settings...' (on a resolution change it can occour that the screen is not filled entirely with the Thunderbird window, simply restart the container and it will be fullscreen again).",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "This container will download and install Thunderbird in the preferred version and language.\r\n\r\nUPDATE: The container will check on every restart if there is a newer version available.\r\n\r\nATTENTION: If you want to change the language, you have to delete every file in the 'thunderbird' directory except the 'profile' folder.\r\n\r\nRESOLUTION: You can also change the resolution from the WebGUI, to do that simply click on 'Show more settings...' (on a resolution change it can occour that the screen is not filled entirely with the Thunderbird window, simply restart the container and it will be fullscreen again).",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/thunderbird.png",
    "name": "Thunderbird",
    "image": "ich777/thunderbird",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/thunderbird",
        "bind": "/mnt/cache/appdata/thunderbird/"
      }
    ],
    "env": [
      {
        "name": "THUNDERBIRD_V",
        "label": "THUNDERBIRD_V",
        "default": "latest"
      },
      {
        "name": "THUNDERBIRD_LANG",
        "label": "THUNDERBIRD_LANG",
        "default": "en-US"
      },
      {
        "name": "CUSTOM_RES_W",
        "label": "CUSTOM_RES_W",
        "default": "1280"
      },
      {
        "name": "CUSTOM_RES_H",
        "label": "CUSTOM_RES_H",
        "default": "768"
      },
      {
        "name": "EXTRA_PARAMETERS",
        "label": "EXTRA_PARAMETERS",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      }
    ]
  },
  {
    "type": 1,
    "title": "Unraid-Kernel-Helper",
    "description": "With this container you can build your own customized Unraid Kernel.\r\n\r\nBy default it will create the Kernel/Firmware/Modules/Rootfilesystem with the nVidia drivers and also DVB driver (DigitalDevices, LibreElec, XBOX One USB Adapter and TBS OpenSource drivers built in).\r\n\r\nnVidia Driver installation: If you build the container with the nVidia drivers please make sure that no other process is using the graphics card otherwise the installation will fail and no nVidia drivers will be installed.\r\n\r\nATTENTION: Please read the description of the variables carefully! If you started the container don't interrupt the build process, the container will automatically shut down if everything is finished. I recommend to open the log window, the build itself can take very long depending on your hardware but should be done in ~30minutes).\r\n\r\nTHIS CONTAINER WILL NOT CHANGE ANYTHING TO YOUR EXISTING INSTALLATION OR ON YOUR USB KEY/DRIVE, YOU HAVE TO MANUALLY PUT THE CREATED FILES IN THE OUTPUT FOLDER TO YOUR USB KEY/DRIVE.\r\n\r\nUPDATE: If a new Update of Unraid is released you have to change the Repository to the corresponding build number (I will create the appropriate container as soon as possible) eg: 'ich777/unraid-kernel-helper:6.8.3' please also redownload the template from the CA App to keep the template up to date.\r\n\r\nATTENTION: PLEASE BACKUP YOUR EXISTING USB DRIVE FILES TO YOUR LOCAL COMPUTER IN CASE SOMETHING GOES WRONG!\r\nI AM NOT RESPONSIBLE IF YOU BREAK YOUR SERVER OR SOMETHING OTHER WITH THIS CONTAINER, THIS CONTAINER IS THERE TO HELP YOU EASILY BUILD A NEW IMAGE AND UNDERSTAND HOW THIS IS WORKING.\r\n\r\nForum Notice: When something isn't working with your server and you make a post on the forum always note that you use a Kernel built by this container!",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "With this container you can build your own customized Unraid Kernel.\r\n\r\nBy default it will create the Kernel/Firmware/Modules/Rootfilesystem with the nVidia drivers and also DVB driver (DigitalDevices, LibreElec, XBOX One USB Adapter and TBS OpenSource drivers built in).\r\n\r\nnVidia Driver installation: If you build the container with the nVidia drivers please make sure that no other process is using the graphics card otherwise the installation will fail and no nVidia drivers will be installed.\r\n\r\nATTENTION: Please read the description of the variables carefully! If you started the container don't interrupt the build process, the container will automatically shut down if everything is finished. I recommend to open the log window, the build itself can take very long depending on your hardware but should be done in ~30minutes).\r\n\r\nTHIS CONTAINER WILL NOT CHANGE ANYTHING TO YOUR EXISTING INSTALLATION OR ON YOUR USB KEY/DRIVE, YOU HAVE TO MANUALLY PUT THE CREATED FILES IN THE OUTPUT FOLDER TO YOUR USB KEY/DRIVE.\r\n\r\nUPDATE: If a new Update of Unraid is released you have to change the Repository to the corresponding build number (I will create the appropriate container as soon as possible) eg: 'ich777/unraid-kernel-helper:6.8.3' please also redownload the template from the CA App to keep the template up to date.\r\n\r\nATTENTION: PLEASE BACKUP YOUR EXISTING USB DRIVE FILES TO YOUR LOCAL COMPUTER IN CASE SOMETHING GOES WRONG!\r\nI AM NOT RESPONSIBLE IF YOU BREAK YOUR SERVER OR SOMETHING OTHER WITH THIS CONTAINER, THIS CONTAINER IS THERE TO HELP YOU EASILY BUILD A NEW IMAGE AND UNDERSTAND HOW THIS IS WORKING.\r\n\r\nForum Notice: When something isn't working with your server and you make a post on the forum always note that you use a Kernel built by this container!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/unraid-kernel.png",
    "name": "Unraid-Kernel-Helper",
    "image": "ich777/unraid-kernel-helper:6.8.3",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/usr/src",
        "bind": "/mnt/cache/appdata/kernel"
      },
      {
        "container": "/host/boot",
        "bind": "/boot"
      }
    ],
    "env": [
      {
        "name": "CREATE_BACKUP",
        "label": "CREATE_BACKUP",
        "default": "true"
      },
      {
        "name": "SAVE_LOG",
        "label": "SAVE_LOG",
        "default": "false"
      },
      {
        "name": "BUILD_JOYDEV",
        "label": "BUILD_JOYDEV",
        "default": "false"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "BUILD_MLX_MFT",
        "label": "BUILD_MLX_MFT",
        "default": "false"
      },
      {
        "name": "CLEANUP",
        "label": "CLEANUP",
        "default": "moderate"
      },
      {
        "name": "NV_DRV_V",
        "label": "NV_DRV_V",
        "default": "latest"
      },
      {
        "name": "DD_DRV_V",
        "label": "DD_DRV_V",
        "default": "latest"
      },
      {
        "name": "LIBNVIDIA_CONTAINER_V",
        "label": "LIBNVIDIA_CONTAINER_V",
        "default": "latest"
      },
      {
        "name": "BUILD_ZFS",
        "label": "BUILD_ZFS",
        "default": "latest"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      },
      {
        "name": "BEEP",
        "label": "BEEP",
        "default": "true"
      },
      {
        "name": "BUILD_DVB",
        "label": "BUILD_DVB",
        "default": "true"
      },
      {
        "name": "DVB_TYPE",
        "label": "DVB_TYPE",
        "default": "libreelec"
      },
      {
        "name": "SECCOMP_V",
        "label": "SECCOMP_V",
        "default": "latest"
      },
      {
        "name": "RTSLIB_FB_V",
        "label": "RTSLIB_FB_V",
        "default": "latest"
      },
      {
        "name": "ZFS_V",
        "label": "ZFS_V",
        "default": "latest"
      },
      {
        "name": "CPU_COUNT",
        "label": "CPU_COUNT",
        "default": "all"
      },
      {
        "name": "CUSTOM_MODE",
        "label": "CUSTOM_MODE",
        "default": ""
      },
      {
        "name": "LE_DRV_V",
        "label": "LE_DRV_V",
        "default": "latest"
      },
      {
        "name": "IMAGES_FILE_PATH",
        "label": "IMAGES_FILE_PATH",
        "default": "/usr/src/stock"
      },
      {
        "name": "NVIDIA_CONTAINER_RUNTIME_V",
        "label": "NVIDIA_CONTAINER_RUNTIME_V",
        "default": "latest"
      },
      {
        "name": "CONFIGSHELL_FB_V",
        "label": "CONFIGSHELL_FB_V",
        "default": "latest"
      },
      {
        "name": "BUILD_NVIDIA",
        "label": "BUILD_NVIDIA",
        "default": "true"
      },
      {
        "name": "ENABLE_i915",
        "label": "ENABLE_i915",
        "default": "false"
      },
      {
        "name": "CONTAINER_TOOLKIT_V",
        "label": "CONTAINER_TOOLKIT_V",
        "default": "latest"
      },
      {
        "name": "MLX_MFT_V",
        "label": "MLX_MFT_V",
        "default": "latest"
      },
      {
        "name": "TARGETCLI_FB_V",
        "label": "TARGETCLI_FB_V",
        "default": "latest"
      },
      {
        "name": "BUILD_ISCSI",
        "label": "BUILD_ISCSI",
        "default": "false"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "USER_PATCHES",
        "label": "USER_PATCHES",
        "default": ""
      },
      {
        "name": "BETA_BUILD",
        "label": "BETA_BUILD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Unturned",
    "description": "This Docker will download and install SteamCMD. It will also install Unturned and run it (if you want to install Rocket Mod set the Variable 'Install Rocket Mod' to 'true' without quotes).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Unturned and run it (if you want to install Rocket Mod set the Variable 'Install Rocket Mod' to 'true' without quotes).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/unturned.png",
    "name": "Unturned",
    "image": "ich777/steamcmd:unturned",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/tcp",
        "27016": "27016:27016/tcp",
        "27017": "27017:27017/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/unturned"
      }
    ],
    "env": [
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "ROCKET_FORCE_UPDATE",
        "label": "ROCKET_FORCE_UPDATE",
        "default": ""
      },
      {
        "name": "ROCKET_URL",
        "label": "ROCKET_URL",
        "default": "https://ci.rocketmod.net/job/Rocket.Unturned/lastSuccessfulBuild/artifact/Rocket.Unturned/bin/Release/Rocket.zip"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "1110390"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-pei -normal -nosync -pve"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "ROCKET_MOD",
        "label": "ROCKET_MOD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Vintage-Story",
    "description": "This is a Basic Vintage Story Server it will download and install Vintage Story Server and run it.\r\n\r\nUPDATE NOTICE: The container will check on every start/restart if there is a newer version available.\r\n\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u vintagestory -ti NAMEOFYOURCONTAINER screen -xS VintageStory' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This is a Basic Vintage Story Server it will download and install Vintage Story Server and run it.\r\n\r\nUPDATE NOTICE: The container will check on every start/restart if there is a newer version available.\r\n\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u vintagestory -ti NAMEOFYOURCONTAINER screen -xS VintageStory' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/vintagestory.png",
    "name": "Vintage-Story",
    "image": "ich777/vintagestory",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "42420": "42420:42420/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/vintagestory",
        "bind": "/mnt/cache/appdata/vintagestory"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Windward",
    "description": "This Docker will download and install Windwardand run it.\r\n\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u windward -ti NAMEOFYOURCONTAINER screen -xS Windward' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install Windwardand run it.\r\n\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u windward -ti NAMEOFYOURCONTAINER screen -xS Windward' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/windward.png",
    "name": "Windward",
    "image": "ich777/windward",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5127": "5127:5127/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/windward",
        "bind": "/mnt/cache/appdata/windward"
      }
    ],
    "env": [
      {
        "name": "FORCE_UPDATE",
        "label": "FORCE_UPDATE",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-name \"Docker Windward\" -world \"World\" -tcp 5127 -public"
      },
      {
        "name": "ADMIN",
        "label": "ADMIN",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "WurmUnlimited",
    "description": "This Docker will download and install SteamCMD. It will also install Wurm Unlimited with or without the Server-ModLauncher and run it.\r\n(You can also copy over the 'Creative' or 'Adventure' folder if you want to create a Server with the provided Servertool that comes with the game)\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Wurm Unlimited with or without the Server-ModLauncher and run it.\r\n(You can also copy over the 'Creative' or 'Adventure' folder if you want to create a Server with the provided Servertool that comes with the game)\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/wurmunlimited.png",
    "name": "WurmUnlimited",
    "image": "ich777/steamcmd:wurmunlimited",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27020": "27020:27020/udp",
        "3724": "3724:3724/tcp",
        "8766": "8766:8766/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/wurmunlimited"
      }
    ],
    "env": [
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "MOD_LAUNCHER",
        "label": "MOD_LAUNCHER",
        "default": ""
      },
      {
        "name": "WU_ADMINPWD",
        "label": "WU_ADMINPWD",
        "default": "adminDocker"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "WU_PWD",
        "label": "WU_PWD",
        "default": "Docker"
      },
      {
        "name": "WU_MAXPLAYERS",
        "label": "WU_MAXPLAYERS",
        "default": "150"
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "3724"
      },
      {
        "name": "WU_QUERYPORT",
        "label": "WU_QUERYPORT",
        "default": "27020"
      },
      {
        "name": "WU_EPICSERVERS",
        "label": "WU_EPICSERVERS",
        "default": "false"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "402370"
      },
      {
        "name": "WU_SERVERNAME",
        "label": "WU_SERVERNAME",
        "default": "DockerServer"
      },
      {
        "name": "WU_HOMESERVER",
        "label": "WU_HOMESERVER",
        "default": "true"
      },
      {
        "name": "WU_HOMEKINGDOM",
        "label": "WU_HOMEKINGDOM",
        "default": "4"
      },
      {
        "name": "GAME_MODE",
        "label": "GAME_MODE",
        "default": "Creative"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "WU_LOGINSERVER",
        "label": "WU_LOGINSERVER",
        "default": "true"
      }
    ]
  },
  {
    "type": 1,
    "title": "XLink-Kai-Evolution",
    "description": "This Docker will download and install XLink Kai: Evolution.\r\n\r\nXLink Kai: Evolution VII lets you connect with other console users around the world, and play online games for free. XLink Kai: Evo VII tricks your console into thinking that the other users it is connecting to over the Internet, are actually part of a Local Area Network. This is the basis of system-link gaming, where friends would gather around in the same house and play over 2 or more consoles. With XLink Kai: Evo VII, you now have the option to test your skills out with anybody in the world. As for the technical aspects of tunnelling network packets, we won't bore you with that...\r\n\r\nPlease note that you need an XLink Kai: Evolution XTag (XLink Kai Gamertag) you can register it here: https://www.teamxlink.co.uk/?go=register\r\n\r\nUPDATE NOTICE: The container will check on every start/restart if there is a newer version of XLink Kai: Evolution and update it.\r\n\r\nATTENTION: This container must be run with the network set to 'Host' mode!\r\nBy default you must open the port 30000 UDP to enable communications with the Orbs to play online.\r\n\r\nPlease also check out the website of XLink Kai Evolution: https://www.teamxlink.co.uk/ huge thanks go to CrunchBite!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install XLink Kai: Evolution.\r\n\r\nXLink Kai: Evolution VII lets you connect with other console users around the world, and play online games for free. XLink Kai: Evo VII tricks your console into thinking that the other users it is connecting to over the Internet, are actually part of a Local Area Network. This is the basis of system-link gaming, where friends would gather around in the same house and play over 2 or more consoles. With XLink Kai: Evo VII, you now have the option to test your skills out with anybody in the world. As for the technical aspects of tunnelling network packets, we won't bore you with that...\r\n\r\nPlease note that you need an XLink Kai: Evolution XTag (XLink Kai Gamertag) you can register it here: https://www.teamxlink.co.uk/?go=register\r\n\r\nUPDATE NOTICE: The container will check on every start/restart if there is a newer version of XLink Kai: Evolution and update it.\r\n\r\nATTENTION: This container must be run with the network set to 'Host' mode!\r\nBy default you must open the port 30000 UDP to enable communications with the Orbs to play online.\r\n\r\nPlease also check out the website of XLink Kai Evolution: https://www.teamxlink.co.uk/ huge thanks go to CrunchBite!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/xlinkkai.png",
    "name": "XLink-Kai-Evolution",
    "image": "ich777/xlinkkaievolution",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/xlinkkaievolution",
        "bind": "/mnt/cache/appdata/xlinkkaievolution/"
      }
    ],
    "env": [
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "UDP_PORT",
        "label": "UDP_PORT",
        "default": "30000"
      },
      {
        "name": "INTERFACE_NAME",
        "label": "INTERFACE_NAME",
        "default": "eth0"
      },
      {
        "name": "EXTRA_PARAMS",
        "label": "EXTRA_PARAMS",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "Xonotic",
    "description": "This Docker will download and install the preferred version of Xonotic.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: If you want to update the game simply change the version number.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install the preferred version of Xonotic.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: If you want to update the game simply change the version number.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/xonotic.png",
    "name": "Xonotic",
    "image": "ich777/xonotic",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "26000": "26000:26000/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/xonotic"
      }
    ],
    "env": [
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "BASIC_URL",
        "label": "BASIC_URL",
        "default": "https://dl.xonotic.org/"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "GAME_VERSION",
        "label": "GAME_VERSION",
        "default": "0.8.2"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "Zabbix-Server",
    "description": "Zabbix server is the central process of Zabbix software.\r\nThe server performs the polling and trapping of data, it calculates triggers, sends notifications to users. It is the central component to which Zabbix agents and proxies report data on availability and integrity of systems. The server can itself remotely check networked services (such as web servers and mail servers) using simple service checks.\r\nATTENTION: If you want to reload the configuration please type in your unRAID terminal: 'docker exec -ti  zabbix_server -R config_cache_reload' (without quotes eg: docker exec -ti Zabbix-Server zabbix_server -R config_cache_reload).\r\nVARIABLES: If you need other variables here is a complete list of all variables: https://hub.docker.com/r/zabbix/zabbix-server-mysql",
    "categories": [
      "Network:Other",
      "Productivity:",
      "Tools:System"
    ],
    "platform": "linux",
    "note": "Zabbix server is the central process of Zabbix software.\r\nThe server performs the polling and trapping of data, it calculates triggers, sends notifications to users. It is the central component to which Zabbix agents and proxies report data on availability and integrity of systems. The server can itself remotely check networked services (such as web servers and mail servers) using simple service checks.\r\nATTENTION: If you want to reload the configuration please type in your unRAID terminal: 'docker exec -ti  zabbix_server -R config_cache_reload' (without quotes eg: docker exec -ti Zabbix-Server zabbix_server -R config_cache_reload).\r\nVARIABLES: If you need other variables here is a complete list of all variables: https://hub.docker.com/r/zabbix/zabbix-server-mysql",
    "logo": "https://raw.githubusercontent.com/HNGamingUK/unraid-docker-templates/master/zabbix-agent/images/Zabbix-Logo.png",
    "name": "Zabbix-Server",
    "image": "zabbix/zabbix-server-mysql",
    "restart_policy": "unless-stopped",
    "env": [
      {
        "name": "DB_SERVER_HOST",
        "label": "DB_SERVER_HOST",
        "default": ""
      },
      {
        "name": "DB_SERVER_PORT",
        "label": "DB_SERVER_PORT",
        "default": ""
      },
      {
        "name": "MYSQL_USER",
        "label": "MYSQL_USER",
        "default": ""
      },
      {
        "name": "MYSQL_PASSWORD",
        "label": "MYSQL_PASSWORD",
        "default": ""
      },
      {
        "name": "MYSQL_DATABASE",
        "label": "MYSQL_DATABASE",
        "default": "zabbix"
      },
      {
        "name": "ZBX_LOADMODULE",
        "label": "ZBX_LOADMODULE",
        "default": ""
      },
      {
        "name": "ZBX_DEBUGLEVEL",
        "label": "ZBX_DEBUGLEVEL",
        "default": "3"
      }
    ]
  },
  {
    "type": 1,
    "title": "Zabbix-Webinterface",
    "description": "Zabbix web interface is a part of Zabbix software. It is used to manage resources under monitoring and view monitoring statistics.\r\n\r\nVARIABLES: If you need other variables here is a complete list of all variables: https://hub.docker.com/r/zabbix/zabbix-web-nginx-mysql/",
    "categories": [
      "Network:Other",
      "Productivity:",
      "Tools:System"
    ],
    "platform": "linux",
    "note": "Zabbix web interface is a part of Zabbix software. It is used to manage resources under monitoring and view monitoring statistics.\r\n\r\nVARIABLES: If you need other variables here is a complete list of all variables: https://hub.docker.com/r/zabbix/zabbix-web-nginx-mysql/",
    "logo": "https://raw.githubusercontent.com/HNGamingUK/unraid-docker-templates/master/zabbix-agent/images/Zabbix-Logo.png",
    "name": "Zabbix-Webinterface",
    "image": "zabbix/zabbix-web-nginx-mysql",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/etc/ssl/nginx",
        "bind": "/mnt/cache/appdata/zabbix-web"
      }
    ],
    "env": [
      {
        "name": "MYSQL_DATABASE",
        "label": "MYSQL_DATABASE",
        "default": "zabbix"
      },
      {
        "name": "PHP_TZ",
        "label": "PHP_TZ",
        "default": "Europe/London"
      },
      {
        "name": "ZBX_SERVER_NAME",
        "label": "ZBX_SERVER_NAME",
        "default": "ZabbixServer"
      },
      {
        "name": "ZBX_SERVER_HOST",
        "label": "ZBX_SERVER_HOST",
        "default": ""
      },
      {
        "name": "ZBX_SERVER_PORT",
        "label": "ZBX_SERVER_PORT",
        "default": ""
      },
      {
        "name": "DB_SERVER_HOST",
        "label": "DB_SERVER_HOST",
        "default": ""
      },
      {
        "name": "DB_SERVER_PORT",
        "label": "DB_SERVER_PORT",
        "default": ""
      },
      {
        "name": "MYSQL_USER",
        "label": "MYSQL_USER",
        "default": ""
      },
      {
        "name": "MYSQL_PASSWORD",
        "label": "MYSQL_PASSWORD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Zandronum",
    "description": "This Docker will download and install Zandronum Server and run it.\r\n\r\nZandronum brings classic Doom into the 21st century, maintaining the essence of what has made Doom great for so many years and, at the same time, adding new features to modernize it, creating a fresh, fun new experience.\r\n\r\nATTENTION: You have to place your wad files into the '/wads' folder to complete the startup of the server (If you place more than one wad file in the folder you have to append the GAME_PARAMS with for example: '-iwad DOOM2.WAD' - without quotes - to load like in this example DOOM2, also note that the wad file is case sensitive).",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install Zandronum Server and run it.\r\n\r\nZandronum brings classic Doom into the 21st century, maintaining the essence of what has made Doom great for so many years and, at the same time, adding new features to modernize it, creating a fresh, fun new experience.\r\n\r\nATTENTION: You have to place your wad files into the '/wads' folder to complete the startup of the server (If you place more than one wad file in the folder you have to append the GAME_PARAMS with for example: '-iwad DOOM2.WAD' - without quotes - to load like in this example DOOM2, also note that the wad file is case sensitive).",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/zandronum.png",
    "name": "Zandronum",
    "image": "ich777/zandronum",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "10666": "10666:10666/udp"
      }
    ],
    "volumes": [
      {
        "container": "/zandronum",
        "bind": "/mnt/cache/appdata/zandronum"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-host -exec server.cfg"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "chronos",
    "description": "Chronos is a small container to run and schedule Python 3.7 scripts. You can create virtual enviroments, edit your scripts, install Pip dependencies, view execution logs, and debug your scripts, all from the sleek web UI.\n\n    You can report bugs or wish for features by opening an issue in the GitHub page.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Chronos is a small container to run and schedule Python 3.7 scripts. You can create virtual enviroments, edit your scripts, install Pip dependencies, view execution logs, and debug your scripts, all from the sleek web UI.\n\n    You can report bugs or wish for features by opening an issue in the GitHub page.",
    "logo": "https://i.imgur.com/MoAbdWn.png",
    "name": "chronos",
    "image": "simsemand/chronos",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5000": "5000:5000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/chronos",
        "bind": "/mnt/cache/appdata/chronos"
      }
    ]
  },
  {
    "type": 1,
    "title": "auto-comskip",
    "description": "Watches for video files, detects and removes the commercials from the video files automatically. No post processing script needed.\nBeing based on Alpine Linux, size of this container is very small (less than 50MB in download size).\nInstructions at www.github.com/djaydev/docker-auto-comskip",
    "categories": [
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "Watches for video files, detects and removes the commercials from the video files automatically. No post processing script needed.\nBeing based on Alpine Linux, size of this container is very small (less than 50MB in download size).\nInstructions at www.github.com/djaydev/docker-auto-comskip",
    "logo": "https://raw.githubusercontent.com/djaydev/docker-auto-comskip/master/icon.png",
    "name": "auto-comskip",
    "image": "djaydev/auto-comskip",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/watch",
        "bind": "/mnt/user/commercial-vids/watch/"
      },
      {
        "container": "/output",
        "bind": "/mnt/user/videos/comskipped"
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/auto-comskip"
      },
      {
        "container": "/temp",
        "bind": "/tmp/comskip"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "glass-isc-dhcp",
    "description": "Includes ISC DHCP Server and Glass Web Management tool.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on client side). Default port 3000.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Includes ISC DHCP Server and Glass Web Management tool.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on client side). Default port 3000.",
    "logo": "https://raw.githubusercontent.com/Akkadius/glass-isc-dhcp/master/public/images/glass_logo.png",
    "name": "glass-isc-dhcp",
    "image": "djaydev/glass-isc-dhcp",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/etc/dhcp/",
        "bind": "/mnt/user/appdata/glass-isc-dhcp/"
      },
      {
        "container": "/var/lib/dhcp/",
        "bind": "/mnt/user/appdata/glass-isc-dhcp/leases"
      }
    ],
    "env": [
      {
        "name": "ADMINPASSWORD",
        "label": "ADMINPASSWORD",
        "default": "glassadmin"
      },
      {
        "name": "WEBADMINPORT",
        "label": "WEBADMINPORT",
        "default": "3000"
      },
      {
        "name": "WEBSOCKETPORT",
        "label": "WEBSOCKETPORT",
        "default": "8080"
      }
    ]
  },
  {
    "type": 1,
    "title": "HandBrake",
    "description": "Handbrake with Nvidia NVENC access. Requires compatible GPU and Nvidia Unraid plugin installed. No QuickSync support.\n\t\n    HandBrake is a tool for converting video from nearly any format to a selection of modern, widely supported codecs.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on client side) or via any VNC client.\n    A fully automated mode is also available: drop files into a watch folder and let HandBrake process them without any user interaction.",
    "categories": [
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "Handbrake with Nvidia NVENC access. Requires compatible GPU and Nvidia Unraid plugin installed. No QuickSync support.\n\t\n    HandBrake is a tool for converting video from nearly any format to a selection of modern, widely supported codecs.\n    \n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on client side) or via any VNC client.\n    A fully automated mode is also available: drop files into a watch folder and let HandBrake process them without any user interaction.",
    "logo": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/handbrake-icon.png",
    "name": "HandBrake",
    "image": "djaydev/handbrake",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5800": "7803:5800/tcp",
        "5900": "7903:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/handbrake"
      },
      {
        "container": "/storage",
        "bind": "/mnt/user"
      },
      {
        "container": "/watch",
        "bind": ""
      },
      {
        "container": "/output",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "X11VNC_EXTRA_OPTS",
        "label": "X11VNC_EXTRA_OPTS",
        "default": ""
      },
      {
        "name": "NVIDIA_DRIVER_CAPABILITIES",
        "label": "NVIDIA_DRIVER_CAPABILITIES",
        "default": "all"
      },
      {
        "name": "AUTOMATED_CONVERSION_OUTPUT_SUBDIR",
        "label": "AUTOMATED_CONVERSION_OUTPUT_SUBDIR",
        "default": ""
      },
      {
        "name": "AUTOMATED_CONVERSION_CHECK_INTERVAL",
        "label": "AUTOMATED_CONVERSION_CHECK_INTERVAL",
        "default": "5"
      },
      {
        "name": "AUTOMATED_CONVERSION_OUTPUT_DIR",
        "label": "AUTOMATED_CONVERSION_OUTPUT_DIR",
        "default": "/output"
      },
      {
        "name": "APP_NICENESS",
        "label": "APP_NICENESS",
        "default": ""
      },
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1280"
      },
      {
        "name": "SECURE_CONNECTION",
        "label": "SECURE_CONNECTION",
        "default": "0"
      },
      {
        "name": "NVIDIA_VISIBLE_DEVICES",
        "label": "NVIDIA_VISIBLE_DEVICES",
        "default": "GPU-XXXX-XXXX-XXXX-XXXX-XXXX"
      },
      {
        "name": "AUTOMATED_CONVERSION_FORMAT",
        "label": "AUTOMATED_CONVERSION_FORMAT",
        "default": "mp4"
      },
      {
        "name": "AUTOMATED_CONVERSION_SOURCE_STABLE_TIME",
        "label": "AUTOMATED_CONVERSION_SOURCE_STABLE_TIME",
        "default": "5"
      },
      {
        "name": "AUTOMATED_CONVERSION_MAX_WATCH_FOLDERS",
        "label": "AUTOMATED_CONVERSION_MAX_WATCH_FOLDERS",
        "default": "5"
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "768"
      },
      {
        "name": "AUTOMATED_CONVERSION_PRESET",
        "label": "AUTOMATED_CONVERSION_PRESET",
        "default": "Very Fast 1080p30"
      },
      {
        "name": "AUTOMATED_CONVERSION_KEEP_SOURCE",
        "label": "AUTOMATED_CONVERSION_KEEP_SOURCE",
        "default": "1"
      },
      {
        "name": "AUTOMATED_CONVERSION_SOURCE_MIN_DURATION",
        "label": "AUTOMATED_CONVERSION_SOURCE_MIN_DURATION",
        "default": "10"
      },
      {
        "name": "AUTOMATED_CONVERSION_NO_GUI_PROGRESS",
        "label": "AUTOMATED_CONVERSION_NO_GUI_PROGRESS",
        "default": "0"
      }
    ]
  },
  {
    "type": 1,
    "title": "intel-gpu-tools",
    "description": "Docker container that starts directly to intel-gpu-top for viewing the load/utilization of an Intel iGPU. Accessed through Web browser (port 7800) or VNC (port 7900).",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Docker container that starts directly to intel-gpu-top for viewing the load/utilization of an Intel iGPU. Accessed through Web browser (port 7800) or VNC (port 7900).",
    "logo": "https://raw.githubusercontent.com/djaydev/docker-intel-gpu-tools/master/icon2.png",
    "name": "intel-gpu-tools",
    "image": "djaydev/intel-gpu-tools",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5800": "7800:5800/tcp",
        "5900": "7900:5900/tcp"
      }
    ],
    "env": [
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "0"
      },
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1280"
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "720"
      },
      {
        "name": "KEEP_APP_RUNNING",
        "label": "KEEP_APP_RUNNING",
        "default": "1"
      }
    ]
  },
  {
    "type": 1,
    "title": "jellyfin",
    "description": "Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps.",
    "categories": [
      "MediaServer:Video",
      "MediaServer:Music"
    ],
    "platform": "linux",
    "note": "Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/jellyfin-logo.png",
    "name": "jellyfin",
    "image": "jellyfin/jellyfin",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "1900": "1900:1900/udp",
        "8096": "8096:8096/tcp",
        "8920": "8920:8920/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/tv",
        "bind": ""
      },
      {
        "container": "/music",
        "bind": ""
      },
      {
        "container": "/cache",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/jellyfin"
      },
      {
        "container": "/movies",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "NVIDIA_VISIBLE_DEVICES",
        "label": "NVIDIA_VISIBLE_DEVICES",
        "default": ""
      },
      {
        "name": "NVIDIA_DRIVER_CAPABILITIES",
        "label": "NVIDIA_DRIVER_CAPABILITIES",
        "default": "all"
      }
    ]
  },
  {
    "type": 1,
    "title": "krusader",
    "description": "Krusader is an advanced twin panel (commander style) file manager similar to Midnight or Total Commander.  It supports extensive archive handling, mounted filesystem support, advanced search, viewer/editor, directory synchronisation, file content comparisons, batch renaming, etc.\n  \n  The GUI of the application is accessed through a modern web browser (no installation or configuration needed on client side) or via any VNC client.\n  Also, being based on Alpine Linux, container size is somewhat smaller than standard distros.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Krusader is an advanced twin panel (commander style) file manager similar to Midnight or Total Commander.  It supports extensive archive handling, mounted filesystem support, advanced search, viewer/editor, directory synchronisation, file content comparisons, batch renaming, etc.\n  \n  The GUI of the application is accessed through a modern web browser (no installation or configuration needed on client side) or via any VNC client.\n  Also, being based on Alpine Linux, container size is somewhat smaller than standard distros.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/krusader-icon.png",
    "name": "krusader",
    "image": "djaydev/krusader",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5800": "6080:5800/tcp",
        "5900": "6090:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/krusader"
      },
      {
        "container": "/unraid_unassigned_disks",
        "bind": "/mnt/disks/"
      },
      {
        "container": "/unraid_shares",
        "bind": "/mnt/user/"
      },
      {
        "container": "/unraid_flashdrive",
        "bind": "/boot/"
      }
    ],
    "env": [
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      },
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1280"
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "768"
      },
      {
        "name": "KEEP_APP_RUNNING",
        "label": "KEEP_APP_RUNNING",
        "default": "1"
      }
    ]
  },
  {
    "type": 1,
    "title": "motioneye",
    "description": "MotionEye is a web frontend for the motion daemon, written in Python.\nBeing based on Alpine Linux, size of this container is very small (less than 100MB in download size).\nFirst run will start with motioneye default settings. To use a preconfigured configuration file save it /mnt/cache/appdata/motioneye/motioneye.conf.\n\nDefault Username: admin\nDefault Password: BLANK",
    "categories": [
      "Network:"
    ],
    "platform": "linux",
    "note": "MotionEye is a web frontend for the motion daemon, written in Python.\nBeing based on Alpine Linux, size of this container is very small (less than 100MB in download size).\nFirst run will start with motioneye default settings. To use a preconfigured configuration file save it /mnt/cache/appdata/motioneye/motioneye.conf.\n\nDefault Username: admin\nDefault Password: BLANK",
    "logo": "https://raw.githubusercontent.com/ccrisan/motioneye/dev/extra/motioneye-256x256.png",
    "name": "motioneye",
    "image": "djaydev/motioneye",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8765": "8765:8765/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/lib/motioneye",
        "bind": "/mnt/user/videos/camera"
      },
      {
        "container": "/etc/motioneye",
        "bind": "/mnt/cache/appdata/motioneye"
      }
    ],
    "env": [
      {
        "name": "UID",
        "label": "UID",
        "default": "1000"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "recordings-converter",
    "description": "Watches for .ts files made by live TV recordings and converts them to h265 .mp4 files automatically. Supports Nvidia and Intel HW transcoding. Instructions at https://github.com/djaydev/docker-recordings-transcoder",
    "categories": [
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "Watches for .ts files made by live TV recordings and converts them to h265 .mp4 files automatically. Supports Nvidia and Intel HW transcoding. Instructions at https://github.com/djaydev/docker-recordings-transcoder",
    "logo": "https://raw.githubusercontent.com/djaydev/docker-recordings-transcoder/master/icon.png",
    "name": "recordings-converter",
    "image": "djaydev/recordings-converter",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/watch",
        "bind": "/mnt/user/videos/"
      },
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/recordings-converter"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "ENCODER",
        "label": "ENCODER",
        "default": "software"
      },
      {
        "name": "DELETE_TS",
        "label": "DELETE_TS",
        "default": "0"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "SUBTITLES",
        "label": "SUBTITLES",
        "default": "0"
      }
    ]
  },
  {
    "type": 1,
    "title": "uGet",
    "description": "uGet can download from a variety of different protocols including HTTP, HTTPS, FTP, BitTorrent, Youtube, and Metalinks. To enable bittorrent support set plug-in matching order to curl + aria2 in settings, then restart the container.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "uGet can download from a variety of different protocols including HTTP, HTTPS, FTP, BitTorrent, Youtube, and Metalinks. To enable bittorrent support set plug-in matching order to curl + aria2 in settings, then restart the container.",
    "logo": "https://icons.iconarchive.com/icons/alecive/flatwoken/512/Apps-Uget-icon.png",
    "name": "uGet",
    "image": "djaydev/uget",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5800": "5800:5800/tcp",
        "5900": "5900:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/uget"
      },
      {
        "container": "/downloads",
        "bind": "/mnt/user/downloads/"
      }
    ],
    "env": [
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "768"
      },
      {
        "name": "KEEP_APP_RUNNING",
        "label": "KEEP_APP_RUNNING",
        "default": "1"
      },
      {
        "name": "THEME",
        "label": "THEME",
        "default": "light"
      },
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      },
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1280"
      }
    ]
  },
  {
    "type": 1,
    "title": "Virt-Manager",
    "description": "The virt-manager application is a desktop user interface for managing virtual machines through libvirt. It primarily targets KVM VMs, but also manages Xen and LXC (linux containers). It presents a summary view of running domains, their live performance \u0026amp; resource utilization statistics. Wizards enable the creation of new domains, and configuration \u0026amp; adjustment of a domain’s resource allocation \u0026amp; virtual hardware. An embedded VNC and SPICE client viewer presents a full graphical console to the guest domain.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "The virt-manager application is a desktop user interface for managing virtual machines through libvirt. It primarily targets KVM VMs, but also manages Xen and LXC (linux containers). It presents a summary view of running domains, their live performance \u0026amp; resource utilization statistics. Wizards enable the creation of new domains, and configuration \u0026amp; adjustment of a domain’s resource allocation \u0026amp; virtual hardware. An embedded VNC and SPICE client viewer presents a full graphical console to the guest domain.",
    "logo": "https://raw.githubusercontent.com/djaydev/docker-virt-manager/master/virtmanager.png",
    "name": "Virt-Manager",
    "image": "djaydev/docker-virt-manager",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5800": "7800:5800/tcp",
        "5900": "7900:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/dev/urandom",
        "bind": "/dev/urandom"
      },
      {
        "container": "/config",
        "bind": "/docker/appdata/virt-manager/config"
      }
    ],
    "env": [
      {
        "name": "KEEP_APP_RUNNING",
        "label": "KEEP_APP_RUNNING",
        "default": "1"
      },
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1280"
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "768"
      }
    ]
  },
  {
    "type": 1,
    "title": "lancache-bundle",
    "description": "An all in one lancache docker providing a combination of the following three projects:\r\nhttps://github.com/lancachenet/lancache-dns\r\nhttps://github.com/lancachenet/monolithic\r\nhttps://github.com/lancachenet/sniproxy\r\n\r\nThanks to cheesemarathon for their work on the SteamCacheBundle that inspired this and provided the grounding for the template. Note, however, that this Docker image does not run at all the same way and is strictly based on the original upstream logcache project.\r\n\r\nOn start, this image will download the latest domain list from https://github.com/uklans/cache-domains. This means no constant upgrading of the docker image is necessary in order to guarantee continued usability",
    "categories": [
      "Backup:",
      "GameServers:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "An all in one lancache docker providing a combination of the following three projects:\r\nhttps://github.com/lancachenet/lancache-dns\r\nhttps://github.com/lancachenet/monolithic\r\nhttps://github.com/lancachenet/sniproxy\r\n\r\nThanks to cheesemarathon for their work on the SteamCacheBundle that inspired this and provided the grounding for the template. Note, however, that this Docker image does not run at all the same way and is strictly based on the original upstream logcache project.\r\n\r\nOn start, this image will download the latest domain list from https://github.com/uklans/cache-domains. This means no constant upgrading of the docker image is necessary in order to guarantee continued usability",
    "logo": "https://raw.githubusercontent.com/Josh5/lancache-bundle/master/lancache-bundle-logo.png",
    "name": "lancache-bundle",
    "image": "josh5/lancache-bundle:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "0": "80:0/tcp",
        "53": "53:53/udp"
      }
    ],
    "volumes": [
      {
        "container": "/var/log/named",
        "bind": "/mnt/user/appdata/lancache-bundle/log/named"
      },
      {
        "container": "/var/log/nginx",
        "bind": "/mnt/user/appdata/lancache-bundle/log/nginx"
      },
      {
        "container": "/data/cache",
        "bind": "/mnt/user/lancache"
      }
    ],
    "env": [
      {
        "name": "DISABLE_NEVERWINTER",
        "label": "DISABLE_NEVERWINTER",
        "default": ""
      },
      {
        "name": "DISABLE_NEXUSMODS",
        "label": "DISABLE_NEXUSMODS",
        "default": ""
      },
      {
        "name": "DISABLE_WARGAMING",
        "label": "DISABLE_WARGAMING",
        "default": ""
      },
      {
        "name": "LANCACHE_IP",
        "label": "LANCACHE_IP",
        "default": "192.168.1.202"
      },
      {
        "name": "CACHE_DISK_SIZE",
        "label": "CACHE_DISK_SIZE",
        "default": "2000g"
      },
      {
        "name": "DISABLE_TESO",
        "label": "DISABLE_TESO",
        "default": ""
      },
      {
        "name": "DISABLE_WSUS",
        "label": "DISABLE_WSUS",
        "default": ""
      },
      {
        "name": "CACHE_MEM_SIZE",
        "label": "CACHE_MEM_SIZE",
        "default": "500m"
      },
      {
        "name": "DISABLE_CITYOFHEROES",
        "label": "DISABLE_CITYOFHEROES",
        "default": ""
      },
      {
        "name": "DISABLE_TWITCH",
        "label": "DISABLE_TWITCH",
        "default": ""
      },
      {
        "name": "DISABLE_WARFRAME",
        "label": "DISABLE_WARFRAME",
        "default": ""
      },
      {
        "name": "DISABLE_FRONTIER",
        "label": "DISABLE_FRONTIER",
        "default": ""
      },
      {
        "name": "DISABLE_ORIGIN",
        "label": "DISABLE_ORIGIN",
        "default": ""
      },
      {
        "name": "DISABLE_STEAM",
        "label": "DISABLE_STEAM",
        "default": ""
      },
      {
        "name": "USE_GENERIC_CACHE",
        "label": "USE_GENERIC_CACHE",
        "default": "true"
      },
      {
        "name": "DISABLE_EPICGAMES",
        "label": "DISABLE_EPICGAMES",
        "default": ""
      },
      {
        "name": "UPSTREAM_DNS",
        "label": "UPSTREAM_DNS",
        "default": "1.1.1.1"
      },
      {
        "name": "DISABLE_UPLAY",
        "label": "DISABLE_UPLAY",
        "default": ""
      },
      {
        "name": "DISABLE_ROCKSTAR",
        "label": "DISABLE_ROCKSTAR",
        "default": ""
      },
      {
        "name": "DISABLE_SONY",
        "label": "DISABLE_SONY",
        "default": ""
      },
      {
        "name": "DISABLE_BLIZZARD",
        "label": "DISABLE_BLIZZARD",
        "default": ""
      },
      {
        "name": "DISABLE_DAYBREAK",
        "label": "DISABLE_DAYBREAK",
        "default": ""
      },
      {
        "name": "DISABLE_RENEGADEX",
        "label": "DISABLE_RENEGADEX",
        "default": ""
      },
      {
        "name": "DNS_BIND_IP",
        "label": "DNS_BIND_IP",
        "default": "192.168.1.202"
      },
      {
        "name": "DISABLE_HIREZ",
        "label": "DISABLE_HIREZ",
        "default": ""
      },
      {
        "name": "DISABLE_NINTENDO",
        "label": "DISABLE_NINTENDO",
        "default": ""
      },
      {
        "name": "DISABLE_RIOT",
        "label": "DISABLE_RIOT",
        "default": ""
      },
      {
        "name": "DISABLE_XBOXLIVE",
        "label": "DISABLE_XBOXLIVE",
        "default": ""
      },
      {
        "name": "CACHE_MAX_AGE",
        "label": "CACHE_MAX_AGE",
        "default": "150d"
      },
      {
        "name": "DISABLE_ARENANET",
        "label": "DISABLE_ARENANET",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "TeamCity-BuildAgent",
    "description": "This is an official JetBrains TeamCity build agent image.\r\n\r\nThe TeamCity build agent connects to the TeamCity server and spawns the actual build processes. You can use the jetbrains/teamcity-server image to run a TeamCity server.\r\n\r\nThis image adds a TeamCity agent suitable for Java development. It is based on jetbrains/teamcity-minimal-agent but gives you more benefits, e.g.\r\n\r\nclient-side checkout if you use 'git' or 'mercurial'\r\nmore bundled build tools\r\n'docker-in-docker' on Linux",
    "categories": [
      "Productivity:",
      "Other:"
    ],
    "platform": "linux",
    "note": "This is an official JetBrains TeamCity build agent image.\r\n\r\nThe TeamCity build agent connects to the TeamCity server and spawns the actual build processes. You can use the jetbrains/teamcity-server image to run a TeamCity server.\r\n\r\nThis image adds a TeamCity agent suitable for Java development. It is based on jetbrains/teamcity-minimal-agent but gives you more benefits, e.g.\r\n\r\nclient-side checkout if you use 'git' or 'mercurial'\r\nmore bundled build tools\r\n'docker-in-docker' on Linux",
    "logo": "https://seeklogo.com/images/T/team-city-logo-8FEEB62EC1-seeklogo.com.png",
    "name": "TeamCity-BuildAgent",
    "image": "jetbrains/teamcity-agent",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/data/teamcity_agent/conf",
        "bind": "/mnt/user/appdata/teamcity-buildagent"
      },
      {
        "container": "/opt/buildagent/work",
        "bind": ""
      },
      {
        "container": "/opt/buildagent/temp",
        "bind": ""
      },
      {
        "container": "/var/lib/docker",
        "bind": "buildagent_volumes"
      }
    ],
    "env": [
      {
        "name": "DOCKER_IN_DOCKER",
        "label": "DOCKER_IN_DOCKER",
        "default": "start"
      },
      {
        "name": "SERVER_URL",
        "label": "SERVER_URL",
        "default": ""
      },
      {
        "name": "AGENT_NAME",
        "label": "AGENT_NAME",
        "default": "Phil Coulson"
      }
    ]
  },
  {
    "type": 1,
    "title": "TeamCity",
    "description": "TeamCity Server - Powerful Continuous Integration and Continuous Delivery out of the box\r\n\r\nThis is an official JetBrains TeamCity server image. The image is suitable for production use and evaluation purposes.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "TeamCity Server - Powerful Continuous Integration and Continuous Delivery out of the box\r\n\r\nThis is an official JetBrains TeamCity server image. The image is suitable for production use and evaluation purposes.",
    "logo": "https://seeklogo.com/images/T/team-city-logo-8FEEB62EC1-seeklogo.com.png",
    "name": "TeamCity",
    "image": "jetbrains/teamcity-server",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8111": "8111:8111/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/opt/teamcity/logs",
        "bind": "/mnt/user/appdata/teamcity/logs"
      },
      {
        "container": "/data/teamcity_server/datadir",
        "bind": "/mnt/user/appdata/teamcity/datadir"
      }
    ]
  },
  {
    "type": 1,
    "title": "unmanic",
    "description": "Unmanic is a simple tool for optimising your video library to a single format.\n        Remove the complexity of automatically converting your media library.\n        Simply point Unmanic at your library and let it manage it for you.",
    "categories": [
      "Productivity:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Unmanic is a simple tool for optimising your video library to a single format.\n        Remove the complexity of automatically converting your media library.\n        Simply point Unmanic at your library and let it manage it for you.",
    "logo": "https://raw.githubusercontent.com/Josh5/unmanic/master/icon.png",
    "name": "unmanic",
    "image": "josh5/unmanic",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8888": "8888:8888/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/unmanic"
      },
      {
        "container": "/library/movies",
        "bind": "/mnt/user/Media/Movies"
      },
      {
        "container": "/library/tv",
        "bind": "/mnt/user/Media/TV"
      },
      {
        "container": "/tmp/unmanic",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "NVIDIA_VISIBLE_DEVICES",
        "label": "NVIDIA_VISIBLE_DEVICES",
        "default": "false"
      }
    ]
  },
  {
    "type": 1,
    "title": "go-ipfs",
    "description": "IPFS is a global, versioned, peer-to-peer filesystem. It combines good ideas from Git, BitTorrent, Kademlia, SFS, and the Web. It is like a single bittorrent swarm, exchanging git objects. IPFS provides an interface as simple as the HTTP web, but with permanence built in. You can also mount the world at /ipfs.",
    "categories": [
      "Other:"
    ],
    "platform": "linux",
    "note": "IPFS is a global, versioned, peer-to-peer filesystem. It combines good ideas from Git, BitTorrent, Kademlia, SFS, and the Web. It is like a single bittorrent swarm, exchanging git objects. IPFS provides an interface as simple as the HTTP web, but with permanence built in. You can also mount the world at /ipfs.",
    "name": "go-ipfs",
    "image": "ipfs/go-ipfs",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "4001": "4001:4001/tcp",
        "5001": "5001:5001/tcp",
        "8080": "8080:8080/tcp",
        "8081": "8081:8081/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data/ipfs",
        "bind": "/mnt/user/appdata/ipfs/"
      }
    ],
    "env": [
      {
        "name": "IPFS_PROFILE",
        "label": "IPFS_PROFILE",
        "default": "server"
      }
    ]
  },
  {
    "type": 1,
    "title": "iPXE-buildweb",
    "description": "A web-based user interface that provide a way for the user to select any relevant iPXE build options, specify any embedded script, etc, and then construct and download the appropriate file.\n\tfork from chvb/Docker-Apache-PHP, works from xbgmsharp/ipxe-buildweb. based on phusion 0.9.18(ubuntu 14.04)",
    "categories": [
      "Network:"
    ],
    "platform": "linux",
    "note": "A web-based user interface that provide a way for the user to select any relevant iPXE build options, specify any embedded script, etc, and then construct and download the appropriate file.\n\tfork from chvb/Docker-Apache-PHP, works from xbgmsharp/ipxe-buildweb. based on phusion 0.9.18(ubuntu 14.04)",
    "logo": "https://raw.githubusercontent.com/xbgmsharp/ipxe-buildweb/master/favicon.ico",
    "name": "iPXE-buildweb",
    "image": "angelics/unraid-docker-ipxe-buildweb",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "8081:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/logs",
        "bind": "/mnt/user/appdata/iPXE-buildweb/logs"
      }
    ]
  },
  {
    "type": 1,
    "title": "RavencoinP2P",
    "description": "The Ravencoin project is launched based on the hard work and continuous effort of over 400 Bitcoin developers who made over 14,000 commits over the life to date of the Bitcoin project.\n\tThis is just p2p, without wallet or gui.\n    Based on jlesage/baseimage:alpine-3.9.",
    "categories": [
      "Other:"
    ],
    "platform": "linux",
    "note": "The Ravencoin project is launched based on the hard work and continuous effort of over 400 Bitcoin developers who made over 14,000 commits over the life to date of the Bitcoin project.\n\tThis is just p2p, without wallet or gui.\n    Based on jlesage/baseimage:alpine-3.9.",
    "logo": "https://raw.githubusercontent.com/angelics/unraid-docker-ravencoin-p2p/master/icon.png",
    "name": "RavencoinP2P",
    "image": "angelics/unraid-docker-ravencoin-p2p",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8767": "8767:8767/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/storage/.raven/",
        "bind": "/mnt/user/appdata/RavencoinP2P/"
      }
    ],
    "env": [
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "APP_NICENESS",
        "label": "APP_NICENESS",
        "default": ""
      },
      {
        "name": "BOOTSTRAP",
        "label": "BOOTSTRAP",
        "default": "0"
      }
    ]
  },
  {
    "type": 1,
    "title": "RavencoinWalletGUI",
    "description": "The Ravencoin project is launched based on the hard work and continuous effort of over 400 Bitcoin developers who made over 14,000 commits over the life to date of the Bitcoin project.\n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on client side) or via any VNC client.\n    Also, being based on jlesage/baseimage-gui:ubuntu 16.04.",
    "categories": [
      "Other:"
    ],
    "platform": "linux",
    "note": "The Ravencoin project is launched based on the hard work and continuous effort of over 400 Bitcoin developers who made over 14,000 commits over the life to date of the Bitcoin project.\n    The GUI of the application is accessed through a modern web browser (no installation or configuration needed on client side) or via any VNC client.\n    Also, being based on jlesage/baseimage-gui:ubuntu 16.04.",
    "logo": "https://raw.githubusercontent.com/angelics/unraid-docker-ravencoin-wallet/master/icon.png",
    "name": "RavencoinWalletGUI",
    "image": "angelics/unraid-docker-ravencoin-wallet",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5800": "5800:5800/tcp",
        "5900": "5900:5900/tcp",
        "8767": "8767:8767/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/storage/.raven/",
        "bind": "/mnt/user/appdata/RavencoinWallet/"
      }
    ],
    "env": [
      {
        "name": "X11VNC_EXTRA_OPTS",
        "label": "X11VNC_EXTRA_OPTS",
        "default": ""
      },
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "APP_NICENESS",
        "label": "APP_NICENESS",
        "default": ""
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "768"
      },
      {
        "name": "SECURE_CONNECTION",
        "label": "SECURE_CONNECTION",
        "default": "0"
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      },
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1280"
      },
      {
        "name": "ENABLE_CJK_FONT",
        "label": "ENABLE_CJK_FONT",
        "default": "0"
      },
      {
        "name": "BOOTSTRAP",
        "label": "BOOTSTRAP",
        "default": "0"
      }
    ]
  },
  {
    "type": 1,
    "title": "ZelCoreWalletGUI",
    "description": "ZelCore is a multi asset platform and wallet, free-to-use by all, with top quick-swap exchanges.\n\tZelCore+ unlocks advanced trading functionality with API integrations to the top exchanges + TradingView.\n\tbased on jlesage's works!",
    "categories": [
      "Other:"
    ],
    "platform": "linux",
    "note": "ZelCore is a multi asset platform and wallet, free-to-use by all, with top quick-swap exchanges.\n\tZelCore+ unlocks advanced trading functionality with API integrations to the top exchanges + TradingView.\n\tbased on jlesage's works!",
    "logo": "https://raw.githubusercontent.com/angelics/unraid-docker-zelcore-wallet/master/favicon.png",
    "name": "ZelCoreWalletGUI",
    "image": "angelics/unraid-docker-zelcore-wallet",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5800": "5801:5800/tcp",
        "5900": "5901:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config/xdg",
        "bind": "/mnt/user/appdata/ZelCoreWalletGUI/config"
      },
      {
        "container": "/storage",
        "bind": "/mnt/user/appdata/ZelCoreWalletGUI/storage"
      }
    ],
    "env": [
      {
        "name": "SECURE_CONNECTION",
        "label": "SECURE_CONNECTION",
        "default": "0"
      },
      {
        "name": "ENABLE_CJK_FONT",
        "label": "ENABLE_CJK_FONT",
        "default": "0"
      },
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "768"
      },
      {
        "name": "APP_NICENESS",
        "label": "APP_NICENESS",
        "default": ""
      },
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1280"
      },
      {
        "name": "X11VNC_EXTRA_OPTS",
        "label": "X11VNC_EXTRA_OPTS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "songkong",
    "description": "Official SongKong Docker repository, Identify your songs and add metadata and artwork automatically",
    "categories": [
      "MediaApp:Music"
    ],
    "platform": "linux",
    "note": "Official SongKong Docker repository, Identify your songs and add metadata and artwork automatically",
    "logo": "https://www.jthink.net/songkong/images/songkong_icon256.png",
    "name": "songkong",
    "image": "songkong/songkong",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "4567": "4567:4567/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/music",
        "bind": "/mnt/user/music"
      },
      {
        "container": "/songkong",
        "bind": "/mnt/user/appdata/songkong"
      }
    ]
  },
  {
    "type": 1,
    "title": "ClamAV",
    "description": "This template is for scanning your unRAID server with clamav and clamscan. To scan your server, check the environment variable to set the scanned folder and just start the container. When it is finished, the container will stop and you can view the logs to see the results.",
    "categories": [
      "Tools:Utilities",
      "Security:"
    ],
    "platform": "linux",
    "note": "This template is for scanning your unRAID server with clamav and clamscan. To scan your server, check the environment variable to set the scanned folder and just start the container. When it is finished, the container will stop and you can view the logs to see the results.",
    "logo": "https://its.ucsc.edu/software/images/clam.png",
    "name": "ClamAV",
    "image": "tquinnelly/clamav-alpine",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/scan",
        "bind": "/mnt/user"
      },
      {
        "container": "/var/lib/clamav",
        "bind": "/mnt/cache/appdata/clamav"
      }
    ],
    "env": [
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "splunk",
    "description": "This is a Dockerfile for Splunk designed for OpenShift and unRAID based on Alpine Linux - https://www.splunk.com\r\n\r\nIf you run the Dockerfile with no arguments you will get a single instance of Splunk 8.1.0 with the user admin:changeme2019.\r\n\r\nThe web interface is exposed on port HTTP/8000, data ingest on TCP/9997, and API on HTTPS/8089.\r\n\r\nCompatible with Splunk 7.1.0 and newer.",
    "categories": [
      "Tools:Utilities",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "This is a Dockerfile for Splunk designed for OpenShift and unRAID based on Alpine Linux - https://www.splunk.com\r\n\r\nIf you run the Dockerfile with no arguments you will get a single instance of Splunk 8.1.0 with the user admin:changeme2019.\r\n\r\nThe web interface is exposed on port HTTP/8000, data ingest on TCP/9997, and API on HTTPS/8089.\r\n\r\nCompatible with Splunk 7.1.0 and newer.",
    "logo": "https://secure.gravatar.com/avatar/c4cadc82a16e67018f57f1fc2547caa4.jpg",
    "name": "splunk",
    "image": "atunnecliffe/splunk",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8000": "8000:8000/tcp",
        "8089": "8089:8089/tcp",
        "9997": "9997:9997/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/splunkdata",
        "bind": "/mnt/user/appdata/splunkenterprise/splunkdata"
      },
      {
        "container": "/opt/splunk/etc/apps",
        "bind": "/mnt/user/appdata/splunkenterprise/etc/apps"
      },
      {
        "container": "/opt/splunk/etc/auth",
        "bind": "/mnt/user/appdata/splunkenterprise/etc/auth"
      }
    ],
    "env": [
      {
        "name": "SPLUNK_CLI_ARGS",
        "label": "SPLUNK_CLI_ARGS",
        "default": "--accept-license --no-prompt"
      },
      {
        "name": "ADMIN_PASSWORD",
        "label": "ADMIN_PASSWORD",
        "default": "changeme2019"
      }
    ]
  },
  {
    "type": 1,
    "title": "jbreed-nessus",
    "description": "Nessus is a network vulnerability scanner. This is a paid product, but for small home deployments one can request a free license during the setup GUI steps for internal/small networks.",
    "categories": [
      "Tools:Utilities",
      "Security:"
    ],
    "platform": "linux",
    "note": "Nessus is a network vulnerability scanner. This is a paid product, but for small home deployments one can request a free license during the setup GUI steps for internal/small networks.",
    "logo": "https://raw.githubusercontent.com/jbreed/docker-templates/master/nessus/nessus.png",
    "name": "jbreed-nessus",
    "image": "jbreed/nessus",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8834": "8834:8834/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "adminer",
    "description": "Adminer (formerly phpMinAdmin) is a full-featured database management tool written in PHP. Conversely to phpMyAdmin, it consist of a single file ready to deploy to the target server. Adminer is available for MySQL, PostgreSQL, SQLite, MS SQL, Oracle, Firebird, SimpleDB, Elasticsearch and MongoDB.\r\n    \r\n    \r\n    Go to",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Adminer (formerly phpMinAdmin) is a full-featured database management tool written in PHP. Conversely to phpMyAdmin, it consist of a single file ready to deploy to the target server. Adminer is available for MySQL, PostgreSQL, SQLite, MS SQL, Oracle, Firebird, SimpleDB, Elasticsearch and MongoDB.\r\n    \r\n    \r\n    Go to",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/adminer.png",
    "name": "adminer",
    "image": "adminer",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "env": [
      {
        "name": "ADMINER_DESIGN",
        "label": "ADMINER_DESIGN",
        "default": "flat"
      },
      {
        "name": "ADMINER_PLUGINS",
        "label": "ADMINER_PLUGINS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "AirConnect",
    "description": "AirConnect container for turning Chromecast into Airplay targets\r\n\r\nThis is a containerized build of the fantastic program by philippe44 called AirConnect. It allows you to be able to use AirPlay to push audio to Chromecast and UPNP based devices. There are some advanced details and information that you should review on his GitHub Project. \r\n\r\nhttps://github.com/philippe44/AirConnect\r\n\r\nFor the most part this container needs nothing more than to launch it using Host networking.",
    "categories": [
      "MediaServer:Video",
      "MediaServer:Music",
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "AirConnect container for turning Chromecast into Airplay targets\r\n\r\nThis is a containerized build of the fantastic program by philippe44 called AirConnect. It allows you to be able to use AirPlay to push audio to Chromecast and UPNP based devices. There are some advanced details and information that you should review on his GitHub Project. \r\n\r\nhttps://github.com/philippe44/AirConnect\r\n\r\nFor the most part this container needs nothing more than to launch it using Host networking.",
    "logo": "https://i.imgur.com/hatCnm0.png",
    "name": "AirConnect",
    "image": "1activegeek/airconnect",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "airdcpp",
    "description": "AirDC++ Web Client is a locally installed application, which is designed for frequent sharing of files or directories within groups of people in a local network or over internet. The daemon application can be installed on different types of systems, such as on file servers and NAS devices.\r\n\r\nUsername / password for the default admin account is: admin / password",
    "categories": [
      "Cloud:"
    ],
    "platform": "linux",
    "note": "AirDC++ Web Client is a locally installed application, which is designed for frequent sharing of files or directories within groups of people in a local network or over internet. The daemon application can be installed on different types of systems, such as on file servers and NAS devices.\r\n\r\nUsername / password for the default admin account is: admin / password",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/airdcpp.png",
    "name": "airdcpp",
    "image": "gangefors/airdcpp-webclient",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "21248": "0:21248/tcp",
        "21249": "0:21249/tcp",
        "5600": "0:5600/tcp",
        "5601": "0:5601/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/airdcpp",
        "bind": ""
      },
      {
        "container": "/Downloads",
        "bind": ""
      },
      {
        "container": "/Share",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "bitwardenrs",
    "description": "This is a Bitwarden server API implementation written in Rust compatible with upstream Bitwarden clients, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal.\r\n    \r\n    Basically full implementation of Bitwarden API is provided including: \r\n    \r\n    -Basic single user functionality\r\n    \r\n    -Organizations support\r\n    \r\n    -Attachments\r\n    \r\n    -Vault API support\r\n    \r\n    -Serving the static files for Vault interface\r\n    \r\n    -Website icons API\r\n    \r\n    -Authenticator and U2F support\r\n    \r\n    -YubiKey OTP\r\n    \r\n    For more configuration see the wiki\n    \n    https://github.com/dani-garcia/bitwarden_rs/wiki",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "This is a Bitwarden server API implementation written in Rust compatible with upstream Bitwarden clients, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal.\r\n    \r\n    Basically full implementation of Bitwarden API is provided including: \r\n    \r\n    -Basic single user functionality\r\n    \r\n    -Organizations support\r\n    \r\n    -Attachments\r\n    \r\n    -Vault API support\r\n    \r\n    -Serving the static files for Vault interface\r\n    \r\n    -Website icons API\r\n    \r\n    -Authenticator and U2F support\r\n    \r\n    -YubiKey OTP\r\n    \r\n    For more configuration see the wiki\n    \n    https://github.com/dani-garcia/bitwarden_rs/wiki",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/bitwardenrs.png",
    "name": "bitwardenrs",
    "image": "bitwardenrs/server",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "0:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/bitwarden"
      }
    ],
    "env": [
      {
        "name": "INVITATIONS_ALLOWED",
        "label": "INVITATIONS_ALLOWED",
        "default": "true|false"
      },
      {
        "name": "WEBSOCKET_ENABLED",
        "label": "WEBSOCKET_ENABLED",
        "default": "false"
      },
      {
        "name": "ADMIN_TOKEN",
        "label": "ADMIN_TOKEN",
        "default": ""
      },
      {
        "name": "SERVER_ADMIN_EMAIL",
        "label": "SERVER_ADMIN_EMAIL",
        "default": "me@domain.com"
      },
      {
        "name": "SIGNUPS_ALLOWED",
        "label": "SIGNUPS_ALLOWED",
        "default": "true|false"
      }
    ]
  },
  {
    "type": 1,
    "title": "bw_plex",
    "description": "binge watching for plex\n  In order to send command line options to this container you need to enable advanced view, and edit the Post Arguments, adding your arguments after the word `watch`, and before the double-quote",
    "categories": [
      "Tools:Utilities",
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "binge watching for plex\n  In order to send command line options to this container you need to enable advanced view, and edit the Post Arguments, adding your arguments after the word `watch`, and before the double-quote",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/bw_plex.png",
    "name": "bw_plex",
    "image": "hellowlol/bw_plex:latest",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/bw_plex"
      },
      {
        "container": "/mnt/user/Media/",
        "bind": "/mnt/user/Media/"
      }
    ],
    "env": [
      {
        "name": "token",
        "label": "token",
        "default": "YOUR_TOKEN"
      },
      {
        "name": "url",
        "label": "url",
        "default": "http://plex:32400"
      }
    ]
  },
  {
    "type": 1,
    "title": "chevereto",
    "description": "Chevereto is an image hosting software that allows you to create a beautiful and full-featured image hosting website on your own server. \r\n\r\nIt's your hosting and your rules, so say goodbye to closures and restrictions. This repo here is Chevereto Free, which is a fork of Chevereto V3 in which only the most essential features are preserved and it is released as Open Source software.",
    "categories": [
      "Productivity:",
      "MediaApp:Photos"
    ],
    "platform": "linux",
    "note": "Chevereto is an image hosting software that allows you to create a beautiful and full-featured image hosting website on your own server. \r\n\r\nIt's your hosting and your rules, so say goodbye to closures and restrictions. This repo here is Chevereto Free, which is a fork of Chevereto V3 in which only the most essential features are preserved and it is released as Open Source software.",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/chevereto.png",
    "name": "chevereto",
    "image": "nmtan/chevereto",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "80:80/tcp"
      }
    ],
    "env": [
      {
        "name": "CHEVERETO_DB_HOST",
        "label": "CHEVERETO_DB_HOST",
        "default": ""
      },
      {
        "name": "CHEVERETO_DB_USERNAME",
        "label": "CHEVERETO_DB_USERNAME",
        "default": ""
      },
      {
        "name": "CHEVERETO_DB_PASSWORD",
        "label": "CHEVERETO_DB_PASSWORD",
        "default": ""
      },
      {
        "name": "CHEVERETO_DB_NAME",
        "label": "CHEVERETO_DB_NAME",
        "default": ""
      },
      {
        "name": "CHEVERETO_DB_PREFIX",
        "label": "CHEVERETO_DB_PREFIX",
        "default": "chv_"
      },
      {
        "name": "CHEVERETO_DEFAULT_TIMEZONE",
        "label": "CHEVERETO_DEFAULT_TIMEZONE",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Cloudflare-DDNS",
    "description": "This small Alpine Linux based Docker image will allow you to use the free CloudFlare DNS Service as a Dynamic DNS Provider (DDNS).\r\n    \r\n     Variable:",
    "categories": [
      "Tools:Utilities",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "This small Alpine Linux based Docker image will allow you to use the free CloudFlare DNS Service as a Dynamic DNS Provider (DDNS).\r\n    \r\n     Variable:",
    "logo": "https://i.imgur.com/PKa3Sm2.png",
    "name": "Cloudflare-DDNS",
    "image": "oznu/cloudflare-ddns",
    "restart_policy": "unless-stopped",
    "env": [
      {
        "name": "SUBDOMAIN",
        "label": "SUBDOMAIN",
        "default": ""
      },
      {
        "name": "PROXIED",
        "label": "PROXIED",
        "default": "true|false"
      },
      {
        "name": "RRTYPE",
        "label": "RRTYPE",
        "default": "A"
      },
      {
        "name": "EMAIL",
        "label": "EMAIL",
        "default": ""
      },
      {
        "name": "API_KEY",
        "label": "API_KEY",
        "default": ""
      },
      {
        "name": "ZONE",
        "label": "ZONE",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "cloudflared",
    "description": "Cloudflared proxy-dns multi-platform Docker image based on Alpine Linux",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Cloudflared proxy-dns multi-platform Docker image based on Alpine Linux",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/cloudflared.png",
    "name": "cloudflared",
    "image": "crazymax/cloudflared",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "49312": "49312:49312/tcp",
        "5053": "5053:5053/udp"
      }
    ],
    "env": [
      {
        "name": "TUNNEL_DNS_UPSTREAM",
        "label": "TUNNEL_DNS_UPSTREAM",
        "default": "https://1.1.1.1/dns-query,https://1.0.0.1/dns-query"
      }
    ]
  },
  {
    "type": 1,
    "title": "crushftp9",
    "description": "CrushFTP9 is an extremely powerful, easy to use FTP solution that can use sftp, ftp, webDav, and http.",
    "categories": [
      "Network:FTP",
      "Network:Other",
      "Network:Web"
    ],
    "platform": "linux",
    "note": "CrushFTP9 is an extremely powerful, easy to use FTP solution that can use sftp, ftp, webDav, and http.",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/crushftp.png",
    "name": "crushftp9",
    "image": "mdschaefer/crushftp9",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "2222": "2222:2222/tcp",
        "8080": "8080:8080/tcp",
        "9090": "9090:9090/tcp",
        "9443": "9443:9443/tcp",
        "9921": "9921:9921/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/opt/CrushFTP9_PC",
        "bind": "/mnt/user/appdata/crushftp9"
      },
      {
        "container": "/unraid",
        "bind": "/mnt/user/"
      }
    ],
    "env": [
      {
        "name": "CRUSHADMIN",
        "label": "CRUSHADMIN",
        "default": "crushadmin"
      },
      {
        "name": "CRUSHPASSWORD",
        "label": "CRUSHPASSWORD",
        "default": "crush9password"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "deemix",
    "description": "deemix is a deezer downloader built from the ashes of Deezloader Remix. The base library (or core) can be used as a stand alone CLI app or implemented in an UI using the API.",
    "categories": [
      "MediaApp:Music",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "deemix is a deezer downloader built from the ashes of Deezloader Remix. The base library (or core) can be used as a stand alone CLI app or implemented in an UI using the API.",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/deemix.png",
    "name": "deemix",
    "image": "registry.gitlab.com/bockiii/deemix-docker",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "6595": "0:6595/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/downloads",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "ARL",
        "label": "ARL",
        "default": ""
      },
      {
        "name": "DEEZUI",
        "label": "DEEZUI",
        "default": "false"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "Dozzle",
    "description": "Dozzle is a real-time log viewer for docker containers.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Dozzle is a real-time log viewer for docker containers.",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/dozzle.png",
    "name": "Dozzle",
    "image": "amir20/dozzle",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/run/docker.sock",
        "bind": "/var/run/docker.sock"
      }
    ],
    "env": [
      {
        "name": "DOZZLE_BASE",
        "label": "DOZZLE_BASE",
        "default": "/"
      },
      {
        "name": "DOZZLE_LEVEL",
        "label": "DOZZLE_LEVEL",
        "default": "info"
      },
      {
        "name": "DOZZLE_TAILSIZE",
        "label": "DOZZLE_TAILSIZE",
        "default": "300"
      }
    ]
  },
  {
    "type": 1,
    "title": "Draw.io",
    "description": "A lightweight diagram drawing application",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "A lightweight diagram drawing application",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/draw-io.png",
    "name": "Draw.io",
    "image": "jgraph/drawio",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "3000:8080/tcp",
        "8443": "3443:8443/tcp"
      }
    ],
    "env": [
      {
        "name": "COUNTRY_CODE",
        "label": "COUNTRY_CODE",
        "default": ""
      },
      {
        "name": "KEYSTORE_PASS",
        "label": "KEYSTORE_PASS",
        "default": ""
      },
      {
        "name": "KEY_PASS",
        "label": "KEY_PASS",
        "default": ""
      },
      {
        "name": "ORGANISATION",
        "label": "ORGANISATION",
        "default": ""
      },
      {
        "name": "CITY",
        "label": "CITY",
        "default": ""
      },
      {
        "name": "STATE",
        "label": "STATE",
        "default": ""
      },
      {
        "name": "LETS_ENCRYPT_ENABLED",
        "label": "LETS_ENCRYPT_ENABLED",
        "default": "false"
      },
      {
        "name": "PUBLIC_DNS",
        "label": "PUBLIC_DNS",
        "default": ""
      },
      {
        "name": "ORGANISATION_UNIT",
        "label": "ORGANISATION_UNIT",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Duplicacy",
    "description": "Web GUI for Duplicacy. Duplicacy backs up your files to many cloud storages with client-side encryption and the highest level of deduplication\r\n    http://duplicacy.com \n    Note: \n    - It's imporatant to pass hostname (Advanced View \u003e Extra Parameters \u003e --hostname=), as duplicacy license is requested based on hostname and machine-id provided by dbus. \n    - Machine-id will be persisted in the /config directory. \n    - Default hostname set to 'duplicacy-unraid'. \n    - If you want to backup the unRAID FLASH drive then you will have to run Duplicacy as root i.e. USR_ID=0 and GRP_ID=0 \n    - /config -- is where configuration data will be stored. Should be backed up. \n    - /logs -- logs will go there. \n    - /cache -- transient and temporary files will be stored here. Can be safely deleted. \n    - Readme: https://hub.docker.com/r/saspus/duplicacy-web",
    "categories": [
      "Backup:",
      "Cloud:",
      "Network:Other",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Web GUI for Duplicacy. Duplicacy backs up your files to many cloud storages with client-side encryption and the highest level of deduplication\r\n    http://duplicacy.com \n    Note: \n    - It's imporatant to pass hostname (Advanced View \u003e Extra Parameters \u003e --hostname=), as duplicacy license is requested based on hostname and machine-id provided by dbus. \n    - Machine-id will be persisted in the /config directory. \n    - Default hostname set to 'duplicacy-unraid'. \n    - If you want to backup the unRAID FLASH drive then you will have to run Duplicacy as root i.e. USR_ID=0 and GRP_ID=0 \n    - /config -- is where configuration data will be stored. Should be backed up. \n    - /logs -- logs will go there. \n    - /cache -- transient and temporary files will be stored here. Can be safely deleted. \n    - Readme: https://hub.docker.com/r/saspus/duplicacy-web",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/duplicacy.png",
    "name": "Duplicacy",
    "image": "saspus/duplicacy-web",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "3875": "3875:3875/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/Duplicacy/config"
      },
      {
        "container": "/cache",
        "bind": "/mnt/user/appdata/Duplicacy/cache"
      },
      {
        "container": "/backuproot",
        "bind": ""
      },
      {
        "container": "/logs",
        "bind": "/mnt/user/appdata/Duplicacy/logs"
      }
    ],
    "env": [
      {
        "name": "USR_ID",
        "label": "USR_ID",
        "default": "99"
      },
      {
        "name": "GRP_ID",
        "label": "GRP_ID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "geoip2influx",
    "description": "A python script that will parse the nginx access.log and send geolocation metrics and log metrics to InfluxDB\r\n\r\nGrafans dashboard link: https://grafana.com/grafana/dashboards/12268\r\n\r\nSee readme for instructions and additional environment variables. \r\nhttps://github.com/gilbN/geoip2influx/blob/master/README.md",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "A python script that will parse the nginx access.log and send geolocation metrics and log metrics to InfluxDB\r\n\r\nGrafans dashboard link: https://grafana.com/grafana/dashboards/12268\r\n\r\nSee readme for instructions and additional environment variables. \r\nhttps://github.com/gilbN/geoip2influx/blob/master/README.md",
    "name": "geoip2influx",
    "image": "gilbn/geoip2influx",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/config/log/nginx/",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "INFLUX_PASS",
        "label": "INFLUX_PASS",
        "default": ""
      },
      {
        "name": "MAXMINDDB_LICENSE_KEY",
        "label": "MAXMINDDB_LICENSE_KEY",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "INFLUX_HOST",
        "label": "INFLUX_HOST",
        "default": ""
      },
      {
        "name": "INFLUX_HOST_PORT",
        "label": "INFLUX_HOST_PORT",
        "default": ""
      },
      {
        "name": "INFLUX_USER",
        "label": "INFLUX_USER",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "graylog",
    "description": "Official Graylog Docker image.\r\n\r\nFor more variables see the Graylog configuration file: https://github.com/Graylog2/graylog2-server/blob/3.1/misc/graylog.conf and http://docs.graylog.org/en/stable/pages/configuration/server.conf.html\r\n\r\nThe default root user is named 'admin'\r\n\r\nTo create the SHA256 string run 'echo -n YOUR16CHARACTERPASSWORD | sha256sum'",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Official Graylog Docker image.\r\n\r\nFor more variables see the Graylog configuration file: https://github.com/Graylog2/graylog2-server/blob/3.1/misc/graylog.conf and http://docs.graylog.org/en/stable/pages/configuration/server.conf.html\r\n\r\nThe default root user is named 'admin'\r\n\r\nTo create the SHA256 string run 'echo -n YOUR16CHARACTERPASSWORD | sha256sum'",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/graylog.png",
    "name": "graylog",
    "image": "graylog/graylog:3.1",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "12201": "12201:12201/tcp",
        "1514": "1514:1514/tcp",
        "9000": "9000:9000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/usr/share/graylog/data/journal",
        "bind": "/mnt/user/appdata/greylog"
      }
    ],
    "env": [
      {
        "name": "GRAYLOG_PASSWORD_SECRET",
        "label": "GRAYLOG_PASSWORD_SECRET",
        "default": ""
      },
      {
        "name": "GRAYLOG_ROOT_PASSWORD_SHA2",
        "label": "GRAYLOG_ROOT_PASSWORD_SHA2",
        "default": ""
      },
      {
        "name": "GRAYLOG_HTTP_EXTERNAL_URI",
        "label": "GRAYLOG_HTTP_EXTERNAL_URI",
        "default": "http://unraidIP:9000/"
      },
      {
        "name": "GRAYLOG_MONGODB_URI",
        "label": "GRAYLOG_MONGODB_URI",
        "default": "mongodb://unraidIP:27017/graylog"
      },
      {
        "name": "GRAYLOG_ELASTICSEARCH_HOSTS",
        "label": "GRAYLOG_ELASTICSEARCH_HOSTS",
        "default": "http://unraidIP:9200"
      }
    ]
  },
  {
    "type": 1,
    "title": "hexo-blog",
    "description": "A self-hosted blogging platform in which posts are written in markdown",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "A self-hosted blogging platform in which posts are written in markdown",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/hexo.png",
    "name": "hexo-blog",
    "image": "fletchto99/hexo-dev-blog",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "0:8080/tcp"
      }
    ],
    "env": [
      {
        "name": "HEXO_PLUGINS",
        "label": "HEXO_PLUGINS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "huginn",
    "description": "Build agents that monitor and act on your behalf. Your agents are standing by! \r\n\r\nHuginn is a system for building agents that perform automated tasks for you online. They can read the web, watch for events, and take actions on your behalf. Huginn's Agents create and consume events, propagating them along a directed graph. Think of it as a hackable version of IFTTT or Zapier on your own server. You always know who has your data. You do.\r\n\r\nLog in to your Huginn instance using the username admin and password password\r\n\r\nSee https://hub.docker.com/r/huginn/huginn/ for more information on running Huginn with a separate database container \r\n\r\nMore variables can be found here: https://github.com/huginn/huginn/blob/master/.env.example",
    "categories": [
      "HomeAutomation:"
    ],
    "platform": "linux",
    "note": "Build agents that monitor and act on your behalf. Your agents are standing by! \r\n\r\nHuginn is a system for building agents that perform automated tasks for you online. They can read the web, watch for events, and take actions on your behalf. Huginn's Agents create and consume events, propagating them along a directed graph. Think of it as a hackable version of IFTTT or Zapier on your own server. You always know who has your data. You do.\r\n\r\nLog in to your Huginn instance using the username admin and password password\r\n\r\nSee https://hub.docker.com/r/huginn/huginn/ for more information on running Huginn with a separate database container \r\n\r\nMore variables can be found here: https://github.com/huginn/huginn/blob/master/.env.example",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/huginn.png",
    "name": "huginn",
    "image": "huginn/huginn",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "3000": "3000:3000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/lib/mysql",
        "bind": "/mnt/user/appdata/huginn"
      }
    ]
  },
  {
    "type": 1,
    "title": "idrac6",
    "description": "Allows access to the iDRAC 6 console without installing Java or messing with Java Web Start. Java is only run inside of the container and access is provided via web interface or directly with VNC.",
    "categories": [
      "Tools:Utilities",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "Allows access to the iDRAC 6 console without installing Java or messing with Java Web Start. Java is only run inside of the container and access is provided via web interface or directly with VNC.",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/idrac6.png",
    "name": "idrac6",
    "image": "domistyle/idrac6",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "5800": "5800:5800/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/vmedia",
        "bind": "/mnt/user/appdata/idrac/vmedia"
      },
      {
        "container": "/app",
        "bind": "/mnt/user/appdata/idrac/app"
      },
      {
        "container": "/screenshots",
        "bind": "/mnt/user/appdata/idrac/screenshots"
      }
    ],
    "env": [
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      },
      {
        "name": "IDRAC_HOST",
        "label": "IDRAC_HOST",
        "default": ""
      },
      {
        "name": "IDRAC_USER",
        "label": "IDRAC_USER",
        "default": "root"
      },
      {
        "name": "IDRAC_PASSWORD",
        "label": "IDRAC_PASSWORD",
        "default": "calvin"
      },
      {
        "name": "IDRAC_PORT;",
        "label": "IDRAC_PORT;",
        "default": "443"
      },
      {
        "name": "IDRAC_KEYCODE_HACK",
        "label": "IDRAC_KEYCODE_HACK",
        "default": "false"
      }
    ]
  },
  {
    "type": 1,
    "title": "invoiceninja",
    "description": "An open-source invoicing and time-tracking app built with Laravel https://www.invoiceninja.com",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "An open-source invoicing and time-tracking app built with Laravel https://www.invoiceninja.com",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/invoiceninja.png",
    "name": "invoiceninja",
    "image": "anojht/invoiceninja",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "443": "8443:443/tcp",
        "80": "8000:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/www/app/public/logo",
        "bind": "/mnt/user/appdata/invoiceninja/logo"
      },
      {
        "container": "/var/www/app/storage",
        "bind": "/mnt/user/appdata/invoiceninja/storage"
      }
    ],
    "env": [
      {
        "name": "APP_ENV",
        "label": "APP_ENV",
        "default": "production"
      },
      {
        "name": "APP_DEBUG",
        "label": "APP_DEBUG",
        "default": "0"
      },
      {
        "name": "MAIL_PORT",
        "label": "MAIL_PORT",
        "default": "587"
      },
      {
        "name": "DB_TYPE",
        "label": "DB_TYPE",
        "default": "mysql"
      },
      {
        "name": "DB_DATABASE",
        "label": "DB_DATABASE",
        "default": "ninja"
      },
      {
        "name": "MAIL_FROM_NAME",
        "label": "MAIL_FROM_NAME",
        "default": "Invoice Department"
      },
      {
        "name": "MAIL_PASSWORD",
        "label": "MAIL_PASSWORD",
        "default": "SUPERSECRETEMAILPASSWORD"
      },
      {
        "name": "DB_HOST",
        "label": "DB_HOST",
        "default": "unraidIP:port"
      },
      {
        "name": "DB_USERNAME",
        "label": "DB_USERNAME",
        "default": "ninja"
      },
      {
        "name": "DB_PASSWORD",
        "label": "DB_PASSWORD",
        "default": "ninja"
      },
      {
        "name": "MAIL_HOST",
        "label": "MAIL_HOST",
        "default": "smtp.example.com"
      },
      {
        "name": "MAIL_ENCRYPTION",
        "label": "MAIL_ENCRYPTION",
        "default": "tls"
      },
      {
        "name": "MAIL_USERNAME",
        "label": "MAIL_USERNAME",
        "default": "johndoe@example.com"
      },
      {
        "name": "MAIL_FROM_ADDRESS",
        "label": "MAIL_FROM_ADDRESS",
        "default": "invoice@example.com"
      },
      {
        "name": "DB_STRICT",
        "label": "DB_STRICT",
        "default": "false"
      },
      {
        "name": "APP_URL",
        "label": "APP_URL",
        "default": "https://invoice.domain.com"
      },
      {
        "name": "APP_KEY",
        "label": "APP_KEY",
        "default": "SomeRandom32CharacterLongAlphanumericString"
      },
      {
        "name": "MAIL_DRIVER",
        "label": "MAIL_DRIVER",
        "default": "smtp"
      }
    ]
  },
  {
    "type": 1,
    "title": "jira-software",
    "description": "Jira Software is a software development tool used by agile teams.\r\n\r\nFor more information on different variables you can add, see: https://hub.docker.com/r/atlassian/jira-software/",
    "categories": [
      "Cloud:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Jira Software is a software development tool used by agile teams.\r\n\r\nFor more information on different variables you can add, see: https://hub.docker.com/r/atlassian/jira-software/",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/jira-software.png",
    "name": "jira-software",
    "image": "atlassian/jira-software",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/atlassian/application-data/jira",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "ATL_PROXY_NAME",
        "label": "ATL_PROXY_NAME",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Kdenlive-VNC",
    "description": "An instance of kdenlive accessible through vnc and noVnc (=Web Interface)",
    "categories": [
      "MediaApp:Video",
      "MediaApp:Music",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "An instance of kdenlive accessible through vnc and noVnc (=Web Interface)",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/kdenlive.png",
    "name": "Kdenlive-VNC",
    "image": "tessypowder/docker-kdenlive:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "5800": "5800:5800/tcp",
        "5900": "5900:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/sharedContent",
        "bind": "/mnt/user/appdata/kdenlive/"
      }
    ]
  },
  {
    "type": 1,
    "title": "Kitana",
    "description": "Kitana exposes your Plex plugin interfaces \"to the outside world\". It does that by authenticating against Plex.TV, then connecting to the Plex Media Server you tell it to, and essentially proxying the plugin UI. It has full PMS connection awareness and allows you to connect locally, remotely, or even via relay.",
    "categories": [
      "HomeAutomation:",
      "Tools:Utilities",
      "MediaApp:Other"
    ],
    "platform": "linux",
    "note": "Kitana exposes your Plex plugin interfaces \"to the outside world\". It does that by authenticating against Plex.TV, then connecting to the Plex Media Server you tell it to, and essentially proxying the plugin UI. It has full PMS connection awareness and allows you to connect locally, remotely, or even via relay.",
    "logo": "https://raw.githubusercontent.com/pannal/Kitana/master/static/img/android-icon-192x192.png",
    "name": "Kitana",
    "image": "pannal/kitana",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "31337": "31337:31337/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/app/data",
        "bind": "/mnt/user/appdata/kitana"
      }
    ]
  },
  {
    "type": 1,
    "title": "Komga",
    "description": "A Media server for comics/mangas/BDs with API and OPDS support.\r\nCheck logs for auto-generated username/password.",
    "categories": [
      "Network:Web",
      "MediaServer:Books",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "A Media server for comics/mangas/BDs with API and OPDS support.\r\nCheck logs for auto-generated username/password.",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/komga.png",
    "name": "Komga",
    "image": "gotson/komga",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/komga/"
      },
      {
        "container": "/books",
        "bind": "/mnt/user/Media/books"
      }
    ],
    "env": [
      {
        "name": "KOMGA_LIBRARIES_SCAN_DIRECTORY_EXCLUSIONS",
        "label": "KOMGA_LIBRARIES_SCAN_DIRECTORY_EXCLUSIONS",
        "default": "#recycle,@eaDir"
      }
    ]
  },
  {
    "type": 1,
    "title": "lemur-cfssl",
    "description": "Lemur manages TLS certificate creation. While not able to issue certificates itself, Lemur acts as a broker between CAs and environments providing a central portal for developers to issue TLS certificates with 'sane' defaults.\r\n\r\nCFSSL is CloudFlare's PKI/TLS swiss army knife. It is both a command line tool and an HTTP API server for signing, verifying, and bundling TLS certificates.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Lemur manages TLS certificate creation. While not able to issue certificates itself, Lemur acts as a broker between CAs and environments providing a central portal for developers to issue TLS certificates with 'sane' defaults.\r\n\r\nCFSSL is CloudFlare's PKI/TLS swiss army knife. It is both a command line tool and an HTTP API server for signing, verifying, and bundling TLS certificates.",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/lemur-cfssl.png",
    "name": "lemur-cfssl",
    "image": "halianelf/lemur",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "0:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "lg-connector",
    "description": "Connector for LG devices with SmartThings\r\n\r\nSimplifies the setup of LG devices with SmartThings.\r\nIf LG Connector is installed, virtual devices are registered automatically by the LG Connector SmartApp.\r\nYou don't have to do anything to add LG devices in SmartThings IDE.\r\n\r\nDefault Login ID \u0026amp; Password is",
    "categories": [
      "HomeAutomation:"
    ],
    "platform": "linux",
    "note": "Connector for LG devices with SmartThings\r\n\r\nSimplifies the setup of LG devices with SmartThings.\r\nIf LG Connector is installed, virtual devices are registered automatically by the LG Connector SmartApp.\r\nYou don't have to do anything to add LG devices in SmartThings IDE.\r\n\r\nDefault Login ID \u0026amp; Password is",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/lg-connector.png",
    "name": "lg-connector",
    "image": "fison67/lg-connector:0.0.3",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Logarr",
    "description": "Logarr is a self-hosted, single-page, log consolidation tool written in PHP",
    "categories": [
      "Tools:Utilities",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Logarr is a self-hosted, single-page, log consolidation tool written in PHP",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/logarr.png",
    "name": "Logarr",
    "image": "monitorr/logarr-alpha",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "0:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/app",
        "bind": "/mnt/user/appdata/Logarr"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Mango",
    "description": "Mango is a self-hosted manga server and reader. Its features include\n - Multi-user support\n - OPDS support\n - Dark/light mode switch\n - Supported formats: .cbz, .zip, .cbr and .rar\n - Supports nested folders in library\n - Automatically stores reading progress\n - Built-in MangaDex downloader\n - The web reader is responsive and works well on mobile, so there is no need for a mobile app",
    "categories": [
      "MediaApp:Books"
    ],
    "platform": "linux",
    "note": "Mango is a self-hosted manga server and reader. Its features include\n - Multi-user support\n - OPDS support\n - Dark/light mode switch\n - Supported formats: .cbz, .zip, .cbr and .rar\n - Supports nested folders in library\n - Automatically stores reading progress\n - Built-in MangaDex downloader\n - The web reader is responsive and works well on mobile, so there is no need for a mobile app",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/mango.png",
    "name": "Mango",
    "image": "hkalexling/mango",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "9000": "0:9000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/root/.config/mango",
        "bind": "/mnt/user/appdata/Mango"
      },
      {
        "container": "/root/mango",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "monica",
    "description": "Please Use monica rather than monicahq/monicahq\n\n\nMonica, the Personal Relationship Manager \r\n\r\nComplete list of env : https://raw.githubusercontent.com/monicahq/monica/master/.env.example\r\n\r\nAPP_URL: https://github.com/monicahq/monica/blob/master/docs/installation/ssl.md",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "Please Use monica rather than monicahq/monicahq\n\n\nMonica, the Personal Relationship Manager \r\n\r\nComplete list of env : https://raw.githubusercontent.com/monicahq/monica/master/.env.example\r\n\r\nAPP_URL: https://github.com/monicahq/monica/blob/master/docs/installation/ssl.md",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/monica.png",
    "name": "monica",
    "image": "monicahq/monicahq",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/www/monica/storage",
        "bind": "/mnt/user/appdata/monica"
      }
    ],
    "env": [
      {
        "name": "APP_ENV",
        "label": "APP_ENV",
        "default": "production"
      },
      {
        "name": "DB_HOST",
        "label": "DB_HOST",
        "default": "192.168.1.2"
      },
      {
        "name": "APP_DISABLE_SIGNUP",
        "label": "APP_DISABLE_SIGNUP",
        "default": "false"
      },
      {
        "name": "APP_SIGNUP_DOUBLE_OPTIN",
        "label": "APP_SIGNUP_DOUBLE_OPTIN",
        "default": "false"
      },
      {
        "name": "APP_TRUSTED_PROXIES",
        "label": "APP_TRUSTED_PROXIES",
        "default": "*"
      },
      {
        "name": "HASH_SALT",
        "label": "HASH_SALT",
        "default": "ChangeMeBy20+KeyLength"
      },
      {
        "name": "HASH_LENGTH",
        "label": "HASH_LENGTH",
        "default": "18"
      },
      {
        "name": "DB_DATABASE",
        "label": "DB_DATABASE",
        "default": "monica"
      },
      {
        "name": "DB_USERNAME",
        "label": "DB_USERNAME",
        "default": "monica"
      },
      {
        "name": "DB_PASSWORD",
        "label": "DB_PASSWORD",
        "default": "monica"
      },
      {
        "name": "MAIL_ENCRYPTION",
        "label": "MAIL_ENCRYPTION",
        "default": "TLS"
      },
      {
        "name": "APP_DEFAULT_LOCALE",
        "label": "APP_DEFAULT_LOCALE",
        "default": "en"
      },
      {
        "name": "APP_DEBUG",
        "label": "APP_DEBUG",
        "default": "false"
      },
      {
        "name": "APP_URL",
        "label": "APP_URL",
        "default": "https://FQDM.tld"
      },
      {
        "name": "DB_CONNECTION",
        "label": "DB_CONNECTION",
        "default": "mysql"
      },
      {
        "name": "MAIL_DRIVER",
        "label": "MAIL_DRIVER",
        "default": "smtp"
      },
      {
        "name": "MAIL_PORT",
        "label": "MAIL_PORT",
        "default": "587"
      },
      {
        "name": "MAIL_USERNAME",
        "label": "MAIL_USERNAME",
        "default": "user@example.com"
      },
      {
        "name": "MAIL_FROM_NAME",
        "label": "MAIL_FROM_NAME",
        "default": "Monica instance"
      },
      {
        "name": "APP_KEY",
        "label": "APP_KEY",
        "default": "ChangeMeBy32KeyLengthOrGenerated"
      },
      {
        "name": "DB_PORT",
        "label": "DB_PORT",
        "default": "3306"
      },
      {
        "name": "DB_USE_UTF8MB4",
        "label": "DB_USE_UTF8MB4",
        "default": "true"
      },
      {
        "name": "MAIL_HOST",
        "label": "MAIL_HOST",
        "default": "example.com"
      },
      {
        "name": "MAIL_PASSWORD",
        "label": "MAIL_PASSWORD",
        "default": "secretpassword"
      },
      {
        "name": "MAIL_FROM_ADDRESS",
        "label": "MAIL_FROM_ADDRESS",
        "default": "user@example.com"
      },
      {
        "name": "APP_EMAIL_NEW_USERS_NOTIFICATION",
        "label": "APP_EMAIL_NEW_USERS_NOTIFICATION",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "monica",
    "description": "Monica, the Personal Relationship Manager\n\nComplete list of env : https://raw.githubusercontent.com/monicahq/monica/master/.env.example\n\nAPP_URL: https://github.com/monicahq/monica/blob/master/docs/installation/ssl.md",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "Monica, the Personal Relationship Manager\n\nComplete list of env : https://raw.githubusercontent.com/monicahq/monica/master/.env.example\n\nAPP_URL: https://github.com/monicahq/monica/blob/master/docs/installation/ssl.md",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/monica.png",
    "name": "monica",
    "image": "monica",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/www/html/storage/",
        "bind": "/mnt/user/appdata/monica"
      }
    ],
    "env": [
      {
        "name": "APP_KEY",
        "label": "APP_KEY",
        "default": "ChangeMeBy32KeyLengthOrGenerated"
      },
      {
        "name": "DB_PASSWORD",
        "label": "DB_PASSWORD",
        "default": "monica"
      },
      {
        "name": "MAIL_HOST",
        "label": "MAIL_HOST",
        "default": "example.com"
      },
      {
        "name": "MAIL_USERNAME",
        "label": "MAIL_USERNAME",
        "default": "user@example.com"
      },
      {
        "name": "DB_USERNAME",
        "label": "DB_USERNAME",
        "default": "monica"
      },
      {
        "name": "MAIL_DRIVER",
        "label": "MAIL_DRIVER",
        "default": "smtp"
      },
      {
        "name": "MAIL_ENCRYPTION",
        "label": "MAIL_ENCRYPTION",
        "default": "TLS"
      },
      {
        "name": "MAIL_PASSWORD",
        "label": "MAIL_PASSWORD",
        "default": "secretpassword"
      },
      {
        "name": "APP_ENV",
        "label": "APP_ENV",
        "default": "production"
      },
      {
        "name": "HASH_LENGTH",
        "label": "HASH_LENGTH",
        "default": "18"
      },
      {
        "name": "APP_URL",
        "label": "APP_URL",
        "default": "https://FQDM.tld"
      },
      {
        "name": "DB_HOST",
        "label": "DB_HOST",
        "default": "192.168.1.2"
      },
      {
        "name": "HASH_SALT",
        "label": "HASH_SALT",
        "default": "ChangeMeBy20+KeyLength"
      },
      {
        "name": "MAIL_FROM_NAME",
        "label": "MAIL_FROM_NAME",
        "default": "Monica instance"
      },
      {
        "name": "APP_SIGNUP_DOUBLE_OPTIN",
        "label": "APP_SIGNUP_DOUBLE_OPTIN",
        "default": "false"
      },
      {
        "name": "DB_USE_UTF8MB4",
        "label": "DB_USE_UTF8MB4",
        "default": "true"
      },
      {
        "name": "MAIL_PORT",
        "label": "MAIL_PORT",
        "default": "587"
      },
      {
        "name": "MAIL_FROM_ADDRESS",
        "label": "MAIL_FROM_ADDRESS",
        "default": "user@example.com"
      },
      {
        "name": "APP_EMAIL_NEW_USERS_NOTIFICATION",
        "label": "APP_EMAIL_NEW_USERS_NOTIFICATION",
        "default": ""
      },
      {
        "name": "APP_DEBUG",
        "label": "APP_DEBUG",
        "default": "false"
      },
      {
        "name": "DB_CONNECTION",
        "label": "DB_CONNECTION",
        "default": "mysql"
      },
      {
        "name": "DB_PORT",
        "label": "DB_PORT",
        "default": "3306"
      },
      {
        "name": "DB_DATABASE",
        "label": "DB_DATABASE",
        "default": "monica"
      },
      {
        "name": "APP_DEFAULT_LOCALE",
        "label": "APP_DEFAULT_LOCALE",
        "default": "en"
      },
      {
        "name": "APP_DISABLE_SIGNUP",
        "label": "APP_DISABLE_SIGNUP",
        "default": "false"
      },
      {
        "name": "APP_TRUSTED_PROXIES",
        "label": "APP_TRUSTED_PROXIES",
        "default": "*"
      }
    ]
  },
  {
    "type": 1,
    "title": "Monitorr",
    "description": "Monitorr is a webfront to live display the status of any webapp or service\r \r See full configuration instructions in the WiKi: https://github.com/Monitorr/Monitorr/wiki",
    "categories": [
      "Tools:Utilities",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Monitorr is a webfront to live display the status of any webapp or service\r \r See full configuration instructions in the WiKi: https://github.com/Monitorr/Monitorr/wiki",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/monitorr.png",
    "name": "Monitorr",
    "image": "monitorr/monitorr",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "0:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/app",
        "bind": "/mnt/user/appdata/Monitorr"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "NoSQLClient",
    "description": "Cross-platform and self hosted, easy to use, intuitive mongodb management tool - Formerly Mongoclient",
    "categories": [
      "Tools:Utilities",
      "Other:"
    ],
    "platform": "linux",
    "note": "Cross-platform and self hosted, easy to use, intuitive mongodb management tool - Formerly Mongoclient",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/nosqlclient.png",
    "name": "NoSQLClient",
    "image": "mongoclient/mongoclient",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "3000": "3000:3000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data/db",
        "bind": "/mnt/user/appdata/mongoclient"
      }
    ],
    "env": [
      {
        "name": "MONGO_URL",
        "label": "MONGO_URL",
        "default": "mongodb://UNRAID_IP:27017/nosqlclient"
      }
    ]
  },
  {
    "type": 1,
    "title": "openldap",
    "description": "A docker image to run OpenLDAP, The container default log level is info. Available levels are: none, error, warning, info, debug and trace. To use this container with phpldapadmin, create a custom network that both containers are on and then link them using --link openldap:PHPLDAPADMIN_LDAP_HOSTS in the extra parameters of the phpldapadmin docker container (which should be equal to HOSTNAME in this container). Any other docker that wants to use LDAP credentials will need the same extra parameter including Let's Encrypt if you are using linuxserver.io's ldap-auth container.",
    "categories": [
      "HomeAutomation:",
      "Network:Management",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "A docker image to run OpenLDAP, The container default log level is info. Available levels are: none, error, warning, info, debug and trace. To use this container with phpldapadmin, create a custom network that both containers are on and then link them using --link openldap:PHPLDAPADMIN_LDAP_HOSTS in the extra parameters of the phpldapadmin docker container (which should be equal to HOSTNAME in this container). Any other docker that wants to use LDAP credentials will need the same extra parameter including Let's Encrypt if you are using linuxserver.io's ldap-auth container.",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/openldap.png",
    "name": "openldap",
    "image": "osixia/openldap",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "389": "389:389/tcp",
        "636": "636:636/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/container/service/slapd/assets/certs/",
        "bind": "letsencrypt-keys"
      },
      {
        "container": "/container/service/slapd/assets/config/bootstrap/ldif/custom",
        "bind": "/mnt/user/appdata/openldap/ldif/"
      },
      {
        "container": "/var/lib/ldap/",
        "bind": "/mnt/user/appdata/openldap/data"
      },
      {
        "container": "/etc/ldap/slapd.d/",
        "bind": "/mnt/user/appdata/openldap/config"
      }
    ],
    "env": [
      {
        "name": "LDAP_READONLY_USER_USERNAME",
        "label": "LDAP_READONLY_USER_USERNAME",
        "default": ""
      },
      {
        "name": "LDAP_READONLY_USER_PASSWORD",
        "label": "LDAP_READONLY_USER_PASSWORD",
        "default": ""
      },
      {
        "name": "LDAP_REMOVE_CONFIG_AFTER_SETUP",
        "label": "LDAP_REMOVE_CONFIG_AFTER_SETUP",
        "default": "true"
      },
      {
        "name": "LDAP_DOMAIN",
        "label": "LDAP_DOMAIN",
        "default": "example.org"
      },
      {
        "name": "HOSTNAME",
        "label": "HOSTNAME",
        "default": "example.org"
      },
      {
        "name": "LDAP_TLS_KEY_FILENAME",
        "label": "LDAP_TLS_KEY_FILENAME",
        "default": "live/example.org/privkey.pem"
      },
      {
        "name": "LDAP_TLS_CA_CRT_FILENAME",
        "label": "LDAP_TLS_CA_CRT_FILENAME",
        "default": "ca.crt"
      },
      {
        "name": "LDAP_BASE_DN",
        "label": "LDAP_BASE_DN",
        "default": ""
      },
      {
        "name": "LDAP_CONFIG_PASSWORD",
        "label": "LDAP_CONFIG_PASSWORD",
        "default": "config"
      },
      {
        "name": "LDAP_BACKEND",
        "label": "LDAP_BACKEND",
        "default": "mdb"
      },
      {
        "name": "LDAP_TLS_VERIFY_CLIENT",
        "label": "LDAP_TLS_VERIFY_CLIENT",
        "default": "demand"
      },
      {
        "name": "KEEP_EXISTING_CONFIG",
        "label": "KEEP_EXISTING_CONFIG",
        "default": "false"
      },
      {
        "name": "LDAP_TLS_ENFORCE",
        "label": "LDAP_TLS_ENFORCE",
        "default": "false"
      },
      {
        "name": "LDAP_TLS_CIPHER_SUITE",
        "label": "LDAP_TLS_CIPHER_SUITE",
        "default": "SECURE256:+SECURE128:-VERS-TLS-ALL:+VERS-TLS1.2:-RSA:-DHE-DSS:-CAMELLIA-128-CBC:-CAMELLIA-256-CBC"
      },
      {
        "name": "LDAP_SSL_HELPER_PREFIX",
        "label": "LDAP_SSL_HELPER_PREFIX",
        "default": "ldap"
      },
      {
        "name": "LDAP_ADMIN_PASSWORD",
        "label": "LDAP_ADMIN_PASSWORD",
        "default": "admin"
      },
      {
        "name": "LDAP_TLS_CRT_FILENAME",
        "label": "LDAP_TLS_CRT_FILENAME",
        "default": "live/example.org/cert.pem"
      },
      {
        "name": "LDAP_READONLY_USER",
        "label": "LDAP_READONLY_USER",
        "default": ""
      },
      {
        "name": "LDAP_RFC2307BIS_SCHEMA",
        "label": "LDAP_RFC2307BIS_SCHEMA",
        "default": "false"
      },
      {
        "name": "LDAP_ORGANISATION",
        "label": "LDAP_ORGANISATION",
        "default": "Example Inc."
      },
      {
        "name": "LDAP_TLS",
        "label": "LDAP_TLS",
        "default": "true"
      }
    ]
  },
  {
    "type": 1,
    "title": "Overleaf",
    "description": "A self-hosted LaTeX editor",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "A self-hosted LaTeX editor",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/overleaf.png",
    "name": "Overleaf",
    "image": "sharelatex/sharelatex",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "80:80/tcp"
      }
    ],
    "env": [
      {
        "name": "SHARELATEX_BEHIND_PROXY",
        "label": "SHARELATEX_BEHIND_PROXY",
        "default": ""
      },
      {
        "name": "SHARELATEX_SECURE_COOKIE",
        "label": "SHARELATEX_SECURE_COOKIE",
        "default": ""
      },
      {
        "name": "SHARELATEX_ALLOW_PUBLIC_ACCESS",
        "label": "SHARELATEX_ALLOW_PUBLIC_ACCESS",
        "default": ""
      },
      {
        "name": "SHARELATEX_NAV_TITLE",
        "label": "SHARELATEX_NAV_TITLE",
        "default": ""
      },
      {
        "name": "SHARELATEX_REDIS_PASS",
        "label": "SHARELATEX_REDIS_PASS",
        "default": ""
      },
      {
        "name": "SHARELATEX_MONGO_URL",
        "label": "SHARELATEX_MONGO_URL",
        "default": ""
      },
      {
        "name": "SHARELATEX_REDIS_HOST",
        "label": "SHARELATEX_REDIS_HOST",
        "default": ""
      },
      {
        "name": "SHARELATEX_REDIS_PORT",
        "label": "SHARELATEX_REDIS_PORT",
        "default": ""
      },
      {
        "name": "SHARELATEX_ALLOW_ANONYMOUS_READ_AND_WRITE_SHARING",
        "label": "SHARELATEX_ALLOW_ANONYMOUS_READ_AND_WRITE_SHARING",
        "default": ""
      },
      {
        "name": "SHARELATEX_APP_NAME",
        "label": "SHARELATEX_APP_NAME",
        "default": ""
      },
      {
        "name": "SHARELATEX_SITE_URL",
        "label": "SHARELATEX_SITE_URL",
        "default": ""
      },
      {
        "name": "SHARELATEX_RESTRICT_INVITES_TO_EXISTING_ACCOUNTS",
        "label": "SHARELATEX_RESTRICT_INVITES_TO_EXISTING_ACCOUNTS",
        "default": ""
      },
      {
        "name": "SHARELATEX_ADMIN_EMAIL",
        "label": "SHARELATEX_ADMIN_EMAIL",
        "default": ""
      },
      {
        "name": "SHARELATEX_SESSION_SECRET",
        "label": "SHARELATEX_SESSION_SECRET",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "paperless",
    "description": "Index and archive all of your scanned paper documents.\r\n\r\nFor installation instructions see: https://forums.unraid.net/topic/87196-support-paperless-docker/ \r\nPaperless Documentation: https://paperless.readthedocs.io/en/latest/\r\nAdditional Template Variables: https://github.com/the-paperless-project/paperless/blob/master/paperless.conf.example",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "Index and archive all of your scanned paper documents.\r\n\r\nFor installation instructions see: https://forums.unraid.net/topic/87196-support-paperless-docker/ \r\nPaperless Documentation: https://paperless.readthedocs.io/en/latest/\r\nAdditional Template Variables: https://github.com/the-paperless-project/paperless/blob/master/paperless.conf.example",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/paperless.png",
    "name": "paperless",
    "image": "thepaperlessproject/paperless",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8000": "8000:8000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/usr/src/paperless/data",
        "bind": "/mnt/user/appdata/paperless/data"
      },
      {
        "container": "/usr/src/paperless/media",
        "bind": ""
      },
      {
        "container": "/consume",
        "bind": ""
      },
      {
        "container": "/export",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PAPERLESS_OCR_LANGUAGES",
        "label": "PAPERLESS_OCR_LANGUAGES",
        "default": "eng"
      },
      {
        "name": "PAPERLESS_FORGIVING_OCR",
        "label": "PAPERLESS_FORGIVING_OCR",
        "default": "false"
      },
      {
        "name": "PAPERLESS_INLINE_DOC",
        "label": "PAPERLESS_INLINE_DOC",
        "default": "false"
      },
      {
        "name": "PAPERLESS_FILENAME_FORMAT",
        "label": "PAPERLESS_FILENAME_FORMAT",
        "default": "{created}-{correspondent}-{title}"
      },
      {
        "name": "USERMAP_UID",
        "label": "USERMAP_UID",
        "default": "99"
      },
      {
        "name": "USERMAP_GID",
        "label": "USERMAP_GID",
        "default": "100"
      },
      {
        "name": "PAPERLESS_OCR_LANGUAGE",
        "label": "PAPERLESS_OCR_LANGUAGE",
        "default": "eng"
      }
    ]
  },
  {
    "type": 1,
    "title": "PASTA",
    "description": "PASTA - Audio and Subtitle Track Changer for Plex \n  PASTA allows you to connect to your Plex server and view more details about the audio tracks and subtitles, as well as set the tracks and subtitles for entire shows, or single episodes very quickly.",
    "categories": [
      "MediaApp:Other",
      "Tools:Utilities",
      "Other:"
    ],
    "platform": "linux",
    "note": "PASTA - Audio and Subtitle Track Changer for Plex \n  PASTA allows you to connect to your Plex server and view more details about the audio tracks and subtitles, as well as set the tracks and subtitles for entire shows, or single episodes very quickly.",
    "logo": "https://www.pastatool.com/images/android-chrome-512.png",
    "name": "PASTA",
    "image": "cglatot/pasta",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "0:80/tcp"
      }
    ]
  },
  {
    "type": 1,
    "title": "phpldapadmin",
    "description": "A docker image to run phpldapadmin. It provides a user interface to an openldap database. It must be on the same custom network as openldap and must be linked via --link openldap:PHPLDAPADMIN_LDAP_HOSTS e.g. --link openldap:example.org\r\nAn example config.php can be found here: https://github.com/commandprompt/phpldapadmin/blob/master/config/config.php.example",
    "categories": [
      "Network:Other",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "A docker image to run phpldapadmin. It provides a user interface to an openldap database. It must be on the same custom network as openldap and must be linked via --link openldap:PHPLDAPADMIN_LDAP_HOSTS e.g. --link openldap:example.org\r\nAn example config.php can be found here: https://github.com/commandprompt/phpldapadmin/blob/master/config/config.php.example",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/phpldapadmin.png",
    "name": "phpldapadmin",
    "image": "osixia/phpldapadmin",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "443": "443:443/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/container/service/phpldapadmin/assets/apache2/certs/",
        "bind": "letsencrypt-keys"
      },
      {
        "container": "/container/service/phpldapadmin/assets/config/",
        "bind": "/mnt/user/appdata/phpldapadmin"
      }
    ],
    "env": [
      {
        "name": "PHPLDAPADMIN_LDAP_HOSTS",
        "label": "PHPLDAPADMIN_LDAP_HOSTS",
        "default": "example.org"
      },
      {
        "name": "PHPLDAPADMIN_SERVER_PATH",
        "label": "PHPLDAPADMIN_SERVER_PATH",
        "default": "/phpldapadmin"
      },
      {
        "name": "LDAP_CLIENT_SSL_HELPER_PREFIX",
        "label": "LDAP_CLIENT_SSL_HELPER_PREFIX",
        "default": "ldap"
      },
      {
        "name": "PHPLDAPADMIN_SSL_HELPER_PREFIX",
        "label": "PHPLDAPADMIN_SSL_HELPER_PREFIX",
        "default": "phpldapadmin"
      },
      {
        "name": "PHPLDAPADMIN_SERVER_ADMIN",
        "label": "PHPLDAPADMIN_SERVER_ADMIN",
        "default": "webmaster@example.org"
      },
      {
        "name": "PHPLDAPADMIN_LDAP_CLIENT_TLS",
        "label": "PHPLDAPADMIN_LDAP_CLIENT_TLS",
        "default": "true"
      },
      {
        "name": "PHPLDAPADMIN_LDAP_CLIENT_TLS_REQCERT",
        "label": "PHPLDAPADMIN_LDAP_CLIENT_TLS_REQCERT",
        "default": "demand"
      },
      {
        "name": "PHPLDAPADMIN_LDAP_CLIENT_TLS_CA_CRT_FILENAME",
        "label": "PHPLDAPADMIN_LDAP_CLIENT_TLS_CA_CRT_FILENAME",
        "default": "ldap-ca.crt"
      },
      {
        "name": "PHPLDAPADMIN_LDAP_CLIENT_TLS_KEY_FILENAME",
        "label": "PHPLDAPADMIN_LDAP_CLIENT_TLS_KEY_FILENAME",
        "default": "ldap-client.key"
      },
      {
        "name": "PHPLDAPADMIN_HTTPS",
        "label": "PHPLDAPADMIN_HTTPS",
        "default": "true"
      },
      {
        "name": "PHPLDAPADMIN_HTTPS_CRT_FILENAME",
        "label": "PHPLDAPADMIN_HTTPS_CRT_FILENAME",
        "default": "live/example.org/cert.pem"
      },
      {
        "name": "PHPLDAPADMIN_HTTPS_KEY_FILENAME",
        "label": "PHPLDAPADMIN_HTTPS_KEY_FILENAME",
        "default": "live/example.org/privkey.pem"
      },
      {
        "name": "PHPLDAPADMIN_HTTPS_CA_CRT_FILENAME",
        "label": "PHPLDAPADMIN_HTTPS_CA_CRT_FILENAME",
        "default": "live/example.org/fullchain.pem"
      },
      {
        "name": "PHPLDAPADMIN_TRUST_PROXY_SSL",
        "label": "PHPLDAPADMIN_TRUST_PROXY_SSL",
        "default": "true"
      },
      {
        "name": "PHPLDAPADMIN_LDAP_CLIENT_TLS_CRT_FILENAME",
        "label": "PHPLDAPADMIN_LDAP_CLIENT_TLS_CRT_FILENAME",
        "default": "ldap-client.crt"
      }
    ]
  },
  {
    "type": 1,
    "title": "LDAPforPlex",
    "description": "An LDAP server that uses Plex as the provider.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "An LDAP server that uses Plex as the provider.",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/plex_ldap.png",
    "name": "LDAPforPlex",
    "image": "starbix/plex-ldap",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "2389": "2389:2389/tcp"
      }
    ],
    "env": [
      {
        "name": "TOKEN",
        "label": "TOKEN",
        "default": ""
      },
      {
        "name": "MACHINEID",
        "label": "MACHINEID",
        "default": ""
      },
      {
        "name": "SERVERNAME",
        "label": "SERVERNAME",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "plex-web",
    "description": "PlexWeb is a web app for Plex servers. Connect to your server via your URL and token to access features like viewing current activity and adding playlists based on IMDb lists. Based on Flask.",
    "categories": [
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "PlexWeb is a web app for Plex servers. Connect to your server via your URL and token to access features like viewing current activity and adding playlists based on IMDb lists. Based on Flask.",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/plex-web.png",
    "name": "plex-web",
    "image": "tronyx/plex-web",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "5000": "5000:5000/tcp"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "PrivateBin",
    "description": "A minimalist, open source online pastebin where the server has zero knowledge of pasted data. Data is encrypted/decrypted in the browser using 256 bits AES.",
    "categories": [
      "Other:"
    ],
    "platform": "linux",
    "note": "A minimalist, open source online pastebin where the server has zero knowledge of pasted data. Data is encrypted/decrypted in the browser using 256 bits AES.",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/privatebin.png",
    "name": "PrivateBin",
    "image": "privatebin/nginx-fpm-alpine",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "0:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/srv/data",
        "bind": "/mnt/user/appdata/privatebin"
      }
    ]
  },
  {
    "type": 1,
    "title": "prometheus",
    "description": "Prometheus is a systems and service monitoring system. It collects metrics from configured targets at given intervals, evaluates rule expressions, displays the results, and can trigger alerts if some condition is observed to be true.",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "Prometheus is a systems and service monitoring system. It collects metrics from configured targets at given intervals, evaluates rule expressions, displays the results, and can trigger alerts if some condition is observed to be true.",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/prometheus.png",
    "name": "prometheus",
    "image": "prom/prometheus",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "9090": "9090:9090/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/prometheus",
        "bind": "/mnt/user/appdata/prometheus/data"
      },
      {
        "container": "/etc/prometheus/",
        "bind": "/mnt/user/appdata/prometheus/etc"
      }
    ]
  },
  {
    "type": 1,
    "title": "quasselcore",
    "description": "Quassel-Core with Encryption Support",
    "categories": [
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "Quassel-Core with Encryption Support",
    "logo": "https://camo.githubusercontent.com/c91c9026a347f3b7046dc9fb9971cd209a1a44e2/687474703a2f2f69636f6e732e69636f6e617263686976652e636f6d2f69636f6e732f6f787967656e2d69636f6e732e6f72672f6f787967656e2f3235362f417070732d7175617373656c2d69636f6e2e706e67",
    "name": "quasselcore",
    "image": "keinnerd/quasselcore",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "4242": "4242:4242/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/quassel-core"
      }
    ]
  },
  {
    "type": 1,
    "title": "radarrsync",
    "description": "RadarrSync Syncs two Radarr servers through web API. This is a modified version designed to be run in a docker container. This version supports only two servers.\r\n\r\nRADARR_URL -\u003e The endpoint of your radarr server\r\n\r\nRADARR_KEY -\u003e The API key for your radarr server\r\n\r\nRADARR4K_URL -\u003e The endpoint of your radarr server you want to sync to\r\n\r\nRADARR4K_KEY -\u003e The API key for this server\r\n\r\nPROFILE_ID -\u003e The profile number you want the video to be added with. (Start counting  from Any:1 SD:2 ect Ultra-HD is normally 5.  )\r\n\r\nEnsure that the root path is the same on both servers. ie /movie",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "RadarrSync Syncs two Radarr servers through web API. This is a modified version designed to be run in a docker container. This version supports only two servers.\r\n\r\nRADARR_URL -\u003e The endpoint of your radarr server\r\n\r\nRADARR_KEY -\u003e The API key for your radarr server\r\n\r\nRADARR4K_URL -\u003e The endpoint of your radarr server you want to sync to\r\n\r\nRADARR4K_KEY -\u003e The API key for this server\r\n\r\nPROFILE_ID -\u003e The profile number you want the video to be added with. (Start counting  from Any:1 SD:2 ect Ultra-HD is normally 5.  )\r\n\r\nEnsure that the root path is the same on both servers. ie /movie",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/radarrsync.png",
    "name": "radarrsync",
    "image": "dmanius/radarrsync-docker",
    "restart_policy": "unless-stopped",
    "env": [
      {
        "name": "RADARR_URL",
        "label": "RADARR_URL",
        "default": ""
      },
      {
        "name": "RADARR_KEY",
        "label": "RADARR_KEY",
        "default": ""
      },
      {
        "name": "RADARR4K_URL",
        "label": "RADARR4K_URL",
        "default": ""
      },
      {
        "name": "RADARR4K_KEY",
        "label": "RADARR4K_KEY",
        "default": ""
      },
      {
        "name": "PROFILE_ID",
        "label": "PROFILE_ID",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "rancher",
    "description": "A container management platform built for organizations that deploy containers in production. The docker version of Rancher cannot be made HA (Highly Available), however the clusters it creates can be. It is also possible to connect to and use clusters created by rancher when it is down. Useful as a management interface for deploying, scaling, and editting apps on other systems. (in the cloud, a raspberry pi cluster, vms running k3os, etc.) Perfect for running and managing the apps that you'd rather not go down while maintaining your server.",
    "categories": [
      "Network:Management"
    ],
    "platform": "linux",
    "note": "A container management platform built for organizations that deploy containers in production. The docker version of Rancher cannot be made HA (Highly Available), however the clusters it creates can be. It is also possible to connect to and use clusters created by rancher when it is down. Useful as a management interface for deploying, scaling, and editting apps on other systems. (in the cloud, a raspberry pi cluster, vms running k3os, etc.) Perfect for running and managing the apps that you'd rather not go down while maintaining your server.",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/rancher.png",
    "name": "rancher",
    "image": "rancher/rancher:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "443": "443:443/tcp",
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/lib/rancher",
        "bind": "/mnt/user/appdata/rancher/"
      }
    ]
  },
  {
    "type": 1,
    "title": "Rebuild-DNDC",
    "description": "- Rebuild Docker Network Dependent Containers, e.g. Monitor a VPN or any container and rebuild dependent containers using the VPN container network stack --net=container:vpn_cotnainer_name. \n  - RDNDC will monitor the master/vpn container during updates, restarts and after server boot. \n  - Please refer to the readme before deploying this container: https://github.com/elmerfdz/unRAIDscripts",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "- Rebuild Docker Network Dependent Containers, e.g. Monitor a VPN or any container and rebuild dependent containers using the VPN container network stack --net=container:vpn_cotnainer_name. \n  - RDNDC will monitor the master/vpn container during updates, restarts and after server boot. \n  - Please refer to the readme before deploying this container: https://github.com/elmerfdz/unRAIDscripts",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/rdndc.png",
    "name": "Rebuild-DNDC",
    "image": "eafxx/rebuild-dndc:unraid-m",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/var/run/docker.sock",
        "bind": "/var/run/docker.sock"
      },
      {
        "container": "/config/docker-templates",
        "bind": "/boot/config/plugins/dockerMan/templates-user"
      },
      {
        "container": "/config/rebuild-dndc",
        "bind": "/mnt/user/appdata/rebuild-dndc"
      }
    ],
    "env": [
      {
        "name": "mastercontname",
        "label": "mastercontname",
        "default": ""
      },
      {
        "name": "mastercontconcheck",
        "label": "mastercontconcheck",
        "default": ""
      },
      {
        "name": "run_startup",
        "label": "run_startup",
        "default": ""
      },
      {
        "name": "discord_url",
        "label": "discord_url",
        "default": ""
      },
      {
        "name": "ping_ip",
        "label": "ping_ip",
        "default": ""
      },
      {
        "name": "ping_ip_alt",
        "label": "ping_ip_alt",
        "default": ""
      },
      {
        "name": "ping_count",
        "label": "ping_count",
        "default": ""
      },
      {
        "name": "sleep_secs",
        "label": "sleep_secs",
        "default": ""
      },
      {
        "name": "discord_notifications",
        "label": "discord_notifications",
        "default": ""
      },
      {
        "name": "cron",
        "label": "cron",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "red-discordbot",
    "description": "The newest Red-Discordbot in a convenient multi-arch container \r\n\r\nHow to create a bot account: https://discordpy.readthedocs.io/en/v1.0.1/discord.html#creating-a-bot-account\r\n\r\nReadme: https://github.com/PhasecoreX/docker-red-discordbot",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "The newest Red-Discordbot in a convenient multi-arch container \r\n\r\nHow to create a bot account: https://discordpy.readthedocs.io/en/v1.0.1/discord.html#creating-a-bot-account\r\n\r\nReadme: https://github.com/PhasecoreX/docker-red-discordbot",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/red-discordbot.png",
    "name": "red-discordbot",
    "image": "phasecorex/red-discordbot:full",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/redbot"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PREFIX",
        "label": "PREFIX",
        "default": ""
      },
      {
        "name": "TOKEN",
        "label": "TOKEN",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "requestrr",
    "description": "Requestrr is a chatbot used to simplify using services like Sonarr/Radarr/Ombi via the use of chat. Current platform is Discord only, but the bot was built around the ideology of quick adaptation for new features as well as new platforms.  AppSupport: https://discord.gg/ATCM64M",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Requestrr is a chatbot used to simplify using services like Sonarr/Radarr/Ombi via the use of chat. Current platform is Discord only, but the bot was built around the ideology of quick adaptation for new features as well as new platforms.  AppSupport: https://discord.gg/ATCM64M",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/requestrr.png",
    "name": "requestrr",
    "image": "darkalfx/requestrr:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "4545": "4545:4545/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/root/config/",
        "bind": "/mnt/user/appdata/requestrr"
      }
    ]
  },
  {
    "type": 1,
    "title": "rss-bridge",
    "description": "RSS-Bridge is a PHP project capable of generating RSS and Atom feeds for websites that don't have one. It can be used on webservers or as a stand-alone application in CLI mode.\n  BEFORE installing, place a copy of the default whitelist.txt from https://raw.githubusercontent.com/RSS-Bridge/rss-bridge/master/whitelist.default.txt in your appdata call the file whitelist.txt, as instructed from their wiki https://github.com/RSS-Bridge/rss-bridge/wiki/Whitelisting",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "RSS-Bridge is a PHP project capable of generating RSS and Atom feeds for websites that don't have one. It can be used on webservers or as a stand-alone application in CLI mode.\n  BEFORE installing, place a copy of the default whitelist.txt from https://raw.githubusercontent.com/RSS-Bridge/rss-bridge/master/whitelist.default.txt in your appdata call the file whitelist.txt, as instructed from their wiki https://github.com/RSS-Bridge/rss-bridge/wiki/Whitelisting",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/rssbridge.png",
    "name": "rss-bridge",
    "image": "rssbridge/rss-bridge",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/app/whitelist.txt",
        "bind": "/mnt/user/appdata/rss-bridge/whitelist.txt"
      }
    ]
  },
  {
    "type": 1,
    "title": "scrutiny",
    "description": "Hard Drive S.M.A.R.T Monitoring, Historical Trends and Real World Failure Thresholds",
    "categories": [
      "HomeAutomation:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Hard Drive S.M.A.R.T Monitoring, Historical Trends and Real World Failure Thresholds",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/scrutiny.png",
    "name": "scrutiny",
    "image": "analogj/scrutiny",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/dev/disk",
        "bind": "/dev/disk"
      },
      {
        "container": "/scrutiny/config",
        "bind": ""
      },
      {
        "container": "/run/udev",
        "bind": "/run/udev"
      }
    ]
  },
  {
    "type": 1,
    "title": "shoko-server",
    "description": "Shoko server is the core component of the Shoko suite and with it's client-server architecture which allows any program or plugin to access Shoko. You'll have access to your entire collection locally and over the internet with no additional work outside the initial configuration required.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Shoko server is the core component of the Shoko suite and with it's client-server architecture which allows any program or plugin to access Shoko. You'll have access to your entire collection locally and over the internet with no additional work outside the initial configuration required.",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/shoko-server.png",
    "name": "shoko-server",
    "image": "shokoanime/server:daily",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8111": "8111:8111/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/home/shoko/.shoko/",
        "bind": "/mnt/user/appdata/shokoserver"
      },
      {
        "container": "/anime",
        "bind": "/mnt/user/appdata/shokoserver/anime"
      },
      {
        "container": "/import",
        "bind": "/mnt/user/appdata/shokoserver/import"
      }
    ]
  },
  {
    "type": 1,
    "title": "speedtest-tracker",
    "description": "This program runs a speedtest check every hour and graphs the results. The back-end is written in Laravel and the front-end uses React. It uses the speedtest-cli package to get the data and uses Chart.js to plot the results.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "This program runs a speedtest check every hour and graphs the results. The back-end is written in Laravel and the front-end uses React. It uses the speedtest-cli package to get the data and uses Chart.js to plot the results.",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/speedtest-tracker.png",
    "name": "speedtest-tracker",
    "image": "henrywhitaker3/speedtest-tracker",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "0:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "SLACK_WEBHOOK",
        "label": "SLACK_WEBHOOK",
        "default": ""
      },
      {
        "name": "OOKLA_EULA_GDPR",
        "label": "OOKLA_EULA_GDPR",
        "default": "false|true"
      }
    ]
  },
  {
    "type": 1,
    "title": "sstvproxy",
    "description": "Yet Another Proxy (YAP) for SmoothStreams.tv Docker Image\r\n\r\nEnvironment variables will take precedence over manual changes to proxysettings.json and will persist across container restarts. This means that if you set the YAP_USERNAME and YAP_PASSWORD for instance when you create the container, these will always be placed in the proxysettings.json file, even if you edit the file manually with a text editor.\r\n\r\nFor Plex setup see: https://github.com/stokkes/docker-sstvproxy#plex",
    "categories": [
      "MediaServer:Video"
    ],
    "platform": "linux",
    "note": "Yet Another Proxy (YAP) for SmoothStreams.tv Docker Image\r\n\r\nEnvironment variables will take precedence over manual changes to proxysettings.json and will persist across container restarts. This means that if you set the YAP_USERNAME and YAP_PASSWORD for instance when you create the container, these will always be placed in the proxysettings.json file, even if you edit the file manually with a text editor.\r\n\r\nFor Plex setup see: https://github.com/stokkes/docker-sstvproxy#plex",
    "name": "sstvproxy",
    "image": "stokkes/sstvproxy",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8098": "8098:8098/tcp",
        "8099": "8099:8099/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "YAP_KODIPORT",
        "label": "YAP_KODIPORT",
        "default": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "YAP_USERNAME",
        "label": "YAP_USERNAME",
        "default": ""
      },
      {
        "name": "YAP_PASSWORD",
        "label": "YAP_PASSWORD",
        "default": ""
      },
      {
        "name": "YAP_STREAM",
        "label": "YAP_STREAM",
        "default": ""
      },
      {
        "name": "YAP_EXTERNALIP",
        "label": "YAP_EXTERNALIP",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "YAP_GIT_BRANCH",
        "label": "YAP_GIT_BRANCH",
        "default": "master"
      },
      {
        "name": "YAP_SERVICE",
        "label": "YAP_SERVICE",
        "default": ""
      },
      {
        "name": "YAP_SERVER",
        "label": "YAP_SERVER",
        "default": ""
      },
      {
        "name": "YAP_QUALITY",
        "label": "YAP_QUALITY",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "syncarr",
    "description": "Syncs two Radarr/Sonarr/Lidarr servers through the web API. Useful for syncing a 4k radarr/sonarr instance to a 1080p radarr/sonarr instance.\r\n\r\nNote you cannot have a mix of radarr, lidarr, or sonarr config setups at the same time.\r\nYou will need to setup separate instances of syncarr\r\n\r\nIMPORTANT: REMOVE THE VARIABLES YOU'RE NOT USING",
    "categories": [
      "MediaServer:Video",
      "MediaServer:Music"
    ],
    "platform": "linux",
    "note": "Syncs two Radarr/Sonarr/Lidarr servers through the web API. Useful for syncing a 4k radarr/sonarr instance to a 1080p radarr/sonarr instance.\r\n\r\nNote you cannot have a mix of radarr, lidarr, or sonarr config setups at the same time.\r\nYou will need to setup separate instances of syncarr\r\n\r\nIMPORTANT: REMOVE THE VARIABLES YOU'RE NOT USING",
    "name": "syncarr",
    "image": "syncarr/syncarr",
    "restart_policy": "unless-stopped",
    "env": [
      {
        "name": "RADARR_A_URL",
        "label": "RADARR_A_URL",
        "default": ""
      },
      {
        "name": "SONARR_B_KEY",
        "label": "SONARR_B_KEY",
        "default": ""
      },
      {
        "name": "LIDARR_B_PROFILE",
        "label": "LIDARR_B_PROFILE",
        "default": ""
      },
      {
        "name": "LIDARR_B_PATH",
        "label": "LIDARR_B_PATH",
        "default": ""
      },
      {
        "name": "LIDARR_B_KEY",
        "label": "LIDARR_B_KEY",
        "default": ""
      },
      {
        "name": "SYNC_INTERVAL_SECONDS",
        "label": "SYNC_INTERVAL_SECONDS",
        "default": "300"
      },
      {
        "name": "SYNCARR_BIDIRECTIONAL_SYNC",
        "label": "SYNCARR_BIDIRECTIONAL_SYNC",
        "default": "0"
      },
      {
        "name": "SONARR_A_URL",
        "label": "SONARR_A_URL",
        "default": ""
      },
      {
        "name": "SONARR_A_KEY",
        "label": "SONARR_A_KEY",
        "default": ""
      },
      {
        "name": "SONARR_B_PROFILE",
        "label": "SONARR_B_PROFILE",
        "default": ""
      },
      {
        "name": "LIDARR_A_URL",
        "label": "LIDARR_A_URL",
        "default": ""
      },
      {
        "name": "LIDARR_A_KEY",
        "label": "LIDARR_A_KEY",
        "default": ""
      },
      {
        "name": "SYNCARR_AUTO_SEARCH",
        "label": "SYNCARR_AUTO_SEARCH",
        "default": "0"
      },
      {
        "name": "SYNCARR_MONITOR_NEW_CONTENT",
        "label": "SYNCARR_MONITOR_NEW_CONTENT",
        "default": "0"
      },
      {
        "name": "RADARR_A_KEY",
        "label": "RADARR_A_KEY",
        "default": ""
      },
      {
        "name": "RADARR_B_KEY",
        "label": "RADARR_B_KEY",
        "default": ""
      },
      {
        "name": "RADARR_B_PROFILE",
        "label": "RADARR_B_PROFILE",
        "default": ""
      },
      {
        "name": "SONARR_B_URL",
        "label": "SONARR_B_URL",
        "default": ""
      },
      {
        "name": "SONARR_B_PATH",
        "label": "SONARR_B_PATH",
        "default": ""
      },
      {
        "name": "RADARR_B_URL",
        "label": "RADARR_B_URL",
        "default": ""
      },
      {
        "name": "RADARR_B_PATH",
        "label": "RADARR_B_PATH",
        "default": ""
      },
      {
        "name": "LIDARR_B_URL",
        "label": "LIDARR_B_URL",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "tdarr",
    "description": "(all-in-one Ubuntu image with MongoDB inside and hardware transcoding) Tdarr is a self hosted web-app for automating media library transcode/remux management and making sure your files are exactly how you need them to be in terms of codecs/streams/containers etc and works well alongside Plex/Sonarr/Radarr. \r\n\r\nBuilt with the aim of modularisation, parallelisation and scalability, each library you add has its own transcode settings, filters and schedule. Workers can be fired up and closed down as necessary, and are split into 3 types - 'general', 'transcode' and 'health check'. Worker limits can be managed by the scheduler as well as manually.\r\n\r\nFor a desktop application with similar functionality please see HBBatchBeast.\r\n\r\nGet plugins here: https://github.com/HaveAGitGat/Tdarr_Plugins",
    "categories": [
      "Productivity:",
      "MediaApp:Video",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "(all-in-one Ubuntu image with MongoDB inside and hardware transcoding) Tdarr is a self hosted web-app for automating media library transcode/remux management and making sure your files are exactly how you need them to be in terms of codecs/streams/containers etc and works well alongside Plex/Sonarr/Radarr. \r\n\r\nBuilt with the aim of modularisation, parallelisation and scalability, each library you add has its own transcode settings, filters and schedule. Workers can be fired up and closed down as necessary, and are split into 3 types - 'general', 'transcode' and 'health check'. Worker limits can be managed by the scheduler as well as manually.\r\n\r\nFor a desktop application with similar functionality please see HBBatchBeast.\r\n\r\nGet plugins here: https://github.com/HaveAGitGat/Tdarr_Plugins",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/tdarr.png",
    "name": "tdarr",
    "image": "haveagitgat/tdarr",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8265": "8265:8265/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/home/Tdarr/Media",
        "bind": ""
      },
      {
        "container": "/home/Tdarr/Documents",
        "bind": ""
      },
      {
        "container": "/var/lib/mongodb",
        "bind": ""
      },
      {
        "container": "/home/Tdarr/cache",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "tdarr_aio",
    "description": "(all-in-one Ubuntu image with MongoDB inside and hardware transcoding) Tdarr is a self hosted web-app for automating media library transcode/remux management and making sure your files are exactly how you need them to be in terms of codecs/streams/containers etc and works well alongside Plex/Sonarr/Radarr. \r\n\r\nBuilt with the aim of modularisation, parallelisation and scalability, each library you add has its own transcode settings, filters and schedule. Workers can be fired up and closed down as necessary, and are split into 3 types - 'general', 'transcode' and 'health check'. Worker limits can be managed by the scheduler as well as manually.\r\n\r\nFor a desktop application with similar functionality please see HBBatchBeast.\r\n\r\nGet plugins here: https://github.com/HaveAGitGat/Tdarr_Plugins",
    "categories": [
      "Productivity:",
      "MediaApp:Video",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "(all-in-one Ubuntu image with MongoDB inside and hardware transcoding) Tdarr is a self hosted web-app for automating media library transcode/remux management and making sure your files are exactly how you need them to be in terms of codecs/streams/containers etc and works well alongside Plex/Sonarr/Radarr. \r\n\r\nBuilt with the aim of modularisation, parallelisation and scalability, each library you add has its own transcode settings, filters and schedule. Workers can be fired up and closed down as necessary, and are split into 3 types - 'general', 'transcode' and 'health check'. Worker limits can be managed by the scheduler as well as manually.\r\n\r\nFor a desktop application with similar functionality please see HBBatchBeast.\r\n\r\nGet plugins here: https://github.com/HaveAGitGat/Tdarr_Plugins",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/tdarr.png",
    "name": "tdarr_aio",
    "image": "haveagitgat/tdarr_aio",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8265": "8265:8265/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/home/Tdarr/Media",
        "bind": "/mnt/user/Media"
      },
      {
        "container": "/home/Tdarr/Documents",
        "bind": "/mnt/user/appdata/tdarr"
      },
      {
        "container": "/var/lib/mongodb",
        "bind": "/mnt/user/appdata/tdarr-db"
      },
      {
        "container": "/home/Tdarr/cache",
        "bind": "/mnt/cache/tdarr-cache"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Teedy-docs",
    "description": "Teedy is an open-source, lightweight document management system (DMS) for individuals and businesses.\r\n\r\nThe default admin password is \"admin\". Don't forget to change it before going to production.",
    "categories": [
      "Cloud:",
      "Productivity:"
    ],
    "platform": "linux",
    "note": "Teedy is an open-source, lightweight document management system (DMS) for individuals and businesses.\r\n\r\nThe default admin password is \"admin\". Don't forget to change it before going to production.",
    "logo": "https://raw.githubusercontent.com/sismics/docs/master/docs-web/src/main/resources/image/logo.png",
    "name": "Teedy-docs",
    "image": "sismics/docs:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "0:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/Teedy"
      }
    ],
    "env": [
      {
        "name": "DOCS_BASE_URL",
        "label": "DOCS_BASE_URL",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "traccar",
    "description": "Traccar is an open source GPS tracking system. This repository contains Java-based back-end service. It supports more than 170 GPS protocols and more than 1500 models of GPS tracking devices. Traccar can be used with any major SQL database system. It also provides easy to use REST API.\r\n\r\nLink to traccar.xml: https://raw.githubusercontent.com/traccar/traccar/master/setup/traccar.xml\r\n\r\nAdd it to your host path before starting the container.",
    "categories": [
      "MediaApp:Other"
    ],
    "platform": "linux",
    "note": "Traccar is an open source GPS tracking system. This repository contains Java-based back-end service. It supports more than 170 GPS protocols and more than 1500 models of GPS tracking devices. Traccar can be used with any major SQL database system. It also provides easy to use REST API.\r\n\r\nLink to traccar.xml: https://raw.githubusercontent.com/traccar/traccar/master/setup/traccar.xml\r\n\r\nAdd it to your host path before starting the container.",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/traccar.png",
    "name": "traccar",
    "image": "traccar/traccar",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "0": "0:0/tcp",
        "8082": "8082:8082/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/opt/traccar/logs",
        "bind": "/mnt/user/appdata/traccar/logs"
      },
      {
        "container": "/opt/traccar/conf/traccar.xml",
        "bind": "/mnt/user/appdata/traccar/traccar.xml"
      }
    ]
  },
  {
    "type": 1,
    "title": "Traktarr",
    "description": "Script to add new series and movies to Sonarr/Radarr based on Trakt lists.       \r\nFor more info on env variables and setup of your config file, check out: https://hub.docker.com/r/eafxx/traktarr",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Script to add new series and movies to Sonarr/Radarr based on Trakt lists.       \r\nFor more info on env variables and setup of your config file, check out: https://hub.docker.com/r/eafxx/traktarr",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/traktarr.png",
    "name": "Traktarr",
    "image": "eafxx/traktarr:latest",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/traktarr"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": ""
      },
      {
        "name": "DELAY",
        "label": "DELAY",
        "default": ""
      },
      {
        "name": "SORT",
        "label": "SORT",
        "default": ""
      },
      {
        "name": "NOSEARCH",
        "label": "NOSEARCH",
        "default": ""
      },
      {
        "name": "NOTIFICATIONS",
        "label": "NOTIFICATIONS",
        "default": ""
      },
      {
        "name": "BLACKLIST",
        "label": "BLACKLIST",
        "default": ""
      },
      {
        "name": "RUNNOW",
        "label": "RUNNOW",
        "default": ""
      },
      {
        "name": "SKIPUPDATE",
        "label": "SKIPUPDATE",
        "default": ""
      },
      {
        "name": "APP_BRANCH",
        "label": "APP_BRANCH",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "ts-dnsserver",
    "description": "Technitium DNS Server is an open source tool that can be used for self hosting a local DNS server for privacy and security or, used for experimentation/testing by software developers on their computer. It works out-of-the-box with no or minimal configuration and provides a user friendly web console accessible using any web browser.",
    "categories": [
      "Network:DNS",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Technitium DNS Server is an open source tool that can be used for self hosting a local DNS server for privacy and security or, used for experimentation/testing by software developers on their computer. It works out-of-the-box with no or minimal configuration and provides a user friendly web console accessible using any web browser.",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/Technitium.png",
    "name": "ts-dnsserver",
    "image": "roxedus/ts-dnsserver",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "53": "53:53/udp",
        "5380": "5380:5380/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/ts-dnsserver"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "UniFi-Poller",
    "description": "Collect ALL UniFi Controller, Device and Client Data - Export to InfluxDB or Prometheus.\n    Visualize with Grafana using included dashboards!\n    IMPORTAT! ACTION REQUIRED! As of UniFi Poller version 2 all of the\n    environment variables and config file format changed.\n    You must reconfigure this container after you upgrade!\n    READ THE INSTRUCTIONS!\n    https://github.com/unifi-poller/unifi-poller/wiki/Configuration",
    "categories": [
      "Tools:Utilities",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "Collect ALL UniFi Controller, Device and Client Data - Export to InfluxDB or Prometheus.\n    Visualize with Grafana using included dashboards!\n    IMPORTAT! ACTION REQUIRED! As of UniFi Poller version 2 all of the\n    environment variables and config file format changed.\n    You must reconfigure this container after you upgrade!\n    READ THE INSTRUCTIONS!\n    https://github.com/unifi-poller/unifi-poller/wiki/Configuration",
    "logo": "https://raw.githubusercontent.com/wiki/unifi-poller/unifi-poller/images/unifi-poller-logo.png",
    "name": "UniFi-Poller",
    "image": "golift/unifi-poller",
    "restart_policy": "unless-stopped",
    "env": [
      {
        "name": "UP_POLLER_DEBUG",
        "label": "UP_POLLER_DEBUG",
        "default": "false|true"
      },
      {
        "name": "UP_UNIFI_CONTROLLER_0_SAVE_IDS",
        "label": "UP_UNIFI_CONTROLLER_0_SAVE_IDS",
        "default": "false|true"
      },
      {
        "name": "UP_UNIFI_CONTROLLER_0_SAVE_SITES",
        "label": "UP_UNIFI_CONTROLLER_0_SAVE_SITES",
        "default": "true|false"
      },
      {
        "name": "UP_UNIFI_CONTROLLER_0_SITES_0",
        "label": "UP_UNIFI_CONTROLLER_0_SITES_0",
        "default": "all"
      },
      {
        "name": "UP_INFLUXDB_DB",
        "label": "UP_INFLUXDB_DB",
        "default": "unifi"
      },
      {
        "name": "UP_INFLUXDB_DISABLE",
        "label": "UP_INFLUXDB_DISABLE",
        "default": "false|true"
      },
      {
        "name": "UP_UNIFI_CONTROLLER_0_VERIFY_SSL",
        "label": "UP_UNIFI_CONTROLLER_0_VERIFY_SSL",
        "default": "false|true"
      },
      {
        "name": "UP_INFLUXDB_URL",
        "label": "UP_INFLUXDB_URL",
        "default": "http://unraid.ip:8086"
      },
      {
        "name": "UP_PROMETHEUS_DISABLE",
        "label": "UP_PROMETHEUS_DISABLE",
        "default": "false|true"
      },
      {
        "name": "UP_POLLER_QUIET",
        "label": "UP_POLLER_QUIET",
        "default": "false|true"
      },
      {
        "name": "UP_UNIFI_CONTROLLER_0_USER",
        "label": "UP_UNIFI_CONTROLLER_0_USER",
        "default": "unifipoller"
      },
      {
        "name": "UP_UNIFI_CONTROLLER_0_SAVE_DPI",
        "label": "UP_UNIFI_CONTROLLER_0_SAVE_DPI",
        "default": "false|true"
      },
      {
        "name": "UP_INFLUXDB_PASS",
        "label": "UP_INFLUXDB_PASS",
        "default": ""
      },
      {
        "name": "UP_INFLUXDB_INTERVAL",
        "label": "UP_INFLUXDB_INTERVAL",
        "default": "30s"
      },
      {
        "name": "UP_PROMETHEUS_HTTP_LISTEN",
        "label": "UP_PROMETHEUS_HTTP_LISTEN",
        "default": "0.0.0.0:9031"
      },
      {
        "name": "UP_UNIFI_CONTROLLER_0_URL",
        "label": "UP_UNIFI_CONTROLLER_0_URL",
        "default": "https://unraid.ip:8443"
      },
      {
        "name": "UP_UNIFI_CONTROLLER_0_PASS",
        "label": "UP_UNIFI_CONTROLLER_0_PASS",
        "default": ""
      },
      {
        "name": "UP_INFLUXDB_USER",
        "label": "UP_INFLUXDB_USER",
        "default": "unifipoller"
      }
    ]
  },
  {
    "type": 1,
    "title": "unpackerr",
    "description": "RAR download extractor for Sonarr, Radarr and Lidarr! Mount /downloads on all 3 or 4 containers to the same path on your host.\n  This application will automatically poll all of the apps (Lidarr, Sonarr, Radarr) to check for downloads. When a completed\n  download contains a rar file, this application will extract the file and move the extracted contents back into the download\n  location. Files will be extracted recursively in an attempt to get all subtitles. If you don't use one of Lidarr, Sonarr\n  or Radarr, simply empty those two fields for that app and it wont be polled. If you put all your containers on the same\n  custom bridge you may not need to expose any ports, and you can use DNS to reach other containers. It's a very convenient configuration!",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "RAR download extractor for Sonarr, Radarr and Lidarr! Mount /downloads on all 3 or 4 containers to the same path on your host.\n  This application will automatically poll all of the apps (Lidarr, Sonarr, Radarr) to check for downloads. When a completed\n  download contains a rar file, this application will extract the file and move the extracted contents back into the download\n  location. Files will be extracted recursively in an attempt to get all subtitles. If you don't use one of Lidarr, Sonarr\n  or Radarr, simply empty those two fields for that app and it wont be polled. If you put all your containers on the same\n  custom bridge you may not need to expose any ports, and you can use DNS to reach other containers. It's a very convenient configuration!",
    "logo": "https://raw.githubusercontent.com/wiki/davidnewhall/unpackerr/images/logo.png",
    "name": "unpackerr",
    "image": "golift/unpackerr",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/downloads",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "UN_RADARR_0_URL",
        "label": "UN_RADARR_0_URL",
        "default": "http://radarr:7878"
      },
      {
        "name": "UN_LIDARR_0_URL",
        "label": "UN_LIDARR_0_URL",
        "default": "http://lidarr:8686"
      },
      {
        "name": "UN_DEBUG",
        "label": "UN_DEBUG",
        "default": "false|true"
      },
      {
        "name": "UN_TIMEOUT",
        "label": "UN_TIMEOUT",
        "default": "15s"
      },
      {
        "name": "UN_INTERVAL",
        "label": "UN_INTERVAL",
        "default": "2m"
      },
      {
        "name": "UN_RADARR_0_PATH",
        "label": "UN_RADARR_0_PATH",
        "default": "/downloads"
      },
      {
        "name": "UN_SONARR_0_API_KEY",
        "label": "UN_SONARR_0_API_KEY",
        "default": ""
      },
      {
        "name": "UN_RADARR_0_API_KEY",
        "label": "UN_RADARR_0_API_KEY",
        "default": ""
      },
      {
        "name": "UN_LIDARR_0_API_KEY",
        "label": "UN_LIDARR_0_API_KEY",
        "default": ""
      },
      {
        "name": "UN_START_DELAY",
        "label": "UN_START_DELAY",
        "default": "1m"
      },
      {
        "name": "UN_RETRY_DELAY",
        "label": "UN_RETRY_DELAY",
        "default": "5m"
      },
      {
        "name": "UN_LOG_FILE",
        "label": "UN_LOG_FILE",
        "default": "/downloads/unpackerr.log"
      },
      {
        "name": "UN_SONARR_0_PATH",
        "label": "UN_SONARR_0_PATH",
        "default": "/downloads"
      },
      {
        "name": "UN_PARALLEL",
        "label": "UN_PARALLEL",
        "default": "1"
      },
      {
        "name": "UN_DELETE_DELAY",
        "label": "UN_DELETE_DELAY",
        "default": "5m"
      },
      {
        "name": "UN_SONARR_0_URL",
        "label": "UN_SONARR_0_URL",
        "default": "http://sonarr:8989"
      }
    ]
  },
  {
    "type": 1,
    "title": "wikijs",
    "description": "A modern, lightweight and powerful wiki app built on NodeJS, Git and Markdown",
    "categories": [
      "Cloud:",
      "Productivity:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "A modern, lightweight and powerful wiki app built on NodeJS, Git and Markdown",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/wikijs.png",
    "name": "wikijs",
    "image": "requarks/wiki:beta",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "3000": "3000:3000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/logs",
        "bind": "/mnt/user/appdata/wikijs/logs"
      }
    ],
    "env": [
      {
        "name": "DB_USER",
        "label": "DB_USER",
        "default": "wikijs"
      },
      {
        "name": "DB_PASS",
        "label": "DB_PASS",
        "default": "secretpassword"
      },
      {
        "name": "DB_NAME",
        "label": "DB_NAME",
        "default": "wikijs"
      },
      {
        "name": "DB_SSL",
        "label": "DB_SSL",
        "default": "false"
      },
      {
        "name": "DB_FILEPATH",
        "label": "DB_FILEPATH",
        "default": "/mnt/user/appdata/wikijs/db"
      },
      {
        "name": "DB_TYPE",
        "label": "DB_TYPE",
        "default": "mariadb"
      },
      {
        "name": "DB_HOST",
        "label": "DB_HOST",
        "default": "192.168.1.2"
      },
      {
        "name": "DB_PORT",
        "label": "DB_PORT",
        "default": "3306"
      }
    ]
  },
  {
    "type": 1,
    "title": "xbackbone",
    "description": "Container for XBackBone, a simple and lightweight ShareX PHP backend \r\n\r\n\r\n-e URL\r\n\r\nThis will specify the app url, slashes need to be escaped like this -e URL=http://127.0.0.1\r\n\r\n\r\nPermissions\r\n\r\n\r\nThe folder on host system need to have both UID and GID 1000\r\n\r\nExample\r\n\r\nmkdir -p /mnt/user/appdata/xbb/storage\r\n\r\nmkdir -p /mnt/user/appdata/xbb/database\r\n\r\nmkdir -p /mnt/user/appdata/xbb/logs\r\n\r\nchown -R 1000:1000 /mnt/user/appdata/xbb",
    "categories": [
      "Cloud:"
    ],
    "platform": "linux",
    "note": "Container for XBackBone, a simple and lightweight ShareX PHP backend \r\n\r\n\r\n-e URL\r\n\r\nThis will specify the app url, slashes need to be escaped like this -e URL=http://127.0.0.1\r\n\r\n\r\nPermissions\r\n\r\n\r\nThe folder on host system need to have both UID and GID 1000\r\n\r\nExample\r\n\r\nmkdir -p /mnt/user/appdata/xbb/storage\r\n\r\nmkdir -p /mnt/user/appdata/xbb/database\r\n\r\nmkdir -p /mnt/user/appdata/xbb/logs\r\n\r\nchown -R 1000:1000 /mnt/user/appdata/xbb",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/xbackbone.png",
    "name": "xbackbone",
    "image": "pe46dro/xbackbone-docker",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "9876:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/app/resources/database",
        "bind": "/mnt/user/appdata/xbackbone/db"
      },
      {
        "container": "/app/logs",
        "bind": "/mnt/user/appdata/xbackbone/logs"
      },
      {
        "container": "/app/storage",
        "bind": "/mnt/user/appdata/xbackbone/images"
      }
    ],
    "env": [
      {
        "name": "URL",
        "label": "URL",
        "default": "http:\\/\\/192.168.1.2:9876"
      },
      {
        "name": "PHP_UPLOAD_MAX_FILESIZE",
        "label": "PHP_UPLOAD_MAX_FILESIZE",
        "default": "10M"
      }
    ]
  },
  {
    "type": 1,
    "title": "xibo-cms",
    "description": "Xibo Content Management System\r\n\r\nXibo’s digital signage platform is made up of a Content Management System (CMS), a choice of players, a choice of hosting options and different levels of support to meet your requirements. To get started with Xibo you need a CMS and at least 1 signage player.\r\n\r\nAfter the containers have come up you should be able to login with the details:\r\n\r\nU: xibo_admin P: password",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "Xibo Content Management System\r\n\r\nXibo’s digital signage platform is made up of a Content Management System (CMS), a choice of players, a choice of hosting options and different levels of support to meet your requirements. To get started with Xibo you need a CMS and at least 1 signage player.\r\n\r\nAfter the containers have come up you should be able to login with the details:\r\n\r\nU: xibo_admin P: password",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/xibo.png",
    "name": "xibo-cms",
    "image": "xibosignage/xibo-cms:1.8",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "8976:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/www/cms/web/userscripts",
        "bind": "/mnt/user/appdata/cms/web/userscripts"
      },
      {
        "container": "/var/www/cms/custom",
        "bind": "/mnt/user/appdata/cms/custom"
      },
      {
        "container": "/var/www/backup",
        "bind": "/mnt/user/appdata/cms/backup"
      },
      {
        "container": "/var/www/cms/web/theme/custom",
        "bind": "/mnt/user/appdata/cms/web/theme/custom"
      },
      {
        "container": "/var/www/cms/library",
        "bind": "/mnt/user/appdata/cms/library"
      }
    ],
    "env": [
      {
        "name": "MYSQL_DATABASE",
        "label": "MYSQL_DATABASE",
        "default": "cms"
      },
      {
        "name": "CMS_SMTP_PASSWORD",
        "label": "CMS_SMTP_PASSWORD",
        "default": "password"
      },
      {
        "name": "CMS_ALIAS",
        "label": "CMS_ALIAS",
        "default": "none"
      },
      {
        "name": "XMR_HOST",
        "label": "XMR_HOST",
        "default": "unraidIP:port"
      },
      {
        "name": "MYSQL_BACKUP_ENABLED",
        "label": "MYSQL_BACKUP_ENABLED",
        "default": "true"
      },
      {
        "name": "CMS_SMTP_SERVER",
        "label": "CMS_SMTP_SERVER",
        "default": "smtp.gmail.com:587"
      },
      {
        "name": "CMS_SMTP_USERNAME",
        "label": "CMS_SMTP_USERNAME",
        "default": "username"
      },
      {
        "name": "CMS_SMTP_USE_STARTTLS",
        "label": "CMS_SMTP_USE_STARTTLS",
        "default": "YES"
      },
      {
        "name": "CMS_PHP_POST_MAX_SIZE",
        "label": "CMS_PHP_POST_MAX_SIZE",
        "default": "2G"
      },
      {
        "name": "CMS_SMTP_USE_TLS",
        "label": "CMS_SMTP_USE_TLS",
        "default": "YES"
      },
      {
        "name": "CMS_PHP_MEMORY_LIMIT",
        "label": "CMS_PHP_MEMORY_LIMIT",
        "default": "256M"
      },
      {
        "name": "CMS_APACHE_MAX_SPARE_SERVERS",
        "label": "CMS_APACHE_MAX_SPARE_SERVERS",
        "default": "10"
      },
      {
        "name": "MYSQL_HOST",
        "label": "MYSQL_HOST",
        "default": "unraidIP"
      },
      {
        "name": "CMS_SMTP_FROM_LINE_OVERRIDE",
        "label": "CMS_SMTP_FROM_LINE_OVERRIDE",
        "default": "YES"
      },
      {
        "name": "CMS_PHP_SESSION_GC_MAXLIFETIME",
        "label": "CMS_PHP_SESSION_GC_MAXLIFETIME",
        "default": "1440"
      },
      {
        "name": "CMS_PHP_UPLOAD_MAX_FILESIZE",
        "label": "CMS_PHP_UPLOAD_MAX_FILESIZE",
        "default": "2G"
      },
      {
        "name": "CMS_PHP_MAX_EXECUTION_TIME",
        "label": "CMS_PHP_MAX_EXECUTION_TIME",
        "default": "300"
      },
      {
        "name": "CMS_APACHE_TIMEOUT",
        "label": "CMS_APACHE_TIMEOUT",
        "default": "30"
      },
      {
        "name": "MYSQL_USER",
        "label": "MYSQL_USER",
        "default": "cms"
      },
      {
        "name": "CMS_APACHE_START_SERVERS",
        "label": "CMS_APACHE_START_SERVERS",
        "default": "2"
      },
      {
        "name": "CMS_APACHE_MAX_REQUEST_WORKERS",
        "label": "CMS_APACHE_MAX_REQUEST_WORKERS",
        "default": "60"
      },
      {
        "name": "MYSQL_PORT",
        "label": "MYSQL_PORT",
        "default": "3306"
      },
      {
        "name": "CMS_SMTP_REWRITE_DOMAIN",
        "label": "CMS_SMTP_REWRITE_DOMAIN",
        "default": "gmail.com"
      },
      {
        "name": "CMS_APACHE_MIN_SPARE_SERVERS",
        "label": "CMS_APACHE_MIN_SPARE_SERVERS",
        "default": "5"
      },
      {
        "name": "CMS_SERVER_NAME",
        "label": "CMS_SERVER_NAME",
        "default": "localhost"
      },
      {
        "name": "MYSQL_PASSWORD",
        "label": "MYSQL_PASSWORD",
        "default": "cmspassword"
      },
      {
        "name": "CMS_SMTP_HOSTNAME",
        "label": "CMS_SMTP_HOSTNAME",
        "default": "none"
      },
      {
        "name": "CMS_APACHE_MAX_CONNECTIONS_PER_CHILD",
        "label": "CMS_APACHE_MAX_CONNECTIONS_PER_CHILD",
        "default": "300"
      }
    ]
  },
  {
    "type": 1,
    "title": "xibo-xmr",
    "description": "XMR (Xibo Message Relay) \r\n\r\nXMR is a php application built on ReactPHP which acts as a ZeroMQ message exchange between the Xibo CMS and connected Xibo Players. It doesn't do anything beyond forward messages from the CMS to a pub/sub socket.",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "XMR (Xibo Message Relay) \r\n\r\nXMR is a php application built on ReactPHP which acts as a ZeroMQ message exchange between the Xibo CMS and connected Xibo Players. It doesn't do anything beyond forward messages from the CMS to a pub/sub socket.",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/xibo.png",
    "name": "xibo-xmr",
    "image": "xibosignage/xibo-xmr",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "50001": "50001:50001/tcp",
        "9505": "9505:9505/tcp"
      }
    ],
    "env": [
      {
        "name": "XMR_IPV6PUBSUPPORT",
        "label": "XMR_IPV6PUBSUPPORT",
        "default": "false"
      },
      {
        "name": "XMR_DEBUG",
        "label": "XMR_DEBUG",
        "default": "false"
      },
      {
        "name": "XMR_QUEUE_POLL",
        "label": "XMR_QUEUE_POLL",
        "default": "5"
      },
      {
        "name": "XMR_QUEUE_SIZE",
        "label": "XMR_QUEUE_SIZE",
        "default": "10"
      },
      {
        "name": "XMR_IPV6RESPSUPPORT",
        "label": "XMR_IPV6RESPSUPPORT",
        "default": "false"
      }
    ]
  },
  {
    "type": 1,
    "title": "youtube-dl-material",
    "description": "YoutubeDL-Material is a self-hosted youtube-dl Server with a modern Material-based GUI and the capability to apply advanced configurations, like setting your own download paths based on rules.\r\n\r\nIt is designed to be more customizable than the alternatives out there.\r\n\r\nIt will also keep a record of already downloaded items. Enjoy! :)",
    "categories": [
      "Downloaders:",
      "MediaApp:Video",
      "MediaApp:Music",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "YoutubeDL-Material is a self-hosted youtube-dl Server with a modern Material-based GUI and the capability to apply advanced configurations, like setting your own download paths based on rules.\r\n\r\nIt is designed to be more customizable than the alternatives out there.\r\n\r\nIt will also keep a record of already downloaded items. Enjoy! :)",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/youtubedl-material.png",
    "name": "youtube-dl-material",
    "image": "tzahi12345/youtubedl-material",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "17442": "17442:17442/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/app/audio/",
        "bind": ""
      },
      {
        "container": "/app/video/",
        "bind": ""
      },
      {
        "container": "/app/subscriptions/",
        "bind": ""
      },
      {
        "container": "/app/appdata",
        "bind": "/mnt/user/appdata/youtubedl-material"
      }
    ],
    "env": [
      {
        "name": "ytdl_title_top",
        "label": "ytdl_title_top",
        "default": "YoutubeDL Material"
      },
      {
        "name": "ytdl_allow_advanced_download",
        "label": "ytdl_allow_advanced_download",
        "default": "true|false"
      }
    ]
  },
  {
    "type": 1,
    "title": "zigbee2mqtt",
    "description": "Zigbee to MQTT bridge using zigbee-shepherd allows you to use your Zigbee devices without the vendors bridge or gateway. It bridges events and allows you to control your Zigbee devices via MQTT. In this way you can integrate your Zigbee devices with whatever smart home infrastructure you are using.",
    "categories": [
      "HomeAutomation:"
    ],
    "platform": "linux",
    "note": "Zigbee to MQTT bridge using zigbee-shepherd allows you to use your Zigbee devices without the vendors bridge or gateway. It bridges events and allows you to control your Zigbee devices via MQTT. In this way you can integrate your Zigbee devices with whatever smart home infrastructure you are using.",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/zigbee2mqtt.png",
    "name": "zigbee2mqtt",
    "image": "koenkk/zigbee2mqtt",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/app/data",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "zwave2mqtt",
    "description": "Fully configurable Zwave to MQTT gateway and Control Panel using NodeJS and Vue",
    "categories": [
      "HomeAutomation:"
    ],
    "platform": "linux",
    "note": "Fully configurable Zwave to MQTT gateway and Control Panel using NodeJS and Vue",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/zwave2mqtt.png",
    "name": "zwave2mqtt",
    "image": "robertslando/zwave2mqtt:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8091": "0:8091/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/usr/src/app/store",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "OZW_NETWORK_KEY",
        "label": "OZW_NETWORK_KEY",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "xteve",
    "description": "xTeVe is a M3U proxy server for Plex, Emby and any client and provider which supports the .TS and .M3U8 (HLS) streaming formats.\r\n\r\nImage Maintainer: LeeD \r\n\r\nFor support come visit us at our xTeVe Discord channel: https://discord.gg/eWYquha\r\n\r\nFor config, visit dockerhub link\r\n\r\ni just provided the template for unraid, for support see upper note",
    "categories": [
      "Downloaders:",
      "MediaServer:Video",
      "Network:Proxy"
    ],
    "platform": "linux",
    "note": "xTeVe is a M3U proxy server for Plex, Emby and any client and provider which supports the .TS and .M3U8 (HLS) streaming formats.\r\n\r\nImage Maintainer: LeeD \r\n\r\nFor support come visit us at our xTeVe Discord channel: https://discord.gg/eWYquha\r\n\r\nFor config, visit dockerhub link\r\n\r\ni just provided the template for unraid, for support see upper note",
    "logo": "https://avatars0.githubusercontent.com/u/53275662?s=460\u0026amp;v=4",
    "name": "xteve",
    "image": "dnsforge/xteve:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/home/xteve/conf",
        "bind": "/mnt/user/appdata/xteve/"
      },
      {
        "container": "/home/xteve/guide2go/conf",
        "bind": "/mnt/user/appdata/xteve/guide2go/"
      }
    ],
    "env": [
      {
        "name": "TZ",
        "label": "TZ",
        "default": "Europe/London"
      },
      {
        "name": "XTEVE_PORT",
        "label": "XTEVE_PORT",
        "default": "34400"
      },
      {
        "name": "XTEVE_BRANCH",
        "label": "XTEVE_BRANCH",
        "default": "master"
      },
      {
        "name": "XTEVE_DEBUG",
        "label": "XTEVE_DEBUG",
        "default": "0"
      },
      {
        "name": "XTEVE_API",
        "label": "XTEVE_API",
        "default": "1"
      }
    ]
  },
  {
    "type": 1,
    "title": "guide2go",
    "description": "a xml grabber from schedule direct service\r\n\r\nafter docker start check your config folder and do your setups, setup is persistent, start from scratch by delete them\r\n\r\ncron options are updated on docker restart.\r\ncronjob changes doesnt require a restart.\r\n\r\nsetup guide2go SD subscrition as follows or copy your existing .json files into your mounted /guide2go folder \r\ndocker exec -it  guide2go -configure /guide2go/.json\r\n\r\nto test the cronjob functions \r\ndocker exec -it  ./config/cronjob.sh",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "a xml grabber from schedule direct service\r\n\r\nafter docker start check your config folder and do your setups, setup is persistent, start from scratch by delete them\r\n\r\ncron options are updated on docker restart.\r\ncronjob changes doesnt require a restart.\r\n\r\nsetup guide2go SD subscrition as follows or copy your existing .json files into your mounted /guide2go folder \r\ndocker exec -it  guide2go -configure /guide2go/.json\r\n\r\nto test the cronjob functions \r\ndocker exec -it  ./config/cronjob.sh",
    "logo": "https://raw.githubusercontent.com/alturismo/guide2go/master/g2g.png",
    "name": "guide2go",
    "image": "alturismo/guide2go",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/guide2go",
        "bind": ""
      },
      {
        "container": "/TVH",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "OVPN_Privoxy",
    "description": "openvpn with privoxy in docker with cron\r\n\r\nafter docker start check your config folder, add your *.ovpn file(s) and edit logindata.conf\r\n\r\nuse privoxy on ip:8118\r\nuse socks on ip:1080",
    "categories": [
      "Network:Proxy"
    ],
    "platform": "linux",
    "note": "openvpn with privoxy in docker with cron\r\n\r\nafter docker start check your config folder, add your *.ovpn file(s) and edit logindata.conf\r\n\r\nuse privoxy on ip:8118\r\nuse socks on ip:1080",
    "logo": "https://www.heise.de/download/media/openvpn-22153/openvpn-logo_1-1-30.png",
    "name": "OVPN_Privoxy",
    "image": "alturismo/ovpn_privoxy",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "1080": "1080:1080/tcp",
        "8080": "8118:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/OpenVPN/"
      }
    ],
    "env": [
      {
        "name": "LOCAL_NET",
        "label": "LOCAL_NET",
        "default": "192.168.1.0/24"
      },
      {
        "name": "OPENVPN_FILE",
        "label": "OPENVPN_FILE",
        "default": "Frankfurt.ovpn"
      }
    ]
  },
  {
    "type": 1,
    "title": "owi2plex",
    "description": "a xml grabber for enigma with open webif\r\n\r\nafter docker start check your config folder and do your setups, setup is persistent, start from scratch by delete them\r\n\r\ncron options are updated on docker restart.\r\ncronjob changes doesnt require a restart.\r\n\r\nto test the cronjob functions \r\ndocker exec -it  ./config/cronjob.sh",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "a xml grabber for enigma with open webif\r\n\r\nafter docker start check your config folder and do your setups, setup is persistent, start from scratch by delete them\r\n\r\ncron options are updated on docker restart.\r\ncronjob changes doesnt require a restart.\r\n\r\nto test the cronjob functions \r\ndocker exec -it  ./config/cronjob.sh",
    "logo": "https://raw.githubusercontent.com/alturismo/owi2plex/master/owi2plex.png",
    "name": "owi2plex",
    "image": "alturismo/owi2plex",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/owi2plex",
        "bind": ""
      },
      {
        "container": "/TVH",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "xteve",
    "description": "xteve, in docker with cronjobs\r\n\r\ndocker runs in host mode \r\naccess xteve webui ip:34400/web/\r\n\r\nafter docker start check your config folder and do your setups, setup is persistent, start from scratch by delete them\r\n\r\ncron and xteve start options are updated on docker restart.",
    "categories": [
      "MediaApp:Other",
      "Network:Proxy",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "xteve, in docker with cronjobs\r\n\r\ndocker runs in host mode \r\naccess xteve webui ip:34400/web/\r\n\r\nafter docker start check your config folder and do your setups, setup is persistent, start from scratch by delete them\r\n\r\ncron and xteve start options are updated on docker restart.",
    "logo": "https://avatars0.githubusercontent.com/u/53275662?s=460\u0026amp;v=4",
    "name": "xteve",
    "image": "alturismo/xteve",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/tmp/xteve",
        "bind": ""
      },
      {
        "container": "/TVH",
        "bind": ""
      },
      {
        "container": "/root/.xteve",
        "bind": "/mnt/user/appdata/xteve/"
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/xteve/config/"
      }
    ]
  },
  {
    "type": 1,
    "title": "xteve_g2g_owi",
    "description": "xteve, guide2go, owi2plex in one docker with cron\r\n\r\naccess xteve webui ip:34400/web/\r\n\r\nafter docker start check your config folder and do your setups, setup is persistent, start from scratch by delete them\r\n\r\ncron and xteve start options are updated on docker restart.\r\n\r\nsetup guide2go SD subscrition as follows or copy your existing .json files into your mounted /guide2go folder \r\ndocker exec -it \"dockername\" guide2go -configure /guide2go/\"your_epg_name\".json\r\n\r\nto test the cronjob functions \r\ndocker exec -it \"dockername\" ./config/cronjob.sh\r\n\r\nincluded functions are (all can be individual turned on / off)\r\n\r\nxteve - iptv and epg proxy server for plex, emby, etc ... thanks to @marmei \r\nguide2go - xmltv epg grabber for schedules direct, thanks to @marmei \r\nowi2plex - xmltv epg grabber for enigma receivers using open web, thanks to @cvarelaruiz \r\nsome small script lines cause i personally use tvheadend and get playlist for xteve and cp xml data to tvheadend",
    "categories": [
      "Downloaders:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "xteve, guide2go, owi2plex in one docker with cron\r\n\r\naccess xteve webui ip:34400/web/\r\n\r\nafter docker start check your config folder and do your setups, setup is persistent, start from scratch by delete them\r\n\r\ncron and xteve start options are updated on docker restart.\r\n\r\nsetup guide2go SD subscrition as follows or copy your existing .json files into your mounted /guide2go folder \r\ndocker exec -it \"dockername\" guide2go -configure /guide2go/\"your_epg_name\".json\r\n\r\nto test the cronjob functions \r\ndocker exec -it \"dockername\" ./config/cronjob.sh\r\n\r\nincluded functions are (all can be individual turned on / off)\r\n\r\nxteve - iptv and epg proxy server for plex, emby, etc ... thanks to @marmei \r\nguide2go - xmltv epg grabber for schedules direct, thanks to @marmei \r\nowi2plex - xmltv epg grabber for enigma receivers using open web, thanks to @cvarelaruiz \r\nsome small script lines cause i personally use tvheadend and get playlist for xteve and cp xml data to tvheadend",
    "logo": "https://avatars0.githubusercontent.com/u/53275662?s=460\u0026amp;v=4",
    "name": "xteve_g2g_owi",
    "image": "alturismo/xteve_g2g_owi",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/root/.xteve",
        "bind": "/mnt/user/appdata/xteve/"
      },
      {
        "container": "/guide2go",
        "bind": ""
      },
      {
        "container": "/owi2plex",
        "bind": ""
      },
      {
        "container": "/tmp/xteve",
        "bind": ""
      },
      {
        "container": "/TVH",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "xteve_guide2go",
    "description": "xteve, guide2go in one docker with cron\r\n\r\nsetup guide2go SD subscrition as follows or copy your existing .json files into your mounted /guide2go folder \r\ndocker exec -it \"dockername\" guide2go -configure /guide2go/\"your_epg_name\".json\r\n\r\nto test the cronjob functions \r\ndocker exec -it  ./config/cronjob.sh\r\n\r\nincluded functions are (all can be individual turned on / off)\r\n\r\nxteve - iptv and epg proxy server for plex, emby, etc ... thanks to @marmei \r\nwebsite: http://xteve.de \r\nDiscord: https://discordapp.com/channels/465222357754314767/465222357754314773\r\n\r\nguide2go - xmltv epg grabber for schedules direct, thanks to @marmei \r\ngithub: https://github.com/mar-mei/guide2go \r\nSchedules Direct web: http://www.schedulesdirect.org/\r\n\r\nsome small script lines cause i personally use tvheadend and get playlist for xteve and cp xml data to tvheadend",
    "categories": [
      "Downloaders:",
      "Network:Proxy",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "xteve, guide2go in one docker with cron\r\n\r\nsetup guide2go SD subscrition as follows or copy your existing .json files into your mounted /guide2go folder \r\ndocker exec -it \"dockername\" guide2go -configure /guide2go/\"your_epg_name\".json\r\n\r\nto test the cronjob functions \r\ndocker exec -it  ./config/cronjob.sh\r\n\r\nincluded functions are (all can be individual turned on / off)\r\n\r\nxteve - iptv and epg proxy server for plex, emby, etc ... thanks to @marmei \r\nwebsite: http://xteve.de \r\nDiscord: https://discordapp.com/channels/465222357754314767/465222357754314773\r\n\r\nguide2go - xmltv epg grabber for schedules direct, thanks to @marmei \r\ngithub: https://github.com/mar-mei/guide2go \r\nSchedules Direct web: http://www.schedulesdirect.org/\r\n\r\nsome small script lines cause i personally use tvheadend and get playlist for xteve and cp xml data to tvheadend",
    "logo": "https://avatars0.githubusercontent.com/u/53275662?s=460\u0026amp;v=4",
    "name": "xteve_guide2go",
    "image": "alturismo/xteve_guide2go",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/root/.xteve/",
        "bind": "/mnt/user/appdata/xteve/"
      },
      {
        "container": "/guide2go",
        "bind": "/mnt/user/appdata/xteve/guide2go/"
      },
      {
        "container": "/tmp/xteve",
        "bind": ""
      },
      {
        "container": "/TVH",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "xteve_vpn",
    "description": "xteve, in docker with ovpn\r\n\r\n### docker runs in bridge mode ###\r\n\r\nput your ovpn file in /config\r\nedit your ovpn credentials in /config\r\nset your LOCAL_NET to fir your netmask\r\n\r\naccess xteve webui ip:34400/web/",
    "categories": [
      "MediaApp:Other",
      "Network:Proxy",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "xteve, in docker with ovpn\r\n\r\n### docker runs in bridge mode ###\r\n\r\nput your ovpn file in /config\r\nedit your ovpn credentials in /config\r\nset your LOCAL_NET to fir your netmask\r\n\r\naccess xteve webui ip:34400/web/",
    "logo": "https://avatars0.githubusercontent.com/u/53275662?s=460\u0026amp;v=4",
    "name": "xteve_vpn",
    "image": "alturismo/xteve_vpn",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "34400": "34400:34400/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/root/.xteve",
        "bind": "/mnt/user/appdata/xteve_vpn/"
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/xteve_vpn/config/"
      },
      {
        "container": "/tmp/xteve",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "LOCAL_NET",
        "label": "LOCAL_NET",
        "default": "192.168.1.0/24"
      },
      {
        "name": "OPENVPN_FILE",
        "label": "OPENVPN_FILE",
        "default": "Frankfurt.ovpn"
      }
    ]
  },
  {
    "type": 1,
    "title": "xteve_zap",
    "description": "xteve proxy for iptv\r\n\r\nincluded functions are (all can be individual turned on / off)\r\n\r\nxteve - iptv and epg proxy server for plex, emby, etc ... thanks to @marmei \r\nwebsite: http://xteve.de \r\nDiscord: https://discordapp.com/channels/465222357754314767/465222357754314773\r\n\r\nzap2it support with multiply logins\r\n\r\nguide2go - xmltv epg grabber for schedules direct, thanks to @marmei \r\ngithub: https://github.com/mar-mei/guide2go \r\nSchedules Direct web: http://www.schedulesdirect.org/\r\n\r\nafter docker start check your config folder and do your setups, setup is persistent, start from scratch by delete them\r\n\r\nto test the cronjob functions\r\ndocker exec -it \"dockername\" ./config/cronjob.sh\r\n\r\nsome small script lines cause i personally use tvheadend and get playlist for xteve and cp xml data to tvheadend",
    "categories": [
      "Downloaders:",
      "Network:Proxy"
    ],
    "platform": "linux",
    "note": "xteve proxy for iptv\r\n\r\nincluded functions are (all can be individual turned on / off)\r\n\r\nxteve - iptv and epg proxy server for plex, emby, etc ... thanks to @marmei \r\nwebsite: http://xteve.de \r\nDiscord: https://discordapp.com/channels/465222357754314767/465222357754314773\r\n\r\nzap2it support with multiply logins\r\n\r\nguide2go - xmltv epg grabber for schedules direct, thanks to @marmei \r\ngithub: https://github.com/mar-mei/guide2go \r\nSchedules Direct web: http://www.schedulesdirect.org/\r\n\r\nafter docker start check your config folder and do your setups, setup is persistent, start from scratch by delete them\r\n\r\nto test the cronjob functions\r\ndocker exec -it \"dockername\" ./config/cronjob.sh\r\n\r\nsome small script lines cause i personally use tvheadend and get playlist for xteve and cp xml data to tvheadend",
    "logo": "https://avatars0.githubusercontent.com/u/53275662?s=460\u0026amp;v=4",
    "name": "xteve_zap",
    "image": "alturismo/xteve_zap",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/root/.xteve",
        "bind": "/mnt/user/appdata/xteve_zap/"
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/xteve_zap/_config/"
      },
      {
        "container": "/guide2go",
        "bind": "/mnt/user/appdata/xteve_zap/_guide2go/"
      },
      {
        "container": "/zap",
        "bind": "/mnt/user/appdata/xteve_zap/_zap/"
      },
      {
        "container": "/TVH",
        "bind": "/mnt/user/appdata/tvheadend/data/"
      },
      {
        "container": "/tmp/xteve",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "TZ",
        "label": "TZ",
        "default": "Europe/Berlin"
      }
    ]
  },
  {
    "type": 1,
    "title": "zabbix-agent",
    "description": "This container is just the Zabbix Agent for UNRAID. Any Zabbix Server configuration/setup will need to be completed by yourself. \r\nTo set this container up just edit the following:\r\n\"HOSTNAME\" to your unraid server hostname\r\n\"ZABBIX SERVER/PROXY IP\" to the IP address of your Zabbix Server or Proxy\r\n\r\nIf you would like Zabbix to monitor disks as well as system resources you will need to add each one as a path manually.\r\nPlease view the guide available on the forums.",
    "categories": [
      "Network:Management"
    ],
    "platform": "linux",
    "note": "This container is just the Zabbix Agent for UNRAID. Any Zabbix Server configuration/setup will need to be completed by yourself. \r\nTo set this container up just edit the following:\r\n\"HOSTNAME\" to your unraid server hostname\r\n\"ZABBIX SERVER/PROXY IP\" to the IP address of your Zabbix Server or Proxy\r\n\r\nIf you would like Zabbix to monitor disks as well as system resources you will need to add each one as a path manually.\r\nPlease view the guide available on the forums.",
    "logo": "https://raw.githubusercontent.com/HNGamingUK/unraid-docker-templates/master/zabbix-agent/images/Zabbix-Logo.png",
    "name": "zabbix-agent",
    "image": "zabbix/zabbix-agent:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "env": [
      {
        "name": "ZBX_HOSTNAME",
        "label": "ZBX_HOSTNAME",
        "default": "HOSTNAME"
      },
      {
        "name": "ZBX_SERVER_HOST",
        "label": "ZBX_SERVER_HOST",
        "default": "ZABBIX SERVER/PROXY IP"
      },
      {
        "name": "ZBX_TLSCONNECT",
        "label": "ZBX_TLSCONNECT",
        "default": "unencrypted"
      },
      {
        "name": "ZBX_TLSACCEPT",
        "label": "ZBX_TLSACCEPT",
        "default": "unencrypted"
      }
    ]
  },
  {
    "type": 1,
    "title": "nut-influxdb-exporter",
    "description": "Docker wrapper for a Python script to query NUT - Network UPS Tools via a Python script and then send the results to InfluxDB for storage.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Docker wrapper for a Python script to query NUT - Network UPS Tools via a Python script and then send the results to InfluxDB for storage.",
    "logo": "https://raw.githubusercontent.com/kiwimato/nut-influxdb-exporter/master/assets/nut.png",
    "name": "nut-influxdb-exporter",
    "image": "maihai/nut-influxdb-exporter",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "env": [
      {
        "name": "NUT_PORT",
        "label": "NUT_PORT",
        "default": ""
      },
      {
        "name": "UPS_NAME",
        "label": "UPS_NAME",
        "default": "ups"
      },
      {
        "name": "NUT_PASSWORD",
        "label": "NUT_PASSWORD",
        "default": ""
      },
      {
        "name": "INFLUXDB_USER",
        "label": "INFLUXDB_USER",
        "default": ""
      },
      {
        "name": "WATTS",
        "label": "WATTS",
        "default": "1500"
      },
      {
        "name": "INFLUXDB_HOST",
        "label": "INFLUXDB_HOST",
        "default": "127.0.0.1"
      },
      {
        "name": "INFLUXDB_PORT",
        "label": "INFLUXDB_PORT",
        "default": "8086"
      },
      {
        "name": "INFLUXDB_DATABASE",
        "label": "INFLUXDB_DATABASE",
        "default": "nut"
      },
      {
        "name": "INFLUXDB_PASSWORD",
        "label": "INFLUXDB_PASSWORD",
        "default": ""
      },
      {
        "name": "NUT_HOST",
        "label": "NUT_HOST",
        "default": "127.0.0.1"
      },
      {
        "name": "NUT_USERNAME",
        "label": "NUT_USERNAME",
        "default": ""
      },
      {
        "name": "HOSTNAME",
        "label": "HOSTNAME",
        "default": "unraid-ups"
      },
      {
        "name": "VERBOSE",
        "label": "VERBOSE",
        "default": "false"
      }
    ]
  },
  {
    "type": 1,
    "title": "coturn",
    "description": "Coturn TURN Server is a VoIP media traffic NAT traversal server and gateway. It can be used as a general-purpose network traffic TURN server and gateway, too.",
    "categories": [
      "Network:Voip"
    ],
    "platform": "linux",
    "note": "Coturn TURN Server is a VoIP media traffic NAT traversal server and gateway. It can be used as a general-purpose network traffic TURN server and gateway, too.",
    "logo": "https://raw.githubusercontent.com/xthursdayx/docker-templates/master/images/webrtc-icon.png",
    "name": "coturn",
    "image": "instrumentisto/coturn",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "0": "0:0/udp",
        "3478": "3478:3478/tcp",
        "5349": "5349:5349/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/ssl/",
        "bind": "/mnt/cache/appdata/coturn/keys"
      },
      {
        "container": "/coturn/turnserver.conf",
        "bind": "/mnt/cache/appdata/coturn/turnserver.conf"
      }
    ]
  },
  {
    "type": 1,
    "title": "ferdi-server",
    "description": "Ferdi is a hard-fork of Franz, a messaging app for WhatsApp, Slack, Telegram, HipChat, Hangouts and many many more.\r\n\r\nFerdi-server is an unofficial replacement of the Franz server for use with the Ferdi Client.",
    "categories": [
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "Ferdi is a hard-fork of Franz, a messaging app for WhatsApp, Slack, Telegram, HipChat, Hangouts and many many more.\r\n\r\nFerdi-server is an unofficial replacement of the Franz server for use with the Ferdi Client.",
    "logo": "https://raw.githubusercontent.com/xthursdayx/docker-templates/master/images/ferdi-icon.png",
    "name": "ferdi-server",
    "image": "getferdi/ferdi-server",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "3333:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/app/recipes",
        "bind": ""
      },
      {
        "container": "/app/database",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "NODE_ENV",
        "label": "NODE_ENV",
        "default": "development"
      },
      {
        "name": "DB_CONNECTION",
        "label": "DB_CONNECTION",
        "default": "sqlite"
      },
      {
        "name": "DB_USER",
        "label": "DB_USER",
        "default": "root"
      },
      {
        "name": "IS_CREATION_ENABLED",
        "label": "IS_CREATION_ENABLED",
        "default": "true"
      },
      {
        "name": "DB_HOST",
        "label": "DB_HOST",
        "default": "127.0.0.1"
      },
      {
        "name": "DB_PORT",
        "label": "DB_PORT",
        "default": "3306"
      },
      {
        "name": "DB_PASSWORD",
        "label": "DB_PASSWORD",
        "default": ""
      },
      {
        "name": "DB_DATABASE",
        "label": "DB_DATABASE",
        "default": "adonis"
      },
      {
        "name": "CONNECT_WITH_FRANZ",
        "label": "CONNECT_WITH_FRANZ",
        "default": "true"
      }
    ]
  },
  {
    "type": 1,
    "title": "gPodder",
    "description": "gPodder is a simple, open source podcast client written in Python using GTK+. In development since 2005 with a proven, mature codebase.\u0026amp;#xD;\r\n\u0026amp;#xD;",
    "categories": [
      "Downloaders:",
      "MediaApp:Other"
    ],
    "platform": "linux",
    "note": "gPodder is a simple, open source podcast client written in Python using GTK+. In development since 2005 with a proven, mature codebase.\u0026amp;#xD;\r\n\u0026amp;#xD;",
    "logo": "https://raw.githubusercontent.com/xthursdayx/docker-templates/master/images/gpodder-icon.png",
    "name": "gPodder",
    "image": "xthursdayx/gpodder-docker",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3389": "3389:3389/tcp",
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/downloads",
        "bind": "/mnt/cache/Downloads/gPodder"
      },
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/gPodder"
      }
    ],
    "env": [
      {
        "name": "HEIGHT",
        "label": "HEIGHT",
        "default": "720"
      },
      {
        "name": "GUAC_USER",
        "label": "GUAC_USER",
        "default": "admin"
      },
      {
        "name": "GUAC_PASS",
        "label": "GUAC_PASS",
        "default": ""
      },
      {
        "name": "TZ",
        "label": "TZ",
        "default": "America/New_York"
      },
      {
        "name": "WIDTH",
        "label": "WIDTH",
        "default": "1280"
      }
    ]
  },
  {
    "type": 1,
    "title": "RoonServer",
    "description": "Docker image for running Roon Server. Roon Server is a software package that provides a “headless” version of Roon. It will be the brain of your music system, managing your music files, streaming services, and your audio devices. Roon Server is used in conjunction with Roon or Roon Remote, both of which provide control functionality.",
    "categories": [
      "MediaServer:Music"
    ],
    "platform": "linux",
    "note": "Docker image for running Roon Server. Roon Server is a software package that provides a “headless” version of Roon. It will be the brain of your music system, managing your music files, streaming services, and your audio devices. Roon Server is used in conjunction with Roon or Roon Remote, both of which provide control functionality.",
    "logo": "https://raw.githubusercontent.com/xthursdayx/docker-templates/master/images/roon-icon.png",
    "name": "RoonServer",
    "image": "steefdebruijn/docker-roonserver",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/music",
        "bind": "/mnt/user/Media/Music/"
      },
      {
        "container": "/backup",
        "bind": "/mnt/user/Backip/Roon_Backup"
      },
      {
        "container": "/app",
        "bind": "/mnt/cache/appdata/roonserver/"
      },
      {
        "container": "/data",
        "bind": "/mnt/cache/appdata/roonserver/"
      }
    ]
  },
  {
    "type": 1,
    "title": "yacserver",
    "description": "Headless version of the YACReaderLibraryServer. YACReader is the best comic reader and comic manager with support for cbr cbz zip rar comic files.",
    "categories": [
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "Headless version of the YACReaderLibraryServer. YACReader is the best comic reader and comic manager with support for cbr cbz zip rar comic files.",
    "logo": "https://raw.githubusercontent.com/xthursdayx/docker-templates/master/images/yacreader-icon.png",
    "name": "yacserver",
    "image": "xthursdayx/yacreaderlibrary-server-docker",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/comics",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "mediawiki",
    "description": "MediaWiki with WYSIWYG VisualEditor extension and Parsoid service. Built with Alpine, S6-overlay, NGINX, PHP-FPM with PHP 7.3, NodeJS, along with other extensions.",
    "categories": [
      "Cloud:",
      "Productivity:",
      "Tools:Utilities",
      "Network:Web",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "MediaWiki with WYSIWYG VisualEditor extension and Parsoid service. Built with Alpine, S6-overlay, NGINX, PHP-FPM with PHP 7.3, NodeJS, along with other extensions.",
    "logo": "https://raw.githubusercontent.com/d8sychain/docker-mediawiki/master/assets/mediawiki-icon.png",
    "name": "mediawiki",
    "image": "d8sychain/mediawiki",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "9090:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/assets",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/mediawiki"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UPGRADE_MEDIAWIKI",
        "label": "UPGRADE_MEDIAWIKI",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "nextcloudpi",
    "description": "This is a template for the Nextcloudpi docker container, this is an all in one solution for someone wanting to run Nextcloud on their unRaid server. More information can be found here:\r\nhttps://ownyourbits.com/\r\nhttps://hub.docker.com/r/ownyourbits/nextcloudpi\r\n\r\nBefore hitting start, select advanced view in the top right corner, add your servers IP address e.g. 192.168.1.5 or the IP of the container if you specify a unique one.",
    "categories": [
      "Cloud:",
      "Tools:Utilities",
      "MediaServer:Music",
      "MediaServer:Photos"
    ],
    "platform": "linux",
    "note": "This is a template for the Nextcloudpi docker container, this is an all in one solution for someone wanting to run Nextcloud on their unRaid server. More information can be found here:\r\nhttps://ownyourbits.com/\r\nhttps://hub.docker.com/r/ownyourbits/nextcloudpi\r\n\r\nBefore hitting start, select advanced view in the top right corner, add your servers IP address e.g. 192.168.1.5 or the IP of the container if you specify a unique one.",
    "logo": "https://raw.githubusercontent.com/Dimtar/unraidtemplates/master/nextcloudpi/logo.jpg",
    "name": "nextcloudpi",
    "image": "ownyourbits/nextcloudpi",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "443:443/tcp",
        "4443": "4443:4443/tcp",
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/nextcloudpi"
      }
    ]
  },
  {
    "type": 1,
    "title": "deconz",
    "description": "This Docker image containerizes the deCONZ software from Dresden Elektronik, which controls a ZigBee network using a Conbee USB or RaspBee GPIO serial interface. This image runs deCONZ in \"minimal\" mode, for control of the ZigBee network via the WebUIs (\"Wireless Light Control\" and \"Phoscon\") and over the REST API and Websockets, and optionally runs a VNC server for viewing and interacting with the ZigBee mesh through the deCONZ UI.\r\n\r\nYou must use a custom ip - network type custom br:0 - (alternatively use host and change webport)\r\n\r\nAdvanced option clcik on show more settings",
    "categories": [
      "HomeAutomation:"
    ],
    "platform": "linux",
    "note": "This Docker image containerizes the deCONZ software from Dresden Elektronik, which controls a ZigBee network using a Conbee USB or RaspBee GPIO serial interface. This image runs deCONZ in \"minimal\" mode, for control of the ZigBee network via the WebUIs (\"Wireless Light Control\" and \"Phoscon\") and over the REST API and Websockets, and optionally runs a VNC server for viewing and interacting with the ZigBee mesh through the deCONZ UI.\r\n\r\nYou must use a custom ip - network type custom br:0 - (alternatively use host and change webport)\r\n\r\nAdvanced option clcik on show more settings",
    "logo": "https://raw.githubusercontent.com/SpaceinvaderOne/Docker-Templates-Unraid/master/spaceinvaderone/docker_icons/deconz.png",
    "name": "deconz",
    "image": "spaceinvaderone/deconz",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/root/.local/share/dresden-elektronik/deCONZ",
        "bind": "/mnt/user/appdata/deconz"
      }
    ],
    "env": [
      {
        "name": "DEBUG_ZCL",
        "label": "DEBUG_ZCL",
        "default": "0"
      },
      {
        "name": "DEBUG_ZDP",
        "label": "DEBUG_ZDP",
        "default": "0"
      },
      {
        "name": "DEBUG_OTAU",
        "label": "DEBUG_OTAU",
        "default": "0"
      },
      {
        "name": "DECONZ_WEB_PORT",
        "label": "DECONZ_WEB_PORT",
        "default": "80"
      },
      {
        "name": "DECONZ_WS_PORT",
        "label": "DECONZ_WS_PORT",
        "default": "443"
      },
      {
        "name": "DEBUG_INFO",
        "label": "DEBUG_INFO",
        "default": "1"
      },
      {
        "name": "DEBUG_APS",
        "label": "DEBUG_APS",
        "default": "0"
      },
      {
        "name": "DECONZ_VNC_PASSWORD",
        "label": "DECONZ_VNC_PASSWORD",
        "default": ""
      },
      {
        "name": "DECONZ_UPNP",
        "label": "DECONZ_UPNP",
        "default": "1"
      },
      {
        "name": " DECONZ_DEVICE",
        "label": " DECONZ_DEVICE",
        "default": "/dev/ttyACM0"
      },
      {
        "name": "TZ",
        "label": "TZ",
        "default": "Europe/London"
      },
      {
        "name": "DECONZ_VNC_MODE",
        "label": "DECONZ_VNC_MODE",
        "default": "1"
      },
      {
        "name": "DECONZ_VNC_PORT",
        "label": "DECONZ_VNC_PORT",
        "default": "5900"
      }
    ]
  },
  {
    "type": 1,
    "title": "explainshell",
    "description": "Not everyone, especially people new to Linux and Unraid, know what a command that they type i will actually do.\r\nExplainshell is here to help with that. Copy and paste a command into its searchbox then hit explain\r\nIt will breakdown and display what each part of a Linux command means and does.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Not everyone, especially people new to Linux and Unraid, know what a command that they type i will actually do.\r\nExplainshell is here to help with that. Copy and paste a command into its searchbox then hit explain\r\nIt will breakdown and display what each part of a Linux command means and does.",
    "logo": "https://raw.githubusercontent.com/SpaceinvaderOne/Docker-Templates-Unraid/master/spaceinvaderone/docker_icons/explainshell.png",
    "name": "explainshell",
    "image": "spaceinvaderone/explainshell",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5000": "5000:5000/tcp"
      }
    ]
  },
  {
    "type": 1,
    "title": "macinabox",
    "description": "This container can download macOS either Catalina, Mojave or HighSierra. It will download the install media from Apple servers and convert it to a usable format for use for a VM.\r\n It will also create the correct XML for the VM along with the corresponding icon.\r\n It can be run in 2 ways as a full install (easiest) which will set up everything or preparation install which will prepare all the files and put them in the AppData folder under macinabox.\r\n \r\n Usage\r\n \r\n Install VM \t\t--full \r\n  will download MacOS and install needed files into your VM location. (requires the array to the stopped and started after the container is run for VM to show in the VM list)\r\n            \t\t--prepare\r\n   will download MacOS and put all needed files into AppData ready for manual use.\r\n \t\t   \r\n \t\t   \r\n macOS version  \tChoose version from below\r\n \t\t\t\t--mojave\r\n \t\t\t\t--high-sierra\r\n \t\t\t\t--catalina\r\n \t\t\t\t\r\n Vm image      Location of your vm share ( defualt /mnt/user/domains/ )\r\n \r\n TYPE\r\n choose type od vdisk  qcow2  or raw\r\n \r\n vdisksize     the size you want your vdisk to be created",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "This container can download macOS either Catalina, Mojave or HighSierra. It will download the install media from Apple servers and convert it to a usable format for use for a VM.\r\n It will also create the correct XML for the VM along with the corresponding icon.\r\n It can be run in 2 ways as a full install (easiest) which will set up everything or preparation install which will prepare all the files and put them in the AppData folder under macinabox.\r\n \r\n Usage\r\n \r\n Install VM \t\t--full \r\n  will download MacOS and install needed files into your VM location. (requires the array to the stopped and started after the container is run for VM to show in the VM list)\r\n            \t\t--prepare\r\n   will download MacOS and put all needed files into AppData ready for manual use.\r\n \t\t   \r\n \t\t   \r\n macOS version  \tChoose version from below\r\n \t\t\t\t--mojave\r\n \t\t\t\t--high-sierra\r\n \t\t\t\t--catalina\r\n \t\t\t\t\r\n Vm image      Location of your vm share ( defualt /mnt/user/domains/ )\r\n \r\n TYPE\r\n choose type od vdisk  qcow2  or raw\r\n \r\n vdisksize     the size you want your vdisk to be created",
    "logo": "https://raw.githubusercontent.com/SpaceinvaderOne/Docker-Templates-Unraid/master/spaceinvaderone/docker_icons/Macinabox.png",
    "name": "macinabox",
    "image": "spaceinvaderone/macinabox",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/Macinabox/tools/FetchMacOS/BaseSystem",
        "bind": "/mnt/user/appdata/macinabox/basesystem"
      },
      {
        "container": "/image",
        "bind": "/mnt/user/domains/"
      },
      {
        "container": "/xml",
        "bind": "/etc/libvirt/qemu/"
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/macinabox"
      }
    ],
    "env": [
      {
        "name": "flavour",
        "label": "flavour",
        "default": "--catalina"
      },
      {
        "name": "vminstall",
        "label": "vminstall",
        "default": "--prepare-install"
      },
      {
        "name": "vdisksize",
        "label": "vdisksize",
        "default": "64G"
      },
      {
        "name": "TYPE",
        "label": "TYPE",
        "default": "raw"
      }
    ]
  },
  {
    "type": 1,
    "title": "shinobipro",
    "description": "Default tag is spaceinvaderone/shinobi_pro_unraid:latest  but this can be changed to :nvidia\r\n\r\nTo use your Nvidia GPU for encoding\r\n1. Use the Nvidia Unraid build of Unraid\r\n2. Set the repository tag to :nvidia   ( spaceinvaderone/shinobi_pro_unraid:latest )\r\n3. Under Extra Parameters:  add   --runtime=nvidia\r\n4. Set  template field   Nvidia build only -- Driver capabilities:     to  all\r\n5. Set  template field   Nvidia build only -- GPU ID:                       to your GPU id from the nvida unraid plugin\r\n\r\nShinobi is the Open Source CCTV Solution written in Node.JS. Designed with multiple account system, Streams by WebSocket, and Save to WebM. Shinobi can record IP Cameras and Local Cameras.\r\nFeatures\r\nTime-lapse Viewer (Watch a hours worth of footage in a few minutes)\r\n2-Factor Authentication\r\nDefeats stream limit imposed by browsers\r\nWith Base64 (Stream Type) and JPEG Mode (Option)\r\nRecords IP Cameras and Local Cameras\r\nStreams by WebSocket, HLS (includes audio), and MJPEG\r\nSave to WebM and MP4\r\nCan save Audio\r\nPush Events - When a video is finished it will appear in the dashboard without a refresh\r\nRegion Motion Detection (Similar to ZoneMinder Zone Detection)\r\nRepresented by a Motion Guage on each monitor\r\n\"No Motion\" Notifications\r\n1 Process for Each Camera to do both, Recording and Streaming\r\nTimeline for viewing Motion Events and Videos\r\nSub-Accounts with permissions\r\nMonitor Viewing\r\nMonitor Editing\r\nVideo Deleting\r\nSeparate API keys for sub account\r\nCron Filters can be set based on master account\r\nStream Analyzer built-in (FFprobe GUI)\r\nMonitor Groups\r\nCan snapshot images from stream directly\r\nLower Bandwith Mode (JPEG Mode)\r\nSnapshot (cgi-bin) must be enabled in Monitor Settings\r\nControl Cameras from Interface\r\nAPI\r\nGet videos\r\nGet monitors\r\nChange monitor modes : Disabled, Watch, Record\r\nEmbedding streams\r\nDashboard Framework made with Google Material Design Lite, jQuery, and Bootstrap",
    "categories": [
      "HomeAutomation:",
      "MediaApp:Video",
      "MediaServer:Video"
    ],
    "platform": "linux",
    "note": "Default tag is spaceinvaderone/shinobi_pro_unraid:latest  but this can be changed to :nvidia\r\n\r\nTo use your Nvidia GPU for encoding\r\n1. Use the Nvidia Unraid build of Unraid\r\n2. Set the repository tag to :nvidia   ( spaceinvaderone/shinobi_pro_unraid:latest )\r\n3. Under Extra Parameters:  add   --runtime=nvidia\r\n4. Set  template field   Nvidia build only -- Driver capabilities:     to  all\r\n5. Set  template field   Nvidia build only -- GPU ID:                       to your GPU id from the nvida unraid plugin\r\n\r\nShinobi is the Open Source CCTV Solution written in Node.JS. Designed with multiple account system, Streams by WebSocket, and Save to WebM. Shinobi can record IP Cameras and Local Cameras.\r\nFeatures\r\nTime-lapse Viewer (Watch a hours worth of footage in a few minutes)\r\n2-Factor Authentication\r\nDefeats stream limit imposed by browsers\r\nWith Base64 (Stream Type) and JPEG Mode (Option)\r\nRecords IP Cameras and Local Cameras\r\nStreams by WebSocket, HLS (includes audio), and MJPEG\r\nSave to WebM and MP4\r\nCan save Audio\r\nPush Events - When a video is finished it will appear in the dashboard without a refresh\r\nRegion Motion Detection (Similar to ZoneMinder Zone Detection)\r\nRepresented by a Motion Guage on each monitor\r\n\"No Motion\" Notifications\r\n1 Process for Each Camera to do both, Recording and Streaming\r\nTimeline for viewing Motion Events and Videos\r\nSub-Accounts with permissions\r\nMonitor Viewing\r\nMonitor Editing\r\nVideo Deleting\r\nSeparate API keys for sub account\r\nCron Filters can be set based on master account\r\nStream Analyzer built-in (FFprobe GUI)\r\nMonitor Groups\r\nCan snapshot images from stream directly\r\nLower Bandwith Mode (JPEG Mode)\r\nSnapshot (cgi-bin) must be enabled in Monitor Settings\r\nControl Cameras from Interface\r\nAPI\r\nGet videos\r\nGet monitors\r\nChange monitor modes : Disabled, Watch, Record\r\nEmbedding streams\r\nDashboard Framework made with Google Material Design Lite, jQuery, and Bootstrap",
    "logo": "https://shinobi.video//libs/assets/icon/apple-touch-icon-57x57.png",
    "name": "shinobipro",
    "image": "spaceinvaderone/shinobi_pro_unraid:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/opt/shinobi/videos",
        "bind": "/mnt/user/cctv/"
      },
      {
        "container": "/dev/shm/streams",
        "bind": "/dev/shm/shinobi"
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/shinobipro"
      },
      {
        "container": "/var/lib/mysql",
        "bind": "/mnt/user/appdata/shinobipro/database"
      },
      {
        "container": "/opt/shinobi/libs/customAutoLoad",
        "bind": "/mnt/user/appdata/shinobipro/customautoload"
      },
      {
        "container": "/usr/share/zoneinfo/",
        "bind": "/usr/share/zoneinfo/"
      },
      {
        "container": "/etc/localtime",
        "bind": "/etc/localtime"
      }
    ],
    "env": [
      {
        "name": "MYSQL_PASSWORD",
        "label": "MYSQL_PASSWORD",
        "default": ""
      },
      {
        "name": "ADMIN_USER",
        "label": "ADMIN_USER",
        "default": "admin"
      },
      {
        "name": "NVIDIA_VISIBLE_DEVICES",
        "label": "NVIDIA_VISIBLE_DEVICES",
        "default": ""
      },
      {
        "name": "MYSQL_DATABASE",
        "label": "MYSQL_DATABASE",
        "default": "ccio"
      },
      {
        "name": "MYSQL_PORT",
        "label": "MYSQL_PORT",
        "default": "3306"
      },
      {
        "name": "MYSQL_USER",
        "label": "MYSQL_USER",
        "default": "majesticflame"
      },
      {
        "name": "MYSQL_HOST",
        "label": "MYSQL_HOST",
        "default": "localhost"
      },
      {
        "name": "MYSQL_ROOT_USER",
        "label": "MYSQL_ROOT_USER",
        "default": "root"
      },
      {
        "name": "ADMIN_PASSWORD",
        "label": "ADMIN_PASSWORD",
        "default": "password"
      },
      {
        "name": "NVIDIA_DRIVER_CAPABILITIES",
        "label": "NVIDIA_DRIVER_CAPABILITIES",
        "default": ""
      },
      {
        "name": "MYSQL_ROOT_PASSWORD",
        "label": "MYSQL_ROOT_PASSWORD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "vm_custom_icons",
    "description": "Downloads and installs additional custom VM icons to the Unraid VM Manager.\r\n\r\nAfter install Container should be set to auto start.\r\n\r\nUsage\r\n\r\nBasic settings\r\n1. Choose which custom icons you want to be installed from the drop downs.\r\n2. Choose wether you want to keep the existing stock vm icons (recommended to keep)\r\n3. Set wether all icons are redownloaded when container starts.\r\n    Setting this as yes will clear all vm icons then redownload all choosen icons from github repo. \r\n    Setting to yes will on every start download any new icons in selected sections.\r\n    (This is also useful if you deceide you no longer want a choosen section of icons anymore)\r\n4. If your server has a beep speaker you can enable a tune to be played each time icons are synced!\r\n\r\nAdvanced settings (under show more settings)\r\n1. You can set how long the container should wait before exiting after syncing icons (default 30 seconds)\r\nOther options dont change",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Downloads and installs additional custom VM icons to the Unraid VM Manager.\r\n\r\nAfter install Container should be set to auto start.\r\n\r\nUsage\r\n\r\nBasic settings\r\n1. Choose which custom icons you want to be installed from the drop downs.\r\n2. Choose wether you want to keep the existing stock vm icons (recommended to keep)\r\n3. Set wether all icons are redownloaded when container starts.\r\n    Setting this as yes will clear all vm icons then redownload all choosen icons from github repo. \r\n    Setting to yes will on every start download any new icons in selected sections.\r\n    (This is also useful if you deceide you no longer want a choosen section of icons anymore)\r\n4. If your server has a beep speaker you can enable a tune to be played each time icons are synced!\r\n\r\nAdvanced settings (under show more settings)\r\n1. You can set how long the container should wait before exiting after syncing icons (default 30 seconds)\r\nOther options dont change",
    "logo": "https://raw.githubusercontent.com/SpaceinvaderOne/unraid_vm_icons/master/dockericon.png",
    "name": "vm_custom_icons",
    "image": "spaceinvaderone/vm_custom_icons",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/vm_custom_icons"
      },
      {
        "container": "/unraid_vm_icons",
        "bind": "/usr/local/emhttp/plugins/dynamix.vm.manager/templates/images"
      }
    ],
    "env": [
      {
        "name": "other",
        "label": "other",
        "default": "yes"
      },
      {
        "name": "delete",
        "label": "delete",
        "default": "no"
      },
      {
        "name": "windows",
        "label": "windows",
        "default": "yes"
      },
      {
        "name": "freebsd",
        "label": "freebsd",
        "default": "yes"
      },
      {
        "name": "macos",
        "label": "macos",
        "default": "yes"
      },
      {
        "name": "stock",
        "label": "stock",
        "default": "yes"
      },
      {
        "name": "tune",
        "label": "tune",
        "default": "no"
      },
      {
        "name": "sleeptimehuman",
        "label": "sleeptimehuman",
        "default": "30 seconds"
      },
      {
        "name": "linux",
        "label": "linux",
        "default": "yes"
      }
    ]
  },
  {
    "type": 1,
    "title": "FlexConnect",
    "description": "FlexConnect is a stand-alone version of the FlexTV Plugin. It is intended as a replacement once Plex sunsest the plugin feature. This is currently for development purposes only.",
    "categories": [
      "Tools:"
    ],
    "platform": "linux",
    "note": "FlexConnect is a stand-alone version of the FlexTV Plugin. It is intended as a replacement once Plex sunsest the plugin feature. This is currently for development purposes only.",
    "logo": "https://raw.githubusercontent.com/d8ahazard/Phlex/master/img/android-icon-144x144.png",
    "name": "FlexConnect",
    "image": "digitalhigh/flexconnect",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/FlexConnect"
      },
      {
        "container": "/plex",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "FlexTV",
    "categories": [
      "Tools:"
    ],
    "platform": "linux",
    "note": "Flex TV. is a web application that interfaces between google Assistant and Plex to allow you to control playback of media using Actions for Google or IFTTT.\r\n    Additionally, it interfaces with the API’s for Sonarr, Radarr, Couchpotato, Sickbeard, and Sickrage.\r\n    It also has customizeable webhooks, so you can basically control anything that has an open API with your voice. If you can send data to a URL to do a thing, you can program it in Flex TV.\r\n    It is recomended to use reverse proxy to enable https",
    "logo": "https://raw.githubusercontent.com/d8ahazard/Phlex/master/img/android-icon-144x144.png",
    "name": "FlexTV",
    "image": "digitalhigh/flextv",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "Glimmr",
    "description": "Glimmr synchronizes your Hue Lights, nanoleaf panels, and lifx bulbs with a DreamScreen controller.",
    "categories": [
      "Tools:"
    ],
    "platform": "linux",
    "note": "Glimmr synchronizes your Hue Lights, nanoleaf panels, and lifx bulbs with a DreamScreen controller.",
    "logo": "https://raw.githubusercontent.com/d8ahazard/glimmr/master/wwwroot/img/ic_launcher.png",
    "name": "Glimmr",
    "image": "digitalhigh/glimmr",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "1900": "1900:1900/udp",
        "2100": "2100:2100/udp",
        "5353": "5353:5353/udp",
        "56700": "56700:56700/udp",
        "5699": "5699:5699/tcp",
        "60222": "60222:60222/udp",
        "8888": "8888:8888/udp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/glimmr",
        "bind": "/mnt/user/appdata/glimmr/"
      }
    ]
  },
  {
    "type": 1,
    "title": "gaps",
    "description": "Search your movies and find missing movies from MovieDB collections.",
    "categories": [
      "Tools:Utilities",
      "MediaApp:Other",
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "Search your movies and find missing movies from MovieDB collections.",
    "logo": "https://raw.githubusercontent.com/JasonHHouse/Gaps/master/images/gaps.png",
    "name": "gaps",
    "image": "housewrecker/gaps",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8484": "8484:8484/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/usr/data",
        "bind": "/mnt/user/appdata/gaps/"
      }
    ],
    "env": [
      {
        "name": "ENABLE_SSL",
        "label": "ENABLE_SSL",
        "default": "false"
      },
      {
        "name": "ENABLE_LOGIN",
        "label": "ENABLE_LOGIN",
        "default": "false"
      }
    ]
  },
  {
    "type": 1,
    "title": "rstudio",
    "description": "***NOTE*** First run is slow.\r\nRStudio Server with an emphasis on reproducibility. Builds on debian stable (debian:jessie for versions \u003c 3.4.0, debian:stretch after, etc) release. This stack installs a fixed version of R itself from source and it installs all R packages from a fixed snapshot of CRAN at a given date. Users should include the version tag, e.g. rocker/rstudio:3.3.1 when reproduciblity is paramount.",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "***NOTE*** First run is slow.\r\nRStudio Server with an emphasis on reproducibility. Builds on debian stable (debian:jessie for versions \u003c 3.4.0, debian:stretch after, etc) release. This stack installs a fixed version of R itself from source and it installs all R packages from a fixed snapshot of CRAN at a given date. Users should include the version tag, e.g. rocker/rstudio:3.3.1 when reproduciblity is paramount.",
    "logo": "https://avatars0.githubusercontent.com/u/9100160?v=3\u0026amp;s=200",
    "name": "rstudio",
    "image": "rocker/rstudio",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3838": "3838:3838/tcp",
        "8787": "8787:8787/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/home/rstudio/Documents",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "PASSWORD",
        "label": "PASSWORD",
        "default": "yourpasswordhere"
      },
      {
        "name": "ROOT",
        "label": "ROOT",
        "default": "FALSE"
      },
      {
        "name": "ADD",
        "label": "ADD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "go-auto-yt",
    "description": "GoAutoYT makes it easy for you to automatically download videos from as many YouTube channels as you'd like.\r\n\r\n Clean, very simple design - The dashboard only contains an input form where you can add a channel and configure checking intervals and what to download, and a little list of all your channels where you can delete them or tell the server to check for new uploads immediately.\r\n\r\n Everything is on a single page - You can view and control everything from just one page.\r\n\r\nMakes downloading videos/audio automatically very easy - Just paste a link of a channel you want to download, set a checking interval and that's it, the server will keep checking for new uploads and download if necessary.",
    "categories": [
      "Downloaders:",
      "Tools:Utilities",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "GoAutoYT makes it easy for you to automatically download videos from as many YouTube channels as you'd like.\r\n\r\n Clean, very simple design - The dashboard only contains an input form where you can add a channel and configure checking intervals and what to download, and a little list of all your channels where you can delete them or tell the server to check for new uploads immediately.\r\n\r\n Everything is on a single page - You can view and control everything from just one page.\r\n\r\nMakes downloading videos/audio automatically very easy - Just paste a link of a channel you want to download, set a checking interval and that's it, the server will keep checking for new uploads and download if necessary.",
    "logo": "https://raw.githubusercontent.com/AMJidovu/unraid-repository/master/img/go-auto-yt-dl.png",
    "name": "go-auto-yt",
    "image": "xiovv/go-auto-yt:stable",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "9000:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/app/downloads",
        "bind": "/mnt/user/appdata/go-auto-yt/downloads"
      },
      {
        "container": "/app/config",
        "bind": "/mnt/user/appdata/go-auto-yt/config"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "1000"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "1000"
      },
      {
        "name": "UMASK_SET",
        "label": "UMASK_SET",
        "default": "0022"
      }
    ]
  },
  {
    "type": 1,
    "title": "onlyoffice-community-server",
    "description": "Before you start this container you need to create the onlyoffice network. \r\n\t  Open Unraid terminal and paste this command in there: \r\n\t ' sudo docker network create --driver bridge onlyoffice ' -- without ' '\r\n\t  HTTPS Support can be enable creating a \"certs\" folder in the data directory and placing onlyoffice.crt and onlyoffice.key in it\r\nFor more information visit the support thread \r\nhttps://forums.unraid.net/topic/85643-support-amjidovu-onlyoffice-community-server/",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Before you start this container you need to create the onlyoffice network. \r\n\t  Open Unraid terminal and paste this command in there: \r\n\t ' sudo docker network create --driver bridge onlyoffice ' -- without ' '\r\n\t  HTTPS Support can be enable creating a \"certs\" folder in the data directory and placing onlyoffice.crt and onlyoffice.key in it\r\nFor more information visit the support thread \r\nhttps://forums.unraid.net/topic/85643-support-amjidovu-onlyoffice-community-server/",
    "logo": "https://raw.githubusercontent.com/AMJidovu/unraid-repository/master/img/onlyoffice-ce-ds.jpg",
    "name": "onlyoffice-community-server",
    "image": "xternet/unraid-onlyoffice-community-server",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "443": "4431:443/tcp",
        "5222": "5222:5222/tcp",
        "80": "8080:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/www/onlyoffice/Data",
        "bind": "/mnt/user/appdata/onlyoffice/CommunityServer/data"
      },
      {
        "container": "/var/log/onlyoffice",
        "bind": "/mnt/user/appdata/onlyoffice/CommunityServer/logs"
      }
    ],
    "env": [
      {
        "name": "MAIL_SERVER_DB_HOST",
        "label": "MAIL_SERVER_DB_HOST",
        "default": ""
      },
      {
        "name": "MAIL_SERVER_DB_USER",
        "label": "MAIL_SERVER_DB_USER",
        "default": "mail_admin"
      },
      {
        "name": "DOCUMENT_SERVER_PORT_80_TCP_ADDR",
        "label": "DOCUMENT_SERVER_PORT_80_TCP_ADDR",
        "default": ""
      },
      {
        "name": "MYSQL_SERVER_DB_NAME",
        "label": "MYSQL_SERVER_DB_NAME",
        "default": "onlyoffice"
      },
      {
        "name": "MYSQL_SERVER_USER",
        "label": "MYSQL_SERVER_USER",
        "default": "onlyoffice_user"
      },
      {
        "name": "MAIL_SERVER_API_HOST",
        "label": "MAIL_SERVER_API_HOST",
        "default": ""
      },
      {
        "name": "MAIL_SERVER_API_PORT",
        "label": "MAIL_SERVER_API_PORT",
        "default": "8081"
      },
      {
        "name": "MAIL_SERVER_DB_NAME",
        "label": "MAIL_SERVER_DB_NAME",
        "default": "onlyoffice_mailserver"
      },
      {
        "name": "MAIL_SERVER_DB_PORT",
        "label": "MAIL_SERVER_DB_PORT",
        "default": "3306"
      },
      {
        "name": "MAIL_SERVER_DB_PASS",
        "label": "MAIL_SERVER_DB_PASS",
        "default": "Isadmin123"
      },
      {
        "name": "MYSQL_SERVER_ROOT_PASSWORD",
        "label": "MYSQL_SERVER_ROOT_PASSWORD",
        "default": "my-secret-pw"
      },
      {
        "name": "MYSQL_SERVER_HOST",
        "label": "MYSQL_SERVER_HOST",
        "default": "localhost"
      },
      {
        "name": "MYSQL_SERVER_PASS",
        "label": "MYSQL_SERVER_PASS",
        "default": "onlyoffice_pass"
      }
    ]
  },
  {
    "type": 1,
    "title": "onlyoffice-document-server",
    "description": "Before you start this container you need to create the onlyoffice network. \r\n\t  Open Unraid terminal and paste this command in there: \r\n\t  \" sudo docker network create --driver bridge onlyoffice \" -- withouth the \" \"\r\n          If you pair this container with onlyoffice-community-server then this container needs to start first. \r\n\tHTTPS Support can be enable creating a \"certs\" folder in the data directory and placing onlyoffice.crt and onlyoffice.key in it. Add fonts by placing .ttf in the font folder and force updating the container.\r\nFor more information visit the support thread \r\nhttps://forums.unraid.net/topic/85643-support-amjidovu-onlyoffice-community-server/",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Before you start this container you need to create the onlyoffice network. \r\n\t  Open Unraid terminal and paste this command in there: \r\n\t  \" sudo docker network create --driver bridge onlyoffice \" -- withouth the \" \"\r\n          If you pair this container with onlyoffice-community-server then this container needs to start first. \r\n\tHTTPS Support can be enable creating a \"certs\" folder in the data directory and placing onlyoffice.crt and onlyoffice.key in it. Add fonts by placing .ttf in the font folder and force updating the container.\r\nFor more information visit the support thread \r\nhttps://forums.unraid.net/topic/85643-support-amjidovu-onlyoffice-community-server/",
    "logo": "https://raw.githubusercontent.com/AMJidovu/unraid-repository/d5a562fa4a7b73065dd022e585d80d4b77d0abfa/img/onlyoffice-ce-ds.jpg",
    "name": "onlyoffice-document-server",
    "image": "xternet/unraid-onlyoffice-document-server",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "443": "4432:443/tcp",
        "80": "8082:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/lib/onlyoffice",
        "bind": "/mnt/user/appdata/onlyoffice/DocumentServer/lib"
      },
      {
        "container": "/var/lib/postgresql",
        "bind": "/mnt/user/appdata/onlyoffice/DocumentServer/db"
      },
      {
        "container": "/usr/share/fonts/truetype/custom",
        "bind": "/mnt/user/appdata/onlyoffice/DocumentServer/fonts"
      },
      {
        "container": "/var/lib/onlyoffice/documentserver/App_Data/cache/files/forgotten",
        "bind": "/mnt/user/appdata/onlyoffice/DocumentServer/forgotten"
      },
      {
        "container": "/var/log/onlyoffice",
        "bind": "/mnt/user/appdata/onlyoffice/DocumentServer/logs"
      },
      {
        "container": "/var/www/onlyoffice/Data",
        "bind": "/mnt/user/appdata/onlyoffice/DocumentServer/data"
      }
    ]
  },
  {
    "type": 1,
    "title": "onlyoffice-mail-server",
    "description": "OnlyOffice Mail Server for external mail. \r\nClick advanced view and setup the yourdomain.com with your domain registered hostname. \r\nFor more information visit the support thread \r\nhttps://forums.unraid.net/topic/85643-support-amjidovu-onlyoffice-community-server/",
    "categories": [
      "Tools:Utilities",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "OnlyOffice Mail Server for external mail. \r\nClick advanced view and setup the yourdomain.com with your domain registered hostname. \r\nFor more information visit the support thread \r\nhttps://forums.unraid.net/topic/85643-support-amjidovu-onlyoffice-community-server/",
    "logo": "https://raw.githubusercontent.com/AMJidovu/unraid-repository/master/img/onlyoffice-ce-ds.jpg",
    "name": "onlyoffice-mail-server",
    "image": "xternet/unraid-onlyoffice-mail-server",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/var/lib/mysql",
        "bind": "/mnt/user/appdata/onlyoffice/MailServer/mysql"
      },
      {
        "container": "/var/vmail",
        "bind": "/mnt/user/appdata/onlyoffice/MailServer/data"
      },
      {
        "container": "/etc/pki/tls/mailserver",
        "bind": "/mnt/user/appdata/onlyoffice/MailServer/data/certs"
      },
      {
        "container": "/var/log",
        "bind": "/mnt/user/appdata/onlyoffice/MailServer/logs"
      }
    ],
    "env": [
      {
        "name": "MYSQL_ROOT_PASSWD",
        "label": "MYSQL_ROOT_PASSWD",
        "default": "Isadmin123"
      },
      {
        "name": "MYSQL_SERVER_DB_NAME",
        "label": "MYSQL_SERVER_DB_NAME",
        "default": "onlyoffice_mailserver"
      },
      {
        "name": "MYSQL_SERVER",
        "label": "MYSQL_SERVER",
        "default": "onlyoffice-mysql-server"
      },
      {
        "name": "MYSQL_SERVER_PORT",
        "label": "MYSQL_SERVER_PORT",
        "default": "3306"
      },
      {
        "name": "MYSQL_ROOT_USER",
        "label": "MYSQL_ROOT_USER",
        "default": "mail_admin"
      }
    ]
  },
  {
    "type": 1,
    "title": "onlyoffice-mysql-server",
    "description": "External database for OnlyOffice. ( MySQL 5.7 )\r\nThe database needs initialization.\r\nRead the support thread on how to initialize it: \r\nhttps://forums.unraid.net/topic/85643-support-amjidovu-onlyoffice-community-server/",
    "categories": [
      "Network:Management",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "External database for OnlyOffice. ( MySQL 5.7 )\r\nThe database needs initialization.\r\nRead the support thread on how to initialize it: \r\nhttps://forums.unraid.net/topic/85643-support-amjidovu-onlyoffice-community-server/",
    "logo": "https://raw.githubusercontent.com/AMJidovu/unraid-repository/master/img/mysql.png",
    "name": "onlyoffice-mysql-server",
    "image": "xternet/onlyoffice-mysql-5.7",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "3306": "3306:3306/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/mysql/conf.d",
        "bind": "/mnt/user/appdata/onlyoffice/mysql/conf.d"
      },
      {
        "container": "/var/lib/mysql",
        "bind": "/mnt/user/appdata/onlyoffice/mysql/data"
      },
      {
        "container": "/docker-entrypoint-initdb.d",
        "bind": "/mnt/user/appdata/onlyoffice/mysql/initdb"
      },
      {
        "container": "/var/log/mysql",
        "bind": "/mnt/user/appdata/onlyoffice/mysql/logs"
      }
    ],
    "env": [
      {
        "name": "MYSQL_ROOT_PASSWORD",
        "label": "MYSQL_ROOT_PASSWORD",
        "default": "my-secret-pw"
      },
      {
        "name": "MYSQL_DATABASE",
        "label": "MYSQL_DATABASE",
        "default": "onlyoffice"
      }
    ]
  },
  {
    "type": 1,
    "title": "QEMUBackup",
    "description": "QEMUBackup is a ASP.NET Core app that facilitates manual backups of QEMU virtual machines. Allows user to add a title and description to a virtual machine. Then user can create a backup which will contain the title and description in the VM's XML. Useful for describing the state of a VM when taking a backup.",
    "categories": [
      "Backup:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "QEMUBackup is a ASP.NET Core app that facilitates manual backups of QEMU virtual machines. Allows user to add a title and description to a virtual machine. Then user can create a backup which will contain the title and description in the VM's XML. Useful for describing the state of a VM when taking a backup.",
    "name": "QEMUBackup",
    "image": "wbynum/qemubackup",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "43080:80/tcp"
      }
    ],
    "env": [
      {
        "name": "QEMUBackupHost",
        "label": "QEMUBackupHost",
        "default": ""
      },
      {
        "name": "QEMUBackupUsername",
        "label": "QEMUBackupUsername",
        "default": ""
      },
      {
        "name": "QEMUBackupBackupPath",
        "label": "QEMUBackupBackupPath",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "GitLab-CE",
    "categories": [
      "Backup:",
      "Cloud:",
      "Network:Web",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "GitLab Community Edition docker image based on the Omnibus package.",
    "logo": "https://raw.githubusercontent.com/tynor88/docker-templates/master/images/gitlab_small.png",
    "name": "GitLab-CE",
    "image": "gitlab/gitlab-ce",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "gitlab-runner",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "GitLab CI Multi Runner used to fetch and run pipeline jobs with GitLab CI   Converted By Community Applications   Always verify this template (and values) against the dockerhub support page for the container",
    "logo": "https://raw.githubusercontent.com/smccloud/docker-templates/master/images/gitlab_small.png",
    "name": "gitlab-runner",
    "image": "gitlab/gitlab-runner",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "frak-gvm",
    "description": "OpenVAS is a full-featured vulnerability scanner. Its capabilities include unauthenticated testing, authenticated testing, various high level and low level Internet and industrial protocols, performance tuning for large-scale scans and a powerful internal programming language to implement any type of vulnerability test.",
    "categories": [
      "Tools:Utilities",
      "Security:"
    ],
    "platform": "linux",
    "note": "OpenVAS is a full-featured vulnerability scanner. Its capabilities include unauthenticated testing, authenticated testing, various high level and low level Internet and industrial protocols, performance tuning for large-scale scans and a powerful internal programming language to implement any type of vulnerability test.",
    "logo": "https://raw.githubusercontent.com/frakman1/unraid-docker-templates/master/openvas/gvm.png",
    "name": "frak-gvm",
    "image": "securecompliance/gvm:11.0.1-r3",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "9392": "8080:9392/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/cache/appdata/frak-gvm/data"
      }
    ],
    "env": [
      {
        "name": "PASSWORD",
        "label": "PASSWORD",
        "default": "admin"
      }
    ]
  },
  {
    "type": 1,
    "title": "Rclone",
    "categories": [
      "Backup:",
      "Cloud:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Docker for Rclone - a command line program to sync files and directories to and from various cloud services.",
    "logo": "https://raw.githubusercontent.com/tynor88/docker-templates/master/images/rclone_small.png",
    "name": "Rclone",
    "image": "tynor88/rclone:dev",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "Rclone-mount",
    "categories": [
      "Backup:",
      "Cloud:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Docker for Rclone FUSE mount feature (exposable to host and other docker containers, e.g. Plex, Nextcloud, glFTPd)",
    "logo": "https://raw.githubusercontent.com/tynor88/docker-templates/master/images/rclone_small.png",
    "name": "Rclone-mount",
    "image": "tynor88/rclone-mount:dev",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "socat",
    "categories": [
      "Network:Proxy",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "Socat is a command line based utility that establishes two bidirectional byte streams and transfers data between them.",
    "logo": "https://raw.githubusercontent.com/tynor88/docker-templates/master/images/socat_small.png",
    "name": "socat",
    "image": "tynor88/socat",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "Sourcegraph",
    "description": "Sourcegraph docker image.",
    "categories": [
      "Backup:",
      "Cloud:",
      "Network:Web",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Sourcegraph docker image.",
    "logo": "https://raw.githubusercontent.com/sourcegraph/themes/master/icon.png",
    "name": "Sourcegraph",
    "image": "sourcegraph/server:3.10.0",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "2633": "2633:2633/tcp",
        "3370": "3370:3370/tcp",
        "7080": "7080:7080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/sourcegraph",
        "bind": "/mnt/cache/appdata/sourcegraph/config"
      },
      {
        "container": "/var/opt/sourcegraph",
        "bind": "/mnt/cache/appdata/sourcegraph/data"
      }
    ]
  },
  {
    "type": 1,
    "title": "UnoEuroDNS",
    "categories": [
      "Network:DNS"
    ],
    "platform": "linux",
    "note": "Keep your DNS records for your own domains updated with this UnoEuro DDNS script.",
    "logo": "https://raw.githubusercontent.com/tynor88/docker-templates/master/images/unoeuro_small.png",
    "name": "UnoEuroDNS",
    "image": "tynor88/unoeuro-dns",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "Unraid-API",
    "description": "This is an MQTT Home Assistant Bridge with a rest endpoint as well that allows control of unraid from this docker, homeassistant and MQTT/REST generally.\n  \n  \nIcon made by https://www.flaticon.com/authors/freepik Freepik",
    "categories": [
      "HomeAutomation:",
      "Tools:Utilities",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "This is an MQTT Home Assistant Bridge with a rest endpoint as well that allows control of unraid from this docker, homeassistant and MQTT/REST generally.\n  \n  \nIcon made by https://www.flaticon.com/authors/freepik Freepik",
    "logo": "https://raw.githubusercontent.com/ElectricBrainUK/UnraidAPI/master/static/icon.png",
    "name": "Unraid-API",
    "image": "electricbrainuk/unraidapi",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "3005:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/app/config",
        "bind": "/mnt/user/appdata/Unraid-API"
      }
    ],
    "env": [
      {
        "name": "MQTTBroker",
        "label": "MQTTBroker",
        "default": "hassio"
      },
      {
        "name": "MQTTPort",
        "label": "MQTTPort",
        "default": "1883"
      },
      {
        "name": "MQTTUser",
        "label": "MQTTUser",
        "default": "mqtt"
      },
      {
        "name": "MQTTPass",
        "label": "MQTTPass",
        "default": "pass"
      },
      {
        "name": "MQTTBaseTopic",
        "label": "MQTTBaseTopic",
        "default": "homeassistant"
      },
      {
        "name": "KeyStorage",
        "label": "KeyStorage",
        "default": "config"
      }
    ]
  },
  {
    "type": 1,
    "title": "autoscan",
    "description": "Autoscan replaces the default Plex and Emby behaviour for picking up file changes on the file system. Autoscan integrates with Sonarr, Radarr and Lidarr to fetch changes in near real-time without relying on the file system.",
    "categories": [
      "Other:"
    ],
    "platform": "linux",
    "note": "Autoscan replaces the default Plex and Emby behaviour for picking up file changes on the file system. Autoscan integrates with Sonarr, Radarr and Lidarr to fetch changes in near real-time without relying on the file system.",
    "name": "autoscan",
    "image": "hotio/autoscan",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "ARGS",
        "label": "ARGS",
        "default": ""
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "no|yes"
      },
      {
        "name": "AUTOSCAN_VERBOSITY",
        "label": "AUTOSCAN_VERBOSITY",
        "default": "0|1|2"
      },
      {
        "name": "PLEX_LOGIN",
        "label": "PLEX_LOGIN",
        "default": ""
      },
      {
        "name": "PLEX_PASSWORD",
        "label": "PLEX_PASSWORD",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "002"
      }
    ]
  },
  {
    "type": 1,
    "title": "bazarr",
    "description": "Bazarr is a companion application to Sonarr and Radarr. It manages and downloads subtitles based on your requirements.",
    "categories": [
      "Downloaders:",
      "MediaApp:Other"
    ],
    "platform": "linux",
    "note": "Bazarr is a companion application to Sonarr and Radarr. It manages and downloads subtitles based on your requirements.",
    "logo": "https://raw.githubusercontent.com/docker-hotio/unraid-templates/master/hotio/img/bazarr.png",
    "name": "bazarr",
    "image": "hotio/bazarr",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "6767": "6767:6767/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "002"
      },
      {
        "name": "ARGS",
        "label": "ARGS",
        "default": ""
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "no|yes"
      }
    ]
  },
  {
    "type": 1,
    "title": "cloudflare-ddns",
    "description": "Cloudflare DDNS updates for both ipv4 and ipv6.",
    "categories": [
      "Network:DNS"
    ],
    "platform": "linux",
    "note": "Cloudflare DDNS updates for both ipv4 and ipv6.",
    "logo": "https://raw.githubusercontent.com/docker-hotio/unraid-templates/master/hotio/img/cloudflare-ddns.png",
    "name": "cloudflare-ddns",
    "image": "hotio/cloudflare-ddns",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "INTERVAL",
        "label": "INTERVAL",
        "default": "300"
      },
      {
        "name": "DETECTION_MODE",
        "label": "DETECTION_MODE",
        "default": "dig-whoami.cloudflare|dig-google.com|dig-opendns.com|curl-icanhazip.com|curl-wtfismyip.com|curl-showmyip.ca|curl-da.gd|curl-seeip.org|curl-ifconfig.co"
      },
      {
        "name": "CF_ZONES",
        "label": "CF_ZONES",
        "default": ""
      },
      {
        "name": "APPRISE",
        "label": "APPRISE",
        "default": ""
      },
      {
        "name": "ARGS",
        "label": "ARGS",
        "default": ""
      },
      {
        "name": "LOG_LEVEL",
        "label": "LOG_LEVEL",
        "default": "3|2|1|0"
      },
      {
        "name": "CF_APITOKEN",
        "label": "CF_APITOKEN",
        "default": ""
      },
      {
        "name": "CF_RECORDTYPES",
        "label": "CF_RECORDTYPES",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "002"
      },
      {
        "name": "CF_USER",
        "label": "CF_USER",
        "default": ""
      },
      {
        "name": "CF_APIKEY",
        "label": "CF_APIKEY",
        "default": ""
      },
      {
        "name": "CF_APITOKEN_ZONE",
        "label": "CF_APITOKEN_ZONE",
        "default": ""
      },
      {
        "name": "CF_HOSTS",
        "label": "CF_HOSTS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "jackett",
    "description": "Jackett works as a proxy server: it translates queries from apps into tracker-site-specific http queries, parses the html response, then sends results back to the requesting software.",
    "categories": [
      "Downloaders:",
      "MediaApp:Other"
    ],
    "platform": "linux",
    "note": "Jackett works as a proxy server: it translates queries from apps into tracker-site-specific http queries, parses the html response, then sends results back to the requesting software.",
    "logo": "https://raw.githubusercontent.com/docker-hotio/unraid-templates/master/hotio/img/jackett.png",
    "name": "jackett",
    "image": "hotio/jackett",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "9117": "9117:9117/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "002"
      },
      {
        "name": "ARGS",
        "label": "ARGS",
        "default": ""
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "no|yes"
      }
    ]
  },
  {
    "type": 1,
    "title": "jellyfin",
    "description": "Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps.",
    "categories": [
      "MediaServer:Video",
      "MediaServer:Music",
      "MediaServer:Photos"
    ],
    "platform": "linux",
    "note": "Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps.",
    "logo": "https://raw.githubusercontent.com/docker-hotio/unraid-templates/master/hotio/img/jellyfin.png",
    "name": "jellyfin",
    "image": "hotio/jellyfin",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8096": "8096:8096/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "002"
      },
      {
        "name": "ARGS",
        "label": "ARGS",
        "default": ""
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "no|yes"
      }
    ]
  },
  {
    "type": 1,
    "title": "lidarr",
    "description": "Lidarr is a music collection manager for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new tracks from your favorite artists and will grab, sort and rename them.",
    "categories": [
      "Downloaders:",
      "MediaApp:Music"
    ],
    "platform": "linux",
    "note": "Lidarr is a music collection manager for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new tracks from your favorite artists and will grab, sort and rename them.",
    "logo": "https://raw.githubusercontent.com/docker-hotio/unraid-templates/master/hotio/img/lidarr.png",
    "name": "lidarr",
    "image": "hotio/lidarr",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8686": "8686:8686/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "002"
      },
      {
        "name": "ARGS",
        "label": "ARGS",
        "default": ""
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "no|yes"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "mylar3",
    "description": "Mylar is an automated Comic Book (cbr/cbz) downloader program for use with NZB and torrents written in python. It supports SABnzbd, NZBGET, and many torrent clients in addition to DDL.",
    "categories": [
      "Downloaders:",
      "MediaApp:Books"
    ],
    "platform": "linux",
    "note": "Mylar is an automated Comic Book (cbr/cbz) downloader program for use with NZB and torrents written in python. It supports SABnzbd, NZBGET, and many torrent clients in addition to DDL.",
    "logo": "https://raw.githubusercontent.com/docker-hotio/unraid-templates/master/hotio/img/mylar3.png",
    "name": "mylar3",
    "image": "hotio/mylar3",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8090": "8090:8090/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "ARGS",
        "label": "ARGS",
        "default": ""
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "no|yes"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "002"
      }
    ]
  },
  {
    "type": 1,
    "title": "nzbget",
    "description": "The most efficient usenet downloader.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "The most efficient usenet downloader.",
    "logo": "https://raw.githubusercontent.com/docker-hotio/unraid-templates/master/hotio/img/nzbget.png",
    "name": "nzbget",
    "image": "hotio/nzbget",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "6789": "6789:6789/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "002"
      },
      {
        "name": "ARGS",
        "label": "ARGS",
        "default": ""
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "no|yes"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "nzbhydra2",
    "description": "NZBHydra 2 is a meta search for newznab indexers and torznab trackers.",
    "categories": [
      "Downloaders:",
      "MediaApp:Other"
    ],
    "platform": "linux",
    "note": "NZBHydra 2 is a meta search for newznab indexers and torznab trackers.",
    "logo": "https://raw.githubusercontent.com/docker-hotio/unraid-templates/master/hotio/img/nzbhydra2.png",
    "name": "nzbhydra2",
    "image": "hotio/nzbhydra2",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "5076": "5076:5076/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "002"
      },
      {
        "name": "ARGS",
        "label": "ARGS",
        "default": ""
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "no|yes"
      }
    ]
  },
  {
    "type": 1,
    "title": "ombi",
    "description": "Ombi is a self-hosted web application that automatically gives your shared Plex or Emby users the ability to request content by themselves.",
    "categories": [
      "Downloaders:",
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "Ombi is a self-hosted web application that automatically gives your shared Plex or Emby users the ability to request content by themselves.",
    "logo": "https://raw.githubusercontent.com/docker-hotio/unraid-templates/master/hotio/img/ombi.png",
    "name": "ombi",
    "image": "hotio/ombi",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "5000": "5000:5000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "002"
      },
      {
        "name": "ARGS",
        "label": "ARGS",
        "default": ""
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "no|yes"
      }
    ]
  },
  {
    "type": 1,
    "title": "plex",
    "description": "Plex Media Server docker image with support for Plex Claim, Plex Pass and fast updates. Plex Autoscan is also included with the \"autoscan\" tag.",
    "categories": [
      "MediaServer:Video",
      "MediaServer:Music",
      "MediaServer:Photos"
    ],
    "platform": "linux",
    "note": "Plex Media Server docker image with support for Plex Claim, Plex Pass and fast updates. Plex Autoscan is also included with the \"autoscan\" tag.",
    "logo": "https://raw.githubusercontent.com/docker-hotio/unraid-templates/master/hotio/img/plex.png",
    "name": "plex",
    "image": "hotio/plex",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "32400": "32400:32400/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/transcode",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "002"
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "no|yes"
      },
      {
        "name": "ALLOWED_NETWORKS",
        "label": "ALLOWED_NETWORKS",
        "default": ""
      },
      {
        "name": "PLEX_PASS",
        "label": "PLEX_PASS",
        "default": "no|yes"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "PLEX_CLAIM",
        "label": "PLEX_CLAIM",
        "default": ""
      },
      {
        "name": "ADVERTISE_IP",
        "label": "ADVERTISE_IP",
        "default": ""
      },
      {
        "name": "ARGS",
        "label": "ARGS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "radarr",
    "description": "Radarr is an independent fork of Sonarr reworked for automatically downloading movies via Usenet and BitTorrent.",
    "categories": [
      "Downloaders:",
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "Radarr is an independent fork of Sonarr reworked for automatically downloading movies via Usenet and BitTorrent.",
    "logo": "https://raw.githubusercontent.com/docker-hotio/unraid-templates/master/hotio/img/radarr.png",
    "name": "radarr",
    "image": "hotio/radarr",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "7878": "7878:7878/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "no|yes"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "002"
      },
      {
        "name": "ARGS",
        "label": "ARGS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "readarr",
    "description": "Book, Magazine, Comics Ebook and Audiobook Manager and Automation (Sonarr for Ebooks). WARNING: Updates require a fresh database until further notice",
    "categories": [
      "Downloaders:",
      "MediaApp:Books"
    ],
    "platform": "linux",
    "note": "Book, Magazine, Comics Ebook and Audiobook Manager and Automation (Sonarr for Ebooks). WARNING: Updates require a fresh database until further notice",
    "logo": "https://raw.githubusercontent.com/docker-hotio/unraid-templates/master/hotio/img/readarr.png",
    "name": "readarr",
    "image": "hotio/readarr",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8787": "8787:8787/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "002"
      },
      {
        "name": "ARGS",
        "label": "ARGS",
        "default": ""
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "no|yes"
      }
    ]
  },
  {
    "type": 1,
    "title": "requestrr",
    "description": "Requestrr is a chatbot used to simplify using services like Sonarr/Radarr/Ombi via the use of chat!",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "Requestrr is a chatbot used to simplify using services like Sonarr/Radarr/Ombi via the use of chat!",
    "logo": "https://raw.githubusercontent.com/docker-hotio/unraid-templates/master/hotio/img/requestrr.png",
    "name": "requestrr",
    "image": "hotio/requestrr",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "4545": "4545:4545/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "002"
      },
      {
        "name": "ARGS",
        "label": "ARGS",
        "default": ""
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "no|yes"
      }
    ]
  },
  {
    "type": 1,
    "title": "sabnzbd",
    "description": "Free and easy binary newsreader.",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "Free and easy binary newsreader.",
    "logo": "https://raw.githubusercontent.com/docker-hotio/unraid-templates/master/hotio/img/sabnzbd.png",
    "name": "sabnzbd",
    "image": "hotio/sabnzbd",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "002"
      },
      {
        "name": "ARGS",
        "label": "ARGS",
        "default": ""
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "no|yes"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "scrutiny",
    "description": "Hard Drive S.M.A.R.T Monitoring, Historical Trends and Real World Failure Thresholds",
    "categories": [
      "Other:"
    ],
    "platform": "linux",
    "note": "Hard Drive S.M.A.R.T Monitoring, Historical Trends and Real World Failure Thresholds",
    "logo": "https://raw.githubusercontent.com/docker-hotio/unraid-templates/master/hotio/img/scrutiny.png",
    "name": "scrutiny",
    "image": "hotio/scrutiny",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "002"
      },
      {
        "name": "ARGS",
        "label": "ARGS",
        "default": ""
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "no|yes"
      },
      {
        "name": "INTERVAL",
        "label": "INTERVAL",
        "default": "86400"
      },
      {
        "name": "API_ENDPOINT",
        "label": "API_ENDPOINT",
        "default": "http://localhost:8080"
      },
      {
        "name": "MODE",
        "label": "MODE",
        "default": "both|web|collector"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "sonarr",
    "description": "Sonarr is a PVR for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them.",
    "categories": [
      "Downloaders:",
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "Sonarr is a PVR for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them.",
    "logo": "https://raw.githubusercontent.com/docker-hotio/unraid-templates/master/hotio/img/sonarr.png",
    "name": "sonarr",
    "image": "hotio/sonarr",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8989": "8989:8989/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "002"
      },
      {
        "name": "ARGS",
        "label": "ARGS",
        "default": ""
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "no|yes"
      }
    ]
  },
  {
    "type": 1,
    "title": "tautulli",
    "description": "A Python based monitoring and tracking tool for Plex Media Server.",
    "categories": [
      "Downloaders:",
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "A Python based monitoring and tracking tool for Plex Media Server.",
    "logo": "https://raw.githubusercontent.com/docker-hotio/unraid-templates/master/hotio/img/tautulli.png",
    "name": "tautulli",
    "image": "hotio/tautulli",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8181": "8181:8181/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "002"
      },
      {
        "name": "ARGS",
        "label": "ARGS",
        "default": ""
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "no|yes"
      }
    ]
  },
  {
    "type": 1,
    "title": "trackarr",
    "description": "Trackarr monitors tracker announce IRC channel, parses the announcements, and forwards those announcements to ARR PVRs (eg Sonarr).",
    "categories": [
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "Trackarr monitors tracker announce IRC channel, parses the announcements, and forwards those announcements to ARR PVRs (eg Sonarr).",
    "logo": "https://raw.githubusercontent.com/docker-hotio/unraid-templates/master/hotio/img/trackarr.png",
    "name": "trackarr",
    "image": "hotio/trackarr",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "7337": "7337:7337/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "002"
      },
      {
        "name": "ARGS",
        "label": "ARGS",
        "default": ""
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "no|yes"
      }
    ]
  },
  {
    "type": 1,
    "title": "unpackerr",
    "description": "Unpackerr extracts your Sonarr/Radarr/Lidarr torrent files.",
    "categories": [
      "Downloaders:",
      "Other:"
    ],
    "platform": "linux",
    "note": "Unpackerr extracts your Sonarr/Radarr/Lidarr torrent files.",
    "logo": "https://raw.githubusercontent.com/docker-hotio/unraid-templates/master/hotio/img/unpackerr.png",
    "name": "unpackerr",
    "image": "hotio/unpackerr",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/downloads",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "UN_SONARR_0_URL",
        "label": "UN_SONARR_0_URL",
        "default": ""
      },
      {
        "name": "UN_SONARR_0_API_KEY",
        "label": "UN_SONARR_0_API_KEY",
        "default": ""
      },
      {
        "name": "UN_RADARR_0_API_KEY",
        "label": "UN_RADARR_0_API_KEY",
        "default": ""
      },
      {
        "name": "UN_LIDARR_0_URL",
        "label": "UN_LIDARR_0_URL",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "002"
      },
      {
        "name": "UN_DEBUG",
        "label": "UN_DEBUG",
        "default": "false|true"
      },
      {
        "name": "UN_RADARR_0_URL",
        "label": "UN_RADARR_0_URL",
        "default": ""
      },
      {
        "name": "UN_LIDARR_0_API_KEY",
        "label": "UN_LIDARR_0_API_KEY",
        "default": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "ARGS",
        "label": "ARGS",
        "default": ""
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "no|yes"
      }
    ]
  },
  {
    "type": 1,
    "title": "plex_discord_role_management",
    "description": "A discord bot that synchronizes with Tautulli and Sonarr to deliver tailored notifications.\r\n\r\nVisit https://discordapp.com/developers/applications/me for Bot Token.",
    "categories": [
      "Tools:Utilities",
      "Other:",
      "MediaApp:Other",
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "A discord bot that synchronizes with Tautulli and Sonarr to deliver tailored notifications.\r\n\r\nVisit https://discordapp.com/developers/applications/me for Bot Token.",
    "logo": "https://user-images.githubusercontent.com/22354631/72322110-80e74300-3673-11ea-8c38-32b85c1c36b4.png",
    "name": "plex_discord_role_management",
    "image": "cyaondanet/plex_discord_role_management:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3000": "3000:3000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/app/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "node_hook_ip",
        "label": "node_hook_ip",
        "default": ""
      },
      {
        "name": "sonarr_port",
        "label": "sonarr_port",
        "default": ""
      },
      {
        "name": "sonarr_api_key_2",
        "label": "sonarr_api_key_2",
        "default": ""
      },
      {
        "name": "sonarr_api_key",
        "label": "sonarr_api_key",
        "default": ""
      },
      {
        "name": "sonarr_ip_2",
        "label": "sonarr_ip_2",
        "default": ""
      },
      {
        "name": "sonarr_api_key_3",
        "label": "sonarr_api_key_3",
        "default": ""
      },
      {
        "name": "node_hook_port",
        "label": "node_hook_port",
        "default": ""
      },
      {
        "name": "tautulli_ip",
        "label": "tautulli_ip",
        "default": ""
      },
      {
        "name": "sonarr_port_2",
        "label": "sonarr_port_2",
        "default": ""
      },
      {
        "name": "sonarr_ip_3",
        "label": "sonarr_ip_3",
        "default": ""
      },
      {
        "name": "sonarr_ip",
        "label": "sonarr_ip",
        "default": ""
      },
      {
        "name": "sonarr_port_3",
        "label": "sonarr_port_3",
        "default": ""
      },
      {
        "name": "DEBUG_MODE",
        "label": "DEBUG_MODE",
        "default": ""
      },
      {
        "name": "botToken",
        "label": "botToken",
        "default": ""
      },
      {
        "name": "defaultPrefix",
        "label": "defaultPrefix",
        "default": ""
      },
      {
        "name": "tautulli_port",
        "label": "tautulli_port",
        "default": ""
      },
      {
        "name": "tautulli_api_key",
        "label": "tautulli_api_key",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "airsonic-advanced",
    "description": "Airsonic-Advanced is a more modern implementation of the Airsonic fork with several key performance and feature enhancements. It adds and supersedes several features in Airsonic.",
    "categories": [
      "MediaApp:Music",
      "MediaServer:Music"
    ],
    "platform": "linux",
    "note": "Airsonic-Advanced is a more modern implementation of the Airsonic fork with several key performance and feature enhancements. It adds and supersedes several features in Airsonic.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/airsonic-advanced.png",
    "name": "airsonic-advanced",
    "image": "airsonicadvanced/airsonic-advanced:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "1900": "1900:1900/udp",
        "4040": "4040:4040/tcp",
        "4041": "4041:4041/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/music",
        "bind": ""
      },
      {
        "container": "/var/podcast",
        "bind": ""
      },
      {
        "container": "/var/playlists",
        "bind": ""
      },
      {
        "container": "/var/airsonic",
        "bind": "/mnt/user/appdata/airsonic-advanced/"
      }
    ],
    "env": [
      {
        "name": "CONTEXT_PATH",
        "label": "CONTEXT_PATH",
        "default": "/"
      },
      {
        "name": "JAVA_OPTS",
        "label": "JAVA_OPTS",
        "default": "-Xms256m -Xmx512m"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "apprise",
    "description": "Apprise API - Push Notifications that work with just about every platform!",
    "categories": [
      "HomeAutomation:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Apprise API - Push Notifications that work with just about every platform!",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/apprise.png",
    "name": "apprise",
    "image": "caronc/apprise:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8000": "8000:8000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/apprise/"
      }
    ]
  },
  {
    "type": 1,
    "title": "archivebox",
    "description": "The self-hosted internet archiver. \r\nGuide - https://github.com/A75G/docker-templates/blob/master/README.md#first-installation (Important)",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "The self-hosted internet archiver. \r\nGuide - https://github.com/A75G/docker-templates/blob/master/README.md#first-installation (Important)",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/archivebox.png",
    "name": "archivebox",
    "image": "nikisweeting/archivebox:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8000": "8000:8000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/archivebox/"
      }
    ]
  },
  {
    "type": 1,
    "title": "backuppc",
    "description": "BackupPC is a high-performance, enterprise-grade system for backing up Linux, Windows and macOS PCs and laptops to a server's disk.",
    "categories": [
      "Backup:",
      "Network:Web"
    ],
    "platform": "linux",
    "note": "BackupPC is a high-performance, enterprise-grade system for backing up Linux, Windows and macOS PCs and laptops to a server's disk.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/backuppc.png",
    "name": "backuppc",
    "image": "tiredofit/backuppc:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "8000:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/lib/backuppc",
        "bind": "/mnt/user/backuppc/"
      },
      {
        "container": "/etc/backuppc",
        "bind": "/mnt/user/appdata/backuppc/config/"
      },
      {
        "container": "/home/backuppc",
        "bind": "/mnt/user/appdata/backuppc/ssh/"
      },
      {
        "container": "/www/logs",
        "bind": "/mnt/user/appdata/backuppc/logs/"
      }
    ]
  },
  {
    "type": 1,
    "title": "cloudbeaver",
    "description": "CloudBeaver is a free and open source web-based database management tool.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "CloudBeaver is a free and open source web-based database management tool.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/cloudbeaver.png",
    "name": "cloudbeaver",
    "image": "dalongrong/cloudbeaver:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8978": "8978:8978/tcp"
      }
    ]
  },
  {
    "type": 1,
    "title": "commento",
    "description": "An open source, privacy focused discussion platform.",
    "categories": [
      "Productivity:",
      "Network:Web",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "An open source, privacy focused discussion platform.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/commento.png",
    "name": "commento",
    "image": "registry.gitlab.com/commento/commento",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "env": [
      {
        "name": "COMMENTO_POSTGRES",
        "label": "COMMENTO_POSTGRES",
        "default": "postgres://postgres:mysupersecurepassword@dbhostnameorip:5432/commento?sslmode=disable"
      },
      {
        "name": "COMMENTO_SMTP_HOST",
        "label": "COMMENTO_SMTP_HOST",
        "default": "example.com"
      },
      {
        "name": "COMMENTO_SMTP_PORT",
        "label": "COMMENTO_SMTP_PORT",
        "default": "587"
      },
      {
        "name": "COMMENTO_SMTP_USERNAME",
        "label": "COMMENTO_SMTP_USERNAME",
        "default": "user@example.com"
      },
      {
        "name": "COMMENTO_SMTP_PASSWORD",
        "label": "COMMENTO_SMTP_PASSWORD",
        "default": "smtppassword"
      },
      {
        "name": "COMMENTO_SMTP_FROM_ADDRESS",
        "label": "COMMENTO_SMTP_FROM_ADDRESS",
        "default": "fromaddress@example.com"
      },
      {
        "name": "COMMENTO_PORT",
        "label": "COMMENTO_PORT",
        "default": "8080"
      },
      {
        "name": "COMMENTO_ORIGIN",
        "label": "COMMENTO_ORIGIN",
        "default": "https://commento.example.com"
      }
    ]
  },
  {
    "type": 1,
    "title": "cryptpad",
    "description": "CryptPad is the Zero Knowledge realtime collaborative editor.mkdir -p /mnt/user/appdata/cryptpad/config wget -O /mnt/user/appdata/cryptpad/config/config.js https://raw.githubusercontent.com/xwiki-labs/cryptpad/main/config/config.example.js",
    "categories": [
      "Productivity:",
      "Security:"
    ],
    "platform": "linux",
    "note": "CryptPad is the Zero Knowledge realtime collaborative editor.mkdir -p /mnt/user/appdata/cryptpad/config wget -O /mnt/user/appdata/cryptpad/config/config.js https://raw.githubusercontent.com/xwiki-labs/cryptpad/main/config/config.example.js",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/cryptpad.png",
    "name": "cryptpad",
    "image": "promasu/cryptpad:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "3000": "3000:3000/tcp",
        "3001": "3001:3001/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/cryptpad/blob",
        "bind": "/mnt/user/appdata/cryptpad/blob"
      },
      {
        "container": "/cryptpad/block",
        "bind": "/mnt/user/appdata/cryptpad/block"
      },
      {
        "container": "/cryptpad/customize",
        "bind": "/mnt/user/appdata/cryptpad/customize"
      },
      {
        "container": "/cryptpad/data",
        "bind": "/mnt/user/appdata/cryptpad/data"
      },
      {
        "container": "/cryptpad/datastore",
        "bind": "/mnt/user/appdata/cryptpad/datastore"
      },
      {
        "container": "/cryptpad/config/config.js",
        "bind": "/mnt/user/appdata/cryptpad/config/config.js"
      }
    ]
  },
  {
    "type": 1,
    "title": "cyberchef",
    "description": "The Cyber Swiss Army Knife - a web app for encryption, encoding, compression and data analysis.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "The Cyber Swiss Army Knife - a web app for encryption, encoding, compression and data analysis.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/cyberchef.png",
    "name": "cyberchef",
    "image": "aude/cyberchef:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "8000:80/tcp"
      }
    ]
  },
  {
    "type": 1,
    "title": "dashmachine",
    "description": "Another web application bookmark dashboard, with fun features.",
    "categories": [
      "Productivity:",
      "Network:Web"
    ],
    "platform": "linux",
    "note": "Another web application bookmark dashboard, with fun features.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/dashmachine.png",
    "name": "dashmachine",
    "image": "rmountjoy/dashmachine:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "5000": "5000:5000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/dashmachine/dashmachine/user_data",
        "bind": "/mnt/user/appdata/dashmachine/"
      }
    ]
  },
  {
    "type": 1,
    "title": "db-backup",
    "description": "Backup Multiple DB Servers (Influx, Maria/Mysql/Mongo/Postgres/Redis/Rethink) based on Alpine.Manual Backups can be performed by entering the container and typing backup-now",
    "categories": [
      "Backup:"
    ],
    "platform": "linux",
    "note": "Backup Multiple DB Servers (Influx, Maria/Mysql/Mongo/Postgres/Redis/Rethink) based on Alpine.Manual Backups can be performed by entering the container and typing backup-now",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/db-backup.png",
    "name": "db-backup",
    "image": "tiredofit/db-backup:latest",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/backup",
        "bind": "/mnt/user/backups/db/"
      }
    ],
    "env": [
      {
        "name": "DB_PORT",
        "label": "DB_PORT",
        "default": "3306"
      },
      {
        "name": "DB_DUMP_FREQ",
        "label": "DB_DUMP_FREQ",
        "default": "1440"
      },
      {
        "name": "DB_DUMP_BEGIN",
        "label": "DB_DUMP_BEGIN",
        "default": "0300"
      },
      {
        "name": "MD5",
        "label": "MD5",
        "default": "TRUE"
      },
      {
        "name": "SPLIT_DB",
        "label": "SPLIT_DB",
        "default": "FALSE"
      },
      {
        "name": "COMPRESSION",
        "label": "COMPRESSION",
        "default": "GZ"
      },
      {
        "name": "DB_HOST",
        "label": "DB_HOST",
        "default": "\u003cDATABASE_IP\u003e"
      },
      {
        "name": "DB_PASS",
        "label": "DB_PASS",
        "default": "\u003cDATABASE_PASSWORD\u003e"
      },
      {
        "name": "DEBUG_MODE",
        "label": "DEBUG_MODE",
        "default": "false"
      },
      {
        "name": "PARALLEL_COMPRESSION",
        "label": "PARALLEL_COMPRESSION",
        "default": "TRUE"
      },
      {
        "name": "DB_TYPE",
        "label": "DB_TYPE",
        "default": "\u003cDatabase_Type\u003e"
      },
      {
        "name": "DB_USER",
        "label": "DB_USER",
        "default": "root"
      },
      {
        "name": "DB_CLEANUP_TIME",
        "label": "DB_CLEANUP_TIME",
        "default": "10080"
      }
    ]
  },
  {
    "type": 1,
    "title": "ddns-route53",
    "description": "Dynamic DNS for Amazon Route 53‎ on a time-based schedule  Create ddns-route53.yml file in /mnt/user/appdata/ddns-route53/ before hand https://github.com/crazy-max/ddns-route53/blob/master/doc/configuration.md",
    "categories": [
      "Network:DNS"
    ],
    "platform": "linux",
    "note": "Dynamic DNS for Amazon Route 53‎ on a time-based schedule  Create ddns-route53.yml file in /mnt/user/appdata/ddns-route53/ before hand https://github.com/crazy-max/ddns-route53/blob/master/doc/configuration.md",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/ddns-route53.png",
    "name": "ddns-route53",
    "image": "crazymax/ddns-route53:latest",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/ddns-route53.yml",
        "bind": "/mnt/user/appdata/ddns-route53/ddns-route53.yml"
      }
    ],
    "env": [
      {
        "name": "SCHEDULE",
        "label": "SCHEDULE",
        "default": "*/30 * * * *"
      },
      {
        "name": "MAX_RETRIES",
        "label": "MAX_RETRIES",
        "default": "3"
      },
      {
        "name": "LOG_LEVEL",
        "label": "LOG_LEVEL",
        "default": "info"
      },
      {
        "name": "LOG_JSON",
        "label": "LOG_JSON",
        "default": "false"
      }
    ]
  },
  {
    "type": 1,
    "title": "dispatch",
    "description": "Web-based IRC client in Go.",
    "categories": [
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "Web-based IRC client in Go.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/dispatch.png",
    "name": "dispatch",
    "image": "khlieng/dispatch",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "443": "4596:443/tcp",
        "80": "8000:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/dispatch/"
      }
    ]
  },
  {
    "type": 1,
    "title": "docpht",
    "description": "DocPHT you can take notes and quickly document anything and without the use of any database.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "DocPHT you can take notes and quickly document anything and without the use of any database.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/docpht.png",
    "name": "docpht",
    "image": "docpht/docpht:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "8000:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/www/app/src/config",
        "bind": "/mnt/user/appdata/docpht/config/"
      },
      {
        "container": "/var/www/app/data",
        "bind": "/mnt/user/appdata/docpht/data/"
      },
      {
        "container": "/var/www/app/pages",
        "bind": "/mnt/user/appdata/docpht/pages/"
      },
      {
        "container": "/etc/nginx/ssl",
        "bind": "/mnt/user/appdata/docpht/ssl/"
      }
    ],
    "env": [
      {
        "name": "443",
        "label": "443",
        "default": "8443"
      }
    ]
  },
  {
    "type": 1,
    "title": "droppy",
    "description": "Self-hosted file storage server with a web interface and capabilities to edit files and view media directly in the browser.",
    "categories": [
      "Cloud:"
    ],
    "platform": "linux",
    "note": "Self-hosted file storage server with a web interface and capabilities to edit files and view media directly in the browser.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/droppy.png",
    "name": "droppy",
    "image": "silverwind/droppy:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8989": "8686:8989/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/doppy/"
      },
      {
        "container": "/files",
        "bind": "/mnt/user/droppy/"
      }
    ],
    "env": [
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "ecoDMS",
    "description": "ecoDMS 18.09 (apu) Full Installation - Document Management System (DMS) - Audit-compliant archive for scanning, archiving, managing and retrieving all data and documents.\r\n\r\nTo use ecoDMS you need to do the following steps after installing the container:  \r\n- Download and install the ecoDMS client for your platform (https://www.ecodms.de/index.php/en/download/ecodms-archive/ecodms-version-18-09-apu)\r\n- Add a new profile to the client with your UnRaid IP, 17001 as port and login with ecodms as user and password. !Change the password later!\r\n- If the profile is created successfully connect to the new ecoDMS connection\r\n- If you want to use the web interface of ecoDMS navigate to Settings -\u003e Web/Mobile/API, enable remote access and start the service. Once the service started you should be able to access the web interface via your UnRaid-IP on Port 17004 (or whatever port you chose during setup of the Docker Container\r\n\r\nReference:\r\nhttps://forums.unraid.net/topic/77838-anyone-ecodms-got-running/?tab=comments#comment-842793\u0026amp;searchlight=1\r\n@laest - Thank you",
    "categories": [
      "Cloud:",
      "Productivity:"
    ],
    "platform": "linux",
    "note": "ecoDMS 18.09 (apu) Full Installation - Document Management System (DMS) - Audit-compliant archive for scanning, archiving, managing and retrieving all data and documents.\r\n\r\nTo use ecoDMS you need to do the following steps after installing the container:  \r\n- Download and install the ecoDMS client for your platform (https://www.ecodms.de/index.php/en/download/ecodms-archive/ecodms-version-18-09-apu)\r\n- Add a new profile to the client with your UnRaid IP, 17001 as port and login with ecodms as user and password. !Change the password later!\r\n- If the profile is created successfully connect to the new ecoDMS connection\r\n- If you want to use the web interface of ecoDMS navigate to Settings -\u003e Web/Mobile/API, enable remote access and start the service. Once the service started you should be able to access the web interface via your UnRaid-IP on Port 17004 (or whatever port you chose during setup of the Docker Container\r\n\r\nReference:\r\nhttps://forums.unraid.net/topic/77838-anyone-ecodms-got-running/?tab=comments#comment-842793\u0026amp;searchlight=1\r\n@laest - Thank you",
    "logo": "https://secure.gravatar.com/avatar/b52fd0ed66fae9aa9a4d71a1f5dae83c.jpg",
    "name": "ecoDMS",
    "image": "ecodms/allinone-18.09",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "17001": "0:17001/tcp",
        "17002": "0:17002/tcp",
        "8080": "0:8080/tcp",
        "8180": "0:8180/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/srv/scaninput",
        "bind": ""
      },
      {
        "container": "/srv/restore",
        "bind": ""
      },
      {
        "container": "/srv/backup",
        "bind": ""
      },
      {
        "container": "/srv/data",
        "bind": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "element-web",
    "description": "Open, secure and interoperable communication for work and home. Used to call Riot-web. before the running the docker run mkdir -p /mnt/user/appdata/element-web/config wget -O /mnt/user/appdata/element-web/config/config.json https://raw.githubusercontent.com/vector-im/element-web/develop/element.io/app/config.json",
    "categories": [
      "Cloud:",
      "Productivity:",
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "Open, secure and interoperable communication for work and home. Used to call Riot-web. before the running the docker run mkdir -p /mnt/user/appdata/element-web/config wget -O /mnt/user/appdata/element-web/config/config.json https://raw.githubusercontent.com/vector-im/element-web/develop/element.io/app/config.json",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/element-web.png",
    "name": "element-web",
    "image": "vectorim/element-web:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "8075:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/app/config.json",
        "bind": "/mnt/user/appdata/element-web/config/config.json"
      }
    ]
  },
  {
    "type": 1,
    "title": "filestash",
    "description": "A modern web client for SFTP, S3, FTP, WebDAV, Git, Minio, LDAP, CalDAV, CardDAV, Mysql, Backblaze, ...",
    "categories": [
      "Cloud:",
      "Productivity:",
      "Network:Web"
    ],
    "platform": "linux",
    "note": "A modern web client for SFTP, S3, FTP, WebDAV, Git, Minio, LDAP, CalDAV, CardDAV, Mysql, Backblaze, ...",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/filestash.png",
    "name": "filestash",
    "image": "machines/filestash:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8334": "8334:8334/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/app/data/state/",
        "bind": "/mnt/user/appdata/filestash/"
      }
    ]
  },
  {
    "type": 1,
    "title": "firefox-syncserver",
    "description": "Firefox Sync Server image based on Python Slim",
    "categories": [
      "Productivity:",
      "Other:"
    ],
    "platform": "linux",
    "note": "Firefox Sync Server image based on Python Slim",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/firefox-syncserver.png",
    "name": "firefox-syncserver",
    "image": "crazymax/firefox-syncserver:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "5000": "5000:5000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/firefox-syncserver/"
      }
    ],
    "env": [
      {
        "name": "FF_SYNCSERVER_PUBLIC_URL",
        "label": "FF_SYNCSERVER_PUBLIC_URL",
        "default": "http://[IP]:5000"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "FF_SYNCSERVER_SQLURI",
        "label": "FF_SYNCSERVER_SQLURI",
        "default": "sqlite:///data/syncserver.db"
      },
      {
        "name": "FF_SYNCSERVER_FORWARDED_ALLOW_IPS",
        "label": "FF_SYNCSERVER_FORWARDED_ALLOW_IPS",
        "default": "*"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "FF_SYNCSERVER_ACCESSLOG",
        "label": "FF_SYNCSERVER_ACCESSLOG",
        "default": "false"
      },
      {
        "name": "FF_SYNCSERVER_LOGLEVEL",
        "label": "FF_SYNCSERVER_LOGLEVEL",
        "default": "info"
      },
      {
        "name": "FF_SYNCSERVER_SECRET",
        "label": "FF_SYNCSERVER_SECRET",
        "default": "longgeneratedsecret"
      },
      {
        "name": "FF_SYNCSERVER_ALLOW_NEW_USERS",
        "label": "FF_SYNCSERVER_ALLOW_NEW_USERS",
        "default": "true"
      },
      {
        "name": "FF_SYNCSERVER_FORCE_WSGI_ENVIRON",
        "label": "FF_SYNCSERVER_FORCE_WSGI_ENVIRON",
        "default": "false"
      }
    ]
  },
  {
    "type": 1,
    "title": "flarum",
    "description": "Flarum is the next-generation forum software that makes online discussion fun. It's simple, fast, and free.",
    "categories": [
      "Network:Web"
    ],
    "platform": "linux",
    "note": "Flarum is the next-generation forum software that makes online discussion fun. It's simple, fast, and free.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/flarum.png",
    "name": "flarum",
    "image": "crazymax/flarum:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8000": "8000:8000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/flarum/"
      }
    ],
    "env": [
      {
        "name": "DB_PASSWORD",
        "label": "DB_PASSWORD",
        "default": "password"
      },
      {
        "name": "MEMORY_LIMIT",
        "label": "MEMORY_LIMIT",
        "default": "256M"
      },
      {
        "name": "DB_HOST",
        "label": "DB_HOST",
        "default": ""
      },
      {
        "name": "DB_PORT",
        "label": "DB_PORT",
        "default": "3306"
      },
      {
        "name": "DB_USER",
        "label": "DB_USER",
        "default": "flarum"
      },
      {
        "name": "UPLOAD_MAX_SIZE",
        "label": "UPLOAD_MAX_SIZE",
        "default": "16M"
      },
      {
        "name": "OPCACHE_MEM_SIZE",
        "label": "OPCACHE_MEM_SIZE",
        "default": "128"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "FLARUM_BASE_URL",
        "label": "FLARUM_BASE_URL",
        "default": "http://\u003cIP\u003e:8000"
      },
      {
        "name": "FLARUM_FORUM_TITLE",
        "label": "FLARUM_FORUM_TITLE",
        "default": "Flarum Dockerized"
      },
      {
        "name": "DB_NAME",
        "label": "DB_NAME",
        "default": "flarum"
      }
    ]
  },
  {
    "type": 1,
    "title": "freepbx",
    "description": "FreePBX is a web-based open-source graphical user interface that manages Asterisk, a voice over IP and telephony server.",
    "categories": [
      "Productivity:",
      "Network:Voip",
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "FreePBX is a web-based open-source graphical user interface that manages Asterisk, a voice over IP and telephony server.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/freepbx.png",
    "name": "freepbx",
    "image": "tiredofit/freepbx:15-latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "0": "0:0/udp",
        "443": "4150:443/tcp",
        "4445": "4445:4445/tcp",
        "5060": "5060:5060/udp",
        "5160": "5160:5160/udp",
        "5161": "5161:5161/tcp",
        "80": "8150:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/lib/mysql",
        "bind": "/mnt/user/appdata/freepbx/db/"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/freepbx/data/"
      },
      {
        "container": "/var/log",
        "bind": "/mnt/user/appdata/freepbx/logs/"
      },
      {
        "container": "/var/www/html",
        "bind": "/mnt/user/appdata/freepbx/www/"
      },
      {
        "container": "/certs",
        "bind": "/mnt/user/appdata/freepbx/certs/"
      }
    ],
    "env": [
      {
        "name": "ENABLE_SSL",
        "label": "ENABLE_SSL",
        "default": "FALSE"
      },
      {
        "name": "RTP_FINISH",
        "label": "RTP_FINISH",
        "default": "20000"
      },
      {
        "name": "DB_EMBEDDED",
        "label": "DB_EMBEDDED",
        "default": "TRUE"
      },
      {
        "name": "ENABLE_FAIL2BAN",
        "label": "ENABLE_FAIL2BAN",
        "default": "FALSE"
      },
      {
        "name": "INSTALL_ADDITIONAL_MODULES",
        "label": "INSTALL_ADDITIONAL_MODULES",
        "default": ""
      },
      {
        "name": "RTP_START",
        "label": "RTP_START",
        "default": "18000"
      },
      {
        "name": "TLS_CERT",
        "label": "TLS_CERT",
        "default": "cert.pem"
      },
      {
        "name": "TLS_KEY",
        "label": "TLS_KEY",
        "default": "key.pem"
      },
      {
        "name": "ENABLE_FOP",
        "label": "ENABLE_FOP",
        "default": "TRUE"
      },
      {
        "name": "ENABLE_XMPP",
        "label": "ENABLE_XMPP",
        "default": "FALSE"
      }
    ]
  },
  {
    "type": 1,
    "title": "freescout",
    "description": "Open Source Helpscout/Zendesk Alternative based on Alpine linux.Creating account CLI \"cd /www/html\" then \"php artisan freescout:create-user\"",
    "categories": [
      "Productivity:",
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "Open Source Helpscout/Zendesk Alternative based on Alpine linux.Creating account CLI \"cd /www/html\" then \"php artisan freescout:create-user\"",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/freescout.png",
    "name": "freescout",
    "image": "tiredofit/freescout:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "8000:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/freescout/"
      }
    ],
    "env": [
      {
        "name": "APPLICATION_NAME",
        "label": "APPLICATION_NAME",
        "default": "Freescout"
      },
      {
        "name": "DB_PORT",
        "label": "DB_PORT",
        "default": "3306"
      },
      {
        "name": "SITE_URL",
        "label": "SITE_URL",
        "default": "http://\u003cIP\u003e:8000"
      },
      {
        "name": "DISPLAY_ERRORS",
        "label": "DISPLAY_ERRORS",
        "default": "FALSE"
      },
      {
        "name": "ADMIN_FIRST_NAME",
        "label": "ADMIN_FIRST_NAME",
        "default": "Admin"
      },
      {
        "name": "ADMIN_PASS",
        "label": "ADMIN_PASS",
        "default": "Passw0rd"
      },
      {
        "name": "DB_HOST",
        "label": "DB_HOST",
        "default": "DB HOST"
      },
      {
        "name": "DB_NAME",
        "label": "DB_NAME",
        "default": "freescout"
      },
      {
        "name": "DB_USER",
        "label": "DB_USER",
        "default": "root"
      },
      {
        "name": "DB_PASS",
        "label": "DB_PASS",
        "default": "password"
      },
      {
        "name": "ADMIN_EMAIL",
        "label": "ADMIN_EMAIL",
        "default": "admin@admin.com"
      },
      {
        "name": "ADMIN_LAST_NAME",
        "label": "ADMIN_LAST_NAME",
        "default": "User"
      }
    ]
  },
  {
    "type": 1,
    "title": "golinks",
    "description": "Self-hosted smart bookmark search engine.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Self-hosted smart bookmark search engine.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/golinks.png",
    "name": "golinks",
    "image": "prologic/golinks:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8000": "8000:8000/tcp"
      }
    ]
  },
  {
    "type": 1,
    "title": "gossa",
    "description": "🎶 a fast and simple multimedia fileserver",
    "categories": [
      "Cloud:"
    ],
    "platform": "linux",
    "note": "🎶 a fast and simple multimedia fileserver",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/gossa.png",
    "name": "gossa",
    "image": "pldubouilh/gossa:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8001": "8001:8001/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/shared",
        "bind": "/mnt/user/appdata/gossa/"
      }
    ],
    "env": [
      {
        "name": "FOLLOW_SYMLINKS",
        "label": "FOLLOW_SYMLINKS",
        "default": "false"
      },
      {
        "name": "PREFIX",
        "label": "PREFIX",
        "default": "/"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "READONLY",
        "label": "READONLY",
        "default": "false"
      }
    ]
  },
  {
    "type": 1,
    "title": "gotify",
    "description": "A simple server for sending and receiving messages.",
    "categories": [
      "Productivity:",
      "Tools:Utilities",
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "A simple server for sending and receiving messages.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/gotify.png",
    "name": "gotify",
    "image": "gotify/server:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "8070:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/gotify",
        "bind": "/mnt/user/appdata/gotify/config/"
      },
      {
        "container": "/app/data",
        "bind": "/mnt/user/appdata/gotify/"
      }
    ],
    "env": [
      {
        "name": "GOTIFY_DEFAULTUSER_PASS",
        "label": "GOTIFY_DEFAULTUSER_PASS",
        "default": "admin"
      }
    ]
  },
  {
    "type": 1,
    "title": "healthchecks",
    "description": "Simple and Effective Cron Job Monitoring",
    "categories": [
      "Tools:Utilities",
      "Network:Web",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "Simple and Effective Cron Job Monitoring",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/healthchecks.png",
    "name": "healthchecks",
    "image": "galexrt/healthchecks:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8000": "8000:8000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/healthchecks/"
      }
    ],
    "env": [
      {
        "name": "EMAIL_HOST_USER",
        "label": "EMAIL_HOST_USER",
        "default": "user@example.com"
      },
      {
        "name": "ALLOWED_HOSTS",
        "label": "ALLOWED_HOSTS",
        "default": "*"
      },
      {
        "name": "DB_NAME",
        "label": "DB_NAME",
        "default": "/data/hc.sqlite"
      },
      {
        "name": "SITE_ROOT",
        "label": "SITE_ROOT",
        "default": "http://example.com"
      },
      {
        "name": "EMAIL_HOST",
        "label": "EMAIL_HOST",
        "default": "smtp.example.com"
      },
      {
        "name": "EMAIL_PORT",
        "label": "EMAIL_PORT",
        "default": "25"
      },
      {
        "name": "EMAIL_USE_TLS",
        "label": "EMAIL_USE_TLS",
        "default": "True"
      },
      {
        "name": "EMAIL_HOST_PASSWORD",
        "label": "EMAIL_HOST_PASSWORD",
        "default": "YOUR_PASSWORD"
      },
      {
        "name": "SECRET_KEY",
        "label": "SECRET_KEY",
        "default": "ChangeMe"
      },
      {
        "name": "PING_EMAIL_DOMAIN",
        "label": "PING_EMAIL_DOMAIN",
        "default": "example.com"
      }
    ]
  },
  {
    "type": 1,
    "title": "homer",
    "description": "A dead simple static HOMe for your servER to keep your services on hand from a simple yaml config.Download config.ymlwget -O /mnt/user/appdata/homer/assets/config.yml https://raw.githubusercontent.com/bastienwirtz/homer/master/config.yml",
    "categories": [
      "Network:Web"
    ],
    "platform": "linux",
    "note": "A dead simple static HOMe for your servER to keep your services on hand from a simple yaml config.Download config.ymlwget -O /mnt/user/appdata/homer/assets/config.yml https://raw.githubusercontent.com/bastienwirtz/homer/master/config.yml",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/homer.png",
    "name": "homer",
    "image": "b4bz/homer:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/www/assets",
        "bind": "/mnt/user/appdata/homer/assets/"
      }
    ]
  },
  {
    "type": 1,
    "title": "jitsi-jicofo",
    "description": "Jicofo image for Jitsi Meet",
    "categories": [
      "Productivity:",
      "Network:Voip",
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "Jicofo image for Jitsi Meet",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/jitsi.png",
    "name": "jitsi-jicofo",
    "image": "jitsi/jicofo:latest",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/jitsi/jicofo/"
      }
    ],
    "env": [
      {
        "name": "JIGASI_BREWERY_MUC",
        "label": "JIGASI_BREWERY_MUC",
        "default": "jigasibrewery"
      },
      {
        "name": "JIGASI_SIP_URI",
        "label": "JIGASI_SIP_URI",
        "default": "test@sip2sip.info"
      },
      {
        "name": "ENABLE_AUTH",
        "label": "ENABLE_AUTH",
        "default": "1"
      },
      {
        "name": "XMPP_DOMAIN",
        "label": "XMPP_DOMAIN",
        "default": "meet.jitsi"
      },
      {
        "name": "XMPP_INTERNAL_MUC_DOMAIN",
        "label": "XMPP_INTERNAL_MUC_DOMAIN",
        "default": "internal-muc.meet.jitsi"
      },
      {
        "name": "XMPP_SERVER",
        "label": "XMPP_SERVER",
        "default": "xmpp.meet.jitsi"
      },
      {
        "name": "JICOFO_COMPONENT_SECRET",
        "label": "JICOFO_COMPONENT_SECRET",
        "default": "s3cr37"
      },
      {
        "name": "JICOFO_RESERVATION_REST_BASE_URL",
        "label": "JICOFO_RESERVATION_REST_BASE_URL",
        "default": "http://reservation.example.com"
      },
      {
        "name": "JICOFO_AUTH_USER",
        "label": "JICOFO_AUTH_USER",
        "default": "focus"
      },
      {
        "name": "JVB_BREWERY_MUC",
        "label": "JVB_BREWERY_MUC",
        "default": "jvbbrewery"
      },
      {
        "name": "JIBRI_PENDING_TIMEOUT",
        "label": "JIBRI_PENDING_TIMEOUT",
        "default": "90"
      },
      {
        "name": "XMPP_AUTH_DOMAIN",
        "label": "XMPP_AUTH_DOMAIN",
        "default": "auth.meet.jitsi"
      },
      {
        "name": "JICOFO_AUTH_PASSWORD",
        "label": "JICOFO_AUTH_PASSWORD",
        "default": "passw0rd"
      },
      {
        "name": "JIBRI_BREWERY_MUC",
        "label": "JIBRI_BREWERY_MUC",
        "default": "jibribrewery"
      }
    ]
  },
  {
    "type": 1,
    "title": "jitsi-jvb",
    "description": "Jitsi Videobridge image for Jitsi Meet",
    "categories": [
      "Productivity:",
      "Network:Voip",
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "Jitsi Videobridge image for Jitsi Meet",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/jitsi.png",
    "name": "jitsi-jvb",
    "image": "jitsi/jvb:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "10000": "10000:10000/udp",
        "4443": "4443:4443/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/jitsi/jvb/"
      }
    ],
    "env": [
      {
        "name": "DOCKER_HOST_ADDRESS",
        "label": "DOCKER_HOST_ADDRESS",
        "default": "192.168.1.1"
      },
      {
        "name": "XMPP_INTERNAL_MUC_DOMAIN",
        "label": "XMPP_INTERNAL_MUC_DOMAIN",
        "default": "internal-muc.meet.jitsi"
      },
      {
        "name": "XMPP_SERVER",
        "label": "XMPP_SERVER",
        "default": "xmpp.meet.jitsi"
      },
      {
        "name": "JVB_AUTH_USER",
        "label": "JVB_AUTH_USER",
        "default": "jvb"
      },
      {
        "name": "JVB_TCP_HARVESTER_DISABLED",
        "label": "JVB_TCP_HARVESTER_DISABLED",
        "default": "true"
      },
      {
        "name": "JVB_ENABLE_APIS",
        "label": "JVB_ENABLE_APIS",
        "default": "none"
      },
      {
        "name": "XMPP_AUTH_DOMAIN",
        "label": "XMPP_AUTH_DOMAIN",
        "default": "auth.meet.jitsi"
      },
      {
        "name": "JVB_AUTH_PASSWORD",
        "label": "JVB_AUTH_PASSWORD",
        "default": "passw0rd"
      },
      {
        "name": "JVB_BREWERY_MUC",
        "label": "JVB_BREWERY_MUC",
        "default": "jvbbrewery"
      },
      {
        "name": "JVB_STUN_SERVERS",
        "label": "JVB_STUN_SERVERS",
        "default": "stun.l.google.com:19302, stun1.l.google.com:19302, stun2.l.google.com:19302"
      }
    ]
  },
  {
    "type": 1,
    "title": "jitsi-prosody",
    "description": "Prosody image for Jitsi Meet",
    "categories": [
      "Productivity:",
      "Network:Voip",
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "Prosody image for Jitsi Meet",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/jitsi.png",
    "name": "jitsi-prosody",
    "image": "jitsi/prosody:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "5222": "5222:5222/tcp",
        "5280": "5280:5280/tcp",
        "5347": "5347:5347/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/jitsi/prosody/"
      }
    ],
    "env": [
      {
        "name": "LDAP_BINDDN",
        "label": "LDAP_BINDDN",
        "default": "CN=binduser,OU=users,DC=example,DC=domain,DC=com"
      },
      {
        "name": "LDAP_TLS_CIPHERS",
        "label": "LDAP_TLS_CIPHERS",
        "default": "SECURE256:SECURE128"
      },
      {
        "name": "LDAP_TLS_CACERT_FILE",
        "label": "LDAP_TLS_CACERT_FILE",
        "default": "/etc/ssl/certs/ca-certificates.crt"
      },
      {
        "name": "JICOFO_AUTH_PASSWORD",
        "label": "JICOFO_AUTH_PASSWORD",
        "default": "passw0rd"
      },
      {
        "name": "JIGASI_XMPP_USER",
        "label": "JIGASI_XMPP_USER",
        "default": "jigasi"
      },
      {
        "name": "JIBRI_XMPP_PASSWORD",
        "label": "JIBRI_XMPP_PASSWORD",
        "default": "passw0rd"
      },
      {
        "name": "JWT_ACCEPTED_ISSUERS",
        "label": "JWT_ACCEPTED_ISSUERS",
        "default": "my_web_client,my_app_client"
      },
      {
        "name": "LDAP_URL",
        "label": "LDAP_URL",
        "default": "ldaps://ldap.domain.com/"
      },
      {
        "name": "AUTH_TYPE",
        "label": "AUTH_TYPE",
        "default": "internal"
      },
      {
        "name": "GLOBAL_MODULES",
        "label": "GLOBAL_MODULES",
        "default": "statistics,alert"
      },
      {
        "name": "XMPP_GUEST_DOMAIN",
        "label": "XMPP_GUEST_DOMAIN",
        "default": "guest.meet.jitsi"
      },
      {
        "name": "JVB_AUTH_USER",
        "label": "JVB_AUTH_USER",
        "default": "jvb"
      },
      {
        "name": "LDAP_BINDPW",
        "label": "LDAP_BINDPW",
        "default": "LdapUserPassw0rd"
      },
      {
        "name": "ENABLE_AUTH",
        "label": "ENABLE_AUTH",
        "default": "1"
      },
      {
        "name": "JWT_ACCEPTED_AUDIENCES",
        "label": "JWT_ACCEPTED_AUDIENCES",
        "default": "my_server1,my_server2"
      },
      {
        "name": "LDAP_BASE",
        "label": "LDAP_BASE",
        "default": "DC=example,DC=domain,DC=com"
      },
      {
        "name": "ENABLE_GUESTS",
        "label": "ENABLE_GUESTS",
        "default": "1"
      },
      {
        "name": "XMPP_MODULES",
        "label": "XMPP_MODULES",
        "default": "info,alert"
      },
      {
        "name": "XMPP_MUC_MODULES",
        "label": "XMPP_MUC_MODULES",
        "default": "info,alert"
      },
      {
        "name": "XMPP_INTERNAL_MUC_MODULES",
        "label": "XMPP_INTERNAL_MUC_MODULES",
        "default": "info,alert"
      },
      {
        "name": "LDAP_FILTER",
        "label": "LDAP_FILTER",
        "default": "(sAMAccountName=%u)"
      },
      {
        "name": "JIBRI_RECORDER_PASSWORD",
        "label": "JIBRI_RECORDER_PASSWORD",
        "default": "passw0rd"
      },
      {
        "name": "JWT_APP_SECRET",
        "label": "JWT_APP_SECRET",
        "default": "my_jitsi_app_secret"
      },
      {
        "name": "JWT_ASAP_KEYSERVER",
        "label": "JWT_ASAP_KEYSERVER",
        "default": "https://example.com/asap"
      },
      {
        "name": "GLOBAL_CONFIG",
        "label": "GLOBAL_CONFIG",
        "default": "foo = bar;\\nkey = val;"
      },
      {
        "name": "XMPP_DOMAIN",
        "label": "XMPP_DOMAIN",
        "default": "meet.jitsi"
      },
      {
        "name": "XMPP_MUC_DOMAIN",
        "label": "XMPP_MUC_DOMAIN",
        "default": "muc.meet.jitsi"
      },
      {
        "name": "XMPP_RECORDER_DOMAIN",
        "label": "XMPP_RECORDER_DOMAIN",
        "default": "recorder.meet.jitsi"
      },
      {
        "name": "JIBRI_RECORDER_USER",
        "label": "JIBRI_RECORDER_USER",
        "default": "recorder"
      },
      {
        "name": "JWT_AUTH_TYPE",
        "label": "JWT_AUTH_TYPE",
        "default": "token"
      },
      {
        "name": "LOG_LEVEL",
        "label": "LOG_LEVEL",
        "default": "info"
      },
      {
        "name": "LDAP_AUTH_METHOD",
        "label": "LDAP_AUTH_METHOD",
        "default": "bind"
      },
      {
        "name": "LDAP_START_TLS",
        "label": "LDAP_START_TLS",
        "default": "0"
      },
      {
        "name": "JWT_APP_ID",
        "label": "JWT_APP_ID",
        "default": "my_jitsi_app_id"
      },
      {
        "name": "JWT_ALLOW_EMPTY",
        "label": "JWT_ALLOW_EMPTY",
        "default": "0"
      },
      {
        "name": "LDAP_TLS_CACERT_DIR",
        "label": "LDAP_TLS_CACERT_DIR",
        "default": "/etc/ssl/certs"
      },
      {
        "name": "XMPP_AUTH_DOMAIN",
        "label": "XMPP_AUTH_DOMAIN",
        "default": "auth.meet.jitsi"
      },
      {
        "name": "XMPP_INTERNAL_MUC_DOMAIN",
        "label": "XMPP_INTERNAL_MUC_DOMAIN",
        "default": "internal-muc.meet.jitsi"
      },
      {
        "name": "JICOFO_COMPONENT_SECRET",
        "label": "JICOFO_COMPONENT_SECRET",
        "default": "s3cr37"
      },
      {
        "name": "JICOFO_AUTH_USER",
        "label": "JICOFO_AUTH_USER",
        "default": "focus"
      },
      {
        "name": "JIGASI_XMPP_PASSWORD",
        "label": "JIGASI_XMPP_PASSWORD",
        "default": "passw0rd"
      },
      {
        "name": "JIBRI_XMPP_USER",
        "label": "JIBRI_XMPP_USER",
        "default": "jibri"
      },
      {
        "name": "JWT_TOKEN_AUTH_MODULE",
        "label": "JWT_TOKEN_AUTH_MODULE",
        "default": "token_verification"
      },
      {
        "name": "LDAP_VERSION",
        "label": "LDAP_VERSION",
        "default": "3"
      },
      {
        "name": "LDAP_USE_TLS",
        "label": "LDAP_USE_TLS",
        "default": "1"
      },
      {
        "name": "JVB_AUTH_PASSWORD",
        "label": "JVB_AUTH_PASSWORD",
        "default": "passw0rd"
      },
      {
        "name": "LDAP_TLS_CHECK_PEER",
        "label": "LDAP_TLS_CHECK_PEER",
        "default": "1"
      }
    ]
  },
  {
    "type": 1,
    "title": "jitsi-web",
    "description": "Jitsi Meet's web interface image",
    "categories": [
      "Productivity:",
      "Network:Voip",
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "Jitsi Meet's web interface image",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/jitsi.png",
    "name": "jitsi-web",
    "image": "jitsi/web:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "443": "4443:443/tcp",
        "80": "8000:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/letsencrypt",
        "bind": "/mnt/user/appdata/jitsi/web/letsencrypt/"
      },
      {
        "container": "/usr/share/jitsi-meet/transcripts",
        "bind": "/mnt/user/appdata/jitsi/transcripts/"
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/jitsi/web/"
      }
    ],
    "env": [
      {
        "name": "JICOFO_AUTH_USER",
        "label": "JICOFO_AUTH_USER",
        "default": "focus"
      },
      {
        "name": "JIBRI_PENDING_TIMEOUT",
        "label": "JIBRI_PENDING_TIMEOUT",
        "default": "90"
      },
      {
        "name": "ENABLE_AUTH",
        "label": "ENABLE_AUTH",
        "default": "1"
      },
      {
        "name": "ENABLE_LETSENCRYPT",
        "label": "ENABLE_LETSENCRYPT",
        "default": "1"
      },
      {
        "name": "ENABLE_TRANSCRIPTIONS",
        "label": "ENABLE_TRANSCRIPTIONS",
        "default": "1"
      },
      {
        "name": "XMPP_RECORDER_DOMAIN",
        "label": "XMPP_RECORDER_DOMAIN",
        "default": "recorder.meet.jitsi"
      },
      {
        "name": "JIBRI_BREWERY_MUC",
        "label": "JIBRI_BREWERY_MUC",
        "default": "jibribrewery"
      },
      {
        "name": "JIBRI_XMPP_USER",
        "label": "JIBRI_XMPP_USER",
        "default": "jibri"
      },
      {
        "name": "JIBRI_RECORDER_USER",
        "label": "JIBRI_RECORDER_USER",
        "default": "recorder"
      },
      {
        "name": "ENABLE_RECORDING",
        "label": "ENABLE_RECORDING",
        "default": "1"
      },
      {
        "name": "ENABLE_HTTP_REDIRECT",
        "label": "ENABLE_HTTP_REDIRECT",
        "default": "1"
      },
      {
        "name": "DISABLE_HTTPS",
        "label": "DISABLE_HTTPS",
        "default": "1"
      },
      {
        "name": "XMPP_GUEST_DOMAIN",
        "label": "XMPP_GUEST_DOMAIN",
        "default": "guest.meet.jitsi"
      },
      {
        "name": "JIBRI_XMPP_PASSWORD",
        "label": "JIBRI_XMPP_PASSWORD",
        "default": "passw0rd"
      },
      {
        "name": "JIBRI_RECORDER_PASSWORD",
        "label": "JIBRI_RECORDER_PASSWORD",
        "default": "passw0rd"
      },
      {
        "name": "LETSENCRYPT_DOMAIN",
        "label": "LETSENCRYPT_DOMAIN",
        "default": "meet.example.com"
      },
      {
        "name": "PUBLIC_URL",
        "label": "PUBLIC_URL",
        "default": "https://meet.example.com"
      },
      {
        "name": "XMPP_BOSH_URL_BASE",
        "label": "XMPP_BOSH_URL_BASE",
        "default": "http://xmpp.meet.jitsi:5280"
      },
      {
        "name": "XMPP_MUC_DOMAIN",
        "label": "XMPP_MUC_DOMAIN",
        "default": "muc.meet.jitsi"
      },
      {
        "name": "ETHERPAD_URL_BASE",
        "label": "ETHERPAD_URL_BASE",
        "default": "http://etherpad.meet.jitsi:9001"
      },
      {
        "name": "ENABLE_GUESTS",
        "label": "ENABLE_GUESTS",
        "default": "1"
      },
      {
        "name": "LETSENCRYPT_EMAIL",
        "label": "LETSENCRYPT_EMAIL",
        "default": "user@example.com"
      },
      {
        "name": "XMPP_DOMAIN",
        "label": "XMPP_DOMAIN",
        "default": "meet.jitsi"
      }
    ]
  },
  {
    "type": 1,
    "title": "keycloak",
    "description": "Open Source Identity and Access Management.",
    "categories": [
      "Security:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Open Source Identity and Access Management.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/keycloak.png",
    "name": "keycloak",
    "image": "quay.io/keycloak/keycloak:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "env": [
      {
        "name": "KEYCLOAK_USER",
        "label": "KEYCLOAK_USER",
        "default": "admin"
      },
      {
        "name": "KEYCLOAK_PASSWORD",
        "label": "KEYCLOAK_PASSWORD",
        "default": "admin"
      },
      {
        "name": "DB_ADDR",
        "label": "DB_ADDR",
        "default": "192.168.0.100"
      },
      {
        "name": "DB_USER",
        "label": "DB_USER",
        "default": "keyclock"
      },
      {
        "name": "DB_PASSWORD",
        "label": "DB_PASSWORD",
        "default": "password"
      },
      {
        "name": "DB_DATABASE",
        "label": "DB_DATABASE",
        "default": "keyclock"
      },
      {
        "name": "DB_VENDOR",
        "label": "DB_VENDOR",
        "default": "MYSQL"
      }
    ]
  },
  {
    "type": 1,
    "title": "kiwix-serve",
    "description": "Kiwix enables you to have the whole Wikipedia at hand wherever you go! Remove download link after download complete.",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "Kiwix enables you to have the whole Wikipedia at hand wherever you go! Remove download link after download complete.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/kiwix.png",
    "name": "kiwix-serve",
    "image": "kiwix/kiwix-serve:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "8040:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/kiwix-serve/"
      }
    ],
    "env": [
      {
        "name": "DOWNLOAD",
        "label": "DOWNLOAD",
        "default": "http://download.kiwix.org/zim/wikipedia_en_chemistry_nopic.zim"
      }
    ]
  },
  {
    "type": 1,
    "title": "leantime",
    "description": "Leantime is an open source project management system for small teams and startups.",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "Leantime is an open source project management system for small teams and startups.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/leantime.png",
    "name": "leantime",
    "image": "leantime/leantime:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "8000:80/tcp"
      }
    ],
    "env": [
      {
        "name": "LEAN_DB_PASSWORD",
        "label": "LEAN_DB_PASSWORD",
        "default": "password"
      },
      {
        "name": "LEAN_DB_DATABASE",
        "label": "LEAN_DB_DATABASE",
        "default": "leantime"
      },
      {
        "name": "LEAN_APP_URL",
        "label": "LEAN_APP_URL",
        "default": "http://192.168.0.100:8000"
      },
      {
        "name": "LEAN_DB_HOST",
        "label": "LEAN_DB_HOST",
        "default": "Hostname or IP"
      },
      {
        "name": "LEAN_DB_USER",
        "label": "LEAN_DB_USER",
        "default": "root"
      }
    ]
  },
  {
    "type": 1,
    "title": "librenms",
    "description": "a fully featured network monitoring system that provides a wealth of features and device support.\r\n\r\nDatabase must be CHARACTER SET utf8 COLLATE utf8_unicode_ci",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "a fully featured network monitoring system that provides a wealth of features and device support.\r\n\r\nDatabase must be CHARACTER SET utf8 COLLATE utf8_unicode_ci",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/librenms.png",
    "name": "librenms",
    "image": "librenms/librenms:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "514": "514:514/udp",
        "8000": "6980:8000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/librenms/"
      }
    ],
    "env": [
      {
        "name": "LOG_IP_VAR",
        "label": "LOG_IP_VAR",
        "default": "remote_addr"
      },
      {
        "name": "DB_HOST",
        "label": "DB_HOST",
        "default": "192.168.0.100"
      },
      {
        "name": "LIBRENMS_BASE_URL",
        "label": "LIBRENMS_BASE_URL",
        "default": "/"
      },
      {
        "name": "LISTEN_IPV6",
        "label": "LISTEN_IPV6",
        "default": "true"
      },
      {
        "name": "REAL_IP_HEADER",
        "label": "REAL_IP_HEADER",
        "default": "X-Forwarded-For"
      },
      {
        "name": "DB_PORT",
        "label": "DB_PORT",
        "default": "3306"
      },
      {
        "name": "DB_PASSWORD",
        "label": "DB_PASSWORD",
        "default": "librenms"
      },
      {
        "name": "DB_TIMEOUT",
        "label": "DB_TIMEOUT",
        "default": "60"
      },
      {
        "name": "LIBRENMS_SNMP_COMMUNITY",
        "label": "LIBRENMS_SNMP_COMMUNITY",
        "default": "public"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "MEMORY_LIMIT",
        "label": "MEMORY_LIMIT",
        "default": "256M"
      },
      {
        "name": "UPLOAD_MAX_SIZE",
        "label": "UPLOAD_MAX_SIZE",
        "default": "16M"
      },
      {
        "name": "OPCACHE_MEM_SIZE",
        "label": "OPCACHE_MEM_SIZE",
        "default": "128"
      },
      {
        "name": "REAL_IP_FROM",
        "label": "REAL_IP_FROM",
        "default": "0.0.0.0/32"
      },
      {
        "name": "DB_NAME",
        "label": "DB_NAME",
        "default": "librenms"
      },
      {
        "name": "DB_USER",
        "label": "DB_USER",
        "default": "librenms"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "linkding",
    "description": "linkding is a simple bookmark service that you can host yourself. Creating user by using console \"python manage.py createsuperuser --username=joe --email=joe@example.com\"",
    "categories": [
      "Productivity:",
      "Network:Web"
    ],
    "platform": "linux",
    "note": "linkding is a simple bookmark service that you can host yourself. Creating user by using console \"python manage.py createsuperuser --username=joe --email=joe@example.com\"",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/linkding.png",
    "name": "linkding",
    "image": "sissbruecker/linkding",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "9090": "9090:9090/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/linkding/data",
        "bind": "/mnt/user/appdata/linkding/"
      }
    ]
  },
  {
    "type": 1,
    "title": "mailpile",
    "description": "Mailpile is software, an e-mail client. It runs on your desktop or laptop computer and you interact with it by using your web browser. The goal of Mailpile is to allow people to send e-mail in a more secure and private manner than before.",
    "categories": [
      "Productivity:",
      "Network:Web",
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "Mailpile is software, an e-mail client. It runs on your desktop or laptop computer and you interact with it by using your web browser. The goal of Mailpile is to allow people to send e-mail in a more secure and private manner than before.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/mailpile.png",
    "name": "mailpile",
    "image": "rroemhild/mailpile:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "33411": "33411:33411/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/root/.local/share/Mailpile",
        "bind": "/mnt/user/appdata/Mailpile/"
      },
      {
        "container": "/root/.gnupg",
        "bind": "/mnt/user/appdata/Mailpile/gnupg/"
      }
    ]
  },
  {
    "type": 1,
    "title": "matomo",
    "description": "Matomo is a free and open source web analytics application written by a team of international developers that runs on a PHP/MySQL webserver.",
    "categories": [
      "Productivity:",
      "Tools:Utilities",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "Matomo is a free and open source web analytics application written by a team of international developers that runs on a PHP/MySQL webserver.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/matomo.png",
    "name": "matomo",
    "image": "bitnami/matomo:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "443": "8443:443/tcp",
        "80": "8000:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/bitnami",
        "bind": "/mnt/user/appdata/matomo/"
      }
    ],
    "env": [
      {
        "name": "MARIADB_PORT_NUMBER",
        "label": "MARIADB_PORT_NUMBER",
        "default": "3306"
      },
      {
        "name": "MATOMO_DATABASE_NAME",
        "label": "MATOMO_DATABASE_NAME",
        "default": "bitnami_matomo"
      },
      {
        "name": "MATOMO_DATABASE_USER",
        "label": "MATOMO_DATABASE_USER",
        "default": "bn_matomo"
      },
      {
        "name": "MATOMO_DATABASE_PASSWORD",
        "label": "MATOMO_DATABASE_PASSWORD",
        "default": "password"
      },
      {
        "name": "MATOMO_USERNAME",
        "label": "MATOMO_USERNAME",
        "default": "User"
      },
      {
        "name": "MATOMO_PASSWORD",
        "label": "MATOMO_PASSWORD",
        "default": "bitnami"
      },
      {
        "name": "ALLOW_EMPTY_PASSWORD",
        "label": "ALLOW_EMPTY_PASSWORD",
        "default": "no"
      },
      {
        "name": "PHP_MEMORY_LIMIT",
        "label": "PHP_MEMORY_LIMIT",
        "default": "128M"
      },
      {
        "name": "MARIADB_HOST",
        "label": "MARIADB_HOST",
        "default": "mariadb"
      },
      {
        "name": "MATOMO_HOST",
        "label": "MATOMO_HOST",
        "default": "192.168.0.100"
      }
    ]
  },
  {
    "type": 1,
    "title": "matrix",
    "description": "Docker Image for the matrix chat server.",
    "categories": [
      "Productivity:",
      "Network:Voip",
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "Docker Image for the matrix chat server.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/matrix.png",
    "name": "matrix",
    "image": "avhost/docker-matrix:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "3478": "3478:3478/tcp",
        "8008": "8008:8008/tcp",
        "8448": "8448:8448/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/matrix/"
      }
    ],
    "env": [
      {
        "name": "SYNAPSE_CACHE_FACTOR",
        "label": "SYNAPSE_CACHE_FACTOR",
        "default": "0.5"
      },
      {
        "name": "MATRIX_UID",
        "label": "MATRIX_UID",
        "default": "99"
      },
      {
        "name": "MATRIX_GID",
        "label": "MATRIX_GID",
        "default": "100"
      },
      {
        "name": "SERVER_NAME",
        "label": "SERVER_NAME",
        "default": "matrix"
      },
      {
        "name": "REPORT_STATS",
        "label": "REPORT_STATS",
        "default": "no"
      }
    ]
  },
  {
    "type": 1,
    "title": "mattermost",
    "description": "Mattermost a flexible, open source messaging platform that enables secure team collaboration.\r\nThe official Docker image for Mattermost Team Edition.",
    "categories": [
      "Productivity:",
      "Network:Voip",
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "Mattermost a flexible, open source messaging platform that enables secure team collaboration.\r\nThe official Docker image for Mattermost Team Edition.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/mattermost.png",
    "name": "mattermost",
    "image": "mattermost/mattermost-team-edition:master",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8065": "8065:8065/tcp",
        "8067": "8067:8067/tcp",
        "8074": "8074:8074/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/mattermost/client/plugins",
        "bind": "/mnt/user/appdata/mattermost/client/plugins/"
      },
      {
        "container": "/mattermost/data",
        "bind": "/mnt/user/appdata/mattermost/data/"
      },
      {
        "container": "/mattermost/logs",
        "bind": "/mnt/user/appdata/mattermost/logs/"
      },
      {
        "container": "/mattermost/config",
        "bind": "/mnt/user/appdata/mattermost/config/"
      },
      {
        "container": "/mattermost/plugins",
        "bind": "/mnt/user/appdata/mattermost/plugins/"
      }
    ],
    "env": [
      {
        "name": "8075",
        "label": "8075",
        "default": "8075"
      },
      {
        "name": "MM_SQLSETTINGS_DATASOURCE",
        "label": "MM_SQLSETTINGS_DATASOURCE",
        "default": "MM_USERNAME:MM_PASSWORD@tcp(DB_HOST:DB_PORT_NUMBER)/MM_DBNAME?charset=utf8mb4,utf8\u0026readTimeout=30s\u0026writeTimeout=30s"
      },
      {
        "name": "APP_HOST",
        "label": "APP_HOST",
        "default": "IP OR HOSTNAME"
      },
      {
        "name": "MM_SQLSETTINGS_DRIVERNAME",
        "label": "MM_SQLSETTINGS_DRIVERNAME",
        "default": "mysql"
      }
    ]
  },
  {
    "type": 1,
    "title": "mattermost-push-proxy",
    "description": "Mattermost Push Notification Service.\r\n\r\nafter starting \r\nmkdir /mnt/user/appdata/mattermost-push-proxy/config\r\ncd /mnt/user/appdata/mattermost-push-proxy/config\r\nwget https://raw.githubusercontent.com/mattermost/mattermost-push-proxy/master/config/mattermost-push-proxy.json\r\n\r\nhttps://developers.mattermost.com/contribute/mobile/push-notifications/service/",
    "categories": [
      "Other:"
    ],
    "platform": "linux",
    "note": "Mattermost Push Notification Service.\r\n\r\nafter starting \r\nmkdir /mnt/user/appdata/mattermost-push-proxy/config\r\ncd /mnt/user/appdata/mattermost-push-proxy/config\r\nwget https://raw.githubusercontent.com/mattermost/mattermost-push-proxy/master/config/mattermost-push-proxy.json\r\n\r\nhttps://developers.mattermost.com/contribute/mobile/push-notifications/service/",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/mattermost-push-proxy.png",
    "name": "mattermost-push-proxy",
    "image": "mattermost/mattermost-push-proxy:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8066": "8066:8066/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/mattermost-push-proxy/config/"
      },
      {
        "container": "/certs",
        "bind": "/mnt/user/appdata/mattermost-push-proxy/certs/"
      },
      {
        "container": "/mattermost-push-proxy",
        "bind": "/mnt/user/appdata/mattermost-push-proxy/"
      }
    ]
  },
  {
    "type": 1,
    "title": "mediagoblin",
    "description": "MediaGoblin is a free software media publishing platform that anyone can run. You can think of it as a decentralized alternative to Flickr, YouTube, SoundCloud, etc.",
    "categories": [
      "MediaApp:Photos"
    ],
    "platform": "linux",
    "note": "MediaGoblin is a free software media publishing platform that anyone can run. You can think of it as a decentralized alternative to Flickr, YouTube, SoundCloud, etc.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/mediagoblin.png",
    "name": "mediagoblin",
    "image": "mtlynch/mediagoblin:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "6543": "6543:6543/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/lib/mediagoblin",
        "bind": "/mnt/user/appdata/mediagoblin/"
      }
    ]
  },
  {
    "type": 1,
    "title": "memcached",
    "description": "Memcached is an in-memory key-value store for small chunks of arbitrary data (strings, objects) from results of database calls, API calls, or page rendering.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Memcached is an in-memory key-value store for small chunks of arbitrary data (strings, objects) from results of database calls, API calls, or page rendering.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/memcached.png",
    "name": "memcached",
    "image": "bitnami/memcached:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "11211": "11211:11211/tcp"
      }
    ],
    "env": [
      {
        "name": "MEMCACHED_USERNAME",
        "label": "MEMCACHED_USERNAME",
        "default": ""
      },
      {
        "name": "MEMCACHED_PASSWORD",
        "label": "MEMCACHED_PASSWORD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "miniflux",
    "description": "Miniflux is a minimalist and opinionated feed reader.",
    "categories": [
      "Other:"
    ],
    "platform": "linux",
    "note": "Miniflux is a minimalist and opinionated feed reader.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/miniflux.png",
    "name": "miniflux",
    "image": "miniflux/miniflux:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "5600:8080/tcp"
      }
    ],
    "env": [
      {
        "name": "CLEANUP_REMOVE_SESSIONS_DAYS",
        "label": "CLEANUP_REMOVE_SESSIONS_DAYS",
        "default": "30"
      },
      {
        "name": "LOG_DATE_TIME",
        "label": "LOG_DATE_TIME",
        "default": "0"
      },
      {
        "name": "DATABASE_URL",
        "label": "DATABASE_URL",
        "default": "postgres://miniflux:secret@Hostname/miniflux2?sslmode=disable"
      },
      {
        "name": "BASE_URL",
        "label": "BASE_URL",
        "default": "http://192.168.1.100:5600"
      },
      {
        "name": "POLLING_FREQUENCY",
        "label": "POLLING_FREQUENCY",
        "default": "60"
      },
      {
        "name": "CLEANUP_FREQUENCY_HOURS",
        "label": "CLEANUP_FREQUENCY_HOURS",
        "default": "24"
      },
      {
        "name": "CLEANUP_ARCHIVE_READ_DAYS",
        "label": "CLEANUP_ARCHIVE_READ_DAYS",
        "default": "60"
      },
      {
        "name": "ADMIN_USERNAME",
        "label": "ADMIN_USERNAME",
        "default": "admin"
      },
      {
        "name": "ADMIN_PASSWORD",
        "label": "ADMIN_PASSWORD",
        "default": "password"
      },
      {
        "name": "CREATE_ADMIN",
        "label": "CREATE_ADMIN",
        "default": "1"
      },
      {
        "name": "RUN_MIGRATIONS",
        "label": "RUN_MIGRATIONS",
        "default": "1"
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "0"
      }
    ]
  },
  {
    "type": 1,
    "title": "moodle",
    "description": "Moodle is a very popular open source learning management solution (LMS) for the delivery of elearning courses and programs.",
    "categories": [
      "Productivity:",
      "Network:Web"
    ],
    "platform": "linux",
    "note": "Moodle is a very popular open source learning management solution (LMS) for the delivery of elearning courses and programs.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/moodle.png",
    "name": "moodle",
    "image": "bitnami/moodle:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "8080:8080/tcp",
        "8443": "8443:8443/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/bitnami/moodle",
        "bind": "/mnt/user/appdata/moodle/"
      }
    ],
    "env": [
      {
        "name": "MOODLE_USERNAME",
        "label": "MOODLE_USERNAME",
        "default": "user"
      },
      {
        "name": "SMTP_HOST",
        "label": "SMTP_HOST",
        "default": ""
      },
      {
        "name": "SMTP_PORT",
        "label": "SMTP_PORT",
        "default": ""
      },
      {
        "name": "MOODLE_DATABASE_NAME",
        "label": "MOODLE_DATABASE_NAME",
        "default": "bitnami_moodle"
      },
      {
        "name": "MOODLE_DATABASE_PASSWORD",
        "label": "MOODLE_DATABASE_PASSWORD",
        "default": ""
      },
      {
        "name": "MOODLE_PASSWORD",
        "label": "MOODLE_PASSWORD",
        "default": "bitnami"
      },
      {
        "name": "PHP_MEMORY_LIMIT",
        "label": "PHP_MEMORY_LIMIT",
        "default": "256M"
      },
      {
        "name": "SMTP_PASSWORD",
        "label": "SMTP_PASSWORD",
        "default": ""
      },
      {
        "name": "MARIADB_HOST",
        "label": "MARIADB_HOST",
        "default": "mariadb"
      },
      {
        "name": "MARIADB_PORT_NUMBER",
        "label": "MARIADB_PORT_NUMBER",
        "default": "3306"
      },
      {
        "name": "MOODLE_DATABASE_USER",
        "label": "MOODLE_DATABASE_USER",
        "default": "bn_moodle"
      },
      {
        "name": "ALLOW_EMPTY_PASSWORD",
        "label": "ALLOW_EMPTY_PASSWORD",
        "default": "no"
      },
      {
        "name": "SMTP_USER",
        "label": "SMTP_USER",
        "default": ""
      },
      {
        "name": "SMTP_PROTOCOL",
        "label": "SMTP_PROTOCOL",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "mumble",
    "description": "Mumble is an open source voice communication applicationDownload config.iniwget -O /mnt/user/appdata/mumble/config.ini https://raw.githubusercontent.com/PHLAK/docker-mumble/master/files/config.ini",
    "categories": [
      "Productivity:",
      "Network:Voip",
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "Mumble is an open source voice communication applicationDownload config.iniwget -O /mnt/user/appdata/mumble/config.ini https://raw.githubusercontent.com/PHLAK/docker-mumble/master/files/config.ini",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/mumble.png",
    "name": "mumble",
    "image": "phlak/mumble:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "64738": "64738:64738/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/mumble",
        "bind": "/mnt/user/appdata/mumble/"
      }
    ],
    "env": [
      {
        "name": "SUPERUSER_PASSWORD",
        "label": "SUPERUSER_PASSWORD",
        "default": "Password"
      }
    ]
  },
  {
    "type": 1,
    "title": "netbox",
    "description": "IP address management (IPAM) and data center infrastructure management (DCIM) tool.  To create User cli to the docker then \"./manage.py createsuperuser\"  Postgres required",
    "categories": [
      "Tools:Utilities",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "IP address management (IPAM) and data center infrastructure management (DCIM) tool.  To create User cli to the docker then \"./manage.py createsuperuser\"  Postgres required",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/netbox.png",
    "name": "netbox",
    "image": "pitkley/netbox:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8000": "8000:8000/tcp"
      }
    ],
    "env": [
      {
        "name": "ALLOWED_HOSTS",
        "label": "ALLOWED_HOSTS",
        "default": "*"
      },
      {
        "name": "DB_HOST",
        "label": "DB_HOST",
        "default": "postgres"
      },
      {
        "name": "DB_NAME",
        "label": "DB_NAME",
        "default": "netbox"
      },
      {
        "name": "DB_USER",
        "label": "DB_USER",
        "default": "netbox"
      },
      {
        "name": "DB_PASS",
        "label": "DB_PASS",
        "default": "netbox"
      },
      {
        "name": "SECRET_KEY",
        "label": "SECRET_KEY",
        "default": "ChangeMe"
      }
    ]
  },
  {
    "type": 1,
    "title": "phpbb",
    "description": "phpBB is a bulletin board solution that allows you to create forums and subforums.",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "phpBB is a bulletin board solution that allows you to create forums and subforums.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/phpbb.png",
    "name": "phpbb",
    "image": "bitnami/phpbb:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "8000:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/bitnami",
        "bind": "/mnt/user/appdata/phpbb/"
      }
    ],
    "env": [
      {
        "name": "PHPBB_EMAIL",
        "label": "PHPBB_EMAIL",
        "default": "user@example.com"
      },
      {
        "name": "PHPBB_FORUM_NAME",
        "label": "PHPBB_FORUM_NAME",
        "default": "Phpbb"
      },
      {
        "name": "PHPBB_FORUM_DESCRIPTION",
        "label": "PHPBB_FORUM_DESCRIPTION",
        "default": "A little text to describe your forum"
      },
      {
        "name": "ALLOW_EMPTY_PASSWORD",
        "label": "ALLOW_EMPTY_PASSWORD",
        "default": "no"
      },
      {
        "name": "MARIADB_HOST",
        "label": "MARIADB_HOST",
        "default": "mariadb"
      },
      {
        "name": "PHPBB_DATABASE_USER",
        "label": "PHPBB_DATABASE_USER",
        "default": "bn_phpbb"
      },
      {
        "name": "PHPBB_DATABASE_NAME",
        "label": "PHPBB_DATABASE_NAME",
        "default": "bitnami_phpbb"
      },
      {
        "name": "PHPBB_USERNAME",
        "label": "PHPBB_USERNAME",
        "default": "user"
      },
      {
        "name": "PHP_MEMORY_LIMIT",
        "label": "PHP_MEMORY_LIMIT",
        "default": "256M"
      },
      {
        "name": "MARIADB_PORT_NUMBER",
        "label": "MARIADB_PORT_NUMBER",
        "default": "3306"
      },
      {
        "name": "PHPBB_DATABASE_PASSWORD",
        "label": "PHPBB_DATABASE_PASSWORD",
        "default": "password"
      },
      {
        "name": "PHPBB_PASSWORD",
        "label": "PHPBB_PASSWORD",
        "default": "bitnami"
      }
    ]
  },
  {
    "type": 1,
    "title": "psitransfer",
    "description": "Simple open source self-hosted file sharing solution. To access Admin Page add /admin at the end of the URL",
    "categories": [
      "Cloud:"
    ],
    "platform": "linux",
    "note": "Simple open source self-hosted file sharing solution. To access Admin Page add /admin at the end of the URL",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/psitransfer.png",
    "name": "psitransfer",
    "image": "psitrax/psitransfer:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "3000": "3000:3000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/psitransfer/"
      }
    ],
    "env": [
      {
        "name": "PSITRANSFER_ADMIN_PASS",
        "label": "PSITRANSFER_ADMIN_PASS",
        "default": "secret"
      }
    ]
  },
  {
    "type": 1,
    "title": "pterodactyl-daemon",
    "description": "The server control and management daemon built specifically for Pterodactyl Panel.\r\nGuide: https://pterodactyl.io/wings/1.0/migrating.html\r\nThis Template is not maintained by ccarney16, any issue you get Please put it on https://github.com/A75G/docker-templates/issues.",
    "categories": [
      "GameServers:",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "The server control and management daemon built specifically for Pterodactyl Panel.\r\nGuide: https://pterodactyl.io/wings/1.0/migrating.html\r\nThis Template is not maintained by ccarney16, any issue you get Please put it on https://github.com/A75G/docker-templates/issues.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/pterodactyl-daemon.png",
    "name": "pterodactyl-daemon",
    "image": "ccarney16/pterodactyl-daemon:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "2022": "2022:2022/tcp",
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/run/docker.sock",
        "bind": "/var/run/docker.sock"
      },
      {
        "container": "/tmp/pterodactyl/",
        "bind": "/mnt/user/appdata/pterodactyl/daemon/tmp/"
      },
      {
        "container": "/var/lib/docker",
        "bind": "/var/lib/docker"
      }
    ],
    "env": [
      {
        "name": "/var/lib/pterodactyl",
        "label": "/var/lib/pterodactyl",
        "default": "/mnt/user/appdata/pterodactyl/daemon/"
      }
    ]
  },
  {
    "type": 1,
    "title": "pterodactyl-panel",
    "description": "Pterodactyl, a free an open source agnostic game panel... In a Container!\r\nCreating account CLI \"php artisan p:user:make\"",
    "categories": [
      "GameServers:",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "Pterodactyl, a free an open source agnostic game panel... In a Container!\r\nCreating account CLI \"php artisan p:user:make\"",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/pterodactyl-panel.png",
    "name": "pterodactyl-panel",
    "image": "ccarney16/pterodactyl-panel:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "8000:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/pterodactyl/"
      }
    ],
    "env": [
      {
        "name": "DB_USERNAME",
        "label": "DB_USERNAME",
        "default": "pterodactyl"
      },
      {
        "name": "DB_PASSWORD",
        "label": "DB_PASSWORD",
        "default": "password"
      },
      {
        "name": "APP_DEBUG",
        "label": "APP_DEBUG",
        "default": "false"
      },
      {
        "name": "APP_TIMEZONE",
        "label": "APP_TIMEZONE",
        "default": "UTC"
      },
      {
        "name": "DB_HOST",
        "label": "DB_HOST",
        "default": "mariadb"
      },
      {
        "name": "DB_PORT",
        "label": "DB_PORT",
        "default": "3306"
      },
      {
        "name": "DB_DATABASE",
        "label": "DB_DATABASE",
        "default": "pterodactyl"
      }
    ]
  },
  {
    "type": 1,
    "title": "pure-ftpd",
    "description": "Pure-FTPd is a free (BSD), secure, production-quality and standard-conformant FTP server. Creating user by using console \"pure-pw useradd admin -u 99 -g 100 -d /home/admin -m\"",
    "categories": [
      "Tools:Utilities",
      "Network:FTP"
    ],
    "platform": "linux",
    "note": "Pure-FTPd is a free (BSD), secure, production-quality and standard-conformant FTP server. Creating user by using console \"pure-pw useradd admin -u 99 -g 100 -d /home/admin -m\"",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/pure-ftpd.png",
    "name": "pure-ftpd",
    "image": "crazymax/pure-ftpd:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "0": "0:0/tcp",
        "2100": "2100:2100/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/pure-ftpd/"
      },
      {
        "container": "/home",
        "bind": "/mnt/user/pure-ftpd/"
      }
    ],
    "env": [
      {
        "name": "AUTH_METHOD",
        "label": "AUTH_METHOD",
        "default": "puredb"
      },
      {
        "name": "SECURE_MODE",
        "label": "SECURE_MODE",
        "default": "true"
      },
      {
        "name": "PASSIVE_PORT_RANGE",
        "label": "PASSIVE_PORT_RANGE",
        "default": "30000:30009"
      }
    ]
  },
  {
    "type": 1,
    "title": "pwndrop",
    "description": "Self-hosted file hosting service allowing easy uploads and sharing of payloads over HTTP and WebDAV.",
    "categories": [
      "Cloud:"
    ],
    "platform": "linux",
    "note": "Self-hosted file hosting service allowing easy uploads and sharing of payloads over HTTP and WebDAV.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/pwndrop.png",
    "name": "pwndrop",
    "image": "harshavardhanj/pwndrop:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "8000:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/pwndrop/data",
        "bind": "/mnt/user/appdata/pwndrop/"
      }
    ]
  },
  {
    "type": 1,
    "title": "quakejs",
    "description": "QuakeJS is a port of ioquake3 to JavaScript with the help of Emscripten.IMPORTANT Use Custom:br0 https://youtu.be/2VnQxxn00jU?t=121 put Fixed IP address, then copy the ip and access it using you broswer",
    "categories": [
      "Other:"
    ],
    "platform": "linux",
    "note": "QuakeJS is a port of ioquake3 to JavaScript with the help of Emscripten.IMPORTANT Use Custom:br0 https://youtu.be/2VnQxxn00jU?t=121 put Fixed IP address, then copy the ip and access it using you broswer",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/quakejs.png",
    "name": "quakejs",
    "image": "treyyoder/quakejs:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "27960": "27960:27960/tcp"
      }
    ],
    "env": [
      {
        "name": "80",
        "label": "80",
        "default": "80"
      },
      {
        "name": "SERVER",
        "label": "SERVER",
        "default": "192.168.0.266"
      },
      {
        "name": "HTTP_PORT",
        "label": "HTTP_PORT",
        "default": "80"
      }
    ]
  },
  {
    "type": 1,
    "title": "reactive-resume",
    "description": "A one-of-a-kind resume builder that keeps your privacy in mind.",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "A one-of-a-kind resume builder that keeps your privacy in mind.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/reactive-resume.png",
    "name": "reactive-resume",
    "image": "amruthpillai/reactive-resume:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "8000:80/tcp"
      }
    ]
  },
  {
    "type": 1,
    "title": "redis",
    "description": "Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache and message broker.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache and message broker.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/redis.png",
    "name": "redis",
    "image": "bitnami/redis:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "6379": "6379:6379/tcp"
      }
    ],
    "env": [
      {
        "name": "ALLOW_EMPTY_PASSWORD",
        "label": "ALLOW_EMPTY_PASSWORD",
        "default": "yes"
      },
      {
        "name": "REDIS_PASSWORD",
        "label": "REDIS_PASSWORD",
        "default": "941378"
      }
    ]
  },
  {
    "type": 1,
    "title": "riot-web",
    "description": "Open, secure and interoperable communication for work and home. before the running the docker run mkdir -p /mnt/user/appdata/riot-web/config wget -O /mnt/user/appdata/riot-web/config/config.json https://riot.im/develop/config.json",
    "categories": [
      "Cloud:",
      "Productivity:",
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "Open, secure and interoperable communication for work and home. before the running the docker run mkdir -p /mnt/user/appdata/riot-web/config wget -O /mnt/user/appdata/riot-web/config/config.json https://riot.im/develop/config.json",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/riot-web.png",
    "name": "riot-web",
    "image": "vectorim/riot-web:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "8075:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/app/config.json",
        "bind": "/mnt/user/appdata/riot-web/config/config.json"
      }
    ]
  },
  {
    "type": 1,
    "title": "searx",
    "description": "Searx is a free internet metasearch engine which aggregates results from more than 70 search services. Users are neither tracked nor profiled. Additionally, searx can be used over Tor for online anonymity.",
    "categories": [
      "Productivity:",
      "Other:"
    ],
    "platform": "linux",
    "note": "Searx is a free internet metasearch engine which aggregates results from more than 70 search services. Users are neither tracked nor profiled. Additionally, searx can be used over Tor for online anonymity.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/searx.png",
    "name": "searx",
    "image": "searx/searx:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/searx",
        "bind": "/mnt/user/appdata/searx/"
      }
    ]
  },
  {
    "type": 1,
    "title": "selfoss",
    "description": "Selfoss, the new multipurpose rss reader, live stream, mashup, aggregation web application.",
    "categories": [
      "Other:"
    ],
    "platform": "linux",
    "note": "Selfoss, the new multipurpose rss reader, live stream, mashup, aggregation web application.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/selfoss.png",
    "name": "selfoss",
    "image": "hardware/selfoss",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8888": "8888:8888/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/selfoss/data",
        "bind": "/mnt/user/appdata/selfoss/"
      }
    ],
    "env": [
      {
        "name": "LOG_TO_STDOUT",
        "label": "LOG_TO_STDOUT",
        "default": "false"
      },
      {
        "name": "MEMORY_LIMIT",
        "label": "MEMORY_LIMIT",
        "default": "128M"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "CRON_PERIOD",
        "label": "CRON_PERIOD",
        "default": "15m"
      },
      {
        "name": "UPLOAD_MAX_SIZE",
        "label": "UPLOAD_MAX_SIZE",
        "default": "25M"
      }
    ]
  },
  {
    "type": 1,
    "title": "shaarli",
    "description": "The personal, minimalist, super-fast, database free, bookmarking service.",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "The personal, minimalist, super-fast, database free, bookmarking service.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/shaarli.png",
    "name": "shaarli",
    "image": "shaarli/shaarli:master",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "8000:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/www/shaarli/data",
        "bind": "/mnt/user/appdata/shaarli/data/"
      },
      {
        "container": "/var/www/shaarli/cache",
        "bind": "/mnt/user/appdata/shaarli/cache/"
      }
    ]
  },
  {
    "type": 1,
    "title": "shiori",
    "description": "Simple bookmark manager built with Go.",
    "categories": [
      "Productivity:",
      "Network:Web"
    ],
    "platform": "linux",
    "note": "Simple bookmark manager built with Go.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/shiori.png",
    "name": "shiori",
    "image": "radhifadlillah/shiori:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/srv/shiori/",
        "bind": "/mnt/user/appdata/shiori/"
      }
    ]
  },
  {
    "type": 1,
    "title": "shlink",
    "description": "A self-hosted and PHP-based URL shortener application with CLI and REST interfaces.\r\nMore Variables: https://shlink.io/documentation/install-docker-image/#supported-env-vars",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "A self-hosted and PHP-based URL shortener application with CLI and REST interfaces.\r\nMore Variables: https://shlink.io/documentation/install-docker-image/#supported-env-vars",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/shlink.png",
    "name": "shlink",
    "image": "shlinkio/shlink:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "env": [
      {
        "name": "GEOLITE_LICENSE_KEY",
        "label": "GEOLITE_LICENSE_KEY",
        "default": ""
      },
      {
        "name": "DB_DRIVER",
        "label": "DB_DRIVER",
        "default": "maria"
      },
      {
        "name": "DB_HOST",
        "label": "DB_HOST",
        "default": "192.168.0.100"
      },
      {
        "name": "SHORT_DOMAIN_HOST",
        "label": "SHORT_DOMAIN_HOST",
        "default": "doma.in"
      },
      {
        "name": "SHORT_DOMAIN_SCHEMA",
        "label": "SHORT_DOMAIN_SCHEMA",
        "default": "https"
      },
      {
        "name": "DB_NAME",
        "label": "DB_NAME",
        "default": "shlink"
      },
      {
        "name": "DB_USER",
        "label": "DB_USER",
        "default": "root"
      },
      {
        "name": "DB_PASSWORD",
        "label": "DB_PASSWORD",
        "default": "password"
      },
      {
        "name": "DB_PORT",
        "label": "DB_PORT",
        "default": "3306"
      }
    ]
  },
  {
    "type": 1,
    "title": "shlink-web-client",
    "description": "A ReactJS-based progressive web application for shlink.\r\n1. Install shlink\r\n2. CLI to it and enter \"shlink api-key:generate\"\r\n3. Copy the api and add and edit to servers.json",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "A ReactJS-based progressive web application for shlink.\r\n1. Install shlink\r\n2. CLI to it and enter \"shlink api-key:generate\"\r\n3. Copy the api and add and edit to servers.json",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/shlink-web-client.png",
    "name": "shlink-web-client",
    "image": "shlinkio/shlink-web-client:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "8000:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/usr/share/nginx/html/servers.json",
        "bind": "/mnt/user/appdata/shlink-web/servers.json"
      }
    ]
  },
  {
    "type": 1,
    "title": "solr",
    "description": "Solr is the popular, blazing-fast, open source enterprise search platform built on Apache Lucene.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Solr is the popular, blazing-fast, open source enterprise search platform built on Apache Lucene.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/solr.png",
    "name": "solr",
    "image": "bitnami/solr:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8983": "8983:8983/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/bitnami",
        "bind": "/mnt/user/appdata/solr/"
      }
    ],
    "env": [
      {
        "name": "SOLR_PORT_NUMBER",
        "label": "SOLR_PORT_NUMBER",
        "default": "8983"
      },
      {
        "name": "SOLR_CORE",
        "label": "SOLR_CORE",
        "default": "my_core"
      }
    ]
  },
  {
    "type": 1,
    "title": "stackedit",
    "description": "StackEdit’s Markdown syntax highlighting is unique. The refined text formatting of the editor helps you visualize the final rendering of your files.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "StackEdit’s Markdown syntax highlighting is unique. The refined text formatting of the editor helps you visualize the final rendering of your files.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/stackedit.png",
    "name": "stackedit",
    "image": "qmcgaw/stackedit:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8000": "8000:8000/tcp"
      }
    ],
    "env": [
      {
        "name": "ROOT_URL",
        "label": "ROOT_URL",
        "default": "/"
      }
    ]
  },
  {
    "type": 1,
    "title": "synapse-admin",
    "description": "Admin UI for Matrix Synapse homeserver. \r\n\r\nUser must be admin user - how to make admin user \"register_new_matrix_user -c /data/homeserver.yaml http://0.0.0.0:8008\"",
    "categories": [
      "Tools:Utilities",
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "Admin UI for Matrix Synapse homeserver. \r\n\r\nUser must be admin user - how to make admin user \"register_new_matrix_user -c /data/homeserver.yaml http://0.0.0.0:8008\"",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/synapse-admin.png",
    "name": "synapse-admin",
    "image": "awesometechnologies/synapse-admin:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "8010:80/tcp"
      }
    ]
  },
  {
    "type": 1,
    "title": "tar1090",
    "description": "Multi-arch tar1090 container for visualising ADSB data.",
    "categories": [
      "Other:"
    ],
    "platform": "linux",
    "note": "Multi-arch tar1090 container for visualising ADSB data.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/tar1090.png",
    "name": "tar1090",
    "image": "mikenye/tar1090:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "8078:80/tcp"
      }
    ],
    "env": [
      {
        "name": "BEASTHOST",
        "label": "BEASTHOST",
        "default": "\u003cBEASTHOST\u003e"
      },
      {
        "name": "MLATHOST",
        "label": "MLATHOST",
        "default": "\u003cMLATHOST\u003e"
      },
      {
        "name": "LAT",
        "label": "LAT",
        "default": "xx.xxxxx"
      },
      {
        "name": "LONG",
        "label": "LONG",
        "default": "xx.xxxxx"
      }
    ]
  },
  {
    "type": 1,
    "title": "torprivoxy",
    "description": "Small TOR and Privoxy container with just 8 MB",
    "categories": [
      "Network:Proxy"
    ],
    "platform": "linux",
    "note": "Small TOR and Privoxy container with just 8 MB",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/torprivoxy.png",
    "name": "torprivoxy",
    "image": "avpnusr/torprivoxy:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8118": "8118:8118/tcp",
        "9050": "9050:9050/tcp"
      }
    ]
  },
  {
    "type": 1,
    "title": "tt-rss",
    "description": "A fork of the deprecated linuxserver.io tt-rss container.\r\nThe default username and password after initial configuration is admin/password",
    "categories": [
      "Productivity:",
      "Other:"
    ],
    "platform": "linux",
    "note": "A fork of the deprecated linuxserver.io tt-rss container.\r\nThe default username and password after initial configuration is admin/password",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/tt-rss.png",
    "name": "tt-rss",
    "image": "lunik1/tt-rss:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "8000:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/tt-rss/"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "wallabag",
    "description": "Wallabag is a self hostable application for saving web pages. Unlike other services, wallabag is free (as in freedom) and open source.",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "Wallabag is a self hostable application for saving web pages. Unlike other services, wallabag is free (as in freedom) and open source.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/wallabag.png",
    "name": "wallabag",
    "image": "wallabag/wallabag:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "6500:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/www/wallabag/data",
        "bind": "/mnt/user/appdata/wallabag/"
      },
      {
        "container": "/var/www/wallabag/web/assets/images",
        "bind": "/mnt/user/appdata/wallabag/images/"
      }
    ],
    "env": [
      {
        "name": "SYMFONY__ENV__DOMAIN_NAME",
        "label": "SYMFONY__ENV__DOMAIN_NAME",
        "default": "http://\u003cIP\u003e:6500"
      },
      {
        "name": "SYMFONY__ENV__SECRET",
        "label": "SYMFONY__ENV__SECRET",
        "default": "LongRandomSecretHere"
      },
      {
        "name": "SYMFONY__ENV__FOSUSER_REGISTRATION",
        "label": "SYMFONY__ENV__FOSUSER_REGISTRATION",
        "default": "false"
      }
    ]
  },
  {
    "type": 1,
    "title": "weechat",
    "description": "WeeChat is a free and open-source Internet Relay Chat client, which is designed to be light and fast.",
    "categories": [
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "WeeChat is a free and open-source Internet Relay Chat client, which is designed to be light and fast.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/weechat.png",
    "name": "weechat",
    "image": "jkaberg/weechat:latest",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/weechat",
        "bind": "/mnt/user/appdata/weechat/"
      }
    ],
    "env": [
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "wifi-card",
    "description": "Print a neat little card with your WiFi info and stick it on the fridge.",
    "categories": [
      "Other:"
    ],
    "platform": "linux",
    "note": "Print a neat little card with your WiFi info and stick it on the fridge.",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/wifi-card.png",
    "name": "wifi-card",
    "image": "bndw/wifi-card:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "8000:80/tcp"
      }
    ]
  },
  {
    "type": 1,
    "title": "yacy",
    "description": "YaCy decentralized search engine (https://yacy.net)",
    "categories": [
      "Tools:Utilities",
      "Network:Web"
    ],
    "platform": "linux",
    "note": "YaCy decentralized search engine (https://yacy.net)",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/yacy.png",
    "name": "yacy",
    "image": "yacy/yacy_search_server:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8090": "8090:8090/tcp",
        "8443": "8443:8443/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/opt/yacy_search_server/DATA",
        "bind": "/mnt/user/appdata/yacy/"
      }
    ]
  },
  {
    "type": 1,
    "title": "storagenode-v3",
    "description": "This is Storj Lab's V3 node client. To participate you must first have to have an authorization token, to get the Authentication Token go to: https://storj.io/sign-up-farmer\r\n\r\nThis template is for running the Docker application only, please follow Storj Lab directions to generate your Node Identity files  -  this is in https://documentation.storj.io/dependencies/identity",
    "categories": [
      "Cloud:",
      "Other:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "This is Storj Lab's V3 node client. To participate you must first have to have an authorization token, to get the Authentication Token go to: https://storj.io/sign-up-farmer\r\n\r\nThis template is for running the Docker application only, please follow Storj Lab directions to generate your Node Identity files  -  this is in https://documentation.storj.io/dependencies/identity",
    "logo": "https://raw.githubusercontent.com/dalekseevs/Unraid-Docker-Templates/master/logos/storj-logo-png-transparent.png",
    "name": "storagenode-v3",
    "image": "storjlabs/storagenode:beta",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "14002": "14002:14002/tcp",
        "28967": "28967:28967/tcp"
      }
    ],
    "env": [
      {
        "name": "STORAGE",
        "label": "STORAGE",
        "default": "2TB"
      },
      {
        "name": "BANDWIDTH",
        "label": "BANDWIDTH",
        "default": "45TB"
      },
      {
        "name": "WALLET",
        "label": "WALLET",
        "default": ""
      },
      {
        "name": "EMAIL",
        "label": "EMAIL",
        "default": ""
      },
      {
        "name": "ADDRESS",
        "label": "ADDRESS",
        "default": "my.ddns.com:28967"
      }
    ]
  },
  {
    "type": 1,
    "title": "ama",
    "description": "Automated Music Archiver :: This script will automatically archive music using a popular online DL Client",
    "categories": [
      "Downloaders:",
      "MediaApp:Music"
    ],
    "platform": "linux",
    "note": "Automated Music Archiver :: This script will automatically archive music using a popular online DL Client",
    "logo": "https://raw.githubusercontent.com/RandomNinjaAtk/unraid-templates/master/randomninjaatk/img/ama.png",
    "name": "ama",
    "image": "randomninjaatk/ama",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/downloads-ama",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "IGNORE_ARTIST_WITHOUT_IMAGE",
        "label": "IGNORE_ARTIST_WITHOUT_IMAGE",
        "default": "false"
      },
      {
        "name": "NOTIFYPLEX",
        "label": "NOTIFYPLEX",
        "default": "false"
      },
      {
        "name": "PLEXTOKEN",
        "label": "PLEXTOKEN",
        "default": ""
      },
      {
        "name": "BITRATE",
        "label": "BITRATE",
        "default": "320"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PLEXLIBRARYNAME",
        "label": "PLEXLIBRARYNAME",
        "default": "Music"
      },
      {
        "name": "FAN_COUNT",
        "label": "FAN_COUNT",
        "default": "1000000"
      },
      {
        "name": "FORMAT",
        "label": "FORMAT",
        "default": "FLAC"
      },
      {
        "name": "REQUIRE_QUALITY",
        "label": "REQUIRE_QUALITY",
        "default": "false"
      },
      {
        "name": "COMPLETE_MY_ARTISTS",
        "label": "COMPLETE_MY_ARTISTS",
        "default": "false"
      },
      {
        "name": "LIDARR_URL",
        "label": "LIDARR_URL",
        "default": "http://x.x.x.x:8686"
      },
      {
        "name": "AUTOSTART",
        "label": "AUTOSTART",
        "default": "true"
      },
      {
        "name": "RELATED_COUNT",
        "label": "RELATED_COUNT",
        "default": "20"
      },
      {
        "name": "FORCECONVERT",
        "label": "FORCECONVERT",
        "default": "false"
      },
      {
        "name": "LIDARR_API_KEY",
        "label": "LIDARR_API_KEY",
        "default": ""
      },
      {
        "name": "RELATED_ARTIST",
        "label": "RELATED_ARTIST",
        "default": "false"
      },
      {
        "name": "FOLDER_PERMISSIONS",
        "label": "FOLDER_PERMISSIONS",
        "default": "766"
      },
      {
        "name": "REPLAYGAIN",
        "label": "REPLAYGAIN",
        "default": "false"
      },
      {
        "name": "POSTPROCESSTHREADS",
        "label": "POSTPROCESSTHREADS",
        "default": "1"
      },
      {
        "name": "LIDARR_LIST_IMPORT",
        "label": "LIDARR_LIST_IMPORT",
        "default": "false"
      },
      {
        "name": "SCRIPTINTERVAL",
        "label": "SCRIPTINTERVAL",
        "default": "15m"
      },
      {
        "name": "RELATED_ARTIST_RELATED",
        "label": "RELATED_ARTIST_RELATED",
        "default": "false"
      },
      {
        "name": "CONCURRENT_DOWNLOADS",
        "label": "CONCURRENT_DOWNLOADS",
        "default": "1"
      },
      {
        "name": "FILE_PERMISSIONS",
        "label": "FILE_PERMISSIONS",
        "default": "666"
      },
      {
        "name": "PLEXURL",
        "label": "PLEXURL",
        "default": "http://x.x.x.x:32400"
      },
      {
        "name": "ARL_TOKEN",
        "label": "ARL_TOKEN",
        "default": ""
      },
      {
        "name": "MODE",
        "label": "MODE",
        "default": "artist"
      },
      {
        "name": "EMBEDDED_COVER_QUALITY",
        "label": "EMBEDDED_COVER_QUALITY",
        "default": "80"
      },
      {
        "name": "ALBUM_TYPE_FILTER",
        "label": "ALBUM_TYPE_FILTER",
        "default": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "amd",
    "description": "Automated Music Downloader :: AMD is a Lidarr Companion script to automatically download and tag music files for use in various media applications",
    "categories": [
      "Downloaders:",
      "MediaApp:Music"
    ],
    "platform": "linux",
    "note": "Automated Music Downloader :: AMD is a Lidarr Companion script to automatically download and tag music files for use in various media applications",
    "logo": "https://raw.githubusercontent.com/RandomNinjaAtk/unraid-templates/master/randomninjaatk/img/amd.png",
    "name": "amd",
    "image": "randomninjaatk/amd",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/downloads-amd",
        "bind": "/mnt/user/downloads"
      }
    ],
    "env": [
      {
        "name": "replaygain",
        "label": "replaygain",
        "default": "true"
      },
      {
        "name": "MatchDistance",
        "label": "MatchDistance",
        "default": "10"
      },
      {
        "name": "MBRAINZMIRROR",
        "label": "MBRAINZMIRROR",
        "default": "https://musicbrainz.org"
      },
      {
        "name": "PLEXLIBRARYNAME",
        "label": "PLEXLIBRARYNAME",
        "default": "Music"
      },
      {
        "name": "ARL_TOKEN",
        "label": "ARL_TOKEN",
        "default": ""
      },
      {
        "name": "FORMAT",
        "label": "FORMAT",
        "default": "FLAC"
      },
      {
        "name": "LIST",
        "label": "LIST",
        "default": "both"
      },
      {
        "name": "Concurrency",
        "label": "Concurrency",
        "default": "3"
      },
      {
        "name": "FolderPermissions",
        "label": "FolderPermissions",
        "default": "766"
      },
      {
        "name": "FilePermissions",
        "label": "FilePermissions",
        "default": "666"
      },
      {
        "name": "AUTOSTART",
        "label": "AUTOSTART",
        "default": "true"
      },
      {
        "name": "SCRIPTINTERVAL",
        "label": "SCRIPTINTERVAL",
        "default": "15m"
      },
      {
        "name": "POSTPROCESSTHREADS",
        "label": "POSTPROCESSTHREADS",
        "default": "1"
      },
      {
        "name": "MBRATELIMIT",
        "label": "MBRATELIMIT",
        "default": "1"
      },
      {
        "name": "PLEXTOKEN",
        "label": "PLEXTOKEN",
        "default": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "LidarrUrl",
        "label": "LidarrUrl",
        "default": "http://127.0.0.1:8686"
      },
      {
        "name": "DOWNLOADMODE",
        "label": "DOWNLOADMODE",
        "default": "wanted"
      },
      {
        "name": "ALBUM_TYPE_FILTER",
        "label": "ALBUM_TYPE_FILTER",
        "default": ""
      },
      {
        "name": "NOTIFYPLEX",
        "label": "NOTIFYPLEX",
        "default": "false"
      },
      {
        "name": "LidarrAPIkey",
        "label": "LidarrAPIkey",
        "default": ""
      },
      {
        "name": "requirequality",
        "label": "requirequality",
        "default": "false"
      },
      {
        "name": "EMBEDDED_COVER_QUALITY",
        "label": "EMBEDDED_COVER_QUALITY",
        "default": "80"
      },
      {
        "name": "BITRATE",
        "label": "BITRATE",
        "default": "320"
      },
      {
        "name": "FORCECONVERT",
        "label": "FORCECONVERT",
        "default": "false"
      },
      {
        "name": "PLEXURL",
        "label": "PLEXURL",
        "default": "http://x.x.x.x:32400"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "LIDARRREMOTEPATH",
        "label": "LIDARRREMOTEPATH",
        "default": ""
      },
      {
        "name": "SearchType",
        "label": "SearchType",
        "default": "both"
      }
    ]
  },
  {
    "type": 1,
    "title": "amtd",
    "description": "Automated Movie Trailer Downloader :: AMTD is a Radarr Companion script to automatically download movie trailers for use in media applications",
    "categories": [
      "Downloaders:",
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "Automated Movie Trailer Downloader :: AMTD is a Radarr Companion script to automatically download movie trailers for use in media applications",
    "logo": "https://raw.githubusercontent.com/RandomNinjaAtk/unraid-templates/master/randomninjaatk/img/amtd.png",
    "name": "amtd",
    "image": "randomninjaatk/amtd",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "LANGUAGES",
        "label": "LANGUAGES",
        "default": "en"
      },
      {
        "name": "videoformat",
        "label": "videoformat",
        "default": "--format bestvideo[vcodec*=avc1]+bestaudio[ext=m4a]"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "SCRIPTINTERVAL",
        "label": "SCRIPTINTERVAL",
        "default": "1h"
      },
      {
        "name": "RadarrUrl",
        "label": "RadarrUrl",
        "default": "http://127.0.0.1:7878"
      },
      {
        "name": "RadarrAPIkey",
        "label": "RadarrAPIkey",
        "default": ""
      },
      {
        "name": "SINGLETRAILER",
        "label": "SINGLETRAILER",
        "default": "true"
      },
      {
        "name": "USEFOLDERS",
        "label": "USEFOLDERS",
        "default": "false"
      },
      {
        "name": "FolderPermissions",
        "label": "FolderPermissions",
        "default": "755"
      },
      {
        "name": "AUTOSTART",
        "label": "AUTOSTART",
        "default": "true"
      },
      {
        "name": "subtitlelanguage",
        "label": "subtitlelanguage",
        "default": "en"
      },
      {
        "name": "extrastype",
        "label": "extrastype",
        "default": "all"
      },
      {
        "name": "FilePermissions",
        "label": "FilePermissions",
        "default": "644"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "amvd",
    "description": "Automated Music Video Downloader :: AMVD is a Lidarr Companion script to automatically download and tag Music Videos for use in various media applications",
    "categories": [
      "Downloaders:",
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "Automated Music Video Downloader :: AMVD is a Lidarr Companion script to automatically download and tag Music Videos for use in various media applications",
    "logo": "https://raw.githubusercontent.com/RandomNinjaAtk/unraid-templates/master/randomninjaatk/img/amvd.png",
    "name": "amvd",
    "image": "randomninjaatk/amvd",
    "restart_policy": "unless-stopped",
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/downloads-amvd",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "AUTOSTART",
        "label": "AUTOSTART",
        "default": "true"
      },
      {
        "name": "SCRIPTINTERVAL",
        "label": "SCRIPTINTERVAL",
        "default": "15m"
      },
      {
        "name": "SOURCE_CONNECTION",
        "label": "SOURCE_CONNECTION",
        "default": "lidarr"
      },
      {
        "name": "videoformat",
        "label": "videoformat",
        "default": "--format bestvideo[vcodec*=avc1]+bestaudio"
      },
      {
        "name": "subtitlelanguage",
        "label": "subtitlelanguage",
        "default": "en"
      },
      {
        "name": "WriteNFOs",
        "label": "WriteNFOs",
        "default": "false"
      },
      {
        "name": "FolderPermissions",
        "label": "FolderPermissions",
        "default": "766"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "MBRAINZMIRROR",
        "label": "MBRAINZMIRROR",
        "default": "https://musicbrainz.org"
      },
      {
        "name": "MBRATELIMIT",
        "label": "MBRATELIMIT",
        "default": "1"
      },
      {
        "name": "RequireVideoMatch",
        "label": "RequireVideoMatch",
        "default": "true"
      },
      {
        "name": "LidarrUrl",
        "label": "LidarrUrl",
        "default": "http://127.0.0.1:8686"
      },
      {
        "name": "CountryCode",
        "label": "CountryCode",
        "default": "us"
      },
      {
        "name": "USEVIDEOFOLDERS",
        "label": "USEVIDEOFOLDERS",
        "default": "false"
      },
      {
        "name": "FilePermissions",
        "label": "FilePermissions",
        "default": "666"
      },
      {
        "name": "LidarrAPIkey",
        "label": "LidarrAPIkey",
        "default": ""
      },
      {
        "name": "videofilter",
        "label": "videofilter",
        "default": "live"
      },
      {
        "name": "USEFOLDERS",
        "label": "USEFOLDERS",
        "default": "false"
      }
    ]
  },
  {
    "type": 1,
    "title": "MusicBrainz-Picard",
    "description": "Picard is a cross-platform music tagger written in Python.",
    "categories": [
      "MediaApp:Music"
    ],
    "platform": "linux",
    "note": "Picard is a cross-platform music tagger written in Python.",
    "logo": "https://raw.githubusercontent.com/RandomNinjaAtk/unraid-templates/master/randomninjaatk/img/picard.png",
    "name": "MusicBrainz-Picard",
    "image": "mikenye/picard",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "5800": "5800:5800/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/storage",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1280"
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "768"
      },
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "99"
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "radarr-sma",
    "description": "Radarr - A fork of Sonarr to work with movies à la Couchpotato. This comes bundled with sickbeard_mp4_automator script, that can be found here: https://github.com/mdhiggins/sickbeard_mp4_automator",
    "categories": [
      "Downloaders:",
      "MediaApp:Video",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Radarr - A fork of Sonarr to work with movies à la Couchpotato. This comes bundled with sickbeard_mp4_automator script, that can be found here: https://github.com/mdhiggins/sickbeard_mp4_automator",
    "logo": "https://raw.githubusercontent.com/RandomNinjaAtk/unraid-templates/master/randomninjaatk/img/radarr.png",
    "name": "radarr-sma",
    "image": "randomninjaatk/radarr-sma",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "7878": "7878:7878/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/storage",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "UPDATE_SMA",
        "label": "UPDATE_SMA",
        "default": "TRUE"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "sabnzbd-extended",
    "description": "SABnzbd makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.",
    "categories": [
      "Downloaders:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "SABnzbd makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.",
    "logo": "https://raw.githubusercontent.com/RandomNinjaAtk/unraid-templates/master/randomninjaatk/img/sabnzbd-icon.png",
    "name": "sabnzbd-extended",
    "image": "randomninjaatk/sabnzbd-extended",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8080": "8080:8080/tcp",
        "9090": "9090:9090/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "AUDIO_FORMAT",
        "label": "AUDIO_FORMAT",
        "default": "FLAC"
      },
      {
        "name": "AUDIO_BITRATE",
        "label": "AUDIO_BITRATE",
        "default": "320"
      },
      {
        "name": "AUDIO_REPLAYGAIN",
        "label": "AUDIO_REPLAYGAIN",
        "default": "FALSE"
      },
      {
        "name": "VIDEO_LANG",
        "label": "VIDEO_LANG",
        "default": "eng"
      },
      {
        "name": "VIDEO_SMA_TAGGING",
        "label": "VIDEO_SMA_TAGGING",
        "default": "TRUE"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "AUDIO_VERIFY",
        "label": "AUDIO_VERIFY",
        "default": "TRUE"
      },
      {
        "name": "AUDIO_DSFA",
        "label": "AUDIO_DSFA",
        "default": "TRUE"
      },
      {
        "name": "VIDEO_MKVCLEANER",
        "label": "VIDEO_MKVCLEANER",
        "default": "TRUE"
      },
      {
        "name": "VIDEO_SMA",
        "label": "VIDEO_SMA",
        "default": "FALSE"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "sonarr-sma",
    "description": "Sonarr is a PVR for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. This comes bundled with sickbeard_mp4_automator script, that can be found here: https://github.com/mdhiggins/sickbeard_mp4_automator",
    "categories": [
      "Downloaders:",
      "MediaApp:Video",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Sonarr is a PVR for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. This comes bundled with sickbeard_mp4_automator script, that can be found here: https://github.com/mdhiggins/sickbeard_mp4_automator",
    "logo": "https://raw.githubusercontent.com/RandomNinjaAtk/unraid-templates/master/randomninjaatk/img/sonarr.png",
    "name": "sonarr-sma",
    "image": "randomninjaatk/sonarr-sma",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "8989": "8989:8989/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/dev/rtc",
        "bind": "/dev/rtc"
      },
      {
        "container": "/storage",
        "bind": "/mnt/user"
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UPDATE_SMA",
        "label": "UPDATE_SMA",
        "default": "TRUE"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "bluelinky",
    "description": "Unofficial Hyundai Blue Link API (bluelinky)\r\n\r\nThis is a docker version of an API Wrapper for bluelinky. For information or issues, please raise them on the bluelinky repo.",
    "categories": [
      "Other:"
    ],
    "platform": "linux",
    "note": "Unofficial Hyundai Blue Link API (bluelinky)\r\n\r\nThis is a docker version of an API Wrapper for bluelinky. For information or issues, please raise them on the bluelinky repo.",
    "name": "bluelinky",
    "image": "wranglatang/bluelinky",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/bluelinky/"
      }
    ]
  },
  {
    "type": 1,
    "title": "homelablabelmaker",
    "description": "DIY tool to create and print labels for Dell Poweredge and HP Proliant drive caddies.",
    "categories": [
      "Tools:Utilities",
      "Other:"
    ],
    "platform": "linux",
    "note": "DIY tool to create and print labels for Dell Poweredge and HP Proliant drive caddies.",
    "logo": "https://raw.githubusercontent.com/DavidSpek/homelablabelmaker/master/Docker%20Files/Caddy%20Label%20Maker%20Logo.png",
    "name": "homelablabelmaker",
    "image": "davidspek/homelablabelmaker",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "2020:80/tcp"
      }
    ]
  },
  {
    "type": 1,
    "title": "DSMRReader",
    "description": "DSMR protocol reader. Stores data read and visualizes it.",
    "categories": [
      "HomeAutomation:"
    ],
    "platform": "linux",
    "note": "DSMR protocol reader. Stores data read and visualizes it.",
    "logo": "https://raw.githubusercontent.com/dsmrreader/dsmr-reader/v3/dsmr_frontend/static/dsmr_frontend/img/favicons/favicon-32x32.png",
    "name": "DSMRReader",
    "image": "xirixiz/dsmr-reader-docker",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "8888:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/home/dsmr/app/backups",
        "bind": "/mnt/user/appdata/dsmr-reader/backups"
      }
    ],
    "env": [
      {
        "name": "DB_HOST",
        "label": "DB_HOST",
        "default": ""
      },
      {
        "name": "DSMR_USER",
        "label": "DSMR_USER",
        "default": ""
      },
      {
        "name": "DSMR_EMAIL",
        "label": "DSMR_EMAIL",
        "default": ""
      },
      {
        "name": "DSMR_PASSWORD",
        "label": "DSMR_PASSWORD",
        "default": ""
      },
      {
        "name": "VIRTUAL_HOST",
        "label": "VIRTUAL_HOST",
        "default": "localhost"
      }
    ]
  },
  {
    "type": 1,
    "title": "netdata-glibc",
    "description": "Netdata with Nvidia GPU monitoring in a container. An automated build of netdata with glibc for use with Nvidia GPUs.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Netdata with Nvidia GPU monitoring in a container. An automated build of netdata with glibc for use with Nvidia GPUs.",
    "logo": "https://raw.githubusercontent.com/netdata/netdata/master/web/gui/images/android-icon-192x192.png",
    "name": "netdata-glibc",
    "image": "d34dc3n73r/netdata-glibc",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "19999": "19999:19999/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/run/docker.sock",
        "bind": "/var/run/docker.sock"
      },
      {
        "container": "/etc/netdata",
        "bind": "/mnt/user/appdata/netdata/override"
      },
      {
        "container": "/host/proc",
        "bind": "/proc"
      },
      {
        "container": "/host/sys",
        "bind": "/sys"
      }
    ],
    "env": [
      {
        "name": "DO_NOT_TRACK",
        "label": "DO_NOT_TRACK",
        "default": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "281"
      },
      {
        "name": "NVIDIA_VISIBLE_DEVICES",
        "label": "NVIDIA_VISIBLE_DEVICES",
        "default": "all"
      }
    ]
  },
  {
    "type": 1,
    "title": "derbynet_server",
    "description": "DerbyNet is the new standard in race management software for Pinewood Derby events. It's free, and it's open source. With DerbyNet, multiple browsers connect to a web server running on your laptop or in the cloud.",
    "categories": [
      "Cloud:",
      "Tools:Utilities",
      "Other:"
    ],
    "platform": "linux",
    "note": "DerbyNet is the new standard in race management software for Pinewood Derby events. It's free, and it's open source. With DerbyNet, multiple browsers connect to a web server running on your laptop or in the cloud.",
    "logo": "https://raw.githubusercontent.com/mitchellriley/unraid-docker/master/mitchellriley/images/derbynet_server.png",
    "name": "derbynet_server",
    "image": "mitchellriley/derbynet_server",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "443": "8051:443/tcp",
        "80": "8050:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/lib/derbynet",
        "bind": "/mnt/cache/appdata/derbynet_server/data"
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "TIMER_PASSWORD",
        "label": "TIMER_PASSWORD",
        "default": "555"
      },
      {
        "name": "RACE_CREW_PASSWORD",
        "label": "RACE_CREW_PASSWORD",
        "default": "murphy"
      },
      {
        "name": "RACE_COORD_PASSWORD",
        "label": "RACE_COORD_PASSWORD",
        "default": "doyourbest"
      },
      {
        "name": "PHOTO_PASSWORD",
        "label": "PHOTO_PASSWORD",
        "default": "flashbulb"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "darktable",
    "description": "Darktable is an open source photography workflow application and raw developer. A virtual lighttable and darkroom for photographers. It manages your digital negatives in a database, lets you view them through a zoomable lighttable and enables you to develop raw images and enhance them.",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "Darktable is an open source photography workflow application and raw developer. A virtual lighttable and darkroom for photographers. It manages your digital negatives in a database, lets you view them through a zoomable lighttable and enables you to develop raw images and enhance them.",
    "logo": "https://raw.githubusercontent.com/mikeylikesrocks/unraid-docker-templates/master/darktable-icon.png",
    "name": "darktable",
    "image": "mdschaefer/darktable",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3389": "3389:3389/tcp",
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/darktable"
      },
      {
        "container": "/images",
        "bind": "/mnt/user/"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "P3R-Brave-Browser",
    "description": "Brave Browser in a forwarded X11 container.\r\nBrave is a free and open-source web browser developed by Brave Software, Inc. based on the Chromium web browser. It blocks ads and website trackers, and provides a way for users to send cryptocurrency contributions in the form of Basic Attention Tokens to websites and content creators.",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "Brave Browser in a forwarded X11 container.\r\nBrave is a free and open-source web browser developed by Brave Software, Inc. based on the Chromium web browser. It blocks ads and website trackers, and provides a way for users to send cryptocurrency contributions in the form of Basic Attention Tokens to websites and content creators.",
    "logo": "https://raw.githubusercontent.com/P3R-CO/unraid/master/Brave-P3R-256px.png",
    "name": "P3R-Brave-Browser",
    "image": "p3rco/brave:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "5800": "5800:5800/tcp",
        "5900": "5900:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config/",
        "bind": "/mnt/user/appdata/P3R-Brave-Browser/"
      },
      {
        "container": "/Downloads/",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1920"
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "1080"
      },
      {
        "name": "VNC_PASSWORD",
        "label": "VNC_PASSWORD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "P3R-Firefox-Browser",
    "description": "Firefox Browser in a forwarded X11 container.\r\n Mozilla Firefox, or simply Firefox, is a free and open-source web browser developed by the Mozilla Foundation and its subsidiary, Mozilla Corporation. Firefox uses the Gecko layout engine to render web pages, which implements current and anticipated web standards.",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "Firefox Browser in a forwarded X11 container.\r\n Mozilla Firefox, or simply Firefox, is a free and open-source web browser developed by the Mozilla Foundation and its subsidiary, Mozilla Corporation. Firefox uses the Gecko layout engine to render web pages, which implements current and anticipated web standards.",
    "logo": "https://raw.githubusercontent.com/P3R-CO/unraid/master/Firefox-P3R-256px.png",
    "name": "P3R-Firefox-Browser",
    "image": "p3rco/firefox:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "5800": "5800:5800/tcp",
        "5900": "5900:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config/",
        "bind": "/mnt/user/appdata/P3R-Firefox-Browser/"
      },
      {
        "container": "/Downloads/",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "DISPLAY_WIDTH",
        "label": "DISPLAY_WIDTH",
        "default": "1920"
      },
      {
        "name": "DISPLAY_HEIGHT",
        "label": "DISPLAY_HEIGHT",
        "default": "1080"
      },
      {
        "name": "VNC_PASSWORD",
        "label": "VNC_PASSWORD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "P3R-KeePassXC",
    "description": "KeePassXC in a container.  Keep your passwords safe!\r\nI highly recommend also downloading the KeePassXC browser extension for easy input of passwords on webpages.\r\r\nSave your database in the /config folder for persistence after updates/reboots and backups with your AppData.",
    "categories": [
      "Security:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "KeePassXC in a container.  Keep your passwords safe!\r\nI highly recommend also downloading the KeePassXC browser extension for easy input of passwords on webpages.\r\r\nSave your database in the /config folder for persistence after updates/reboots and backups with your AppData.",
    "logo": "https://raw.githubusercontent.com/P3R-CO/unraid/master/KeePassXC-P3R-256px.png",
    "name": "P3R-KeePassXC",
    "image": "p3rco/keepassxc:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "5800": "5800:5800/tcp",
        "5900": "5900:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config/",
        "bind": "/mnt/user/appdata/P3R-KeePassXC/"
      }
    ],
    "env": [
      {
        "name": "VNC_PASSWORD",
        "label": "VNC_PASSWORD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "P3R-LEMP-Stack",
    "description": "P3R LEMP Stack is an All-In-One container built on Debian with NGINX, MariaDB, and PHP7.3 all pre-loaded.",
    "categories": [
      "Network:Web",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "P3R LEMP Stack is an All-In-One container built on Debian with NGINX, MariaDB, and PHP7.3 all pre-loaded.",
    "logo": "https://raw.githubusercontent.com/P3R-CO/unraid/master/LEMP-P3R-256px.png",
    "name": "P3R-LEMP-Stack",
    "image": "p3rco/lemp:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "443": "443:443/tcp",
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config/",
        "bind": "/mnt/user/appdata/P3R-LEMP-Stack/"
      }
    ]
  },
  {
    "type": 1,
    "title": "P3R-OpenRGB",
    "description": "A simple container that opens OpenRGB in a browser so that you can control all of your System lighting while still running UnraidOS.\r\n\r\nOpenRGB is an Open source RGB lighting control that doesn't depend on manufacturer software. ASUS, ASRock, Corsair, G.Skill, Gigabyte, HyperX, MSI, Razer, ThermalTake, and more are currently supported.\r\n\r\nWARNING!\r\nThis project provides a tool to probe the SMBus.  This is a potentially dangerous operation if you don't know what you're doing.  Exercise caution when clicking the Detect Devices or Dump Device buttons.  There have been reports of Gigabyte motherboards having serious issues (bricking the RGB or bricking the entire board) when dumping certain devices.  On the same lines, exercise the same caution when using the i2cdump and i2cdetect commands on Linux, as they perform the same functionality.  OpenRGB is not liable for damage caused by improper SMBus access.\r\nAs of now, only Gigabyte RGB Fusion 2.0 boards have been reported to have issues.",
    "categories": [
      "Tools:Utilities",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "A simple container that opens OpenRGB in a browser so that you can control all of your System lighting while still running UnraidOS.\r\n\r\nOpenRGB is an Open source RGB lighting control that doesn't depend on manufacturer software. ASUS, ASRock, Corsair, G.Skill, Gigabyte, HyperX, MSI, Razer, ThermalTake, and more are currently supported.\r\n\r\nWARNING!\r\nThis project provides a tool to probe the SMBus.  This is a potentially dangerous operation if you don't know what you're doing.  Exercise caution when clicking the Detect Devices or Dump Device buttons.  There have been reports of Gigabyte motherboards having serious issues (bricking the RGB or bricking the entire board) when dumping certain devices.  On the same lines, exercise the same caution when using the i2cdump and i2cdetect commands on Linux, as they perform the same functionality.  OpenRGB is not liable for damage caused by improper SMBus access.\r\nAs of now, only Gigabyte RGB Fusion 2.0 boards have been reported to have issues.",
    "logo": "https://raw.githubusercontent.com/P3R-CO/unraid/master/OpenRGB-P3R-256px.png",
    "name": "P3R-OpenRGB",
    "image": "p3rco/openrgb:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "5800": "5800:5800/tcp",
        "5900": "5900:5900/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config/",
        "bind": "/mnt/user/appdata/P3R-OpenRGB/"
      },
      {
        "container": "/sys/bus/i2c/devices/",
        "bind": "/sys/bus/i2c/devices/"
      },
      {
        "container": "/dev/i2c-0",
        "bind": "/dev/i2c-0"
      }
    ],
    "env": [
      {
        "name": "VNC_PASSWORD",
        "label": "VNC_PASSWORD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "blynk-server",
    "description": "Template to setup a Blynk server on Unraid\n\n    There is an issue where this Docker doesn't seem to create the server.properties file\n    in the config directory, located at appdata/blynk-server/config by default. You will\n    need manually create this file before the server will start. Just create a blank file\n    at that location called server.properties and your server will start.",
    "categories": [
      "HomeAutomation:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Template to setup a Blynk server on Unraid\n\n    There is an issue where this Docker doesn't seem to create the server.properties file\n    in the config directory, located at appdata/blynk-server/config by default. You will\n    need manually create this file before the server will start. Just create a blank file\n    at that location called server.properties and your server will start.",
    "logo": "https://lh3.googleusercontent.com/rTRWfl713otPTrmafsJ3OLb7I30XS1iBSZyP1WXYXKAlwkTMhihdMw_gDv5ogjEtQ1P6",
    "name": "blynk-server",
    "image": "mpherg/blynk-server:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp",
        "8440": "8440:8440/tcp",
        "9443": "9443:9443/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/blynk-server/data"
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/blynk-server/config"
      }
    ]
  },
  {
    "type": 1,
    "title": "icloudpd",
    "description": "An Alpine Linux Docker container for ndbroadbent's iCloud Photos Downloader writen by boredazfcuk. I use it for syncing the photo streams of all the iDevices in my house back to my server because it's the only way of backing up multiple devices to a single location. It uses the system keyring to securely store credentials, has HEIC to JPG conversion capability, and supports Telegram, Prowl, PushBullet and WebHook notifications.",
    "categories": [
      "Backup:",
      "Cloud:",
      "Downloaders:"
    ],
    "platform": "linux",
    "note": "An Alpine Linux Docker container for ndbroadbent's iCloud Photos Downloader writen by boredazfcuk. I use it for syncing the photo streams of all the iDevices in my house back to my server because it's the only way of backing up multiple devices to a single location. It uses the system keyring to securely store credentials, has HEIC to JPG conversion capability, and supports Telegram, Prowl, PushBullet and WebHook notifications.",
    "logo": "https://raw.githubusercontent.com/Womabre/-unraid-docker-templates/master/images/photos_icon_large.png",
    "name": "icloudpd",
    "image": "boredazfcuk/icloudpd",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/icloudpd"
      },
      {
        "container": "/home/user/iCloud",
        "bind": "/mnt/user/icloud"
      }
    ],
    "env": [
      {
        "name": "prowl_api_key",
        "label": "prowl_api_key",
        "default": ""
      },
      {
        "name": "pushbullet_api_key",
        "label": "pushbullet_api_key",
        "default": ""
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "telegram_token",
        "label": "telegram_token",
        "default": ""
      },
      {
        "name": "telegram_chat_id",
        "label": "telegram_chat_id",
        "default": ""
      },
      {
        "name": "authentication_type",
        "label": "authentication_type",
        "default": "2FA"
      },
      {
        "name": "directory_permissions",
        "label": "directory_permissions",
        "default": "777"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "apple_id",
        "label": "apple_id",
        "default": "your@appleid.com"
      },
      {
        "name": "synchronisation_interval",
        "label": "synchronisation_interval",
        "default": "86400"
      },
      {
        "name": "TZ",
        "label": "TZ",
        "default": "Europe/London"
      },
      {
        "name": "file_permissions",
        "label": "file_permissions",
        "default": "666"
      },
      {
        "name": "notification_type",
        "label": "notification_type",
        "default": ""
      },
      {
        "name": "apple_password",
        "label": "apple_password",
        "default": "usekeyring"
      },
      {
        "name": "command_line_options",
        "label": "command_line_options",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "phpIPAM-cron",
    "description": "phpIPAM - Open source IP address management.",
    "categories": [
      "Network:Management"
    ],
    "platform": "linux",
    "note": "phpIPAM - Open source IP address management.",
    "logo": "https://phpipam.net/css/images/logo_icon.png",
    "name": "phpIPAM-cron",
    "image": "phpipam/phpipam-cron",
    "restart_policy": "unless-stopped",
    "env": [
      {
        "name": "IPAM_DATABASE_HOST",
        "label": "IPAM_DATABASE_HOST",
        "default": "127.0.0.1"
      },
      {
        "name": "IPAM_DATABASE_PASS",
        "label": "IPAM_DATABASE_PASS",
        "default": "phpipamadmin"
      },
      {
        "name": "SCAN_INTERVAL",
        "label": "SCAN_INTERVAL",
        "default": "1h"
      },
      {
        "name": "PROXY_SERVER",
        "label": "PROXY_SERVER",
        "default": "myproxy.something.com"
      },
      {
        "name": "IPAM_DATABASE_PORT",
        "label": "IPAM_DATABASE_PORT",
        "default": "3306"
      },
      {
        "name": "PROXY_ENABLED",
        "label": "PROXY_ENABLED",
        "default": "false"
      },
      {
        "name": "PROXY_PORT",
        "label": "PROXY_PORT",
        "default": "8080"
      },
      {
        "name": "PROXY_USER",
        "label": "PROXY_USER",
        "default": "USERNAME"
      },
      {
        "name": "PROXY_USE_AUTH",
        "label": "PROXY_USE_AUTH",
        "default": "false"
      },
      {
        "name": "PROXY_PASS",
        "label": "PROXY_PASS",
        "default": "PASSWORD"
      },
      {
        "name": "IPAM_DATABASE_NAME",
        "label": "IPAM_DATABASE_NAME",
        "default": "phpipam"
      },
      {
        "name": "IPAM_DATABASE_USER",
        "label": "IPAM_DATABASE_USER",
        "default": "phpipam"
      },
      {
        "name": "IPAM_DATABASE_WEBHOST",
        "label": "IPAM_DATABASE_WEBHOST",
        "default": "localhost"
      },
      {
        "name": "IPAM_GMAPS_API_KEY",
        "label": "IPAM_GMAPS_API_KEY",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "phpIPAM-www",
    "description": "phpIPAM - Open source IP address management.",
    "categories": [
      "Network:Management"
    ],
    "platform": "linux",
    "note": "phpIPAM - Open source IP address management.",
    "logo": "https://phpipam.net/css/images/logo_icon.png",
    "name": "phpIPAM-www",
    "image": "phpipam/phpipam-www",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "80:80/tcp"
      }
    ],
    "env": [
      {
        "name": "IPAM_DATABASE_PORT",
        "label": "IPAM_DATABASE_PORT",
        "default": "3306"
      },
      {
        "name": "IPAM_DATABASE_USER",
        "label": "IPAM_DATABASE_USER",
        "default": "phpipam"
      },
      {
        "name": "PROXY_ENABLED",
        "label": "PROXY_ENABLED",
        "default": "false"
      },
      {
        "name": "PROXY_SERVER",
        "label": "PROXY_SERVER",
        "default": "myproxy.something.com"
      },
      {
        "name": "PROXY_PORT",
        "label": "PROXY_PORT",
        "default": "8080"
      },
      {
        "name": "PROXY_PASS",
        "label": "PROXY_PASS",
        "default": "PASSWORD"
      },
      {
        "name": "IPAM_DATABASE_HOST",
        "label": "IPAM_DATABASE_HOST",
        "default": "127.0.0.1"
      },
      {
        "name": "IPAM_DATABASE_NAME",
        "label": "IPAM_DATABASE_NAME",
        "default": "phpipam"
      },
      {
        "name": "IPAM_DATABASE_PASS",
        "label": "IPAM_DATABASE_PASS",
        "default": "phpipamadmin"
      },
      {
        "name": "IPAM_DATABASE_WEBHOST",
        "label": "IPAM_DATABASE_WEBHOST",
        "default": "localhost"
      },
      {
        "name": "IPAM_GMAPS_API_KEY",
        "label": "IPAM_GMAPS_API_KEY",
        "default": ""
      },
      {
        "name": "PROXY_USE_AUTH",
        "label": "PROXY_USE_AUTH",
        "default": "false"
      },
      {
        "name": "PROXY_USER",
        "label": "PROXY_USER",
        "default": "USERNAME"
      }
    ]
  },
  {
    "type": 1,
    "title": "happypandax",
    "description": "A cross-platform server and client application for managing and reading manga and doujinshi.",
    "categories": [
      "Downloaders:",
      "MediaServer:Books",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "A cross-platform server and client application for managing and reading manga and doujinshi.",
    "logo": "https://raw.githubusercontent.com/GlassedSilver/unRAID-CAs/master/happypandax/hpx_logo.png",
    "name": "happypandax",
    "image": "twiddly/happypandax:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "7006": "7006:7006/tcp",
        "7007": "7007:7007/tcp",
        "7008": "7008:7008/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/happypandax/"
      },
      {
        "container": "/content",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "RUN_IN_BACKGROUND",
        "label": "RUN_IN_BACKGROUND",
        "default": "true"
      },
      {
        "name": "AUTOSTART_ON_BOOT",
        "label": "AUTOSTART_ON_BOOT",
        "default": "always"
      }
    ]
  },
  {
    "type": 1,
    "title": "intel-gpu-telegraf",
    "description": "Docker container running telegraf and polling Intel GPU stats.",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "Docker container running telegraf and polling Intel GPU stats.",
    "logo": "https://raw.githubusercontent.com/brianmiller/docker-templates/master/intel-gpu-telegraf/intel_telegraf.png",
    "name": "intel-gpu-telegraf",
    "image": "theoriginalbrian/intel-gpu-telegraf",
    "restart_policy": "unless-stopped",
    "env": [
      {
        "name": "telegraf_hostname",
        "label": "telegraf_hostname",
        "default": "myhostname"
      },
      {
        "name": "influx_url",
        "label": "influx_url",
        "default": "http://yourserver:port"
      },
      {
        "name": "influx_db",
        "label": "influx_db",
        "default": "telegraf"
      },
      {
        "name": "influx_password",
        "label": "influx_password",
        "default": ""
      },
      {
        "name": "influx_skip_db_creation",
        "label": "influx_skip_db_creation",
        "default": "false"
      }
    ]
  },
  {
    "type": 1,
    "title": "OctoFarm",
    "description": "OctoFarm is a web server and client combination for unifying multiple instances of Octoprint.\n\tYou can manage and monitor as many instances as you want from a single interface giving you full control over your 3D printer farm.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "OctoFarm is a web server and client combination for unifying multiple instances of Octoprint.\n\tYou can manage and monitor as many instances as you want from a single interface giving you full control over your 3D printer farm.",
    "logo": "https://raw.githubusercontent.com/NotExpectedYet/OctoFarm/master/views/android-chrome-512x512.png",
    "name": "OctoFarm",
    "image": "octofarm/octofarm",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "4000": "4000:4000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/app/logs",
        "bind": "/mnt/user/appdata/octofarm/logs"
      },
      {
        "container": "/scripts",
        "bind": "/mnt/user/appdata/octofarm/scripts"
      },
      {
        "container": "/app/images",
        "bind": "/mnt/user/appdata/OctoFarm/images"
      }
    ],
    "env": [
      {
        "name": "MONGO",
        "label": "MONGO",
        "default": "mongodb://mongo/octofarm"
      }
    ]
  },
  {
    "type": 1,
    "title": "OctoFarm-Monlithic",
    "description": "OctoFarm is a web server and client combination for unifying multiple instances of Octoprint.\n\tThis image also includes a built-in self-contained MongoDB instance.\n\tYou can manage and monitor as many instances as you want from a single interface giving you full control over your 3D printer farm. This image also includes a built-in self-contained MongoDB instance.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "OctoFarm is a web server and client combination for unifying multiple instances of Octoprint.\n\tThis image also includes a built-in self-contained MongoDB instance.\n\tYou can manage and monitor as many instances as you want from a single interface giving you full control over your 3D printer farm. This image also includes a built-in self-contained MongoDB instance.",
    "logo": "https://raw.githubusercontent.com/NotExpectedYet/OctoFarm/master/views/android-chrome-512x512.png",
    "name": "OctoFarm-Monlithic",
    "image": "octofarm/octofarm:monolithic-latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "4000": "4000:4000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data/db",
        "bind": "/mnt/user/appdata/octofarm/db"
      },
      {
        "container": "/data/logs",
        "bind": "/mnt/user/appdata/octofarm/logs"
      },
      {
        "container": "/scripts",
        "bind": "/mnt/user/appdata/octofarm/scripts"
      },
      {
        "container": "/app/images",
        "bind": "/mnt/user/appdata/OctoFarm/images"
      },
      {
        "container": "/app/logs",
        "bind": "/mnt/user/appdata/OctoFarm/logs"
      }
    ]
  },
  {
    "type": 1,
    "title": "OctoPrint",
    "description": "OctoPrint provides a snappy web interface for controlling consumer 3D printers. This image does not contain mjpg-streamer.\n\tAn invite to the Discord server can be found at discord.octoprint.org.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "OctoPrint provides a snappy web interface for controlling consumer 3D printers. This image does not contain mjpg-streamer.\n\tAn invite to the Discord server can be found at discord.octoprint.org.",
    "logo": "https://octoprint.org/assets/img/logo.png",
    "name": "OctoPrint",
    "image": "octoprint/octoprint:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5000": "0:5000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/home/octoprint",
        "bind": "/mnt/user/appdata/octoprint\n\t"
      }
    ]
  },
  {
    "type": 1,
    "title": "Authelia",
    "description": "Authelia is an open-source authentication and authorization server providing 2-factor authentication and single sign-on (SSO) for your applications via a web portal. It acts as a companion of reverse proxies like nginx, Traefik or HAProxy to let them know whether queries should pass through. Instructions: https://github.com/ibracorp/authelia.",
    "categories": [
      "Security:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Authelia is an open-source authentication and authorization server providing 2-factor authentication and single sign-on (SSO) for your applications via a web portal. It acts as a companion of reverse proxies like nginx, Traefik or HAProxy to let them know whether queries should pass through. Instructions: https://github.com/ibracorp/authelia.",
    "logo": "https://i.imgur.com/DCn2yiv.png",
    "name": "Authelia",
    "image": "authelia/authelia",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "9091": "9091:9091/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/authelia"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      }
    ]
  },
  {
    "type": 1,
    "title": "GrafanaPromtail",
    "description": "Promtail is an agent which ships the contents of local logs to a private Loki instance or Grafana Cloud. It is usually deployed to every machine that has applications needed to be monitored.\r\n\r\nIt primarily:\r\n\r\nDiscovers targets\r\nAttaches labels to log streams\r\nPushes them to the Loki instance.\r\nCurrently, Promtail can tail logs from two sources: local log files and the systemd journal (on AMD64 machines only).\r\nPromtail supports receiving IETF Syslog (RFC5424) messages from a tcp stream: (https://github.com/grafana/loki/blob/v1.5.0/docs/clients/promtail/scraping.md#syslog-receiver)\r\n\r\nNOTE: Download the config.yml file from https://github.com/natcoso9955/unRAID-docker/blob/master/configs/promtail/config.yml before you start the container.\r\nWill need to be placed into your Host Path 1.\r\nMore info: \r\n https://github.com/grafana/loki/blob/master/docs/clients/promtail/configuration.md",
    "categories": [
      "Tools:Utilities",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "Promtail is an agent which ships the contents of local logs to a private Loki instance or Grafana Cloud. It is usually deployed to every machine that has applications needed to be monitored.\r\n\r\nIt primarily:\r\n\r\nDiscovers targets\r\nAttaches labels to log streams\r\nPushes them to the Loki instance.\r\nCurrently, Promtail can tail logs from two sources: local log files and the systemd journal (on AMD64 machines only).\r\nPromtail supports receiving IETF Syslog (RFC5424) messages from a tcp stream: (https://github.com/grafana/loki/blob/v1.5.0/docs/clients/promtail/scraping.md#syslog-receiver)\r\n\r\nNOTE: Download the config.yml file from https://github.com/natcoso9955/unRAID-docker/blob/master/configs/promtail/config.yml before you start the container.\r\nWill need to be placed into your Host Path 1.\r\nMore info: \r\n https://github.com/grafana/loki/blob/master/docs/clients/promtail/configuration.md",
    "logo": "https://raw.githubusercontent.com/natcoso9955/unRAID-docker/master/icons/loki.png",
    "name": "GrafanaPromtail",
    "image": "grafana/promtail",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "9080": "9080:9080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/promtail",
        "bind": "/mnt/user/appdata/promtail"
      },
      {
        "container": "/positions",
        "bind": "/mnt/user/appdata/promtail/positions"
      }
    ]
  },
  {
    "type": 1,
    "title": "GrafanaLoki",
    "description": "Loki: like Prometheus, but for logs.\r\nLoki is a horizontally-scalable, highly-available, multi-tenant log aggregation system inspired by Prometheus. It is designed to be very cost effective and easy to operate. It does not index the contents of the logs, but rather a set of labels for each log stream.\r\n\r\nDownload the local-config.yaml file from https://github.com/natcoso9955/unRAID-docker/blob/master/configs/loki/local-config.yaml before you start the container.\r\nWill need to be placed into your Host Path 1 directory.",
    "categories": [
      "Tools:Utilities",
      "Network:Management"
    ],
    "platform": "linux",
    "note": "Loki: like Prometheus, but for logs.\r\nLoki is a horizontally-scalable, highly-available, multi-tenant log aggregation system inspired by Prometheus. It is designed to be very cost effective and easy to operate. It does not index the contents of the logs, but rather a set of labels for each log stream.\r\n\r\nDownload the local-config.yaml file from https://github.com/natcoso9955/unRAID-docker/blob/master/configs/loki/local-config.yaml before you start the container.\r\nWill need to be placed into your Host Path 1 directory.",
    "logo": "https://raw.githubusercontent.com/natcoso9955/unRAID-docker/master/icons/loki.png",
    "name": "GrafanaLoki",
    "image": "grafana/loki",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3100": "3100:3100/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/loki",
        "bind": "/mnt/user/appdata/loki/conf/"
      },
      {
        "container": "/loki",
        "bind": "/mnt/user/appdata/loki/"
      }
    ]
  },
  {
    "type": 1,
    "title": "Nightscout",
    "description": "Allows the installation of Nightscout, a remote CGM monitoring system. It allows the upload and display of blood glucous values and can be configuered to issue warnings etc. This is mainly useful to diabetics.\r\n\r\nFor more information see: http://www.nightscout.info/\r\n\r\nNote that this container only contains the required data to run the website. For data logging, a MongoDB instance is necessary. \nConfiguration of Nightscout is done over variables that are passed through Docker. For ease of use, only required and important variables are exposed by default. For an extensive list of all variables, please refer to: https://github.com/nightscout/cgm-remote-monitor#environment",
    "categories": [
      "Cloud:"
    ],
    "platform": "linux",
    "note": "Allows the installation of Nightscout, a remote CGM monitoring system. It allows the upload and display of blood glucous values and can be configuered to issue warnings etc. This is mainly useful to diabetics.\r\n\r\nFor more information see: http://www.nightscout.info/\r\n\r\nNote that this container only contains the required data to run the website. For data logging, a MongoDB instance is necessary. \nConfiguration of Nightscout is done over variables that are passed through Docker. For ease of use, only required and important variables are exposed by default. For an extensive list of all variables, please refer to: https://github.com/nightscout/cgm-remote-monitor#environment",
    "logo": "https://avatars2.githubusercontent.com/u/7661012?s=200\u0026amp;v=4",
    "name": "Nightscout",
    "image": "nightscout/cgm-remote-monitor-travis:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "1337": "1337:1337/tcp"
      }
    ],
    "env": [
      {
        "name": "API_SECRET",
        "label": "API_SECRET",
        "default": ""
      },
      {
        "name": "ENABLE",
        "label": "ENABLE",
        "default": "delta direction upbat timeago devicestatus errorcodes ar2 simplealarms profile"
      },
      {
        "name": "BG_TARGET_TOP",
        "label": "BG_TARGET_TOP",
        "default": ""
      },
      {
        "name": "THEME",
        "label": "THEME",
        "default": "colors"
      },
      {
        "name": "TIME_FORMAT",
        "label": "TIME_FORMAT",
        "default": "24"
      },
      {
        "name": "INSECURE_USE_HTTP",
        "label": "INSECURE_USE_HTTP",
        "default": "true"
      },
      {
        "name": "MONGO_CONNECTION",
        "label": "MONGO_CONNECTION",
        "default": "mongodb://db-user:db-password@mongodb-instance:port/db-name"
      },
      {
        "name": "DISPLAY_UNITS",
        "label": "DISPLAY_UNITS",
        "default": ""
      },
      {
        "name": "BASE_URL",
        "label": "BASE_URL",
        "default": ""
      },
      {
        "name": "BG_HIGH",
        "label": "BG_HIGH",
        "default": ""
      },
      {
        "name": "BG_LOW",
        "label": "BG_LOW",
        "default": ""
      },
      {
        "name": "BG_TARGET_BOTTOM",
        "label": "BG_TARGET_BOTTOM",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "jupyterlab",
    "description": "JupyterLab is a web-based interactive development environment for Jupyter notebooks, code, and data.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "JupyterLab is a web-based interactive development environment for Jupyter notebooks, code, and data.",
    "logo": "https://raw.githubusercontent.com/BGameiro2000/unraid-ca/master/jupyterlab/icon.png",
    "name": "jupyterlab",
    "image": "bgameiro/arch-jupyterlab",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8888": "9999:8888/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/appdata",
        "bind": "/mnt/user/appdata/jupyterlab/config"
      },
      {
        "container": "/opt/app/data",
        "bind": "/mnt/user/appdata/jupyterlab/notebooks"
      }
    ],
    "env": [
      {
        "name": "PACKAGES",
        "label": "PACKAGES",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "trilium",
    "description": "Trilium Notes is a hierarchical note taking application with focus on building large personal knowledge bases.",
    "categories": [
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Trilium Notes is a hierarchical note taking application with focus on building large personal knowledge bases.",
    "logo": "https://raw.githubusercontent.com/BGameiro2000/unraid-ca/master/trilium/icon.png",
    "name": "trilium",
    "image": "bgameiro/trilium",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8888:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/root/trilium-data",
        "bind": "/mnt/user/appdata/trilium"
      },
      {
        "container": "/root/trilium-data/backup",
        "bind": "/mnt/user/appdata/trilium/backup"
      }
    ]
  },
  {
    "type": 1,
    "title": "OpenSpeedTest-Server-For-LAN-WiFI-HTML5-Network-Speed-Test",
    "description": "OpenSpeedTest-Server Plugin for UNRAID | HTML5 Network Performance Estimation Tool.\r\n\r\nYou can Test your WiFi/LAN Speed.\r\n-Run a Speed Test from Your SMART TV \u0026amp; Make sure you have enough Bandwidth to watch 4K60FPS VIDEO FROM your NAS.\r\n-Run a Speed Test from Any Device with a Web Browser that is Internet Explore 10 or New!\r\n-Run a Quick speed test to your work place server via VPN and make sure you have enough bandwidth to finish your job. Install this in your Office Server.\r\n-Run a Quick speed test and Ensure your bandwidth Before Running a Full Backup, Transferring Huge Files, Download Large Files From the Internet, Torrent Downloads, Live Streaming, Playing Low Latency Video Games or Watching a Movie in your SMART TV from Your Media Server etc.\r\n\r\n-An application for launching a quick speed test server. Without using any commands!\r\n\r\nLight Weight HTML5 Network Speed Test written in Pure Vanilla Javascript - Less than 5Kb Gzip.\r\n\r\nNo PHP or any other Server side Language required. Very little resource utilization. All you need is a Web Server Like Nginx.\r\n\r\nFirst test your local network speed before pointing fingers towards your ISP for slow and sluggish internet experience. Introducing Network Speed Test Server for Windows , Mac \u0026amp; Linux!. For professionals docker image and source code available.",
    "categories": [
      "Tools:Utilities",
      "Network:Web"
    ],
    "platform": "linux",
    "note": "OpenSpeedTest-Server Plugin for UNRAID | HTML5 Network Performance Estimation Tool.\r\n\r\nYou can Test your WiFi/LAN Speed.\r\n-Run a Speed Test from Your SMART TV \u0026amp; Make sure you have enough Bandwidth to watch 4K60FPS VIDEO FROM your NAS.\r\n-Run a Speed Test from Any Device with a Web Browser that is Internet Explore 10 or New!\r\n-Run a Quick speed test to your work place server via VPN and make sure you have enough bandwidth to finish your job. Install this in your Office Server.\r\n-Run a Quick speed test and Ensure your bandwidth Before Running a Full Backup, Transferring Huge Files, Download Large Files From the Internet, Torrent Downloads, Live Streaming, Playing Low Latency Video Games or Watching a Movie in your SMART TV from Your Media Server etc.\r\n\r\n-An application for launching a quick speed test server. Without using any commands!\r\n\r\nLight Weight HTML5 Network Speed Test written in Pure Vanilla Javascript - Less than 5Kb Gzip.\r\n\r\nNo PHP or any other Server side Language required. Very little resource utilization. All you need is a Web Server Like Nginx.\r\n\r\nFirst test your local network speed before pointing fingers towards your ISP for slow and sluggish internet experience. Introducing Network Speed Test Server for Windows , Mac \u0026amp; Linux!. For professionals docker image and source code available.",
    "logo": "https://raw.githubusercontent.com/openspeedtest/iocage-plugin-OpenSpeedTest-Server/master/openspeedtest.png",
    "name": "OpenSpeedTest-Server-For-LAN-WiFI-HTML5-Network-Speed-Test",
    "image": "openspeedtest/latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "3001:8080/tcp"
      }
    ]
  },
  {
    "type": 1,
    "title": "observium",
    "description": "Observium is an autodiscovering network monitoring platform supporting a wide range of hardware platforms and operating systems.",
    "categories": [
      "Network:Management"
    ],
    "platform": "linux",
    "note": "Observium is an autodiscovering network monitoring platform supporting a wide range of hardware platforms and operating systems.",
    "logo": "https://i.imgur.com/CGrAh79.png",
    "name": "observium",
    "image": "uberchuckie/observium",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8668": "8668:8668/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/opt/observium/rrd",
        "bind": "/mnt/user/appdata/observium/rrd"
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/observium/config"
      },
      {
        "container": "/opt/observium/logs",
        "bind": "/mnt/user/appdata/observium/logs"
      }
    ]
  },
  {
    "type": 1,
    "title": "organizrv2",
    "description": "Your Media Server's one-stop shop! HTPC/Homelab services organizer, written in PHP. The new, upgraded official image for Organzir v2.",
    "categories": [
      "HomeAutomation:",
      "Network:Management",
      "MediaApp:Other",
      "MediaServer:Other",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Your Media Server's one-stop shop! HTPC/Homelab services organizer, written in PHP. The new, upgraded official image for Organzir v2.",
    "logo": "https://raw.githubusercontent.com/causefx/Organizr/v2-master/plugins/images/organizr/logo-no-border.png",
    "name": "organizrv2",
    "image": "organizr/organizr",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "0:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/organizr"
      }
    ],
    "env": [
      {
        "name": "branch",
        "label": "branch",
        "default": "master"
      },
      {
        "name": "fpm",
        "label": "fpm",
        "default": "false|true"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "MediaElch",
    "description": "Mediaelch is a Tool to manage your movie and show libary regarding the metadata and artwork.",
    "categories": [
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "Mediaelch is a Tool to manage your movie and show libary regarding the metadata and artwork.",
    "logo": "https://www.kvibes.de/img/mediaelch/icon.png",
    "name": "MediaElch",
    "image": "masonxx/mediaelch",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5800": "5800:5800/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/shows",
        "bind": "/mnt/user"
      },
      {
        "container": "/config/xdg/config/kvibes",
        "bind": "/mnt/cache/appdata/config"
      },
      {
        "container": "/movies",
        "bind": "/mnt/user/"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "RSSTT---RSS-To-Telegram",
    "description": "A self-hosted telegram python bot that dumps posts from RSS feeds to a telegram chat. This script was created because all the third party services were unreliable, slow.",
    "categories": [
      "Network:Other",
      "Network:Messenger",
      "Productivity:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "A self-hosted telegram python bot that dumps posts from RSS feeds to a telegram chat. This script was created because all the third party services were unreliable, slow.",
    "logo": "https://raw.githubusercontent.com/BoKKeR/RSS-to-Telegram-Bot/master/rsstt.png",
    "name": "RSSTT---RSS-To-Telegram",
    "image": "bokker/rss.to.telegram:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/RSSTT"
      }
    ],
    "env": [
      {
        "name": "TOKEN",
        "label": "TOKEN",
        "default": ""
      },
      {
        "name": "CHATID",
        "label": "CHATID",
        "default": ""
      },
      {
        "name": "DELAY",
        "label": "DELAY",
        "default": "60"
      }
    ]
  },
  {
    "type": 1,
    "title": "post-recording",
    "description": "Watches for .ts files made by Live TV recordings, convert them to a friendly format, extract .srt file, add chapters with comchap or remove them with comcut. Tested with Emby recordings.\r\n\r\nNvidia GPU Use\r\nUsing the Unraid Nvidia Plugin to install a version of Unraid with the Nvidia Drivers installed and\r\nadd --runtime=nvidia to \"extra parameters\" (switch on advanced view) and\r\ncopy your GPU UUID to NVIDIA_VISIBLE_DEVICES\r\n  \r\n  --------New Variable added --- verify your old custom.sh--------",
    "categories": [
      "MediaApp:Video"
    ],
    "platform": "linux",
    "note": "Watches for .ts files made by Live TV recordings, convert them to a friendly format, extract .srt file, add chapters with comchap or remove them with comcut. Tested with Emby recordings.\r\n\r\nNvidia GPU Use\r\nUsing the Unraid Nvidia Plugin to install a version of Unraid with the Nvidia Drivers installed and\r\nadd --runtime=nvidia to \"extra parameters\" (switch on advanced view) and\r\ncopy your GPU UUID to NVIDIA_VISIBLE_DEVICES\r\n  \r\n  --------New Variable added --- verify your old custom.sh--------",
    "logo": "https://raw.githubusercontent.com/chacawaca/docker-post-recording/master/Icon.png",
    "name": "post-recording",
    "image": "chacawaca/post-recording",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/watch",
        "bind": ""
      },
      {
        "container": "/backup",
        "bind": ""
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/post-recording"
      }
    ],
    "env": [
      {
        "name": "SOURCE_EXT",
        "label": "SOURCE_EXT",
        "default": "ts"
      },
      {
        "name": "POST_PROCESS",
        "label": "POST_PROCESS",
        "default": "comchap"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "DELETE_TS",
        "label": "DELETE_TS",
        "default": "1"
      },
      {
        "name": "SUBTITLES",
        "label": "SUBTITLES",
        "default": "1"
      },
      {
        "name": "CONVERSION_FORMAT",
        "label": "CONVERSION_FORMAT",
        "default": "mkv"
      },
      {
        "name": "NVIDIA_VISIBLE_DEVICES",
        "label": "NVIDIA_VISIBLE_DEVICES",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      }
    ]
  },
  {
    "type": 1,
    "title": "DNS-DoH-companion",
    "description": "A very simple DNS server to connect to DNS-over-HTTPS service. This is similar to my other Pihole-with-DoH docker, without Pihole.\r\nYou have already browsed the web securely with https, don't send your DNS queries in plain text.\r\n\r\nThis is useful if you want to route DNS through a OpenVPN client docker (using --net=container: extra parameter) or just want encrypted DNS for your network / devices without any bells and whistles.\r\n\r\nMake sure to assign an IP (macvlan bridge) or map 53 to a different port (normal bridge). Docker will not start otherwise.",
    "categories": [
      "Network:DNS"
    ],
    "platform": "linux",
    "note": "A very simple DNS server to connect to DNS-over-HTTPS service. This is similar to my other Pihole-with-DoH docker, without Pihole.\r\nYou have already browsed the web securely with https, don't send your DNS queries in plain text.\r\n\r\nThis is useful if you want to route DNS through a OpenVPN client docker (using --net=container: extra parameter) or just want encrypted DNS for your network / devices without any bells and whistles.\r\n\r\nMake sure to assign an IP (macvlan bridge) or map 53 to a different port (normal bridge). Docker will not start otherwise.",
    "logo": "https://raw.githubusercontent.com/testdasi/simple-dns-doh/master/DNS-icon.png",
    "name": "DNS-DoH-companion",
    "image": "testdasi/simple-dns-doh:latest-amd64",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "53": "53:53/tcp"
      }
    ]
  },
  {
    "type": 1,
    "title": "Grafana-Unraid-Stack",
    "description": "Meet Gus! He has everything you need to start monitoring Unraid in style (Grafana - Influxdb - Telegraf - Loki - Promtail).\r\n\r\nNOTE: Grafana always requires some customisation to suit each exact system.\r\n\r\nIncludes both GUS demo Dashboard and Ultimate UNRAID Dashboard v1.3 (UUD - https://forums.unraid.net/topic/96895-ultimate-unraid-dashboard-uud/).\r\n\r\nHigh-level instructions: (1) Decide whether you want hddtemp or S.M.A.R.T (smartmontools) and set USE_HDDTEMP variable accordingly. Hint: GUS and UUD both use S.M.A.R.T  (2) Install docker with host network.  (3) Go to ip:3006 to access grafana, login with admin/admin and customize away.\r\n\r\nFor more detailed instructions, refer to the support thread (https://forums.unraid.net/topic/96233-support-testdasi-repo/) or project page (https://github.com/testdasi/grafana-unraid-stack).",
    "categories": [
      "Productivity:",
      "Tools:Utilities",
      "Other:"
    ],
    "platform": "linux",
    "note": "Meet Gus! He has everything you need to start monitoring Unraid in style (Grafana - Influxdb - Telegraf - Loki - Promtail).\r\n\r\nNOTE: Grafana always requires some customisation to suit each exact system.\r\n\r\nIncludes both GUS demo Dashboard and Ultimate UNRAID Dashboard v1.3 (UUD - https://forums.unraid.net/topic/96895-ultimate-unraid-dashboard-uud/).\r\n\r\nHigh-level instructions: (1) Decide whether you want hddtemp or S.M.A.R.T (smartmontools) and set USE_HDDTEMP variable accordingly. Hint: GUS and UUD both use S.M.A.R.T  (2) Install docker with host network.  (3) Go to ip:3006 to access grafana, login with admin/admin and customize away.\r\n\r\nFor more detailed instructions, refer to the support thread (https://forums.unraid.net/topic/96233-support-testdasi-repo/) or project page (https://github.com/testdasi/grafana-unraid-stack).",
    "logo": "https://raw.githubusercontent.com/testdasi/grafana-unraid-stack-base/master/grafana-unraid-stack.png",
    "name": "Grafana-Unraid-Stack",
    "image": "testdasi/grafana-unraid-stack:stable-amd64",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "8086": "3006:8086/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/appdata/Grafana-Unraid-Stack/data"
      },
      {
        "container": "/rootfs/etc",
        "bind": "/etc"
      },
      {
        "container": "/var/run/docker.sock",
        "bind": "/var/run/docker.sock"
      },
      {
        "container": "/run/udev",
        "bind": "/run/udev"
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/Grafana-Unraid-Stack/config"
      },
      {
        "container": "/rootfs",
        "bind": "/"
      },
      {
        "container": "/rootfs/proc",
        "bind": "/proc"
      },
      {
        "container": "/rootfs/sys",
        "bind": "/sys"
      },
      {
        "container": "/var/run/utmp",
        "bind": "/var/run/utmp"
      }
    ],
    "env": [
      {
        "name": "HOST_SYS",
        "label": "HOST_SYS",
        "default": "/rootfs/sys"
      },
      {
        "name": "INFLUXDB_HTTP_PORT",
        "label": "INFLUXDB_HTTP_PORT",
        "default": "8086"
      },
      {
        "name": "PROMTAIL_PORT",
        "label": "PROMTAIL_PORT",
        "default": "9086"
      },
      {
        "name": "GRAFANA_PORT",
        "label": "GRAFANA_PORT",
        "default": "3006"
      },
      {
        "name": "HOST_ETC",
        "label": "HOST_ETC",
        "default": "/rootfs/etc"
      },
      {
        "name": "HOST_PROC",
        "label": "HOST_PROC",
        "default": "/rootfs/proc"
      },
      {
        "name": "HOST_MOUNT_PREFIX",
        "label": "HOST_MOUNT_PREFIX",
        "default": "/rootfs"
      },
      {
        "name": "USE_HDDTEMP",
        "label": "USE_HDDTEMP",
        "default": "no"
      },
      {
        "name": "LOKI_PORT",
        "label": "LOKI_PORT",
        "default": "3100"
      }
    ]
  },
  {
    "type": 1,
    "title": "OpenVPN-AIO-Client",
    "description": "An \"all-in-one\" docker for all your private browsing needs (including OpenVPN client with nftables kill switch ; Socks5 + HTTP proxy to both VPN and TOR (the onion router) ; DNS server to DoT (DNS-over-TLS) services). \r\n\r\nNOTE: you must place your own OpenVPN configuration to the host path that is mapped to /etc/openvpn (The ovpn file must be named openvpn.ovpn. Credentials + certs can be in the same file or split out into multiple files - the flexibility is yours.) \r\n\r\nSet DNS_SERVERS to 127.2.2.2 to use DNS-over-TLS (use google and cloudflare services by default). Your DNS query out of the VPN exit will also be encrypted for even more security. Set it to other services IP's will use normal unencrypted services. \r\n\r\nSet HOST_NETWORK to your Unraid server network in CIDR format e.g. 192.168.1.0/24.\r\n\r\nFor more detailed instructions, refer to the support thread (https://forums.unraid.net/topic/96233-support-testdasi-repo/) or project page (https://github.com/testdasi/openvpn-client-aio).",
    "categories": [
      "Security:",
      "Network:Web",
      "Network:DNS",
      "Network:Proxy",
      "Network:VPN",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "An \"all-in-one\" docker for all your private browsing needs (including OpenVPN client with nftables kill switch ; Socks5 + HTTP proxy to both VPN and TOR (the onion router) ; DNS server to DoT (DNS-over-TLS) services). \r\n\r\nNOTE: you must place your own OpenVPN configuration to the host path that is mapped to /etc/openvpn (The ovpn file must be named openvpn.ovpn. Credentials + certs can be in the same file or split out into multiple files - the flexibility is yours.) \r\n\r\nSet DNS_SERVERS to 127.2.2.2 to use DNS-over-TLS (use google and cloudflare services by default). Your DNS query out of the VPN exit will also be encrypted for even more security. Set it to other services IP's will use normal unencrypted services. \r\n\r\nSet HOST_NETWORK to your Unraid server network in CIDR format e.g. 192.168.1.0/24.\r\n\r\nFor more detailed instructions, refer to the support thread (https://forums.unraid.net/topic/96233-support-testdasi-repo/) or project page (https://github.com/testdasi/openvpn-client-aio).",
    "logo": "https://raw.githubusercontent.com/testdasi/openvpn-client-aio-base/master/openvpn-simple.png",
    "name": "OpenVPN-AIO-Client",
    "image": "testdasi/openvpn-client-aio:stable-amd64",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "53": "8153:53/tcp",
        "8118": "8118:8118/tcp",
        "8119": "8119:8119/tcp",
        "9118": "9118:9118/tcp",
        "9119": "9119:9119/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/openvpn",
        "bind": "/mnt/user/appdata/openvpn-aio-client"
      }
    ],
    "env": [
      {
        "name": "DNS_SERVERS",
        "label": "DNS_SERVERS",
        "default": "127.2.2.2"
      },
      {
        "name": "HOST_NETWORK",
        "label": "HOST_NETWORK",
        "default": "192.168.1.0/24"
      },
      {
        "name": "DNS_SERVER_PORT",
        "label": "DNS_SERVER_PORT",
        "default": "53"
      },
      {
        "name": "SOCKS_PROXY_PORT",
        "label": "SOCKS_PROXY_PORT",
        "default": "9118"
      },
      {
        "name": "HTTP_PROXY_PORT",
        "label": "HTTP_PROXY_PORT",
        "default": "8118"
      },
      {
        "name": "TOR_SOCKS_PORT",
        "label": "TOR_SOCKS_PORT",
        "default": "9119"
      },
      {
        "name": "TOR_HTTP_PORT",
        "label": "TOR_HTTP_PORT",
        "default": "8119"
      }
    ]
  },
  {
    "type": 1,
    "title": "OpenVPN-AIO-Client-Torless",
    "description": "An \"all-in-one\" docker for all your private browsing needs (including OpenVPN client with nftables kill switch ; Socks5 + HTTP proxy to the VPN ; DNS server to DoT (DNS-over-TLS) services). It's the same as OpenVPN AIO Client docker but without TOR. \r\n\r\nNOTE: you must place your own OpenVPN configuration to the host path that is mapped to /etc/openvpn (The ovpn file must be named openvpn.ovpn. Credentials + certs can be in the same file or split out into multiple files - the flexibility is yours.) \r\n\r\nSet DNS_SERVERS to 127.2.2.2 to use DNS-over-TLS (use google and cloudflare services by default). Your DNS query out of the VPN exit will also be encrypted for even more security. Set it to other services IP's will use normal unencrypted services. \r\n\r\nSet HOST_NETWORK to your Unraid server network in CIDR format e.g. 192.168.1.0/24.\r\n\r\nFor more detailed instructions, refer to the support thread (https://forums.unraid.net/topic/96233-support-testdasi-repo/) or project page (https://github.com/testdasi/openvpn-client-aio).",
    "categories": [
      "Security:",
      "Network:Web",
      "Network:DNS",
      "Network:Proxy",
      "Network:VPN",
      "Network:Other"
    ],
    "platform": "linux",
    "note": "An \"all-in-one\" docker for all your private browsing needs (including OpenVPN client with nftables kill switch ; Socks5 + HTTP proxy to the VPN ; DNS server to DoT (DNS-over-TLS) services). It's the same as OpenVPN AIO Client docker but without TOR. \r\n\r\nNOTE: you must place your own OpenVPN configuration to the host path that is mapped to /etc/openvpn (The ovpn file must be named openvpn.ovpn. Credentials + certs can be in the same file or split out into multiple files - the flexibility is yours.) \r\n\r\nSet DNS_SERVERS to 127.2.2.2 to use DNS-over-TLS (use google and cloudflare services by default). Your DNS query out of the VPN exit will also be encrypted for even more security. Set it to other services IP's will use normal unencrypted services. \r\n\r\nSet HOST_NETWORK to your Unraid server network in CIDR format e.g. 192.168.1.0/24.\r\n\r\nFor more detailed instructions, refer to the support thread (https://forums.unraid.net/topic/96233-support-testdasi-repo/) or project page (https://github.com/testdasi/openvpn-client-aio).",
    "logo": "https://raw.githubusercontent.com/testdasi/openvpn-client-aio-base/master/openvpn-simple.png",
    "name": "OpenVPN-AIO-Client-Torless",
    "image": "testdasi/openvpn-client-aio:stable-torless-amd64",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "53": "8153:53/tcp",
        "8118": "8118:8118/tcp",
        "8119": "8119:8119/tcp",
        "9118": "9118:9118/tcp",
        "9119": "9119:9119/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/openvpn",
        "bind": "/mnt/user/appdata/openvpn-aio-client"
      }
    ],
    "env": [
      {
        "name": "DNS_SERVERS",
        "label": "DNS_SERVERS",
        "default": "127.2.2.2"
      },
      {
        "name": "HOST_NETWORK",
        "label": "HOST_NETWORK",
        "default": "192.168.1.0/24"
      },
      {
        "name": "DNS_SERVER_PORT",
        "label": "DNS_SERVER_PORT",
        "default": "53"
      },
      {
        "name": "SOCKS_PROXY_PORT",
        "label": "SOCKS_PROXY_PORT",
        "default": "9118"
      },
      {
        "name": "HTTP_PROXY_PORT",
        "label": "HTTP_PROXY_PORT",
        "default": "8118"
      },
      {
        "name": "TOR_SOCKS_PORT",
        "label": "TOR_SOCKS_PORT",
        "default": "9119"
      },
      {
        "name": "TOR_HTTP_PORT",
        "label": "TOR_HTTP_PORT",
        "default": "8119"
      }
    ]
  },
  {
    "type": 1,
    "title": "OpenVPN-HyDeSa",
    "description": "OpenVPN Client with integrated (NZB)Hydra2-Deluge-Sabnzbd (and HTTP + SOCKS5 proxies). Now with a Web GUI quick launch.\r\n\r\nHigh-level instructions: (1) Create an appdata folder in host and create a openvpn subfolder. (2) Copy your OpenVPN configuration to the above openvpn subfolder (must include openvpn.ovpn + credentials + certs). (3) Don't forget to map /data in the docker to the host (you can map the parent or individual subfolders depending on needs). (4) Start docker (other apps should configure themselves on first run).\r\n\r\nDON'T FORGET THE OVPN FILE!!!\n\r\nDefault password for deluge is deluge\n\r\nSet DNS_SERVERS to 127.2.2.2 to use DNS-over-TLS (use google and cloudflare services by default). Your DNS query out of the VPN exit will also be encrypted for even more security. Set it to other services IP's will use normal unencrypted services. \r\n\r\nSet HOST_NETWORK to your Unraid server network in CIDR format e.g. 192.168.1.0/24.\r\n\r\nFor more detailed instructions, refer to the support thread (https://forums.unraid.net/topic/96233-support-testdasi-repo/) or project page (https://github.com/testdasi/openvpn-hydesa).",
    "categories": [
      "Downloaders:",
      "Security:",
      "Network:DNS",
      "Network:Proxy",
      "Network:VPN"
    ],
    "platform": "linux",
    "note": "OpenVPN Client with integrated (NZB)Hydra2-Deluge-Sabnzbd (and HTTP + SOCKS5 proxies). Now with a Web GUI quick launch.\r\n\r\nHigh-level instructions: (1) Create an appdata folder in host and create a openvpn subfolder. (2) Copy your OpenVPN configuration to the above openvpn subfolder (must include openvpn.ovpn + credentials + certs). (3) Don't forget to map /data in the docker to the host (you can map the parent or individual subfolders depending on needs). (4) Start docker (other apps should configure themselves on first run).\r\n\r\nDON'T FORGET THE OVPN FILE!!!\n\r\nDefault password for deluge is deluge\n\r\nSet DNS_SERVERS to 127.2.2.2 to use DNS-over-TLS (use google and cloudflare services by default). Your DNS query out of the VPN exit will also be encrypted for even more security. Set it to other services IP's will use normal unencrypted services. \r\n\r\nSet HOST_NETWORK to your Unraid server network in CIDR format e.g. 192.168.1.0/24.\r\n\r\nFor more detailed instructions, refer to the support thread (https://forums.unraid.net/topic/96233-support-testdasi-repo/) or project page (https://github.com/testdasi/openvpn-hydesa).",
    "logo": "https://raw.githubusercontent.com/testdasi/openvpn-hydesa-base/master/openvpn-hydesa.png",
    "name": "OpenVPN-HyDeSa",
    "image": "testdasi/openvpn-hydesa:stable-amd64",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5076": "5076:5076/tcp",
        "53": "8153:53/tcp",
        "8000": "8000:8000/tcp",
        "8080": "8080:8080/tcp",
        "8090": "8090:8090/tcp",
        "8112": "8112:8112/tcp",
        "8118": "8118:8118/tcp",
        "9118": "9118:9118/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/openvpn-hydesa"
      },
      {
        "container": "/data",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "SERVER_IP",
        "label": "SERVER_IP",
        "default": "192.168.1.2"
      },
      {
        "name": "LAUNCHER_GUI_PORT",
        "label": "LAUNCHER_GUI_PORT",
        "default": "8000"
      },
      {
        "name": "DNS_SERVER_PORT",
        "label": "DNS_SERVER_PORT",
        "default": "53"
      },
      {
        "name": "SOCKS_PROXY_PORT",
        "label": "SOCKS_PROXY_PORT",
        "default": "9118"
      },
      {
        "name": "HTTP_PROXY_PORT",
        "label": "HTTP_PROXY_PORT",
        "default": "8118"
      },
      {
        "name": "USENET_HTTP_PORT",
        "label": "USENET_HTTP_PORT",
        "default": "8080"
      },
      {
        "name": "DNS_SERVERS",
        "label": "DNS_SERVERS",
        "default": "127.2.2.2"
      },
      {
        "name": "USENET_HTTPS_PORT",
        "label": "USENET_HTTPS_PORT",
        "default": "8090"
      },
      {
        "name": "TORRENT_GUI_PORT",
        "label": "TORRENT_GUI_PORT",
        "default": "8112"
      },
      {
        "name": "SEARCHER_GUI_PORT",
        "label": "SEARCHER_GUI_PORT",
        "default": "5076"
      },
      {
        "name": "LANG",
        "label": "LANG",
        "default": "en_GB.UTF-8"
      },
      {
        "name": "HOST_NETWORK",
        "label": "HOST_NETWORK",
        "default": "192.168.1.0/24"
      }
    ]
  },
  {
    "type": 1,
    "title": "OpenVPN-HyRoSa",
    "description": "OpenVPN Client with integrated (NZB)Hydra2-RTorrent (Flood GUI)-Sabnzbd (and HTTP + SOCKS5 proxies). Now with a Web GUI quick launch.\r\n\r\nHigh-level instructions: (1) Create an appdata folder in host and create a openvpn subfolder. (2) Copy your OpenVPN configuration to the above openvpn subfolder (must include openvpn.ovpn + credentials + certs). (3) Don't forget to map /data in the docker to the host (you can map the parent or individual subfolders depending on needs). (4) Start docker (other apps should configure themselves on first run).\r\n\r\nDON'T FORGET THE OVPN FILE!!!\n\r\nDefault login to flood is admin/flood\n\r\nSet DNS_SERVERS to 127.2.2.2 to use DNS-over-TLS (use google and cloudflare services by default). Your DNS query out of the VPN exit will also be encrypted for even more security. Set it to other services IP's will use normal unencrypted services. \r\n\r\nSet HOST_NETWORK to your Unraid server network in CIDR format e.g. 192.168.1.0/24.\r\n\r\nFor more detailed instructions, refer to the support thread (https://forums.unraid.net/topic/96233-support-testdasi-repo/) or project page (https://github.com/testdasi/openvpn-hyrosa).",
    "categories": [
      "Downloaders:",
      "Security:",
      "Network:DNS",
      "Network:Proxy",
      "Network:VPN"
    ],
    "platform": "linux",
    "note": "OpenVPN Client with integrated (NZB)Hydra2-RTorrent (Flood GUI)-Sabnzbd (and HTTP + SOCKS5 proxies). Now with a Web GUI quick launch.\r\n\r\nHigh-level instructions: (1) Create an appdata folder in host and create a openvpn subfolder. (2) Copy your OpenVPN configuration to the above openvpn subfolder (must include openvpn.ovpn + credentials + certs). (3) Don't forget to map /data in the docker to the host (you can map the parent or individual subfolders depending on needs). (4) Start docker (other apps should configure themselves on first run).\r\n\r\nDON'T FORGET THE OVPN FILE!!!\n\r\nDefault login to flood is admin/flood\n\r\nSet DNS_SERVERS to 127.2.2.2 to use DNS-over-TLS (use google and cloudflare services by default). Your DNS query out of the VPN exit will also be encrypted for even more security. Set it to other services IP's will use normal unencrypted services. \r\n\r\nSet HOST_NETWORK to your Unraid server network in CIDR format e.g. 192.168.1.0/24.\r\n\r\nFor more detailed instructions, refer to the support thread (https://forums.unraid.net/topic/96233-support-testdasi-repo/) or project page (https://github.com/testdasi/openvpn-hyrosa).",
    "logo": "https://raw.githubusercontent.com/testdasi/openvpn-hyrosa-base/master/openvpn-hyrosa.png",
    "name": "OpenVPN-HyRoSa",
    "image": "testdasi/openvpn-hyrosa:stable-amd64",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3000": "3000:3000/tcp",
        "5076": "5076:5076/tcp",
        "53": "8153:53/tcp",
        "8000": "8000:8000/tcp",
        "8080": "8080:8080/tcp",
        "8090": "8090:8090/tcp",
        "8118": "8118:8118/tcp",
        "9118": "9118:9118/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/root",
        "bind": "/mnt/user/appdata/openvpn-hyrosa"
      },
      {
        "container": "/data",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "TORRENT_GUI_PORT",
        "label": "TORRENT_GUI_PORT",
        "default": "3000"
      },
      {
        "name": "SEARCHER_GUI_PORT",
        "label": "SEARCHER_GUI_PORT",
        "default": "5076"
      },
      {
        "name": "LANG",
        "label": "LANG",
        "default": "en_GB.UTF-8"
      },
      {
        "name": "HOST_NETWORK",
        "label": "HOST_NETWORK",
        "default": "192.168.1.0/24"
      },
      {
        "name": "SERVER_IP",
        "label": "SERVER_IP",
        "default": "192.168.1.2"
      },
      {
        "name": "HTTP_PROXY_PORT",
        "label": "HTTP_PROXY_PORT",
        "default": "8118"
      },
      {
        "name": "USENET_HTTP_PORT",
        "label": "USENET_HTTP_PORT",
        "default": "8080"
      },
      {
        "name": "USENET_HTTPS_PORT",
        "label": "USENET_HTTPS_PORT",
        "default": "8090"
      },
      {
        "name": "DNS_SERVERS",
        "label": "DNS_SERVERS",
        "default": "127.2.2.2"
      },
      {
        "name": "LAUNCHER_GUI_PORT",
        "label": "LAUNCHER_GUI_PORT",
        "default": "8000"
      },
      {
        "name": "DNS_SERVER_PORT",
        "label": "DNS_SERVER_PORT",
        "default": "53"
      },
      {
        "name": "SOCKS_PROXY_PORT",
        "label": "SOCKS_PROXY_PORT",
        "default": "9118"
      }
    ]
  },
  {
    "type": 1,
    "title": "Pihole-DoT-DoH",
    "description": "Pi-Hole - let's block those pesky ads! Now with DNS-over-HTTPS and DNS-over-TLS! pihole.doh!\r\n    Don't send your DNS queries in plain text.\r\n    \r\n    YOU MUST ASSIGN A STATIC IP TO THE DOCKER FOR PIHOLE TO WORK.\n    \r\n    You must set both DNS1 and DNS2 variables to 127.1.1.1#5153 (DoH) and/or 127.2.2.2#5253 (DoT). To use just DoH or just DoT, set both DNS1 and DNS2 to the same value.\r\n    \r\n    Otherwise, same instructions as official Pi-Hole.\r\n    \r\n        NOTE 1: Port 53 can only be used with custom br0/br1 network and a static IP address.\r\n    \r\n        NOTE 2: DNS lookup rarely ever works with ports other than 53 i.e. see note above about static IP.\r\n    \r\n        NOTE 3: UnRaid network settings DNS server cannot point to a docker IP.",
    "categories": [
      "Security:",
      "Other:",
      "Network:DNS"
    ],
    "platform": "linux",
    "note": "Pi-Hole - let's block those pesky ads! Now with DNS-over-HTTPS and DNS-over-TLS! pihole.doh!\r\n    Don't send your DNS queries in plain text.\r\n    \r\n    YOU MUST ASSIGN A STATIC IP TO THE DOCKER FOR PIHOLE TO WORK.\n    \r\n    You must set both DNS1 and DNS2 variables to 127.1.1.1#5153 (DoH) and/or 127.2.2.2#5253 (DoT). To use just DoH or just DoT, set both DNS1 and DNS2 to the same value.\r\n    \r\n    Otherwise, same instructions as official Pi-Hole.\r\n    \r\n        NOTE 1: Port 53 can only be used with custom br0/br1 network and a static IP address.\r\n    \r\n        NOTE 2: DNS lookup rarely ever works with ports other than 53 i.e. see note above about static IP.\r\n    \r\n        NOTE 3: UnRaid network settings DNS server cannot point to a docker IP.",
    "logo": "https://raw.githubusercontent.com/testdasi/pihole-base-buster-plus/master/pi_hole_bw.png",
    "name": "Pihole-DoT-DoH",
    "image": "testdasi/pihole-dot-doh:stable-amd64",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "443:443/tcp",
        "53": "53:53/tcp",
        "67": "67:67/udp",
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/pihole/",
        "bind": "/mnt/user/appdata/pihole-dot-doh/pihole/"
      },
      {
        "container": "/etc/dnsmasq.d/",
        "bind": "/mnt/user/appdata/pihole-dot-doh/dnsmasq.d/"
      },
      {
        "container": "/config/",
        "bind": "/mnt/user/appdata/pihole-dot-doh/config/"
      }
    ],
    "env": [
      {
        "name": "DNS1",
        "label": "DNS1",
        "default": "127.1.1.1#5153"
      },
      {
        "name": "DNS2",
        "label": "DNS2",
        "default": "127.2.2.2#5253"
      },
      {
        "name": "TZ",
        "label": "TZ",
        "default": "Europe/London"
      },
      {
        "name": "WEBPASSWORD",
        "label": "WEBPASSWORD",
        "default": "password"
      },
      {
        "name": "ServerIPv6",
        "label": "ServerIPv6",
        "default": ""
      },
      {
        "name": "IPv6",
        "label": "IPv6",
        "default": "False"
      },
      {
        "name": "INTERFACE",
        "label": "INTERFACE",
        "default": "eth0"
      },
      {
        "name": "ServerIP",
        "label": "ServerIP",
        "default": "192.168.1.24"
      },
      {
        "name": "DNSMASQ_LISTENING",
        "label": "DNSMASQ_LISTENING",
        "default": "all"
      }
    ]
  },
  {
    "type": 1,
    "title": "pihole-with-doh",
    "description": "Pi-Hole - let's block those pesky ads! Now with DNS-over-HTTPS! DoH!\r\n    You have already browsed the web securely with https, don't send your DNS queries in plain text.\r\n    \r\n    This docker uses the official Pi-Hole template with added Cloudflared to enable DoH (DNS-over-HTTPS).\r\n    \r\n    Your DNS queries are now encrypted.\n    \r\n    \r\n    Set both DNS1 and DNS2 to 127.1.1.1#5153 will exclusively use DoH. These are default values.\r\n    \r\n    Otherwise, same instructions as official Pi-Hole.\r\n    \r\n        NOTE 1: Port 53 can only be used with custom br0/br1 network and a unique IP address.\r\n    \r\n        NOTE 2: UnRaid network settings DNS server cannot point to a docker IP.",
    "categories": [
      "Security:",
      "Other:",
      "Network:DNS"
    ],
    "platform": "linux",
    "note": "Pi-Hole - let's block those pesky ads! Now with DNS-over-HTTPS! DoH!\r\n    You have already browsed the web securely with https, don't send your DNS queries in plain text.\r\n    \r\n    This docker uses the official Pi-Hole template with added Cloudflared to enable DoH (DNS-over-HTTPS).\r\n    \r\n    Your DNS queries are now encrypted.\n    \r\n    \r\n    Set both DNS1 and DNS2 to 127.1.1.1#5153 will exclusively use DoH. These are default values.\r\n    \r\n    Otherwise, same instructions as official Pi-Hole.\r\n    \r\n        NOTE 1: Port 53 can only be used with custom br0/br1 network and a unique IP address.\r\n    \r\n        NOTE 2: UnRaid network settings DNS server cannot point to a docker IP.",
    "logo": "https://raw.githubusercontent.com/testdasi/pihole-base-buster-plus/master/pi_hole_bw.png",
    "name": "pihole-with-doh",
    "image": "testdasi/pihole-with-doh:latest-amd64",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "443:443/tcp",
        "53": "53:53/tcp",
        "67": "67:67/udp",
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/dnsmasq.d/",
        "bind": "/mnt/user/appdata/pihole-doh/dnsmasq.d/"
      },
      {
        "container": "/etc/pihole/",
        "bind": "/mnt/user/appdata/pihole-doh/pihole/"
      }
    ],
    "env": [
      {
        "name": "INTERFACE",
        "label": "INTERFACE",
        "default": "eth0"
      },
      {
        "name": "ServerIPv6",
        "label": "ServerIPv6",
        "default": ""
      },
      {
        "name": "IPv6",
        "label": "IPv6",
        "default": "False"
      },
      {
        "name": "TZ",
        "label": "TZ",
        "default": "Europe/London"
      },
      {
        "name": "WEBPASSWORD",
        "label": "WEBPASSWORD",
        "default": "password"
      },
      {
        "name": "ServerIP",
        "label": "ServerIP",
        "default": "192.168.1.24"
      },
      {
        "name": "DNSMASQ_LISTENING",
        "label": "DNSMASQ_LISTENING",
        "default": "all"
      },
      {
        "name": "DNS1",
        "label": "DNS1",
        "default": "127.1.1.1#5153"
      },
      {
        "name": "DNS2",
        "label": "DNS2",
        "default": "127.1.1.1#5153"
      }
    ]
  },
  {
    "type": 1,
    "title": "pihole-with-dot",
    "description": "Pi-Hole - let's block those pesky ads! Now with DNS-over-TLS!\r\n    You have already browsed the web securely with https, don't send your DNS queries in plain text.\r\n    \r\n    This docker uses the official Pi-Hole template with added stubby to enable DoT (DNS-over-TLS).\r\n    \r\n    Your DNS queries are now encrypted.\n    \r\n    \r\n    Set both DNS1 and DNS2 to 127.2.2.2#5253 will exclusively use DoT. These are default values.\r\n    \r\n    Otherwise, same instructions as official Pi-Hole.\r\n    \r\n        NOTE 1: Port 53 can only be used with custom br0/br1 network and a unique IP address.\r\n    \r\n        NOTE 2: UnRaid network settings DNS server cannot point to a docker IP.",
    "categories": [
      "Security:",
      "Other:",
      "Network:DNS"
    ],
    "platform": "linux",
    "note": "Pi-Hole - let's block those pesky ads! Now with DNS-over-TLS!\r\n    You have already browsed the web securely with https, don't send your DNS queries in plain text.\r\n    \r\n    This docker uses the official Pi-Hole template with added stubby to enable DoT (DNS-over-TLS).\r\n    \r\n    Your DNS queries are now encrypted.\n    \r\n    \r\n    Set both DNS1 and DNS2 to 127.2.2.2#5253 will exclusively use DoT. These are default values.\r\n    \r\n    Otherwise, same instructions as official Pi-Hole.\r\n    \r\n        NOTE 1: Port 53 can only be used with custom br0/br1 network and a unique IP address.\r\n    \r\n        NOTE 2: UnRaid network settings DNS server cannot point to a docker IP.",
    "logo": "https://raw.githubusercontent.com/testdasi/pihole-base-buster-plus/master/pi_hole_bw.png",
    "name": "pihole-with-dot",
    "image": "testdasi/pihole-with-dot:latest-amd64",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "443": "443:443/tcp",
        "53": "53:53/tcp",
        "67": "67:67/udp",
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/pihole/",
        "bind": "/mnt/user/appdata/pihole-dot/pihole/"
      },
      {
        "container": "/etc/dnsmasq.d/",
        "bind": "/mnt/user/appdata/pihole-dot/dnsmasq.d/"
      }
    ],
    "env": [
      {
        "name": "TZ",
        "label": "TZ",
        "default": "Europe/London"
      },
      {
        "name": "WEBPASSWORD",
        "label": "WEBPASSWORD",
        "default": "password"
      },
      {
        "name": "INTERFACE",
        "label": "INTERFACE",
        "default": "eth0"
      },
      {
        "name": "ServerIPv6",
        "label": "ServerIPv6",
        "default": ""
      },
      {
        "name": "IPv6",
        "label": "IPv6",
        "default": "False"
      },
      {
        "name": "DNS1",
        "label": "DNS1",
        "default": "127.2.2.2#5253"
      },
      {
        "name": "DNS2",
        "label": "DNS2",
        "default": "127.2.2.2#5253"
      },
      {
        "name": "ServerIP",
        "label": "ServerIP",
        "default": "192.168.1.24"
      },
      {
        "name": "DNSMASQ_LISTENING",
        "label": "DNSMASQ_LISTENING",
        "default": "all"
      }
    ]
  },
  {
    "type": 1,
    "title": "rutorrentvpn-plus-plus",
    "description": "Based on binhex/arch-rtorrentvpn.\r\n\r\nruTorrent with OpenVPN client, http proxy, dns-over-tls and a random ovpn picker (useful to cycle to another server if current one stops working).\r\n\r\nHigh-level instructions:\r\n1. Run docker - first run will stop itself due to missing ovpn file\r\n\r\n2. Copy / extract your ovpn files in the host path that is mapped to /config/ovpn_files (at least 1 file is required, must have .ovpn extension)\r\n\r\n3. If there are separate cert files (crt + pem), place them in host location path that is mapped to /config/ovpn. Skip this step if using PIA ovpn files as certs are included in the files.\r\n\r\n4. Start docker again",
    "categories": [
      "Downloaders:",
      "Network:DNS",
      "Network:Proxy",
      "Network:VPN"
    ],
    "platform": "linux",
    "note": "Based on binhex/arch-rtorrentvpn.\r\n\r\nruTorrent with OpenVPN client, http proxy, dns-over-tls and a random ovpn picker (useful to cycle to another server if current one stops working).\r\n\r\nHigh-level instructions:\r\n1. Run docker - first run will stop itself due to missing ovpn file\r\n\r\n2. Copy / extract your ovpn files in the host path that is mapped to /config/ovpn_files (at least 1 file is required, must have .ovpn extension)\r\n\r\n3. If there are separate cert files (crt + pem), place them in host location path that is mapped to /config/ovpn. Skip this step if using PIA ovpn files as certs are included in the files.\r\n\r\n4. Start docker again",
    "logo": "https://raw.githubusercontent.com/testdasi/rutorrentvpn-plus-plus/master/rtorrent.png",
    "name": "rutorrentvpn-plus-plus",
    "image": "testdasi/rutorrentvpn-plus-plus:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5000": "5000:5000/tcp",
        "8118": "8118:8118/tcp",
        "9080": "9080:9080/tcp",
        "9443": "9443:9443/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/rutorrentvpn-plus-plus/"
      },
      {
        "container": "/data",
        "bind": "/mnt/user/downloads/rutorrentvpn-plus-plus/"
      }
    ],
    "env": [
      {
        "name": "NAME_SERVERS",
        "label": "NAME_SERVERS",
        "default": "127.2.2.2"
      },
      {
        "name": "ADDITIONAL_PORTS",
        "label": "ADDITIONAL_PORTS",
        "default": ""
      },
      {
        "name": "ENABLE_PRIVOXY",
        "label": "ENABLE_PRIVOXY",
        "default": "yes"
      },
      {
        "name": "ENABLE_AUTODL_IRSSI",
        "label": "ENABLE_AUTODL_IRSSI",
        "default": "no"
      },
      {
        "name": "ENABLE_RPC2",
        "label": "ENABLE_RPC2",
        "default": "yes"
      },
      {
        "name": "VPN_ENABLED",
        "label": "VPN_ENABLED",
        "default": "yes"
      },
      {
        "name": "VPN_OPTIONS",
        "label": "VPN_OPTIONS",
        "default": ""
      },
      {
        "name": "STRICT_PORT_FORWARD",
        "label": "STRICT_PORT_FORWARD",
        "default": "yes"
      },
      {
        "name": "PHP_TZ",
        "label": "PHP_TZ",
        "default": "UTC"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "ENABLE_RPC2_AUTH",
        "label": "ENABLE_RPC2_AUTH",
        "default": "yes"
      },
      {
        "name": "RPC2_PASS",
        "label": "RPC2_PASS",
        "default": "RPC2_PASS"
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "no"
      },
      {
        "name": "ENABLE_WEBUI_AUTH",
        "label": "ENABLE_WEBUI_AUTH",
        "default": "yes"
      },
      {
        "name": "WEBUI_PASS",
        "label": "WEBUI_PASS",
        "default": "WEBUI_PASS"
      },
      {
        "name": "VPN_PASS",
        "label": "VPN_PASS",
        "default": "VPN_PASS"
      },
      {
        "name": "LAN_NETWORK",
        "label": "LAN_NETWORK",
        "default": "192.168.0.1/24"
      },
      {
        "name": "RPC2_USER",
        "label": "RPC2_USER",
        "default": "RPC2_USER"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "VPN_USER",
        "label": "VPN_USER",
        "default": "VPN_USER"
      },
      {
        "name": "VPN_PROV",
        "label": "VPN_PROV",
        "default": "pia"
      },
      {
        "name": "WEBUI_USER",
        "label": "WEBUI_USER",
        "default": "WEBUI_USER"
      }
    ]
  },
  {
    "type": 1,
    "title": "Firefly-III",
    "description": "\"Firefly III\" is a (self-hosted) manager for your personal finances. It can help you keep track of your expenses and income, so you can spend less and save more. Firefly III supports the use of budgets, categories and tags. Using a bunch of external tools, you can import data. It also has many neat financial reports available.\r\n\r\nAdditional environment variables can be found under https://github.com/firefly-iii/firefly-iii/blob/main/.env.example",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "\"Firefly III\" is a (self-hosted) manager for your personal finances. It can help you keep track of your expenses and income, so you can spend less and save more. Firefly III supports the use of budgets, categories and tags. Using a bunch of external tools, you can import data. It also has many neat financial reports available.\r\n\r\nAdditional environment variables can be found under https://github.com/firefly-iii/firefly-iii/blob/main/.env.example",
    "logo": "https://camo.githubusercontent.com/729d179402476b1dd9de4ec9f5fa5910e6bf56aa/68747470733a2f2f66697265666c792d6969692e6f72672f7374617469632f696d672f6c6f676f2d736d616c6c2d6e65772e706e67",
    "name": "Firefly-III",
    "image": "jc5x/firefly-iii:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/www/firefly-iii/storage/export ",
        "bind": "/mnt/cache/appdata/firefly-iii/export/"
      },
      {
        "container": "/var/www/firefly-iii/storage/upload",
        "bind": "/mnt/user/appdata/firefly-iii/upload/"
      }
    ],
    "env": [
      {
        "name": "MAIL_PORT",
        "label": "MAIL_PORT",
        "default": ""
      },
      {
        "name": "MAIL_USERNAME",
        "label": "MAIL_USERNAME",
        "default": ""
      },
      {
        "name": "DB_CONNECTION",
        "label": "DB_CONNECTION",
        "default": "mysql"
      },
      {
        "name": "MAIL_ENCRYPTION",
        "label": "MAIL_ENCRYPTION",
        "default": ""
      },
      {
        "name": "APP_URL",
        "label": "APP_URL",
        "default": ""
      },
      {
        "name": "SEND_ERROR_MESSAGE",
        "label": "SEND_ERROR_MESSAGE",
        "default": "true"
      },
      {
        "name": "DB_HOST",
        "label": "DB_HOST",
        "default": ""
      },
      {
        "name": "DB_PASSWORD",
        "label": "DB_PASSWORD",
        "default": "secret_firefly_password"
      },
      {
        "name": "APP_KEY",
        "label": "APP_KEY",
        "default": "SomeRandomStringOf32CharsExactly"
      },
      {
        "name": "TRUSTED_PROXIES",
        "label": "TRUSTED_PROXIES",
        "default": ""
      },
      {
        "name": "MAIL_MAILER",
        "label": "MAIL_MAILER",
        "default": ""
      },
      {
        "name": "DB_PORT",
        "label": "DB_PORT",
        "default": ""
      },
      {
        "name": "DB_DATABASE",
        "label": "DB_DATABASE",
        "default": "fireflydb"
      },
      {
        "name": "DB_USERNAME",
        "label": "DB_USERNAME",
        "default": "firefly"
      },
      {
        "name": "MAIL_HOST",
        "label": "MAIL_HOST",
        "default": ""
      },
      {
        "name": "MAIL_FROM",
        "label": "MAIL_FROM",
        "default": ""
      },
      {
        "name": "MAIL_PASSWORD",
        "label": "MAIL_PASSWORD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "firefly-iii-bunq-importer",
    "description": "This is a tool to import from bunq into Firefly III. It works by using your bunq API token and a Firefly III personal access token to access your Firefly III installation's API.",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "This is a tool to import from bunq into Firefly III. It works by using your bunq API token and a Firefly III personal access token to access your Firefly III installation's API.",
    "logo": "https://camo.githubusercontent.com/794353350b564a5d0c0244cd6d82586c9ffd22f4/68747470733a2f2f7777772e66697265666c792d6969692e6f72672f7374617469632f696d672f6c6f676f2d736d616c6c2d6e65772e706e67",
    "name": "firefly-iii-bunq-importer",
    "image": "fireflyiii/bunq-importer",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "8081:80/tcp"
      }
    ],
    "env": [
      {
        "name": "FIREFLY_III_ACCESS_TOKEN",
        "label": "FIREFLY_III_ACCESS_TOKEN",
        "default": ""
      },
      {
        "name": "FIREFLY_III_URI",
        "label": "FIREFLY_III_URI",
        "default": "http://192.168.0.10:8080"
      },
      {
        "name": "BUNQ_API_CODE",
        "label": "BUNQ_API_CODE",
        "default": ""
      },
      {
        "name": "BUNQ_API_URI",
        "label": "BUNQ_API_URI",
        "default": ""
      },
      {
        "name": "APP_KEY",
        "label": "APP_KEY",
        "default": "SomeRandomStringOf32CharsExactly"
      }
    ]
  },
  {
    "type": 1,
    "title": "firefly-iii-csv-importer",
    "description": "A tool to import CSV files into Firefly III",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "A tool to import CSV files into Firefly III",
    "logo": "https://camo.githubusercontent.com/794353350b564a5d0c0244cd6d82586c9ffd22f4/68747470733a2f2f7777772e66697265666c792d6969692e6f72672f7374617469632f696d672f6c6f676f2d736d616c6c2d6e65772e706e67",
    "name": "firefly-iii-csv-importer",
    "image": "fireflyiii/csv-importer",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8080": "8081:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/configurations",
        "bind": "/mnt/user/appdata/firefly-iii-csv-importer/configurations"
      }
    ],
    "env": [
      {
        "name": "JSON_CONFIGURATION_DIR",
        "label": "JSON_CONFIGURATION_DIR",
        "default": "/configurations"
      },
      {
        "name": "FIREFLY_III_ACCESS_TOKEN",
        "label": "FIREFLY_III_ACCESS_TOKEN",
        "default": ""
      },
      {
        "name": "FIREFLY_III_URI",
        "label": "FIREFLY_III_URI",
        "default": "http://192.168.0.10:8080"
      }
    ]
  },
  {
    "type": 1,
    "title": "firefly-iii-spectre-importer",
    "description": "A tool to import from Salt Edge / Spectre into Firefly III.",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "A tool to import from Salt Edge / Spectre into Firefly III.",
    "logo": "https://camo.githubusercontent.com/794353350b564a5d0c0244cd6d82586c9ffd22f4/68747470733a2f2f7777772e66697265666c792d6969692e6f72672f7374617469632f696d672f6c6f676f2d736d616c6c2d6e65772e706e67",
    "name": "firefly-iii-spectre-importer",
    "image": "fireflyiii/spectre-importer",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "8081:80/tcp"
      }
    ],
    "env": [
      {
        "name": "FIREFLY_III_URI",
        "label": "FIREFLY_III_URI",
        "default": "http://192.168.0.10:8080"
      },
      {
        "name": "SPECTRE_APP_ID",
        "label": "SPECTRE_APP_ID",
        "default": ""
      },
      {
        "name": "SPECTRE_SECRET",
        "label": "SPECTRE_SECRET",
        "default": ""
      },
      {
        "name": "FIREFLY_III_ACCESS_TOKEN",
        "label": "FIREFLY_III_ACCESS_TOKEN",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "firefly-iii-ynab-importer",
    "description": "This is a tool to import from You Need A Budget (YNAB) into Firefly III. It works by using your YNAB API token and a Firefly III personal access token to access your Firefly III installation's API.",
    "categories": [
      "Productivity:"
    ],
    "platform": "linux",
    "note": "This is a tool to import from You Need A Budget (YNAB) into Firefly III. It works by using your YNAB API token and a Firefly III personal access token to access your Firefly III installation's API.",
    "logo": "https://camo.githubusercontent.com/794353350b564a5d0c0244cd6d82586c9ffd22f4/68747470733a2f2f7777772e66697265666c792d6969692e6f72672f7374617469632f696d672f6c6f676f2d736d616c6c2d6e65772e706e67",
    "name": "firefly-iii-ynab-importer",
    "image": "fireflyiii/ynab-importer",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "8081:80/tcp"
      }
    ],
    "env": [
      {
        "name": "YNAB_API_CODE",
        "label": "YNAB_API_CODE",
        "default": ""
      },
      {
        "name": "FIREFLY_III_ACCESS_TOKEN",
        "label": "FIREFLY_III_ACCESS_TOKEN",
        "default": ""
      },
      {
        "name": "FIREFLY_III_URI",
        "label": "FIREFLY_III_URI",
        "default": "http://192.168.0.10:8080"
      }
    ]
  },
  {
    "type": 1,
    "title": "snipe-it",
    "description": "This is a FOSS project for asset management in IT Operations. Knowing who has which laptop, when it was purchased in order to depreciate it correctly, handling software licenses, etc.\r\n\r\nIt is built on Laravel 5.5.\r\n\r\nSnipe-IT is actively developed and we release quite frequently. (Check out the live demo here.)\r\n\r\nThis is web-based software. This means there is no executable file (aka no .exe files), and it must be run on a web server and accessed through a web browser. It runs on any Mac OSX, flavor of Linux, as well as Windows, and we have a Docker image available if that's what you're into.",
    "categories": [
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "This is a FOSS project for asset management in IT Operations. Knowing who has which laptop, when it was purchased in order to depreciate it correctly, handling software licenses, etc.\r\n\r\nIt is built on Laravel 5.5.\r\n\r\nSnipe-IT is actively developed and we release quite frequently. (Check out the live demo here.)\r\n\r\nThis is web-based software. This means there is no executable file (aka no .exe files), and it must be run on a web server and accessed through a web browser. It runs on any Mac OSX, flavor of Linux, as well as Windows, and we have a Docker image available if that's what you're into.",
    "name": "snipe-it",
    "image": "snipe/snipe-it",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "80": "8087:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": ""
      },
      {
        "container": "/var/lib/snipeit",
        "bind": "/mnt/user/appdata/snipeit/data"
      }
    ],
    "env": [
      {
        "name": "MYSQL_USER",
        "label": "MYSQL_USER",
        "default": ""
      },
      {
        "name": "MYSQL_PASSWORD",
        "label": "MYSQL_PASSWORD",
        "default": ""
      },
      {
        "name": "MAIL_PORT_587_TCP_PORT",
        "label": "MAIL_PORT_587_TCP_PORT",
        "default": ""
      },
      {
        "name": "MAIL_ENV_FROM_NAME",
        "label": "MAIL_ENV_FROM_NAME",
        "default": ""
      },
      {
        "name": "APP_LOCALE",
        "label": "APP_LOCALE",
        "default": "en"
      },
      {
        "name": "MAIL_ENV_ENCRYPTION",
        "label": "MAIL_ENV_ENCRYPTION",
        "default": ""
      },
      {
        "name": "MAIL_ENV_USERNAME",
        "label": "MAIL_ENV_USERNAME",
        "default": ""
      },
      {
        "name": "APP_KEY",
        "label": "APP_KEY",
        "default": ""
      },
      {
        "name": "MYSQL_DATABASE",
        "label": "MYSQL_DATABASE",
        "default": ""
      },
      {
        "name": "MYSQL_PORT_3306_TCP_ADDR",
        "label": "MYSQL_PORT_3306_TCP_ADDR",
        "default": ""
      },
      {
        "name": "APP_URL",
        "label": "APP_URL",
        "default": ""
      },
      {
        "name": "APP_TIMEZONE",
        "label": "APP_TIMEZONE",
        "default": ""
      },
      {
        "name": "APP_DEBUG",
        "label": "APP_DEBUG",
        "default": "false"
      },
      {
        "name": "MYSQL_PORT_3306_TCP_PORT",
        "label": "MYSQL_PORT_3306_TCP_PORT",
        "default": "3306"
      },
      {
        "name": "MAIL_PORT_587_TCP_ADDR",
        "label": "MAIL_PORT_587_TCP_ADDR",
        "default": ""
      },
      {
        "name": "MAIL_ENV_FROM_ADDR",
        "label": "MAIL_ENV_FROM_ADDR",
        "default": ""
      },
      {
        "name": "MAIL_ENV_PASSWORD",
        "label": "MAIL_ENV_PASSWORD",
        "default": ""
      },
      {
        "name": "APP_ENV",
        "label": "APP_ENV",
        "default": "production"
      }
    ]
  },
  {
    "type": 1,
    "title": "Viseron",
    "description": "Viseron is a self-hosted, local only NVR implemented in Python. The goal is ease of use while also leveraging hardware acceleration for minimal system load.",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "Viseron is a self-hosted, local only NVR implemented in Python. The goal is ease of use while also leveraging hardware acceleration for minimal system load.",
    "name": "Viseron",
    "image": "roflcoopter/viseron",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/recordings",
        "bind": "/mnt/user/appdata/viseron-recordings/"
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/viseron-config"
      }
    ]
  },
  {
    "type": 1,
    "title": "Minecraft-Server",
    "description": "Docker image that provides a Minecraft Server that will automatically download selected version at startup. For a complete list of all features/extra parameters go to: https://github.com/itzg/docker-minecraft-server/blob/master/README.md",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "Docker image that provides a Minecraft Server that will automatically download selected version at startup. For a complete list of all features/extra parameters go to: https://github.com/itzg/docker-minecraft-server/blob/master/README.md",
    "name": "Minecraft-Server",
    "image": "itzg/minecraft-server",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "0": "25575:0/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "/mnt/user/Minecraft/minecraft1"
      }
    ],
    "env": [
      {
        "name": "EULA",
        "label": "EULA",
        "default": ""
      },
      {
        "name": "TYPE",
        "label": "TYPE",
        "default": "PAPER"
      },
      {
        "name": "TZ",
        "label": "TZ",
        "default": "America/Chicago"
      },
      {
        "name": "MEMORY",
        "label": "MEMORY",
        "default": "2G"
      },
      {
        "name": "USE_AIKAR_FLAGS",
        "label": "USE_AIKAR_FLAGS",
        "default": "TRUE"
      }
    ]
  },
  {
    "type": 1,
    "title": "Grive2",
    "description": "Backup your files to Google Drive using Grive2 client in a docker container\r\n-\r\n-\r\nBefore you Start this Container:\r\n1 - Go to https://github.com/sabeechen/hassio-google-drive-backup/blob/master/LOCAL_AUTH.md and follow the steps\r\n2-  Go to this URL and append your CLIENT_ID\r\nhttps://accounts.google.com/o/oauth2/auth?scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive\u0026amp;redirect_uri=urn:ietf:wg:oauth:2.0:oob\u0026amp;response_type=code\u0026amp;client_id= FILL_HERE_YOUR_CLIENT_ID\r\n3- Give permission to the app and copy the CODE provided\r\n4- Fill in this template with CLIENT_ID, SECRET and CODE\r\n5- Run it the first time and let it start Sync\r\n6- Once it starts you can now remove the CODE variable from this template to be safe\r\n7- Enjoy Grive2 on Unraid!!\r\n8- Set GRIVE_PARAMS to for example -s my_drive_folder to sync that specific folder on Google Drive\r\n9- Leaving this field blank will sync your whole Google Drive.",
    "categories": [
      "Backup:",
      "Cloud:",
      "Network:Other",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Backup your files to Google Drive using Grive2 client in a docker container\r\n-\r\n-\r\nBefore you Start this Container:\r\n1 - Go to https://github.com/sabeechen/hassio-google-drive-backup/blob/master/LOCAL_AUTH.md and follow the steps\r\n2-  Go to this URL and append your CLIENT_ID\r\nhttps://accounts.google.com/o/oauth2/auth?scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive\u0026amp;redirect_uri=urn:ietf:wg:oauth:2.0:oob\u0026amp;response_type=code\u0026amp;client_id= FILL_HERE_YOUR_CLIENT_ID\r\n3- Give permission to the app and copy the CODE provided\r\n4- Fill in this template with CLIENT_ID, SECRET and CODE\r\n5- Run it the first time and let it start Sync\r\n6- Once it starts you can now remove the CODE variable from this template to be safe\r\n7- Enjoy Grive2 on Unraid!!\r\n8- Set GRIVE_PARAMS to for example -s my_drive_folder to sync that specific folder on Google Drive\r\n9- Leaving this field blank will sync your whole Google Drive.",
    "logo": "https://raw.githubusercontent.com/agusalex/docker-templates/master/agusalex/images/Grive2.png",
    "name": "Grive2",
    "image": "agusalex/grive2",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/drive",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "CODE",
        "label": "CODE",
        "default": ""
      },
      {
        "name": "PARAMS",
        "label": "PARAMS",
        "default": ""
      },
      {
        "name": "SLEEP",
        "label": "SLEEP",
        "default": ""
      },
      {
        "name": "ID",
        "label": "ID",
        "default": ""
      },
      {
        "name": "SECRET",
        "label": "SECRET",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "ModemReboot",
    "description": "Puppeteer container for rebooting Modems on a schedule\r\nThe specific navigation for your modem will vary,\r\nThis is more of an example and isn't guaranteed to work for your particular modem.\r\nCheck available scripts here: https://github.com/agusalex/modemReboot/\r\nAdd your scripts to the RebootModem folder and then set that myscripts/script.js in your SCRIPT env var\r\nFeel free to make a PR or add an issue here https://github.com/agusalex/modemReboot/issues to add your own modem's script\r\nIf no CRON Env var is passed it will reboot upon first run and then quit",
    "categories": [
      "Network:Other",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "Puppeteer container for rebooting Modems on a schedule\r\nThe specific navigation for your modem will vary,\r\nThis is more of an example and isn't guaranteed to work for your particular modem.\r\nCheck available scripts here: https://github.com/agusalex/modemReboot/\r\nAdd your scripts to the RebootModem folder and then set that myscripts/script.js in your SCRIPT env var\r\nFeel free to make a PR or add an issue here https://github.com/agusalex/modemReboot/issues to add your own modem's script\r\nIf no CRON Env var is passed it will reboot upon first run and then quit",
    "logo": "https://icon-library.com/images/reboot-icon-button/reboot-icon-button-15.jpg",
    "name": "ModemReboot",
    "image": "agusalex/modem_reboot",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/myscripts",
        "bind": "/mnt/user/appdata/RebootModem"
      }
    ],
    "env": [
      {
        "name": "USER",
        "label": "USER",
        "default": ""
      },
      {
        "name": "PASS",
        "label": "PASS",
        "default": ""
      },
      {
        "name": "CRON",
        "label": "CRON",
        "default": ""
      },
      {
        "name": "SCRIPT",
        "label": "SCRIPT",
        "default": ""
      },
      {
        "name": "URL",
        "label": "URL",
        "default": "https://github.com/agusalex/modemReboot"
      }
    ]
  },
  {
    "type": 1,
    "title": "Notarius",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/agusalex/docker-templates/master/agusalex/images/Notarius.png",
    "name": "Notarius",
    "image": "agusalex/notarius:latest",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "n8n",
    "description": "n8n (pronounced n-eight-n) helps you to interconnect every app with an API in the world with each other to share and manipulate its data without a single line of code. It is an easy to use, user-friendly and highly customizable service, which uses an intuitive user interface for you to design your unique workflows very fast. Hosted on your server and not based in the cloud, it keeps your sensible data very secure in your own trusted database.",
    "categories": [
      "HomeAutomation:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "n8n (pronounced n-eight-n) helps you to interconnect every app with an API in the world with each other to share and manipulate its data without a single line of code. It is an easy to use, user-friendly and highly customizable service, which uses an intuitive user interface for you to design your unique workflows very fast. Hosted on your server and not based in the cloud, it keeps your sensible data very secure in your own trusted database.",
    "logo": "https://raw.githubusercontent.com/tmchow/unraid-docker-templates/master/img/n8n-icon.png",
    "name": "n8n",
    "image": "n8nio/n8n",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5678": "5678:5678/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/root/.n8n",
        "bind": "/mnt/cache/appdata/n8n"
      }
    ],
    "env": [
      {
        "name": "WEBHOOK_TUNNEL_URL",
        "label": "WEBHOOK_TUNNEL_URL",
        "default": "http://192.168.1.161:5678/"
      },
      {
        "name": "N8N_BASIC_AUTH_ACTIVE",
        "label": "N8N_BASIC_AUTH_ACTIVE",
        "default": ""
      },
      {
        "name": "N8N_BASIC_AUTH_USER",
        "label": "N8N_BASIC_AUTH_USER",
        "default": "admin"
      },
      {
        "name": "N8N_BASIC_AUTH_PASSWORD",
        "label": "N8N_BASIC_AUTH_PASSWORD",
        "default": ""
      },
      {
        "name": "GENERIC_TIMEZONE",
        "label": "GENERIC_TIMEZONE",
        "default": "America/Los_Angeles"
      }
    ]
  },
  {
    "type": 1,
    "title": "amongusdiscord",
    "description": "Discord Bot to harness Among Us game data, and automatically mute/unmute players during the course of the game!\r\n\r\nWorks in conjunction with amonguscapture\r\n\r\nThis program is in Beta. While we are confident about the basic functionality, there will still be issues or pecularities with how the program functions! We are actively working to resolve these issues!\r\n\r\nHave any questions, concerns, bug reports, or just want to chat? Join the discord at https://discord.gg/ZkqZSWF!\r\n\r\nunRAID template by Argash\r\n\r\nUpdates:\r\n\r\n2020-10-20 - Updated template with new environment variables rework in bot version 2.4.0",
    "categories": [
      "GameServers:",
      "Tools:Utilities",
      "Other:",
      "Network:Voip",
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "Discord Bot to harness Among Us game data, and automatically mute/unmute players during the course of the game!\r\n\r\nWorks in conjunction with amonguscapture\r\n\r\nThis program is in Beta. While we are confident about the basic functionality, there will still be issues or pecularities with how the program functions! We are actively working to resolve these issues!\r\n\r\nHave any questions, concerns, bug reports, or just want to chat? Join the discord at https://discord.gg/ZkqZSWF!\r\n\r\nunRAID template by Argash\r\n\r\nUpdates:\r\n\r\n2020-10-20 - Updated template with new environment variables rework in bot version 2.4.0",
    "name": "amongusdiscord",
    "image": "denverquane/amongusdiscord",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "0": "8123:0/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/amongusdiscord/"
      },
      {
        "container": "/config/log_path",
        "bind": "/mnt/user/appdata/amongusdiscord/log_path"
      }
    ],
    "env": [
      {
        "name": "DISCORD_BOT_TOKEN",
        "label": "DISCORD_BOT_TOKEN",
        "default": ""
      },
      {
        "name": "HOST",
        "label": "HOST",
        "default": ""
      },
      {
        "name": "DISCORD_BOT_TOKEN_2",
        "label": "DISCORD_BOT_TOKEN_2",
        "default": ""
      },
      {
        "name": "NUM_SHARDS",
        "label": "NUM_SHARDS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "frigate",
    "description": "NVR With Realtime Object Detection for IP Cameras\r\n\r\nUses OpenCV and Tensorflow to perform realtime object detection locally for IP cameras. Designed for integration with HomeAssistant or others via MQTT.\r\n\r\nUse of a Google Coral Accelerator is optional, but highly recommended. On my Intel i7 processor, I can process 2-3 FPS with the CPU. The Coral can process 100+ FPS with very low CPU load.\r\n\r\n    *Leverages multiprocessing heavily with an emphasis on realtime over processing every frame\r\n    *Uses a very low overhead motion detection to determine where to run object detection\r\n    *Object detection with Tensorflow runs in a separate process\r\n    *Object info is published over MQTT for integration into HomeAssistant as a binary sensor\r\n    *An endpoint is available to view an MJPEG stream for debugging, but should not be used continuously",
    "categories": [
      "HomeAutomation:",
      "Security:"
    ],
    "platform": "linux",
    "note": "NVR With Realtime Object Detection for IP Cameras\r\n\r\nUses OpenCV and Tensorflow to perform realtime object detection locally for IP cameras. Designed for integration with HomeAssistant or others via MQTT.\r\n\r\nUse of a Google Coral Accelerator is optional, but highly recommended. On my Intel i7 processor, I can process 2-3 FPS with the CPU. The Coral can process 100+ FPS with very low CPU load.\r\n\r\n    *Leverages multiprocessing heavily with an emphasis on realtime over processing every frame\r\n    *Uses a very low overhead motion detection to determine where to run object detection\r\n    *Object detection with Tensorflow runs in a separate process\r\n    *Object info is published over MQTT for integration into HomeAssistant as a binary sensor\r\n    *An endpoint is available to view an MJPEG stream for debugging, but should not be used continuously",
    "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/2/2d/Tensorflow_logo.svg/1200px-Tensorflow_logo.svg.png",
    "name": "frigate",
    "image": "blakeblackshear/frigate:stable-amd64",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5000": "5000:5000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/frigate"
      },
      {
        "container": "/etc/localtime",
        "bind": "/etc/localtime"
      }
    ],
    "env": [
      {
        "name": "FRIGATE_RTSP_PASSWORD",
        "label": "FRIGATE_RTSP_PASSWORD",
        "default": "'password'"
      }
    ]
  },
  {
    "type": 1,
    "title": "xteve-vpn",
    "description": "xTeVe is a M3U proxy server for Plex, Emby and any client and provider which supports the .TS and .M3U8 (HLS) streaming formats.\r\n        xTeVe emulates a SiliconDust HDHomeRun OTA tuner, which allows it to expose IPTV style channels to software, which would not normally support it.\r\n        OpenVPN has been added to the container to allow users who have issues with their ISP shaping IPTV to bypass the shaping using a VPN\r\n        \r\n        I built this VPN version to bypass my ISP shaping during peak usage times. In the evenings I noticed my IPTV channels were freezing and timing out. After some back and forth between myself and the IPTV provider I came to the realisation that its my ISP that's the cause. Hopefully it helps others out there as its helped me.\r\n        Configuration\r\n        Please refer to my github repo xteve-vpn",
    "categories": [
      "MediaApp:Other",
      "Network:Proxy"
    ],
    "platform": "linux",
    "note": "xTeVe is a M3U proxy server for Plex, Emby and any client and provider which supports the .TS and .M3U8 (HLS) streaming formats.\r\n        xTeVe emulates a SiliconDust HDHomeRun OTA tuner, which allows it to expose IPTV style channels to software, which would not normally support it.\r\n        OpenVPN has been added to the container to allow users who have issues with their ISP shaping IPTV to bypass the shaping using a VPN\r\n        \r\n        I built this VPN version to bypass my ISP shaping during peak usage times. In the evenings I noticed my IPTV channels were freezing and timing out. After some back and forth between myself and the IPTV provider I came to the realisation that its my ISP that's the cause. Hopefully it helps others out there as its helped me.\r\n        Configuration\r\n        Please refer to my github repo xteve-vpn",
    "logo": "https://raw.githubusercontent.com/brycelarge/unraid-templates/main/images/xteve.png",
    "name": "xteve-vpn",
    "image": "brycelarge/xteve-vpn",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "34400": "34400:34400/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/xteve-vpn/"
      },
      {
        "container": "/temp/xteve",
        "bind": "/tmp/xteve"
      }
    ],
    "env": [
      {
        "name": "OPENVPN_PROTOCOL",
        "label": "OPENVPN_PROTOCOL",
        "default": "udp"
      },
      {
        "name": "LOCAL_NETWORK",
        "label": "LOCAL_NETWORK",
        "default": ""
      },
      {
        "name": "DEBUG",
        "label": "DEBUG",
        "default": "false"
      },
      {
        "name": "XTEVE_DEBUG",
        "label": "XTEVE_DEBUG",
        "default": "0"
      },
      {
        "name": "XTEVE_API",
        "label": "XTEVE_API",
        "default": "1"
      },
      {
        "name": "OPENVPN_USERNAME",
        "label": "OPENVPN_USERNAME",
        "default": ""
      },
      {
        "name": "OPENVPN_OPTIONS",
        "label": "OPENVPN_OPTIONS",
        "default": ""
      },
      {
        "name": "XTEVE_PORT",
        "label": "XTEVE_PORT",
        "default": "34400"
      },
      {
        "name": "TZ",
        "label": "TZ",
        "default": "Africa/Johannesburg"
      },
      {
        "name": "NAME_SERVERS",
        "label": "NAME_SERVERS",
        "default": "8.8.8.8,8.8.4.4"
      },
      {
        "name": "CREATE_TUN_DEVICE",
        "label": "CREATE_TUN_DEVICE",
        "default": "true"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "OPENVPN_PROVIDER",
        "label": "OPENVPN_PROVIDER",
        "default": "SURFSHARK"
      },
      {
        "name": "OPENVPN_PASSWORD",
        "label": "OPENVPN_PASSWORD",
        "default": ""
      },
      {
        "name": "OPENVPN_CONFIG",
        "label": "OPENVPN_CONFIG",
        "default": "ca-tor.prod.surfshark.com_udp"
      },
      {
        "name": "XTEVE_BRANCH",
        "label": "XTEVE_BRANCH",
        "default": "master"
      }
    ]
  },
  {
    "type": 1,
    "title": "AndroidStudio",
    "description": "JetBrain's Projector running Android Studio without any windowing system",
    "categories": [
      "Productivity:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "JetBrain's Projector running Android Studio without any windowing system",
    "logo": "https://raw.githubusercontent.com/JetBrains/projector-docker/master/static/projector-user/DemoProject/src/pj.png",
    "name": "AndroidStudio",
    "image": "jassycliq/android-studio-projector",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8887": "8887:8887/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/home/projector-user",
        "bind": "/mnt/user/appdata/android-studio"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "borg-mysql-backup",
    "description": "Service for backing up mysql dumps to local and/or remote borg repos.\r\nOther files\u0026amp;dirs may be included in the backup, and database dumps can be excluded altogether.\r\n\r\nPlease refer to project page @ https://github.com/laur89/docker-borg-mysql-backup for further documentation.",
    "categories": [
      "Backup:",
      "Cloud:"
    ],
    "platform": "linux",
    "note": "Service for backing up mysql dumps to local and/or remote borg repos.\r\nOther files\u0026amp;dirs may be included in the backup, and database dumps can be excluded altogether.\r\n\r\nPlease refer to project page @ https://github.com/laur89/docker-borg-mysql-backup for further documentation.",
    "name": "borg-mysql-backup",
    "image": "layr/borg-mysql-backup:borg1",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "volumes": [
      {
        "container": "/var/log",
        "bind": "/mnt/user/appdata/borg-mysql-backup/logs"
      },
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/borg-mysql-backup"
      },
      {
        "container": "/backup",
        "bind": ""
      },
      {
        "container": "/etc/localtime",
        "bind": "/etc/localtime"
      },
      {
        "container": "/root/.cache/borg",
        "bind": "/mnt/user/appdata/borg-mysql-backup/.borg/cache"
      },
      {
        "container": "/root/.config/borg",
        "bind": "/mnt/user/appdata/borg-mysql-backup/.borg/config"
      }
    ],
    "env": [
      {
        "name": "PRUNE_OPTS",
        "label": "PRUNE_OPTS",
        "default": ""
      },
      {
        "name": "CREATE_OPTS",
        "label": "CREATE_OPTS",
        "default": ""
      },
      {
        "name": "BORG_REMOTE_PATH",
        "label": "BORG_REMOTE_PATH",
        "default": ""
      },
      {
        "name": "COMMON_OPTS",
        "label": "COMMON_OPTS",
        "default": ""
      },
      {
        "name": "HOST_ID",
        "label": "HOST_ID",
        "default": ""
      },
      {
        "name": "BORG_PASSPHRASE",
        "label": "BORG_PASSPHRASE",
        "default": ""
      }
    ]
  }
]